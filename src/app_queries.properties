###User Login 
GET_VALID_USER=select login_id,PWD_COUNT from login_master where login_id=? AND APP_ID=? AND ( (STATUS='T') OR (STATUS='R') OR (STATUS='N' AND SYSDATE <= STARTDATE) OR (STATUS='Y' AND SYSDATE >= STARTDATE))
#GET_MENU_LIST=SELECT MENU_NAME, MENU_URL , MENU_ID ,MASTER_MENU_ID PARENT_ID  FROM MENU_MASTER WHERE STATUS\=''Y'' AND MENU_ID IN (''{0}'')
#GET_MENU_LIST=SELECT MENU_NAME, MENU_URL , MENU_ID ,MASTER_MENU_ID PARENT_ID  FROM MENU_MASTER WHERE STATUS\=''Y'' AND MENU_ID IN (''{0}'') ORDER BY order_no,menu_id
GET_MENU_LIST=SELECT MENU_NAME, MENU_URL , MENU_ID  FROM Menu_master WHERE Active=''1'' AND MENU_ID IN (''{0}'') ORDER BY order_no,menu_id
#ORDER BY MENU_IDTTRN_MND_INSTALLMENTS
GET_USER_INFO=SELECT LOGIN_ID,PASSWORD,USERTYPE, STATUS, PWD_COUNT,NEWUSER_FLAG,STARTDATE,BRANCH_CODE FROM LOGIN_MASTER WHERE  LOGIN_ID = ? AND PASSWORD = ? AND APP_ID = ? AND ( (STATUS='T') OR (STATUS='R') OR (STATUS='N' AND SYSDATE <= STARTDATE) OR (STATUS='Y' AND SYSDATE >= STARTDATE))

GET_VALID_PWD_DAY=SELECT ROUND(TRUNC(SYSDATE)-TRUNC(PASSDATE)) DAYS FROM LOGIN_MASTER WHERE LOGIN_ID = ? AND APP_ID = ?

GET_VALID_PWD_TIME=SELECT ROUND(SYSDATE- PASSDATE) AS HOURS FROM LOGIN_MASTER WHERE LOGIN_ID=? AND APP_ID = ?

#GET_USER_BASIC_INFO=SELECT lm.LOGIN_ID,USER_MAIL,USERTYPE,STATUS,PWD_COUNT,USERNAME,menu_ids FROM LOGIN_MASTER lm,login_details ld WHERE lm.login_id=ld.login_id and lm.LOGIN_ID=? AND APP_ID = ?
#GET_USER_BASIC_INFO=SELECT lm.LOGIN_ID,USER_MAIL,USERTYPE,STATUS,PWD_COUNT,USERNAME,menu_ids,BRANCH_CODE,TO_CHAR (SYSDATE, 'DD/MM/YYYY') ENDDATE, TO_CHAR(ADD_MONTHS(SYSDATE,-3),'DD/MM/YYYY') STARTDATE FROM LOGIN_MASTER lm,login_details ld WHERE lm.login_id=ld.login_id and lm.LOGIN_ID=? AND APP_ID = ?
GET_USER_BASIC_INFO=SELECT lm.LOGIN_ID,USER_MAIL,USERTYPE,STATUS,PWD_COUNT,USERNAME,BRANCH_CODE,TO_CHAR (SYSDATE, 'DD/MM/YYYY') ENDDATE, TO_CHAR(ADD_MONTHS(SYSDATE,-3),'DD/MM/YYYY') STARTDATE,lm.ATTACHED_UW FROM LOGIN_MASTER lm WHERE lm.LOGIN_ID=? AND APP_ID = ?

GET_MAIL_FORGOT_VALID=SELECT LOGIN_ID FROM LOGIN_MASTER WHERE LOGIN_ID = ? AND USER_MAIL = ? AND APP_ID = ?

GET_COUNT_PWD=SELECT COUNT(*) num FROM (SELECT REGEXP_SUBSTR(PWD,'[^,]+',1,LEVEL) AS USERPWD FROM (SELECT PASSWORD||','||LPASS1||','||LPASS2||','||LPASS3||','||LPASS4||','||LPASS5 PWD FROM login_master WHERE LOGIN_ID=? AND STATUS IN ('Y','T') AND APP_ID = ?) CONNECT BY LEVEL <= LENGTH(PWD)-LENGTH(REPLACE(PWD,',',''))+1) WHERE USERPWD=?

UPD_USER_PWD=UPDATE LOGIN_MASTER SET LPASS5=LPASS4,LPASS4=LPASS3,LPASS3=LPASS2,LPASS2=LPASS1,LPASS1=PASSWORD,PASSWORD=?,PASSDATE=SYSDATE,STATUS='Y',NEWUSER_FLAG='N' WHERE LOGIN_ID=? AND APP_ID = ? AND STATUS IN ('Y','T')

UPD_USER_PWD_TEMP=UPDATE LOGIN_MASTER SET LPASS5\=LPASS4,LPASS4\=LPASS3,LPASS3\=LPASS2,LPASS2\=LPASS1,LPASS1\=PASSWORD,PASSWORD\=?,PASSDATE\=SYSDATE,STATUS\='T',PWD_COUNT\=0 WHERE LOGIN_ID\=? AND APP_ID \= ? 

GET_MAIL_DETAILS=SELECT MAIL_CC, SMTP_HOST, SMTP_USER, SMTP_PWD, EXP_DATE, EXP_TIME, PWD_CNT, PWD_LEN, HOME_APP,SMTP_ADDRESS,SMTP_SHORT_ADDRESS,LOGO_PATH,SMTP_PORT  from MAIL_MASTER where APP_ID=?

GET_TEMP_PWD_EXP=SELECT TO_CHAR(SYSDATE+?/24,'DD-MON-YYYY hh:mi:ss AM') expireTime FROM DUAL

UPD_PWD_CNT_RESET=UPDATE LOGIN_MASTER SET PWD_COUNT\=0 WHERE LOGIN_ID\=? AND APP_ID \= ? 

UPD_PWD_CNT=UPDATE LOGIN_MASTER SET PWD_COUNT = NVL(PWD_COUNT,0)+1 WHERE LOGIN_ID= ? AND APP_ID = ?


GET_PWD_CNT_INVALID=SELECT PWD_COUNT FROM LOGIN_MASTER WHERE LOGIN_ID = ? AND APP_ID = ?

UPD_PWD_STATUS=UPDATE LOGIN_MASTER SET STATUS = ? WHERE LOGIN_ID=? AND APP_ID = ?

GET_APP_LIST=select app_id, app_name from app_master

GET_APP_INFO=select app_name from app_master where app_id=?

INS_NEW_USER_WS=INSERT into LOGIN_MASTER(USERNAME, LOGIN_ID, PASSWORD, app_id, STATUS, USER_MAIL, USERTYPE, PASSDATE,STARTDATE,NEWUSER_FLAG,PWD_COUNT) values (?,?,?,?,?,?,?,sysdate,sysdate,'Y','0')

INS_NEW_USER=INSERT into LOGIN_MASTER(USERNAME, LOGIN_ID, PASSWORD, app_id, STATUS, USER_MAIL, USERTYPE, PASSDATE,STARTDATE,NEWUSER_FLAG,PWD_COUNT) values (?,?,?,?,?,?,?,sysdate,to_date(?,'DD/MM/YYYY'),'Y','0')

UPD_USER_INFO=UPDATE LOGIN_MASTER SET APP_ID=?, STATUS=?, USER_MAIL=?, USERTYPE=?,STARTDATE=to_date(?,'DD/MM/YYYY') WHERE LOGIN_ID=? AND APP_ID=?

UPD_MAIL_MASTER=UPDATE MAIL_MASTER SET MAIL_CC=?, SMTP_HOST=?, SMTP_USER=?, SMTP_PWD=?, EXP_TIME=? where app_id=?

GET_USER_LIST=SELECT LOGIN_ID,USERNAME,USERTYPE,USER_MAIL,DECODE(STATUS,'T','TEMPORARY','Y','ACTIVE','N','DEACTIVE','L','LOCKED') STATUS FROM LOGIN_MASTER WHERE APP_ID = ?

UPD_MAIL_CHANGE_WS=UPDATE LOGIN_MASTER SET USER_MAIL=? WHERE LOGIN_ID=? AND APP_ID = ?

GET_APP_NAME=select APP_NAME from app_master where app_id=?

UPD_STATUS_CHANGE_WS=UPDATE LOGIN_MASTER SET STATUS=? WHERE LOGIN_ID=? AND APP_ID = ?

GET_USER_INFO_CHANGE=SELECT LOGIN_ID, USERTYPE, USERNAME, STATUS, USER_MAIL, APP_ID, to_char(STARTDATE,'DD/MM/YYYY') STARTDATE FROM LOGIN_MASTER WHERE LOGIN_ID=? AND APP_ID=?

GET_ITEM_VALUES = SELECT ITEM_CODE, ITEM_VALUE FROM LIST_ITEM_VALUES WHERE ITEM_TYPE\=?
INS_SESSION_INFO = INSERT INTO SESSION_MASTER(LOGIN_ID, SESSION_ID, LOGIN_DT, STATUS, IP_ADDRESS,BRANCH_CODE) VALUES(?, ?, SYSDATE, 'S', ?,?)
#INS_SESSION_INFO = INSERT INTO SESSION_MASTER(LOGIN_ID, SESSION_ID, LOGIN_DT, STATUS, IP_ADDRESS) VALUES(?, ?, SYSDATE, 'S', ?)
UPD_SESSION_INFO = UPDATE SESSION_MASTER SET LOGOUT_DT=SYSDATE,REMARKS=? WHERE LOGIN_ID=? AND STATUS='S' AND SESSION_ID=?
GET_LOGINID_COUNT=select count(1) from login_master where login_id=? and APP_ID=?
GET_MENU_IDS = SELECT MENU_IDS FROM LOGIN_DETAILS WHERE LOGIN_ID\=? AND ACTIVE\='1' 
USER_LOGIN_LIST =SELECT S.LOGIN_ID,SESSION_ID,to_char(LOGIN_DT,'dd/mm/yyyy hh24:mi:ss') LOGIN_DT,USERNAME FROM SESSION_MASTER S,LOGIN_MASTER L WHERE S.LOGIN_ID !=? AND L.LOGIN_ID=S.LOGIN_ID AND LOGOUT_DT IS NULL AND S.BRANCH_CODE=? AND S.BRANCH_CODE=L.BRANCH_CODE
UPDATE_USER_INVALIDATION = UPDATE SESSION_MASTER SET LOGOUT_DT=SYSDATE,REMARKS=?,INVALD_LOGIN_ID=? WHERE BRANCH_CODE=? AND SESSION_ID=?


##Common Query
common.select.getDeptName=SELECT TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE  BRANCH_CODE=? AND TMAS_PRODUCT_ID=? AND TMAS_DEPARTMENT_ID=? AND TMAS_STATUS='Y'
common.select.getCompName=SELECT CASE WHEN P.CUSTOMER_TYPE = 'C' THEN P.COMPANY_NAME ELSE P.FIRST_NAME || ' ' || P.LAST_NAME END COMPNAY FROM PERSONAL_INFO P WHERE P.BRANCH_CODE=? AND P.CUSTOMER_ID=? AND P.CUSTOMER_TYPE=? AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE=P.BRANCH_CODE AND CUSTOMER_ID=P.CUSTOMER_ID AND CUSTOMER_TYPE=P.CUSTOMER_TYPE)
##common.select.maxContNo=SELECT MAX(CONTRACT_NO)+1 FROM  POLICY_NO_GENERATION WHERE PRODUCT_ID=? AND BRANCH_CODE=?
##common.update.contNo=UPDATE  POLICY_NO_GENERATION SET CONTRACT_NO=? WHERE PRODUCT_ID=? AND BRANCH_CODE=?
common.update.riskDetContNo=UPDATE TTRN_RISK_DETAILS SET RSK_CONTRACT_NO=?  where RSK_PROPOSAL_NUMBER=?
common.update.posMasDetContNo=UPDATE POSITION_MASTER SET CONTRACT_NO\=?,CONTRACT_STATUS\='A'  WHERE PROPOSAL_NO\=?
common.select.getConstDet=SELECT DISTINCT TYPE,DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID\=? AND STATUS\=?
common.select.getConstDetie=SELECT DISTINCT '2~'||TYPE TYPE,DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID\=? AND STATUS\=? 
common.select.getConstDetie1=SELECT DISTINCT '6~'||TYPE TYPE,DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID\=? AND STATUS\=?
COM_SELECT_PERILS =SELECT DISTINCT TYPE,DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID\=? AND STATUS\=? ORDER BY TYPE
common.select.getCountryList=SELECT DISTINCT CM.COUNTRY_ID,CM.COUNTRY_NAME FROM COUNTRY_MASTER CM WHERE BRANCH_CODE=? AND CM.STATUS=? AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM COUNTRY_MASTER WHERE BRANCH_CODE=CM.BRANCH_CODE AND STATUS=CM.STATUS and COUNTRY_ID=CM.COUNTRY_ID) ORDER BY COUNTRY_NAME ASC
common.select.getProfitCenterList=SELECT DISTINCT TMAS_PFC_ID ,TMAS_PFC_NAME,PRODUTID   FROM TMAS_PFC_MASTER WHERE  BRANCH_CODE=? AND TMAS_STATUS=? ORDER BY TMAS_PFC_NAME ASC
common.select.getProfitCenterListIE=SELECT DISTINCT '3~'||TMAS_PFC_ID TMAS_PFC_ID ,TMAS_PFC_NAME,PRODUTID   FROM TMAS_PFC_MASTER WHERE  BRANCH_CODE=? AND TMAS_STATUS=?
common.select.getDepartListIE=SELECT   DISTINCT '4~'||TMAS_DEPARTMENT_ID TMAS_DEPARTMENT_ID, TMAS_DEPARTMENT_NAME FROM   TMAS_DEPARTMENT_MASTER WHERE   BRANCH_CODE = ? AND TMAS_PRODUCT_ID in('1','2','3') AND TMAS_STATUS = ?
##common.select.getSubProfitCenterList=SELECT DISTINCT TMAS_SPFC_ID ,TMAS_SPFC_NAME  FROM  TMAS_SPFC_MASTER  WHERE  BRANCH_CODE=? AND TMAS_PRODUCT_ID=? AND TMAS_STATUS=? ORDER BY TMAS_SPFC_NAME ASC
common.select.getSubProfitCenterList=SELECT DISTINCT TMAS_SPFC_ID ,TMAS_SPFC_NAME  FROM  TMAS_SPFC_MASTER WHERE  BRANCH_CODE=? AND TMAS_PRODUCT_ID=? and TMAS_DEPARTMENT_ID=? AND TMAS_STATUS=? ORDER BY TMAS_SPFC_NAME ASC
common.select.getSubProfitCenterListIE=SELECT   DISTINCT '5~'||TMAS_SPFC_ID TMAS_SPFC_ID, (SELECT   DISTINCT TMAS_PRODUCT_NAME FROM   tmas_product_master WHERE   TMAS_PRODUCT_ID = TSM.TMAS_PRODUCT_ID  AND BRANCH_CODE = TSM.BRANCH_CODE) || '>' || (SELECT   DISTINCT TMAS_DEPARTMENT_NAME FROM   TMAS_DEPARTMENT_MASTER WHERE       BRANCH_CODE = TSM.BRANCH_CODE AND TMAS_PRODUCT_ID = TSM.TMAS_PRODUCT_ID AND TMAS_STATUS = 'Y' AND TMAS_DEPARTMENT_ID = TSM.TMAS_DEPARTMENT_ID) || '>' || TMAS_SPFC_NAME TMAS_SPFC_NAME,TMAS_PRODUCT_ID,TMAS_DEPARTMENT_ID FROM   TMAS_SPFC_MASTER TSM WHERE   BRANCH_CODE = ? AND TMAS_PRODUCT_ID IN ('1', '2', '3')
common.select.getUWList=SELECT DISTINCT UWR_CODE ,UNDERWRITTER  FROM UNDERWRITTER_MASTER WHERE  BRANCH_CODE\=? AND UWR_STATUS\=? ORDER BY UNDERWRITTER ASC 
common.select.getDepartmentList=SELECT DISTINCT TMAS_DEPARTMENT_ID ,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE=? AND TMAS_PRODUCT_ID=? AND TMAS_STATUS=? ORDER BY  TMAS_DEPARTMENT_NAME ASC
common.department.combined.premiumclaim=SELECT DISTINCT TMAS_DEPARTMENT_ID ,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE=? AND TMAS_PRODUCT_ID=? AND TMAS_STATUS='Y'  and TMAS_DEPARTMENT_ID in((select * from table(SPLIT_TEXT_FN(replace(?,' ', ''))))) ORDER BY  TMAS_DEPARTMENT_NAME ASC
common.select.getDepartmentList1=SELECT DISTINCT TMAS_DEPARTMENT_ID ,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE=? AND TMAS_PRODUCT_ID=? AND TMAS_STATUS=? AND TMAS_DEPARTMENT_ID NOT IN(SELECT DEPT_ID FROM POSITION_MASTER WHERE CONTRACT_NO=? or BASE_LAYER = ?) ORDER BY  TMAS_DEPARTMENT_NAME ASC
common.select.getDepartmentList2=SELECT DISTINCT TMAS_DEPARTMENT_ID ,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE=? AND TMAS_PRODUCT_ID=? AND TMAS_STATUS=? AND TMAS_DEPARTMENT_ID NOT IN(SELECT DEPT_ID FROM POSITION_MASTER WHERE PROPOSAL_NO=? OR PROPOSAL_NO =? OR PROPOSAL_NO in(SELECT PROPOSAL_NO from POSITION_MASTER where  BASE_LAYER = ?)) ORDER BY  TMAS_DEPARTMENT_NAME ASC
common.select.getDepartmentList3 = SELECT DISTINCT TMAS_DEPARTMENT_ID ,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE=? AND TMAS_PRODUCT_ID=? AND TMAS_STATUS=? AND TMAS_DEPARTMENT_ID NOT IN(SELECT DEPT_ID FROM POSITION_MASTER WHERE PROPOSAL_NO=?   OR PROPOSAL_NO in(SELECT PROPOSAL_NO from POSITION_MASTER where CONTRACT_STATUS !='C' AND BASE_LAYER = ? AND  PROPOSAL_NO!=?)) ORDER BY  TMAS_DEPARTMENT_NAME ASC
common.select.getDepartmentList.preClaim=SELECT DISTINCT TMAS_DEPARTMENT_ID ,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE=? AND TMAS_PRODUCT_ID=? AND TMAS_STATUS=? and TMAS_DEPARTMENT_ID in(select RSK_COVER_CLASS from  TTRN_RSK_CLASS_LIMITS t where RSK_CONTRACT_NO=? and RSK_LAYER_NO=? and RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO)from TTRN_RSK_CLASS_LIMITS where RSK_PROPOSAL_NUMBER=t.RSK_PROPOSAL_NUMBER)) ORDER BY  TMAS_DEPARTMENT_NAME ASC
common.select.getPolicyBranchList=SELECT DISTINCT TMAS_POL_BRANCH_ID,TMAS_POL_BRANCH_NAME  FROM TMAS_POLICY_BRANCH WHERE BRANCH_CODE=? AND TMAS_STATUS=?  ORDER BY TMAS_POL_BRANCH_NAME ASC
common.select.getPersonalInfoList=SELECT DISTINCT P.CUSTOMER_ID, CASE WHEN P.CUSTOMER_TYPE = 'C' THEN P.COMPANY_NAME ELSE P.FIRST_NAME || ' ' || P.LAST_NAME END NAME FROM PERSONAL_INFO P WHERE P.BRANCH_CODE=? AND P.CUSTOMER_TYPE=? AND STATUS=?  AND CUSTOMER_ID NOT IN('64')   AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE=P.BRANCH_CODE AND CUSTOMER_TYPE=P.CUSTOMER_TYPE AND STATUS=P.STATUS AND CUSTOMER_ID=P.CUSTOMER_ID)
GET_ITI_BROKER=UNION ALL SELECT DISTINCT P.CUSTOMER_ID, CASE WHEN P.CUSTOMER_TYPE = 'C' THEN P.COMPANY_NAME ELSE P.FIRST_NAME || ' ' || P.LAST_NAME END NAME FROM PERSONAL_INFO P WHERE P.BRANCH_CODE=? AND P.CUSTOMER_TYPE=? AND STATUS=? AND P.CUSTOMER_ID=?  AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE=P.BRANCH_CODE AND CUSTOMER_TYPE=P.CUSTOMER_TYPE AND STATUS=P.STATUS AND CUSTOMER_ID=P.CUSTOMER_ID)
common.select.deptName=SELECT TMAS_DEPARTMENT_ID,TMAS_DEPARTMENT_NAME from TMAS_DEPARTMENT_MASTER where branch_code=?  AND TMAS_PRODUCT_ID='4' and TMAS_STATUS='H'
#common.select.getCurrencyList=SELECT DISTINCT CM.CURRENCY_ID,CM.CURRENCY_NAME FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE=? AND CM.COUNTRY_ID=? and CM.STATUS=? AND CM.AMEND_ID=(select MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE BRANCH_CODE=CM.BRANCH_CODE AND  COUNTRY_ID=CM.COUNTRY_ID and STATUS=CM.STATUS AND CURRENCY_ID=CM.CURRENCY_ID) ORDER BY CURRENCY_NAME
common.select.getCurrencyList=SELECT DISTINCT CM.CURRENCY_ID,CM.SHORT_NAME CURRENCY_NAME FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE=? AND CM.COUNTRY_ID=? and CM.STATUS=? AND CM.AMEND_ID=(select MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE BRANCH_CODE=CM.BRANCH_CODE AND  COUNTRY_ID=CM.COUNTRY_ID and STATUS=CM.STATUS AND CURRENCY_ID=CM.CURRENCY_ID) ORDER BY CURRENCY_ID
common.select.getcurrency.bank= SELECT DISTINCT CM.CURRENCY_ID,CM.SHORT_NAME CURRENCY_NAME FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE=? AND CM.COUNTRY_ID=? and CM.STATUS=? AND CM.AMEND_ID=(select MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE BRANCH_CODE=CM.BRANCH_CODE AND  COUNTRY_ID=CM.COUNTRY_ID and STATUS=CM.STATUS AND CURRENCY_ID=CM.CURRENCY_ID) and CURRENCY_ID in(select BANK_CURRENCY from  bank_master where BANK_ID=? AND BRANCH_CODE=CM.BRANCH_CODE)ORDER BY   CURRENCY_ID
common.select.getTerritoryList=SELECT DISTINCT TERRITORY_CODE,TERRITORY_DESC FROM  TERRITORY_MASTER WHERE BRANCH_CODE=? AND  TERRITORY_STATUS =?  ORDER BY TERRITORY_DESC ASC
common.select.getRiskGradeList=SELECT DISTINCT GRADE_ID  ,GRADE_DESC FROM TMAS_RISK_GRADE WHERE BRANCH_CODE=? AND STATUS=? ORDER BY GRADE_DESC
common.select.getCategoryZoneList=SELECT DISTINCT ZONE_ID,ZONE_DESC FROM TMAS_CATEGORY_ZONE WHERE BRANCH_CODE=? AND STATUS=? ORDER BY ZONE_DESC
common.select.getBankMasterList=SELECT BANK_ID,BANK_NAME FROM BANK_MASTER WHERE BRANCH_CODE=? AND STATUS=? ORDER BY BANK_NAME
common.select.getProductList=SELECT DISTINCT TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER WHERE TMAS_STATUS='1' AND BRANCH_CODE=? order by TMAS_PRODUCT_ID
common.select.getPRoductListIE=SELECT DISTINCT '1~'||TMAS_PRODUCT_ID TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER WHERE TMAS_STATUS\='1' AND BRANCH_CODE\=? AND TMAS_PRODUCT_ID IN ('1','2','3')
SOA_PRODUCT_LIST=SELECT DISTINCT TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER WHERE TMAS_STATUS\='1' AND BRANCH_CODE\=? AND TMAS_PRODUCT_ID IN ('1','2','3') order by TMAS_PRODUCT_ID 
##common.select.getProductList=SELECT DISTINCT TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER_BK WHERE TMAS_STATUS='1' AND BRANCH_CODE=?
common.select.getsysDate=SELECT TO_CHAR(SYSDATE,'DD/MM/YYYY') SYSDT FROM DUAL
common.select.getUWLimit=SELECT NVL(UNDERWRITTIMG_LIMIT,'0') UWLIMIT FROM   TMAS_LOGIN_DETAILS WHERE UPPER(LOGIN_ID) = UPPER(?) AND PROCESS_ID=? AND PRODUCT_ID=? AND DEPT_ID=? AND ACTIVE=?
common.select.getUWLimit1=SELECT NVL(UNDERWRITTER_LIMIT,'0') UWLIMIT FROM   UNDERWRITER_CAPACITY_MASTER WHERE  UPPER(underwriterId) = UPPER(?) AND PRODUCT_ID=? AND DEPARTMENTID=? AND STATUS='Y'
###common.select.getLoginIdList=SELECT LOGIN_ID,LOGIN_ID LOGIN_NAME FROM TMAS_LOGIN_MASTER WHERE BRANCH_CODE\=? AND UPPER(USERTYPE)\=UPPER(?) AND STATUS\=? ORDER BY LOGIN_NAME
common.select.getLoginIdList=SELECT LOGIN_ID,LOGIN_ID LOGIN_NAME FROM TMAS_LOGIN_MASTER WHERE BRANCH_CODE\=? AND UPPER(USERTYPE)\=UPPER(?) AND STATUS\=? ORDER BY LOGIN_NAME
##common.select.modeOfTransport=SELECT MODE_TRANSPORT_ID,TRANSPORT_DESCRIPTION FROM TMAS_MODE_OF_TRANSPORT WHERE BRANCH_CODE=? AND STATUS=? ORDER BY DISPLAY_ORDER
common.select.modeOfTransport=SELECT MODE_TRANSPORT_ID,TRANSPORT_DESCRIPTION FROM TMAS_MODE_OF_TRANSPORT WHERE BRANCH_CODE=? AND STATUS=? AND departmentId=? ORDER BY DISPLAY_ORDER
common.select.getStartDTOfMonth=SELECT '01/'||TO_CHAR(TO_DATE(?,'DD/MM/YYYY'),'MM/YYYY') STDATE FROM DUAL 
common.select.getExRate=SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER E WHERE CURRENCY_ID\=? AND COUNTRY_ID\=? AND TRUNC(INCEPTION_DATE) <\= TO_DATE(?,'DD-MM-YYYY') AND BRANCH_CODE\=? and E.AMEND_ID\=(select max(AMEND_ID) from EXCHANGE_MASTER M WHERE M.CURRENCY_ID\=E.CURRENCY_ID AND M.COUNTRY_ID\=E.COUNTRY_ID AND TRUNC(INCEPTION_DATE) <\= TO_DATE(?,'DD-MM-YYYY') AND M.BRANCH_CODE\=E.BRANCH_CODE) ORDER BY INCEPTION_DATE DESC
common.select.getSeqName=SELECT SEQ_NAME FROM SEQUENCE_MASTER WHERE SEQ_ID\=? AND PRODUCT_ID\=? AND BRANCH_CODE\=? AND STATUS\=? 
common.select.getPolicyNo1=SELECT 
common.select.getPolicyNo2=.NEXTVAL FROM DUAL 
common.select.policyNo=SELECT IFNULL(SEQ_NO,0)+1 FROM SEQUENCE_MASTER WHERE SEQ_ID\=? AND PRODUCT_ID\=? AND BRANCH_CODE\=? AND STATUS\=? 
common.update.policyNo=UPDATE SEQUENCE_MASTER SET SEQ_NO\=? WHERE SEQ_ID\=? AND PRODUCT_ID\=? AND BRANCH_CODE\=? AND STATUS\=?
common.select.getPRCLCount=SELECT PR+CL COUNT FROM (SELECT COUNT(*) PR  FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=? AND LAYER_NO=?),(SELECT COUNT(*) CL  FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO=? AND LAYER_NO=?)

##Facultative Query

fac.sp.facultativepage1={CALL FACULTATIVE_PAGE1_ORG(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
fac.sp.facultativepage2={CALL FACULTATIVE_PAGE2(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
fac.select.contGen=SELECT B.RSK_STATUS,A.SHARE_SIGNED,B.RSK_CONTRACT_NO FROM TTRN_FAC_RISK_PROPOSAL A,TTRN_RISK_DETAILS B WHERE A.RSK_PROPOSAL_NUMBER = B.RSK_PROPOSAL_NUMBER AND A.RSK_PROPOSAL_NUMBER =? AND A.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_FAC_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER =?) AND B.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER =?)
fac.insert.insDetails=INSERT INTO TTRN_INSURER_DETAILS(INSURER_NO,PROPOSAL_NO,CONTRACT_NO,ENDORSEMENT_NO,TYPE,RETRO_PERCENTAGE,STATUS,UW_YEAR,RETRO_TYPE,ENTRY_DATE,SUB_CLASS,LOGIN_ID,BRANCH_CODE) VALUES (?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?)
fac.upddate.updDetails=UPDATE TTRN_INSURER_DETAILS SET CONTRACT_NO=?,TYPE=?,RETRO_PERCENTAGE=?,STATUS=?,UW_YEAR=?,RETRO_TYPE=?,LOGIN_ID=?,BRANCH_CODE=? WHERE PROPOSAL_NO=? AND INSURER_NO=? AND ENDORSEMENT_NO=?
fac.update.insDetails=UPDATE TTRN_INSURER_DETAILS ID SET ID.END_DATE=SYSDATE  WHERE ID.PROPOSAL_NO=? AND ID.INSURER_NO=? AND ID.ENDORSEMENT_NO=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_INSURER_DETAILS WHERE PROPOSAL_NO=ID.PROPOSAL_NO AND INSURER_NO=ID.INSURER_NO)
fac.select.firstPageDet=SELECT DE.RSK_STATUS,DE.RSK_PROPOSAL_NUMBER, DE.RSK_ENDORSEMENT_NO, DE.RSK_CONTRACT_NO, RSK_PRODUCTID , RSK_DEPTID,RSK_PFCID,  RSK_SPFCID  , DE.RSK_CEDINGID,DE.RSK_BROKERID,  DE.RSK_TREATYID,  TO_CHAR(DE.RSK_MONTH,'dd/mm/yyyy') MONTH, DE.RSK_UWYEAR,  DE.RSK_UNDERWRITTER,TO_CHAR(DE.RSK_INCEPTION_DATE,'dd/mm/yyyy') INS_DATE,TO_CHAR(DE.RSK_EXPIRY_DATE,'dd/mm/yyyy') EXP_DATE,TO_CHAR(DE. RSK_ACCOUNT_DATE,'dd/mm/yyyy') AC_DATE, DE. RSK_ORIGINAL_CURR, DE. RSK_EXCHANGE_RATE,DE.RSK_TERRITORY,DE.RSK_INSURED_NAME,DE.RSK_LOCATION,DE.RSK_CITY,FAC.NR,FAC.RSK_CEDANT_RETENTION,FAC.MAXIMUM_LIMIT_OC,FAC.DEDUCTIBLE_OC,FAC.SP_RETRO,FAC.PML,FAC.SI_PML_OC,FAC.CU,FAC.CU_RSN,FAC.SUM_INSURED_OC,FAC.GWPI_OC,FAC.PML_OC,FAC.TPL_OC,FAC.SHARE_WRITTEN,FAC.SHARE_SIGNED,DE.RSK_PROPOSAL_TYPE,FAC.RSK_INTEREST,FAC.NO_OF_INSURERS,DE.RSK_PREMIUM_RATE,DE.RSK_POLBRANCH,FAC.RSK_CEDRET_TYPE,DE.OLD_CONTRACTNO,PM.RENEWAL_STATUS,PM.LOGIN_ID,FAC.DEDUCTIBLE_FACXOL_OC,FAC.XOL_OC,FAC.MND_INSTALLMENTS,FAC.MODE_TRANSPORT_ID,FAC.VESSEL_NAME,FAC.VESSEL_AGE,FAC.LIMIT_PER_VESSEL_OC,FAC.LIMIT_PER_LOCATION_OC,FAC.TYPE,DE.COUNTRIES_INCLUDE,DE.COUNTRIES_EXCLUDE,FAC.SUM_INS_PML_OC,FAC.PBL_OC,FAC.PBL_DC,FAC.PLL_OC,PSL_OC,FAC.GWPI_PML_OC,FAC.COVER_LIMIT_PML_OC,DE.INWARD_BUS_TYPE,DE.RSK_RECEIPT_PAYEMENT,DE.RSK_LOC_ISSUED,DE.RSK_LATITUDE ,DE.RSK_LONGITUDE,DE.RSK_VESSAL_TONNAGE,DE.RS_ENDORSEMENT_TYPE,DE.RSK_LOC_BNK_NAME,DE.RSK_LOC_CRDT_PRD,DE.RSK_LOC_CRDT_AMT,DE.RSK_LOC_BENFCRE_NAME,PM.DATA_MAP_CONT_NO,DE.Xol_LAYER_NO FROM TTRN_RISK_DETAILS DE  ,TTRN_FAC_RISK_PROPOSAL FAC,POSITION_MASTER PM WHERE  DE.RSK_PROPOSAL_NUMBER\=? AND DE.RSK_PROPOSAL_NUMBER\=FAC.RSK_PROPOSAL_NUMBER AND  DE.RSK_ENDORSEMENT_NO IS NOT NULL AND FAC.RSK_ENDORSEMENT_NO IS NOT NULL AND  DE.RSK_ENDORSEMENT_NO \= (SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_RISK_DETAILS  WHERE RSK_ENDORSEMENT_NO  IS NOT NULL AND   RSK_PROPOSAL_NUMBER\=?)  AND FAC.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_FAC_RISK_PROPOSAL  WHERE RSK_ENDORSEMENT_NO  IS NOT NULL AND   RSK_PROPOSAL_NUMBER\=?) AND PM.PROPOSAL_NO\=FAC.RSK_PROPOSAL_NUMBER AND PM.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM POSITION_MASTER WHERE AMEND_ID IS NOT NULL AND PROPOSAL_NO \= PM.PROPOSAL_NO)
#fac.select.secondPageDet=SELECT FAC.RISK_GRADE,RG.GRADE_DESC,com.RSK_COMM+com.RSK_BROKERAGE+com.RSK_TAX+com.RSK_OTHER_COST ACC_Percentage,FAC.OCCUPATION_CODE,FAC.SUM_INSURED_OUR_SHARE_OC,FAC.GWPI_OUR_SHARE_OC,FAC.PML_OUR_SHARE_OC , FAC.TPL_OUR_SHARE_OC,FAC.OCCUPATION_CODE,FAC.RISK_DETAILS,FAC.FIRE_PORT,FAC.SCOPE,FAC.MB_IND,FAC.CATEGORY_ZONE,FAC.EARTHQUAKE_WS_IND,FAC.WS_THREAT_IND,EQ_THREAT,COM.RSK_COMM,COM.RSK_BROKERAGE,COM.RSK_TAX,COM.RSK_LOSS_RECORD,COM.RSK_DGM_APPROVAL,COM.RSK_UNDERWRITTER_CODE,COM.RSK_UW_RECOMMENDATION,COM.RSK_REMARKS,COM.RSK_OTH_ACCEP,COM.RSK_REF_TO_HO,COM.RSK_ACQUISTION_COST_OC,COM.RSK_NOCLAIMBONUS_PRCENT,COM.RSK_BONUS_ID,RSK_ACQUISTION_COST_DC,FAC.CU,FAC.CU_RSN,COM.RSK_OTHER_COST,FAC.M_LOP,FAC.A_LOP,FAC.MND_INSTALLMENTS,COM.RSK_LEAD_UNDERWRITER_COUNTRY,COM.RSK_LEAD_UW,RSK_LEAD_UW_SHARE,COM.RSK_EXCLUSION,COM.RSK_CREASTA_STATUS FROM TTRN_FAC_RISK_PROPOSAL FAC,TTRN_RISK_COMMISSION COM,TMAS_RISK_GRADE rg WHERE FAC.RSK_PROPOSAL_NUMBER\=? AND FAC.RSK_PROPOSAL_NUMBER\=COM.RSK_PROPOSAL_NUMBER AND FAC.RSK_ENDORSEMENT_NO IS NOT NULL AND COM.RSK_ENDORSEMENT_NO IS NOT NULL AND FAC.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_FAC_RISK_PROPOSAL WHERE RSK_ENDORSEMENT_NO IS NOT NULL AND  RSK_PROPOSAL_NUMBER\=? and RISK_GRADE is not null) AND COM.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_ENDORSEMENT_NO IS NOT NULL AND  RSK_PROPOSAL_NUMBER\=?) and RISK_GRADE is not null AND fac.RISK_GRADE \= RG.GRADE_ID AND RG.STATUS \= 'Y' AND RG.BRANCH_CODE \= ?
fac.select.secondPageDet=SELECT FAC.RISK_GRADE,(select GRADE_DESC from TMAS_RISK_GRADE RG  where  fac.RISK_GRADE \= RG.GRADE_ID AND RG.STATUS \= 'Y' AND RG.BRANCH_CODE \= ?)GRADE_DESC,com.RSK_COMM+com.RSK_BROKERAGE+com.RSK_TAX+com.RSK_OTHER_COST ACC_Percentage,FAC.OCCUPATION_CODE,FAC.SUM_INSURED_OUR_SHARE_OC,FAC.GWPI_OUR_SHARE_OC,FAC.PML_OUR_SHARE_OC , FAC.TPL_OUR_SHARE_OC,FAC.OCCUPATION_CODE,FAC.RISK_DETAILS,FAC.FIRE_PORT,FAC.SCOPE,FAC.MB_IND,FAC.CATEGORY_ZONE,FAC.EARTHQUAKE_WS_IND,FAC.WS_THREAT_IND,EQ_THREAT,COM.RSK_COMM,COM.RSK_BROKERAGE,COM.RSK_TAX,COM.RSK_LOSS_RECORD,COM.RSK_DGM_APPROVAL,COM.RSK_UNDERWRITTER_CODE,COM.RSK_UW_RECOMMENDATION,COM.RSK_REMARKS,COM.RSK_OTH_ACCEP,COM.RSK_REF_TO_HO,COM.RSK_ACQUISTION_COST_OC,COM.RSK_NOCLAIMBONUS_PRCENT,COM.RSK_BONUS_ID,RSK_ACQUISTION_COST_DC,FAC.CU,FAC.CU_RSN,COM.RSK_OTHER_COST,FAC.M_LOP,FAC.A_LOP,FAC.MND_INSTALLMENTS,COM.RSK_LEAD_UNDERWRITER_COUNTRY,COM.RSK_LEAD_UW,RSK_LEAD_UW_SHARE,COM.RSK_EXCLUSION,COM.RSK_CREASTA_STATUS FROM TTRN_FAC_RISK_PROPOSAL FAC,TTRN_RISK_COMMISSION COM,TMAS_RISK_GRADE rg WHERE FAC.RSK_PROPOSAL_NUMBER\=? AND FAC.RSK_PROPOSAL_NUMBER\=COM.RSK_PROPOSAL_NUMBER AND FAC.RSK_ENDORSEMENT_NO IS NOT NULL AND COM.RSK_ENDORSEMENT_NO IS NOT NULL AND FAC.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_FAC_RISK_PROPOSAL WHERE RSK_ENDORSEMENT_NO IS NOT NULL AND  RSK_PROPOSAL_NUMBER\=? ) AND COM.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_ENDORSEMENT_NO IS NOT NULL AND  RSK_PROPOSAL_NUMBER\=?) 
#fac.select.viewfirstPage=SELECT DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE,RD.RSK_PREMIUM_RATE,RD.RSK_PROPOSAL_NUMBER,RD.RSK_ENDORSEMENT_NO,RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME,DM.TMAS_DEPARTMENT_NAME,PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME,PI.COMPANY_NAME COMAPNY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_TREATYID, TO_CHAR(RD.RSK_MONTH, 'dd/mm/yyyy') MONTH, RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE, TO_CHAR(RD.RSK_ACCOUNT_DATE, 'dd/mm/yyyy') ACDATE, CM.CURRENCY_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME, RD.RSK_LOCATION, RD.RSK_CITY, RP.NR, RP.RSK_CEDANT_RETENTION, RP.MAXIMUM_LIMIT_OC,RP.DEDUCTIBLE_OC, RP.SP_RETRO, RP.PML,RP.SI_PML_OC, RP.CU, RP.CU_RSN, RP.SUM_INSURED_OC,RP.GWPI_OC, RP.PML_OC, RP.TPL_OC, RP.SHARE_WRITTEN, RP.SHARE_SIGNED, RD.RSK_PROPOSAL_TYPE, RP.RSK_INTEREST, RP.SUM_INSURED_DC, RP.GWPI_DC, RP.PML_DC, RP.TPL_DC, RP.SUM_INSURED_OUR_SHARE_DC, GWPI_OUR_SHARE_DC, PML_OUR_SHARE_DC,TPL_OUR_SHARE_DC, RP.NO_OF_INSURERS, PB.TMAS_POL_BRANCH_NAME, RP.SCOPE, RP.SUM_INSURED_OUR_SHARE_OC, RP.GWPI_OUR_SHARE_OC, RP.PML_OUR_SHARE_OC, RP.TPL_OUR_SHARE_OC,MOT.TRANSPORT_DESCRIPTION ,RP.VESSEL_NAME,RP.VESSEL_AGE,RP.LIMIT_PER_VESSEL_OC,RP.LIMIT_PER_VESSEL_DC,RP.LIMIT_PER_LOCATION_OC,RP.LIMIT_PER_LOCATION_DC,RP.MND_INSTALLMENTS,RP.DEDUCTIBLE_FACXOL_OC,RP.DEDUCTIBLE_FACXOL_DC,RP.DEDUCTIBLE_DC,RP.XOL_OC,RP.XOL_DC,RP.XOL_OURSHARE_OC,RP.XOL_OURSHARE_DC FROM TTRN_RISK_DETAILS RD JOIN TTRN_FAC_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER \= RP.RSK_PROPOSAL_NUMBER LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND TPM.BRANCH_CODE \= ? AND TPM.TMAS_STATUS \= '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID \= RD.RSK_PFCID AND PFC.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID \= RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE \= ? LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID \= PIB.CUSTOMER_ID AND PIB.BRANCH_CODE \= ? LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID \= PI.CUSTOMER_ID AND PI.BRANCH_CODE \= ?  LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH \= PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE \= ? LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR \= CM.CURRENCY_ID AND CM.BRANCH_CODE \= ? LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY \= TM.TERRITORY_CODE AND TM.BRANCH_CODE \= ? LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER \= UM.UWR_CODE AND UM.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID \= RD.RSK_DEPTID AND DM.BRANCH_CODE \= ? AND DM.TMAS_STATUS \= 'H' LEFT OUTER JOIN TMAS_MODE_OF_TRANSPORT MOT ON MOT.MODE_TRANSPORT_ID\=RP.MODE_TRANSPORT_ID AND MOT.BRANCH_CODE\=? AND MOT.STATUS\='Y' WHERE RD.RSK_PROPOSAL_NUMBER \= ? AND PIB.AMEND_ID \= (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID \= CUSTOMER_ID AND PIB.BRANCH_CODE \= BRANCH_CODE) AND PI.AMEND_ID \= (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID \= CUSTOMER_ID AND PI.BRANCH_CODE \= BRANCH_CODE) AND RP.RSK_ENDORSEMENT_NO \= (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_FAC_RISK_PROPOSAL WHERE RP.RSK_PROPOSAL_NUMBER \= RSK_PROPOSAL_NUMBER) AND CM.AMEND_ID \= (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID \= CURRENCY_ID  AND CM.BRANCH_CODE \= BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO \= (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER \= ? )
#fac.select.viewfirstPage=SELECT DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE,RD.RSK_PREMIUM_RATE,RD.RSK_PROPOSAL_NUMBER,RD.RSK_ENDORSEMENT_NO,RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME,DM.TMAS_DEPARTMENT_ID,DM.TMAS_DEPARTMENT_NAME,PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME,PI.COMPANY_NAME COMAPNY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_TREATYID, TO_CHAR(RD.RSK_MONTH, 'dd/mm/yyyy') MONTH,RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE,TO_CHAR(RD.RSK_ACCOUNT_DATE, 'dd/mm/yyyy') ACDATE, CM.CURRENCY_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME,RD.RSK_LOCATION, RD.RSK_CITY, RP.NR, RP.RSK_CEDANT_RETENTION, RP.MAXIMUM_LIMIT_OC,RP.DEDUCTIBLE_OC, RP.SP_RETRO, RP.PML,RP.SI_PML_OC,RP.CU, RP.CU_RSN, RP.SUM_INSURED_OC,RP.GWPI_OC, RP.PML_OC, RP.TPL_OC, RP.SHARE_WRITTEN, RP.SHARE_SIGNED, RD.RSK_PROPOSAL_TYPE,RP.RSK_INTEREST, RP.SUM_INSURED_DC, RP.GWPI_DC, RP.PML_DC, RP.TPL_DC, RP.SUM_INSURED_OUR_SHARE_DC, GWPI_OUR_SHARE_DC,PML_OUR_SHARE_DC,TPL_OUR_SHARE_DC, RP.NO_OF_INSURERS, PB.TMAS_POL_BRANCH_NAME, RP.SCOPE, RP.SUM_INSURED_OUR_SHARE_OC, RP.GWPI_OUR_SHARE_OC, RP.PML_OUR_SHARE_OC, RP.TPL_OUR_SHARE_OC,MOT.TRANSPORT_DESCRIPTION ,RP.VESSEL_NAME,RP.VESSEL_AGE,RP.LIMIT_PER_VESSEL_OC,RP.LIMIT_PER_VESSEL_DC,RP.LIMIT_PER_LOCATION_OC,RP.LIMIT_PER_LOCATION_DC,RP.MND_INSTALLMENTS,RP.DEDUCTIBLE_FACXOL_OC,RP.DEDUCTIBLE_FACXOL_DC,RP.DEDUCTIBLE_DC,RP.XOL_OC,RP.XOL_DC,RP.XOL_OURSHARE_OC,RP.XOL_OURSHARE_DC,RP.DEDUCTIBLE_OURSHARE_OC,RP.DEDUCTIBLE_OURSHARE_DC,RP.DEDUCTIBLE_FACXOL_OURSHARE_OC, RP.DEDUCTIBLE_FACXOL_OURSHARE_DC,CD.DETAIL_NAME TYPE_NAME FROM TTRN_RISK_DETAILS RD JOIN TTRN_FAC_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = ? AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = ? LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = ? LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = ? LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = ?  LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = ? LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = ? LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = ? LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = ? AND DM.TMAS_STATUS = 'H' LEFT OUTER JOIN TMAS_MODE_OF_TRANSPORT MOT ON MOT.MODE_TRANSPORT_ID=RP.MODE_TRANSPORT_ID AND MOT.BRANCH_CODE=? AND MOT.STATUS='Y' LEFT OUTER JOIN CONSTANT_DETAIL CD ON CD.CATEGORY_ID='13' AND CD.TYPE=RP.TYPE AND CD.STATUS='Y' WHERE RD.RSK_PROPOSAL_NUMBER = ? AND PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE) AND RP.RSK_ENDORSEMENT_NO =? AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID  AND CM.BRANCH_CODE = BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO =?
#fac.select.viewfirstPage=SELECT DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE,RD.RSK_PREMIUM_RATE,RD.RSK_PROPOSAL_NUMBER,RD.RSK_ENDORSEMENT_NO,RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME,DM.TMAS_DEPARTMENT_ID,DM.TMAS_DEPARTMENT_NAME,PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME,PI.COMPANY_NAME COMAPNY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_TREATYID, TO_CHAR(RD.RSK_MONTH, 'dd/mm/yyyy') MONTH,RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE,TO_CHAR(RD.RSK_ACCOUNT_DATE, 'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME,RD.RSK_LOCATION, RD.RSK_CITY, RP.NR, RP.RSK_CEDANT_RETENTION, RP.MAXIMUM_LIMIT_OC,RP.DEDUCTIBLE_OC, RP.SP_RETRO, RP.PML,RP.SI_PML_OC,RP.CU, RP.CU_RSN, RP.SUM_INSURED_OC,RP.GWPI_OC, RP.PML_OC, RP.TPL_OC, RP.SHARE_WRITTEN, RP.SHARE_SIGNED, RD.RSK_PROPOSAL_TYPE,RP.RSK_INTEREST, RP.SUM_INSURED_DC, RP.GWPI_DC, RP.PML_DC, RP.TPL_DC, RP.SUM_INSURED_OUR_SHARE_DC, GWPI_OUR_SHARE_DC,PML_OUR_SHARE_DC,TPL_OUR_SHARE_DC, RP.NO_OF_INSURERS, PB.TMAS_POL_BRANCH_NAME, RP.SCOPE, RP.SUM_INSURED_OUR_SHARE_OC, RP.GWPI_OUR_SHARE_OC, RP.PML_OUR_SHARE_OC, RP.TPL_OUR_SHARE_OC,MOT.TRANSPORT_DESCRIPTION ,RP.VESSEL_NAME,RP.VESSEL_AGE,RP.LIMIT_PER_VESSEL_OC,RP.LIMIT_PER_VESSEL_DC,RP.LIMIT_PER_LOCATION_OC,RP.LIMIT_PER_LOCATION_DC,RP.MND_INSTALLMENTS,RP.DEDUCTIBLE_FACXOL_OC,RP.DEDUCTIBLE_FACXOL_DC,RP.DEDUCTIBLE_DC,RP.XOL_OC,RP.XOL_DC,RP.XOL_OURSHARE_OC,RP.XOL_OURSHARE_DC,RP.DEDUCTIBLE_OURSHARE_OC,RP.DEDUCTIBLE_OURSHARE_DC,RP.DEDUCTIBLE_FACXOL_OURSHARE_OC, RP.DEDUCTIBLE_FACXOL_OURSHARE_DC,CD.DETAIL_NAME TYPE_NAME,(select DETAIL_NAME from CONSTANT_DETAIL CD where CD.CATEGORY_ID = '24' AND CD.TYPE = RD.INWARD_BUS_TYPE AND CD.STATUS = 'Y')INWARD_BUS_TYPE,RSK_LOC_ISSUED,RSK_LATITUDE,RSK_LONGITUDE,PSL_OC,PSL_DC,PSL_OS_OC,PSL_OS_DC,PLL_OC,PLL_DC,PLL_OS_OC,PLL_OS_DC,PBL_OC,PBL_DC,PBL_OS_OC,PBL_OS_DC,RSK_RECEIPT_PAYEMENT,RD.RSK_LOC_BNK_NAME,RD.RSK_LOC_CRDT_PRD,RD.RSK_LOC_CRDT_AMT,RD.RSK_LOC_BENFCRE_NAME,RD.RSK_TERRITORY,RD.COUNTRIES_INCLUDE,RD.COUNTRIES_EXCLUDE,RD.RSK_VESSAL_TONNAGE FROM TTRN_RISK_DETAILS RD JOIN TTRN_FAC_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = ? AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = ? LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = ? LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = ? LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = ?  LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = ? LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = ? LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = ? LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = ? AND DM.TMAS_STATUS = 'H' LEFT OUTER JOIN TMAS_MODE_OF_TRANSPORT MOT ON MOT.MODE_TRANSPORT_ID=RP.MODE_TRANSPORT_ID AND MOT.BRANCH_CODE=? AND MOT.STATUS='Y' LEFT OUTER JOIN CONSTANT_DETAIL CD ON CD.CATEGORY_ID='13' AND CD.TYPE=RP.TYPE AND CD.STATUS='Y' WHERE RD.RSK_PROPOSAL_NUMBER = ? AND PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE) AND RP.RSK_ENDORSEMENT_NO =? AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID  AND CM.BRANCH_CODE = BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO =?
fac.select.viewfirstPage=SELECT DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE,RD.RS_ENDORSEMENT_TYPE,RD.RSK_PREMIUM_RATE,RD.RSK_PROPOSAL_NUMBER,RD.RSK_ENDORSEMENT_NO,RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME,DM.TMAS_DEPARTMENT_ID,DM.TMAS_DEPARTMENT_NAME,PFC.TMAS_PFC_NAME, (select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE \= RD.BRANCH_CODE) TMAS_SPFC_NAME,RD.RSK_SPFCID,PI.COMPANY_NAME COMAPNY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_TREATYID, TO_CHAR(RD.RSK_MONTH, 'dd/mm/yyyy') MONTH,RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE,TO_CHAR(RD.RSK_ACCOUNT_DATE, 'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME,RD.RSK_LOCATION, RD.RSK_CITY, RP.NR, RP.RSK_CEDANT_RETENTION, RP.MAXIMUM_LIMIT_OC,RP.DEDUCTIBLE_OC, RP.SP_RETRO, RP.PML,RP.SI_PML_OC,RP.CU, RP.CU_RSN, RP.SUM_INSURED_OC,RP.GWPI_OC, RP.PML_OC, RP.TPL_OC, RP.SHARE_WRITTEN, RP.SHARE_SIGNED, RD.RSK_PROPOSAL_TYPE,RP.RSK_INTEREST, RP.SUM_INSURED_DC, RP.GWPI_DC, RP.PML_DC, RP.TPL_DC, RP.SUM_INSURED_OUR_SHARE_DC, GWPI_OUR_SHARE_DC,PML_OUR_SHARE_DC,TPL_OUR_SHARE_DC, RP.NO_OF_INSURERS, PB.TMAS_POL_BRANCH_NAME, RP.SCOPE, RP.SUM_INSURED_OUR_SHARE_OC, RP.GWPI_OUR_SHARE_OC, RP.PML_OUR_SHARE_OC, RP.TPL_OUR_SHARE_OC,MOT.TRANSPORT_DESCRIPTION ,RP.VESSEL_NAME,RP.VESSEL_AGE,RP.LIMIT_PER_VESSEL_OC,RP.LIMIT_PER_VESSEL_DC,RP.LIMIT_PER_LOCATION_OC,RP.LIMIT_PER_LOCATION_DC,RP.MND_INSTALLMENTS,RP.DEDUCTIBLE_FACXOL_OC,RP.DEDUCTIBLE_FACXOL_DC,RP.DEDUCTIBLE_DC,RP.XOL_OC,RP.XOL_DC,RP.XOL_OURSHARE_OC,RP.XOL_OURSHARE_DC,RP.DEDUCTIBLE_OURSHARE_OC,RP.DEDUCTIBLE_OURSHARE_DC,RP.DEDUCTIBLE_FACXOL_OURSHARE_OC, RP.DEDUCTIBLE_FACXOL_OURSHARE_DC,CD.DETAIL_NAME TYPE_NAME,(select DETAIL_NAME from CONSTANT_DETAIL CD where CD.CATEGORY_ID \= '24' AND CD.TYPE \= RD.INWARD_BUS_TYPE AND CD.STATUS \= 'Y')INWARD_BUS_TYPE,RSK_LOC_ISSUED,RSK_LATITUDE,RSK_LONGITUDE,PSL_OC,PSL_DC,PSL_OS_OC,PSL_OS_DC,PLL_OC,PLL_DC,PLL_OS_OC,PLL_OS_DC,PBL_OC,PBL_DC,PBL_OS_OC,PBL_OS_DC,RSK_RECEIPT_PAYEMENT,RD.RSK_LOC_BNK_NAME,RD.RSK_LOC_CRDT_PRD,RD.RSK_LOC_CRDT_AMT,RD.RSK_LOC_BENFCRE_NAME,RD.RSK_TERRITORY,RD.COUNTRIES_INCLUDE,RD.COUNTRIES_EXCLUDE,RD.RSK_VESSAL_TONNAGE,RD.Xol_LAYER_NO, RP.PML_OS_OC,RP.PML_OS_DC,RP.PML_100_OC,RP.PML_100_DC FROM TTRN_RISK_DETAILS RD JOIN TTRN_FAC_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER \= RP.RSK_PROPOSAL_NUMBER LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND TPM.BRANCH_CODE \= ? AND TPM.TMAS_STATUS \= '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID \= RD.RSK_PFCID AND PFC.BRANCH_CODE \= ?  LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID \= PIB.CUSTOMER_ID AND PIB.BRANCH_CODE \= ? LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID \= PI.CUSTOMER_ID AND PI.BRANCH_CODE \= ?  LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH \= PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE \= ? LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR \= CM.CURRENCY_ID AND CM.BRANCH_CODE \= ? LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY \= TM.TERRITORY_CODE AND TM.BRANCH_CODE \= ? LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER \= UM.UWR_CODE AND UM.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID \= RD.RSK_DEPTID AND DM.BRANCH_CODE \= ? AND DM.TMAS_STATUS \= 'H' LEFT OUTER JOIN TMAS_MODE_OF_TRANSPORT MOT ON MOT.MODE_TRANSPORT_ID\=RP.MODE_TRANSPORT_ID AND MOT.BRANCH_CODE\=? AND MOT.STATUS\='Y' LEFT OUTER JOIN CONSTANT_DETAIL CD ON CD.CATEGORY_ID\='13' AND CD.TYPE\=RP.TYPE AND CD.STATUS\='Y' WHERE RD.RSK_PROPOSAL_NUMBER \= ? AND PIB.AMEND_ID \= (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID \= CUSTOMER_ID AND PIB.BRANCH_CODE \= BRANCH_CODE) AND PI.AMEND_ID \= (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID \= CUSTOMER_ID AND PI.BRANCH_CODE \= BRANCH_CODE) AND RP.RSK_ENDORSEMENT_NO \=? AND CM.AMEND_ID \= (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID \= CURRENCY_ID  AND CM.BRANCH_CODE \= BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO \=?
#fac.select.viewsecondPage=SELECT FAC.RISK_GRADE,RG.GRADE_DESC,com.RSK_COMM+com.RSK_BROKERAGE+com.RSK_TAX+com.RSK_OTHER_COST ACC_Percentage,FAC.OCCUPATION_CODE,FAC.SUM_INSURED_OUR_SHARE_OC,FAC.GWPI_OUR_SHARE_OC,FAC.PML_OUR_SHARE_OC , FAC.TPL_OUR_SHARE_OC,FAC.OCCUPATION_CODE,FAC.RISK_DETAILS,FAC.FIRE_PORT,FAC.SCOPE,FAC.MB_IND,FAC.CATEGORY_ZONE,FAC.EARTHQUAKE_WS_IND,FAC.WS_THREAT_IND,EQ_THREAT,COM.RSK_COMM,COM.RSK_BROKERAGE,COM.RSK_TAX,COM.RSK_LOSS_RECORD,COM.RSK_DGM_APPROVAL,COM.RSK_UNDERWRITTER_CODE,COM.RSK_UW_RECOMMENDATION,COM.RSK_REMARKS,COM.RSK_OTH_ACCEP,COM.RSK_REF_TO_HO,COM.RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,FAC.CU,FAC.CU_RSN,COM.RSK_OTHER_COST,FAC.M_LOP,FAC.A_LOP,FAC.MND_INSTALLMENTS FROM TTRN_FAC_RISK_PROPOSAL FAC,TTRN_RISK_COMMISSION COM,TMAS_RISK_GRADE rg WHERE FAC.RSK_PROPOSAL_NUMBER\=? AND FAC.RSK_PROPOSAL_NUMBER\=COM.RSK_PROPOSAL_NUMBER AND FAC.RSK_ENDORSEMENT_NO IS NOT NULL AND COM.RSK_ENDORSEMENT_NO IS NOT NULL AND FAC.RSK_ENDORSEMENT_NO\=? AND COM.RSK_ENDORSEMENT_NO\=? AND fac.RISK_GRADE \= RG.GRADE_ID AND RG.STATUS \= 'Y' AND RG.BRANCH_CODE \= ?
#fac.select.viewsecondPage=SELECT FAC.RISK_GRADE,RG.GRADE_DESC,com.RSK_COMM+com.RSK_BROKERAGE+com.RSK_TAX+com.RSK_OTHER_COST ACC_Percentage,FAC.OCCUPATION_CODE,FAC.SUM_INSURED_OUR_SHARE_OC,FAC.GWPI_OUR_SHARE_OC,FAC.PML_OUR_SHARE_OC ,FAC.TPL_OUR_SHARE_OC,FAC.OCCUPATION_CODE,FAC.RISK_DETAILS,FAC.FIRE_PORT,FAC.SCOPE,FAC.MB_IND,FAC.CATEGORY_ZONE,FAC.EARTHQUAKE_WS_IND,FAC.WS_THREAT_IND,EQ_THREAT,COM.RSK_COMM,COM.RSK_BROKERAGE,COM.RSK_TAX,COM.RSK_LOSS_RECORD,COM.RSK_DGM_APPROVAL,COM.RSK_UNDERWRITTER_CODE,COM.RSK_UW_RECOMMENDATION,COM.RSK_REMARKS,COM.RSK_OTH_ACCEP,COM.RSK_REF_TO_HO,COM.RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,FAC.CU, FAC.CU_RSN,COM.RSK_OTHER_COST,COM.RSK_NOCLAIMBONUS_PRCENT,COM.RSK_BONUS_ID,FAC.M_LOP,FAC.A_LOP,FAC.MND_INSTALLMENTS,TO_CHAR(pm.ENDORSEMENT_DATE,'DD/MM/YYYY') ENDORSEMENT_DATE ,RSK_LEAD_UNDERWRITER_COUNTRY,(SELECT   P.FIRST_NAME || ' ' || P.LAST_NAME FROM   PERSONAL_INFO P WHERE   P.BRANCH_CODE = RG.BRANCH_CODE and CUSTOMER_ID=RSK_LEAD_UW AND P.CUSTOMER_TYPE = 'L' AND STATUS = 'Y'  AND P.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE       BRANCH_CODE = P.BRANCH_CODE AND CUSTOMER_TYPE = P.CUSTOMER_TYPE AND STATUS = P.STATUS AND CUSTOMER_ID = P.CUSTOMER_ID))RSK_LEAD_UW,RSK_LEAD_UW_SHARE,(SELECT   ZONE_DESC FROM TMAS_CATEGORY_ZONE WHERE ZONE_ID=FAC.CATEGORY_ZONE  AND BRANCH_CODE=FAC.BRANCH_CODE)ZONE_DESC,RSK_CREASTA_STATUS,RSK_EXCLUSION,(SELECT DETAIL_NAME from constant_detail where CATEGORY_ID='2'  and TYPE=EARTHQUAKE_WS_IND)EARTHQUAKE_WS_IND_CON  FROM TTRN_FAC_RISK_PROPOSAL FAC,TTRN_RISK_COMMISSION COM,TMAS_RISK_GRADE rg,position_master pm WHERE FAC.RSK_PROPOSAL_NUMBER=? AND FAC.RSK_PROPOSAL_NUMBER=COM.RSK_PROPOSAL_NUMBER AND FAC.RSK_PROPOSAL_NUMBER=pm.PROPOSAL_NO  AND FAC.RSK_ENDORSEMENT_NO=COM.RSK_ENDORSEMENT_NO AND COM.RSK_ENDORSEMENT_NO=pm.AMEND_ID AND pm.AMEND_ID=? AND fac.RISK_GRADE = RG.GRADE_ID AND RG.STATUS = 'Y'AND RG.BRANCH_CODE = ?
fac.select.viewsecondPage=SELECT FAC.RISK_GRADE,(select RG.GRADE_DESC from TMAS_RISK_GRADE RG where  fac.RISK_GRADE = RG.GRADE_ID AND RG.STATUS = 'Y' AND RG.BRANCH_CODE = ?) GRADE_DESC,com.RSK_COMM+com.RSK_BROKERAGE+com.RSK_TAX+com.RSK_OTHER_COST ACC_Percentage,FAC.OCCUPATION_CODE,FAC.SUM_INSURED_OUR_SHARE_OC,FAC.GWPI_OUR_SHARE_OC,FAC.PML_OUR_SHARE_OC ,FAC.TPL_OUR_SHARE_OC,FAC.OCCUPATION_CODE,FAC.RISK_DETAILS,FAC.FIRE_PORT,FAC.SCOPE,FAC.MB_IND,FAC.CATEGORY_ZONE,FAC.EARTHQUAKE_WS_IND,FAC.WS_THREAT_IND,EQ_THREAT,COM.RSK_COMM,COM.RSK_BROKERAGE,COM.RSK_TAX,COM.RSK_LOSS_RECORD,COM.RSK_DGM_APPROVAL,COM.RSK_UNDERWRITTER_CODE,COM.RSK_UW_RECOMMENDATION,COM.RSK_REMARKS,COM.RSK_OTH_ACCEP,COM.RSK_REF_TO_HO,COM.RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,FAC.CU, FAC.CU_RSN,COM.RSK_OTHER_COST,COM.RSK_NOCLAIMBONUS_PRCENT,COM.RSK_BONUS_ID,FAC.M_LOP,FAC.A_LOP,FAC.MND_INSTALLMENTS,TO_CHAR(pm.ENDORSEMENT_DATE,'DD/MM/YYYY') ENDORSEMENT_DATE ,RSK_LEAD_UNDERWRITER_COUNTRY,(SELECT   P.FIRST_NAME || ' ' || P.LAST_NAME FROM   PERSONAL_INFO P WHERE   P.BRANCH_CODE = ? and CUSTOMER_ID=RSK_LEAD_UW  AND STATUS = 'Y'  AND P.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE       BRANCH_CODE = P.BRANCH_CODE AND CUSTOMER_TYPE = P.CUSTOMER_TYPE AND STATUS = P.STATUS AND CUSTOMER_ID = P.CUSTOMER_ID))RSK_LEAD_UW,RSK_LEAD_UW_SHARE,(SELECT   ZONE_DESC FROM TMAS_CATEGORY_ZONE WHERE ZONE_ID=FAC.CATEGORY_ZONE  AND BRANCH_CODE=FAC.BRANCH_CODE)ZONE_DESC,RSK_CREASTA_STATUS,RSK_EXCLUSION,(SELECT DETAIL_NAME from constant_detail where CATEGORY_ID='2'  and TYPE=EARTHQUAKE_WS_IND)EARTHQUAKE_WS_IND_CON,pm.DATA_MAP_CONT_NO  FROM TTRN_FAC_RISK_PROPOSAL FAC,TTRN_RISK_COMMISSION COM,position_master pm WHERE FAC.RSK_PROPOSAL_NUMBER=? AND FAC.RSK_PROPOSAL_NUMBER=COM.RSK_PROPOSAL_NUMBER AND FAC.RSK_PROPOSAL_NUMBER=pm.PROPOSAL_NO  AND FAC.RSK_ENDORSEMENT_NO=COM.RSK_ENDORSEMENT_NO AND COM.RSK_ENDORSEMENT_NO=pm.AMEND_ID AND pm.AMEND_ID=?
fac.select.insDetails=SELECT   DECODE(A.CONTRACT_NO,'0','',A.CONTRACT_NO) CONTRACTNO,A.RETRO_PERCENTAGE RETRO_PER,TYPE,UW_YEAR,RETRO_TYPE FROM TTRN_INSURER_DETAILS A WHERE A.ENDORSEMENT_NO = (SELECT   MAX (ENDORSEMENT_NO) FROM   TTRN_INSURER_DETAILS WHERE   A.PROPOSAL_NO=PROPOSAL_NO AND A.INSURER_NO=INSURER_NO) AND A.PROPOSAL_NO = ?  AND A.INSURER_NO BETWEEN 0 AND ? ORDER BY A.INSURER_NO
fac.select.viewInsDetails=SELECT   DECODE(A.CONTRACT_NO,'0','',A.CONTRACT_NO) CONTRACTNO,A.RETRO_PERCENTAGE RETRO_PER,TYPE,UW_YEAR,RETRO_TYPE FROM TTRN_INSURER_DETAILS A WHERE A.ENDORSEMENT_NO =?  AND A.PROPOSAL_NO = ?  AND A.INSURER_NO BETWEEN 0 AND ? ORDER BY A.INSURER_NO
#fac.select.showSecondData=SELECT   RK.RSK_PROPOSAL_NUMBER, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PERSONAL.COMPANY_NAME COMPANY, PI.FIRST_NAME || '' || PI.LAST_NAME BROKER,RK.RSK_CONTRACT_NO, RK.RSK_UWYEAR, RK.RSK_INSURED_NAME,TDM.TMAS_DEPARTMENT_NAME,(select C.DETAIL_NAME from CONSTANT_DETAIL C where RK.RS_ENDORSEMENT_TYPE = C.TYPE  ) DETAIL_NAME FROM   ttrn_risk_details RK, TMAS_PFC_MASTER PFC, TMAS_SPFC_MASTER SPFC, PERSONAL_INFO PERSONAL, PERSONAL_INFO PI, TMAS_DEPARTMENT_MASTER TDM WHERE RK.RSK_PROPOSAL_NUMBER = ? AND PFC.TMAS_PFC_ID = RSK_PFCID AND SPFC.TMAS_SPFC_ID = RK.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = ? AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID  AND PFC.BRANCH_CODE=PI.BRANCH_CODE AND PI.BRANCH_CODE=SPFC.BRANCH_CODE and PI.BRANCH_CODE=? AND PI.BRANCH_CODE=PERSONAL.BRANCH_CODE and PERSONAL.BRANCH_CODE=SPFC.BRANCH_CODE and PERSONAL.BRANCH_CODE=PFC.BRANCH_CODE AND RK.RSK_BROKERID = PI.CUSTOMER_ID AND RK.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   ttrn_risk_details WHERE   RSK_PROPOSAL_NUMBER = ?)    AND RK.BRANCH_CODE = TDM.BRANCH_CODE AND RK.RSK_DEPTID = TDM.TMAS_DEPARTMENT_ID
fac.select.showSecondData=SELECT   RK.RSK_PROPOSAL_NUMBER, PFC.TMAS_PFC_NAME, (select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RK.RSK_SPFCID,' ', '')))) AND SPFC.TMAS_PRODUCT_ID = TDM.TMAS_PRODUCT_ID AND TDM.BRANCH_CODE = SPFC.BRANCH_CODE)TMAS_SPFC_NAME, PERSONAL.COMPANY_NAME COMPANY, PI.FIRST_NAME || '' || PI.LAST_NAME BROKER, RK.RSK_CONTRACT_NO, RK.RSK_UWYEAR, RK.RSK_INSURED_NAME, TDM.TMAS_DEPARTMENT_NAME, (SELECT   C.DETAIL_NAME FROM   CONSTANT_DETAIL C WHERE   RK.RS_ENDORSEMENT_TYPE = C.TYPE) DETAIL_NAME FROM   ttrn_risk_details RK, TMAS_PFC_MASTER PFC, PERSONAL_INFO PERSONAL, PERSONAL_INFO PI, TMAS_DEPARTMENT_MASTER TDM WHERE  RK.RSK_PROPOSAL_NUMBER = ? AND PFC.TMAS_PFC_ID = RSK_PFCID AND TDM.TMAS_PRODUCT_ID=? and TDM.TMAS_STATUS='Y' AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND PFC.BRANCH_CODE = PI.BRANCH_CODE  AND PI.BRANCH_CODE = ? AND PI.BRANCH_CODE = PERSONAL.BRANCH_CODE AND PERSONAL.BRANCH_CODE = PFC.BRANCH_CODE AND RK.RSK_BROKERID = PI.CUSTOMER_ID AND PERSONAL.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = PERSONAL.CUSTOMER_ID  AND CUSTOMER_TYPE = PERSONAL.CUSTOMER_TYPE AND BRANCH_CODE = PERSONAL.BRANCH_CODE) AND PI.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = PI.CUSTOMER_ID AND CUSTOMER_TYPE = PI.CUSTOMER_TYPE AND BRANCH_CODE = PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   ttrn_risk_details WHERE   RSK_PROPOSAL_NUMBER = ?) AND RK.BRANCH_CODE = TDM.BRANCH_CODE AND RK.RSK_DEPTID = TDM.TMAS_DEPARTMENT_ID
#fac.select.showSecondData=SELECT   RK.RSK_PROPOSAL_NUMBER, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PERSONAL.COMPANY_NAME COMPANY, PI.FIRST_NAME || '' || PI.LAST_NAME BROKER,RK.RSK_CONTRACT_NO, RK.RSK_UWYEAR, RK.RSK_INSURED_NAME,TDM.TMAS_DEPARTMENT_NAME,(select C.DETAIL_NAME from CONSTANT_DETAIL C where RK.RS_ENDORSEMENT_TYPE = C.TYPE  ) DETAIL_NAME FROM   ttrn_risk_details RK, TMAS_PFC_MASTER PFC, TMAS_SPFC_MASTER SPFC, PERSONAL_INFO PERSONAL, PERSONAL_INFO PI, TMAS_DEPARTMENT_MASTER TDM WHERE RK.RSK_PROPOSAL_NUMBER = ? AND PFC.TMAS_PFC_ID = RSK_PFCID AND SPFC.TMAS_SPFC_ID = RK.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = ? AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID  AND PFC.BRANCH_CODE=PI.BRANCH_CODE AND PI.BRANCH_CODE=SPFC.BRANCH_CODE and PI.BRANCH_CODE=? AND PI.BRANCH_CODE=PERSONAL.BRANCH_CODE and PERSONAL.BRANCH_CODE=SPFC.BRANCH_CODE and PERSONAL.BRANCH_CODE=PFC.BRANCH_CODE AND RK.RSK_BROKERID = PI.CUSTOMER_ID AND RK.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   ttrn_risk_details WHERE   RSK_PROPOSAL_NUMBER = ?)    AND RK.BRANCH_CODE = TDM.BRANCH_CODE AND RK.RSK_DEPTID = TDM.TMAS_DEPARTMENT_ID
fac.select.uwYear=SELECT DISTINCT  A.UW_YEAR CONTDET1,A.UW_YEAR CONTDET2 FROM POSITION_MASTER A WHERE A.PRODUCT_ID  =? AND A.CONTRACT_STATUS ='A' AND A.CONTRACT_NO IS NOT NULL   AND A.CONTRACT_NO !='0' AND A.RETRO_TYPE='TR' AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(A.EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = ? AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER P WHERE P.PRODUCT_ID=A.PRODUCT_ID  AND P.CONTRACT_NO = A.CONTRACT_NO AND P.RETRO_TYPE=A.RETRO_TYPE AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(EXPIRY_DATE,'DD/MM/YY') AND P.BRANCH_CODE = A.BRANCH_CODE AND P.CONTRACT_STATUS =A.CONTRACT_STATUS) ORDER BY A.UW_YEAR
#fac.select.uwYear=SELECT DISTINCT  A.UW_YEAR CONTDET1,A.UW_YEAR CONTDET2 FROM POSITION_MASTER A WHERE A.PRODUCT_ID  =? AND A.CONTRACT_STATUS ='A' AND A.CONTRACT_NO IS NOT NULL   AND A.CONTRACT_NO !='0' AND A.RETRO_TYPE='TR' AND TRUNC(TO_DATE(A.EXPIRY_DATE,'DD/MM/YY'))<TRUNC(TO_DATE(?,'DD/MM/YYYY')) AND A.BRANCH_CODE = ? AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE A.PRODUCT_ID=PRODUCT_ID  AND A.CONTRACT_NO = CONTRACT_NO AND A.RETRO_TYPE=RETRO_TYPE AND TRUNC(TO_DATE(A.EXPIRY_DATE,'DD/MM/YY'))<TRUNC(TO_DATE(?,'DD/MM/YYYY')) AND A.BRANCH_CODE = BRANCH_CODE) ORDER BY A.UW_YEAR

##fac.select.retroContDet=SELECT A.CONTRACT_NO,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET1,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET2 FROM POSITION_MASTER A WHERE  A.PRODUCT_ID = ? AND A.CONTRACT_STATUS ='A' AND A.CONTRACT_NO IS NOT NULL AND A.CONTRACT_NO !='0' AND NVL(A.RETRO_TYPE,'N') = CASE WHEN PRODUCT_ID='4' THEN ? ELSE 'N' END AND NVL(A.UW_YEAR,'0') = CASE WHEN PRODUCT_ID='4' AND A.RETRO_TYPE='SR' THEN ? ELSE NVL(A.UW_YEAR,'0')  END AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(A.EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = ? AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE A.PRODUCT_ID=PRODUCT_ID AND A.CONTRACT_NO = CONTRACT_NO AND NVL(A.RETRO_TYPE,'N') = CASE WHEN PRODUCT_ID='4' THEN ? ELSE 'N'  END AND NVL(A.UW_YEAR,'0') = CASE WHEN PRODUCT_ID='4' AND A.RETRO_TYPE='SR' THEN  ? ELSE NVL(A.UW_YEAR,'0')  END AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = BRANCH_CODE) ORDER BY A.CONTRACT_NO
fac.select.retroContDet=SELECT A.CONTRACT_NO,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET1,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET2 FROM POSITION_MASTER A WHERE  A.PRODUCT_ID = ? AND A.CONTRACT_STATUS ='A' AND A.CONTRACT_NO IS NOT NULL AND A.CONTRACT_NO !='0' AND NVL(A.RETRO_TYPE,'N') = CASE WHEN PRODUCT_ID='4' THEN ? ELSE 'N' END AND A.UW_YEAR =  ?  AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(A.EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = ? AND A.RSK_DUMMY_CONTRACT ='N' AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE A.PRODUCT_ID=PRODUCT_ID AND A.CONTRACT_NO = CONTRACT_NO AND NVL(A.RETRO_TYPE,'N') = CASE WHEN PRODUCT_ID='4' THEN ? ELSE 'N'  END AND A.UW_YEAR = ?  AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = BRANCH_CODE AND A.RSK_DUMMY_CONTRACT ='N') ORDER BY A.CONTRACT_NO
fac.select.retroContDetTR=SELECT A.CONTRACT_NO,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET1,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET2 FROM POSITION_MASTER A WHERE  A.PRODUCT_ID = ? AND A.CONTRACT_STATUS ='A' AND A.CONTRACT_NO IS NOT NULL AND A.CONTRACT_NO !='0' AND NVL(A.RETRO_TYPE,'N') IN('TR','FO','TO') AND A.UW_YEAR =  ?  AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(A.EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = ? AND A.RSK_DUMMY_CONTRACT ='N' AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE A.PRODUCT_ID=PRODUCT_ID AND A.CONTRACT_NO = CONTRACT_NO AND NVL(A.RETRO_TYPE,'N') IN('TR','FO','TO')  AND A.UW_YEAR = ?  AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = BRANCH_CODE AND A.RSK_DUMMY_CONTRACT ='N') ORDER BY A.CONTRACT_NO
FAC_SELECT_RETROCONTDET_23=SELECT A.CONTRACT_NO,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET1,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET2 FROM POSITION_MASTER A WHERE  A.PRODUCT_ID = ? AND A.CONTRACT_STATUS ='A' AND A.CONTRACT_NO IS NOT NULL AND A.CONTRACT_NO !='0' AND  NVL(A.RETRO_TYPE,'N') ! ='SR'  AND A.UW_YEAR =  ?  AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(A.EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = ? AND A.RSK_DUMMY_CONTRACT ='N' AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE A.PRODUCT_ID=PRODUCT_ID AND A.CONTRACT_NO = CONTRACT_NO  AND NVL(A.RETRO_TYPE,'N') ! ='SR' AND A.UW_YEAR = ?  AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = BRANCH_CODE AND A.RSK_DUMMY_CONTRACT ='N') ORDER BY A.CONTRACT_NO
FAC_SELECT_RETRO_DUP_CONTRACT=SELECT A.CONTRACT_NO,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET1,CASE WHEN A.PRODUCT_ID='4' THEN TO_CHAR(A.CONTRACT_NO) WHEN PRODUCT_ID='5' THEN TO_CHAR(A.CONTRACT_NO)||'-'||TO_CHAR(A.LAYER_NO) ELSE NULL END CONTDET2 FROM POSITION_MASTER A WHERE  A.PRODUCT_ID = ? AND A.CONTRACT_STATUS ='A' AND A.CONTRACT_NO IS NOT NULL AND A.CONTRACT_NO !='0' AND NVL(A.RETRO_TYPE,'N') = CASE WHEN PRODUCT_ID='4' THEN ? ELSE 'N' END AND A.UW_YEAR =  ?  AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(A.EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = ? AND A.RSK_DUMMY_CONTRACT ='D' AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE A.PRODUCT_ID=PRODUCT_ID AND A.CONTRACT_NO = CONTRACT_NO AND NVL(A.RETRO_TYPE,'N') = CASE WHEN PRODUCT_ID='4' THEN ? ELSE 'N'  END AND A.UW_YEAR = ?  AND TO_DATE(?,'DD/MM/YYYY')<TO_DATE(EXPIRY_DATE,'DD/MM/YY') AND A.BRANCH_CODE = BRANCH_CODE AND A.RSK_DUMMY_CONTRACT ='D') ORDER BY A.CONTRACT_NO
fac.update.fac.contractNo=UPDATE POSITION_MASTER PM SET PM.FAC_CONTRACT_NO=? WHERE  PM.CONTRACT_NO=? AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO=PM.CONTRACT_NO)
fac.sp.renewalCopyQuote=CALL RENEWAL_COPYQUOTE(?,?,?,?)
fac.sp.exchageRetroPremium={CALL RETROCONTRACT_ENDORSEMENT(?)}
fac.select.getRenewalValidation=SELECT PM.UW_YEAR,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,TO_DATE(?,'DD/MM/YYYY')-TO_DATE(TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY'),'DD/MM/YYYY') DIFF FROM POSITION_MASTER PM WHERE PM.CONTRACT_NO=? AND PM.RENEWAL_STATUS='0' AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO=PM.CONTRACT_NO AND RENEWAL_STATUS=PM.RENEWAL_STATUS) ORDER BY PM.UW_YEAR DESC
pro.select.getRenewalValidation=SELECT PM.UW_YEAR,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,TO_DATE(?,'DD/MM/YYYY')-TO_DATE(TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY'),'DD/MM/YYYY') DIFF FROM POSITION_MASTER PM WHERE PM.CONTRACT_NO=? AND PM.RENEWAL_STATUS='0' AND DEPT_ID=? AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO=PM.CONTRACT_NO AND RENEWAL_STATUS=PM.RENEWAL_STATUS AND DEPT_ID=PM.DEPT_ID) ORDER BY PM.UW_YEAR DESC
fac.select.getSPRetroValidation=SELECT NVL(PM.FAC_CONTRACT_NO,'0') FAC_CONTRACT_NO FROM POSITION_MASTER PM WHERE PM.CONTRACT_NO=? AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO=PM.CONTRACT_NO)

##Riskdetils Query
risk.update.mndInstallments=UPDATE TTRN_MND_INSTALLMENTS SET  CONTRACT_NO\=? where PROPOSAL_NO\=?
risk.update.rskDtls=UPDATE TTRN_RISK_DETAILS SET RSK_DEPTID\=?, RSK_PFCID\=?, RSK_SPFCID\=?, RSK_POLBRANCH\=?, RSK_CEDINGID\=?, RSK_BROKERID\=?, RSK_TREATYID\=?, RSK_MONTH\=TO_DATE(?,'DD/MM/YYYY'), RSK_UWYEAR\=?, RSK_UNDERWRITTER\=?, RSK_INCEPTION_DATE\=TO_DATE(?,'DD/MM/YYYY'), RSK_EXPIRY_DATE\=TO_DATE(?,'DD/MM/YYYY'), RSK_ACCOUNT_DATE\=TO_DATE(?,'DD/MM/YYYY'), RSK_ORIGINAL_CURR\=?, RSK_EXCHANGE_RATE\=?, RSK_BASIS\=?, RSK_PERIOD_OF_NOTICE\=?, RSK_RISK_COVERED\=?, RSK_TERRITORY_SCOPE\=?, RSK_TERRITORY\=?, RSK_STATUS\=?,RSK_PROPOSAL_TYPE\=?,RSK_ACCOUNTING_PERIOD\=? ,RSK_RECEIPT_STATEMENT\=? , RSK_RECEIPT_PAYEMENT\=?,MND_INSTALLMENTS\=?,RETRO_CESSIONARIES\=?,RSK_RETRO_TYPE\=?,RSK_INSURED_NAME\=?,INWARD_BUS_TYPE\=?,TREATYTYPE\=?,RSK_BUSINESS_TYPE\=?,RSK_EXCHANGE_TYPE\=?,RSK_PERILS_COVERED\=?,RSK_LOC_ISSUED\=?,RSK_UMBRELLA_XL\=?,LOGIN_ID\=?,BRANCH_CODE\=?,SYS_DATE\=sysdate,COUNTRIES_INCLUDE\=?,COUNTRIES_EXCLUDE\=?,RSK_NO_OF_LINE\=?,RS_ENDORSEMENT_TYPE\=?,RSK_RUN_OFF_YEAR\=?,RSK_LOC_BNK_NAME\=?,RSK_LOC_CRDT_PRD\=?,RSK_LOC_CRDT_AMT\=?,RSK_LOC_BENFCRE_NAME\=?,RSK_CESSION_EXG_RATE\=?,RSK_FIXED_RATE\=?,RETENTIONYN\=?,RSK_ACCOUNT_PERIOD_NOTICE=?,RSK_STATEMENT_CONFIRM=? WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_ENDORSEMENT_NO\=?
risk.update.homeContNo=UPDATE POSITION_MASTER SET CONTRACT_NO\=?,PROPOSAL_STATUS\=?,CONTRACT_STATUS\=? WHERE PROPOSAL_NO\=? 
risk.update.pro24RskProposal=UPDATE TTRN_RISK_PROPOSAL SET RSK_LIMIT_OS_OC =?,RSK_LIMIT_OS_DC =?, RSK_EPI_OSOF_OC=?, RSK_EPI_OSOF_DC =?,RSK_EPI_OSOE_OC=?,RSK_EPI_OSOE_DC=?,RSK_XLCOST_OS_OC=?,RSK_XLCOST_OS_DC=?, RSK_PREMIUM_QUOTA_SHARE=?,RSK_PREMIUM_SURPULS=?,RSK_PREMIUM_QUOTA_SHARE_DC=?,RSK_PREMIUM_SURPLUS_DC=?,COMM_QS_AMT=?,COMM_SURPLUS_AMT=?,COMM_QS_AMT_DC=?,COMM_SURPLUS_AMT_DC=?   WHERE RSK_PROPOSAL_NUMBER =?  AND RSK_ENDORSEMENT_NO = ?
risk.update.pro35RskProposal=UPDATE TTRN_RISK_PROPOSAL SET RSK_LIMIT_OS_OC =?,RSK_LIMIT_OS_DC =?, RSK_EPI_OSOF_OC=?, RSK_EPI_OSOF_DC =?,RSK_MD_PREM_OS_OC =?,RSK_MD_PREM_OS_DC =? WHERE RSK_PROPOSAL_NUMBER =? AND RSK_LAYER_NO =? AND RSK_ENDORSEMENT_NO = ?
risk.update.pro24FirPageRskPro=UPDATE TTRN_RISK_PROPOSAL SET RSK_LIMIT_OC=?,RSK_LIMIT_DC=?,RSK_EPI_OFFER_OC=?,RSK_EPI_OFFER_DC=?,RSK_EPI_ESTIMATE=?, RSK_EPI_EST_OC=?,RSK_EPI_EST_DC=?,RSK_XLCOST_OC=?,RSK_XLCOST_DC=?,RSK_CEDANT_RETENTION=?,RSK_SHARE_WRITTEN=?,RSK_SHARE_SIGNED=?,RSK_CEDRET_TYPE=?,RSK_SP_RETRO=?,RSK_NO_OF_INSURERS=?,RSK_MAX_LMT_COVER=?,RSK_LIMIT_OS_OC=?,RSK_LIMIT_OS_DC=?,RSK_EPI_OSOF_OC=?,RSK_EPI_OSOF_DC=?,RSK_EPI_OSOE_OC=?,RSK_EPI_OSOE_DC=?,RSK_XLCOST_OS_OC=?,RSK_XLCOST_OS_DC=?,LIMIT_PER_VESSEL_OC=?,LIMIT_PER_VESSEL_DC=?,LIMIT_PER_LOCATION_OC=?,LIMIT_PER_LOCATION_DC=?,RSK_TREATY_SURP_LIMIT_OC=?,RSK_TREATY_SURP_LIMIT_DC=?,RSK_TREATY_SURP_LIMIT_OS_OC=?,RSK_TREATY_SURP_LIMIT_OS_DC=?,RSK_TRTY_LMT_PML_OC=?,RSK_TRTY_LMT_PML_DC=?,RSK_TRTY_LMT_PML_OS_OC=?,RSK_TRTY_LMT_PML_OS_DC=?,RSK_TRTY_LMT_SUR_PML_OC=?,RSK_TRTY_LMT_SUR_PML_DC=?,RSK_TRTY_LMT_SUR_PML_OS_OC=?,RSK_TRTY_LMT_SUR_PML_OS_DC=?,RSK_TRTY_LMT_OURASS_PML_OC=?,RSK_TRTY_LMT_OURASS_PML_DC=?,RSK_TRTY_LMT_OURASS_PML_OS_OC=?,RSK_TRTY_LMTOUR_ASS_PML_OS_DC=?,SUB_CLASS=?,LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=SYSDATE, RSK_PML=?, RSK_PML_PERCENT=? WHERE RSK_PROPOSAL_NUMBER =? AND RSK_ENDORSEMENT_NO=?
risk.select.maxEndom=SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=?
risk.update.pro35FirPageRskPro=UPDATE TTRN_RISK_PROPOSAL SET RSK_LIMIT_OC=?,RSK_LIMIT_DC=?,RSK_EPI_EST_OC=?,RSK_EPI_EST_DC=?,RSK_SHARE_WRITTEN=?,RSK_SHARE_SIGNED=?,RSK_MAX_LMT_COVER=?,RSK_SUBJ_PREMIUM_OC=?,RSK_SUBJ_PREMIUM_DC=?,RSK_XLPREM_OC=?,RSK_XLPREM_DC=?,RSK_PF_COVERED=?,RSK_DEDUC_OC=?,RSK_DEDUC_DC=?,RSK_MD_PREM_OC=?,RSK_MD_PREM_DC=?,RSK_ADJRATE=?,RSK_SP_RETRO=?,RSK_NO_OF_INSURERS=?,RSK_LIMIT_OS_OC=?,RSK_LIMIT_OS_DC=?,RSK_EPI_OSOF_OC=?,RSK_EPI_OSOF_DC=?,RSK_MD_PREM_OS_OC=?,RSK_MD_PREM_OS_DC=?,LIMIT_PER_VESSEL_OC=?,LIMIT_PER_VESSEL_DC=?,LIMIT_PER_LOCATION_OC=?,LIMIT_PER_LOCATION_DC=?,EGPNI_AS_OFFER=?,OURASSESSMENT=? ,EGPNI_AS_OFFER_DC=?,LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=SYSDATE WHERE RSK_PROPOSAL_NUMBER =?  AND RSK_ENDORSEMENT_NO=?
risk.update.pro2SecComm=UPDATE TTRN_RISK_COMMISSION SET RSK_BROKERAGE\=?,RSK_TAX\=?,RSK_PROFIT_COMM\=?,RSK_ACQUISTION_COST_OC\=?,RSK_ACQUISTION_COST_DC\=?,RSK_COMM_QUOTASHARE\=?,RSK_COMM_SURPLUS\=?,RSK_OVERRIDER_PERC\=?,RSK_PREMIUM_RESERVE\=?,RSK_LOSS_RESERVE\=?,RSK_INTEREST\=?,RSK_PF_INOUT_PREM\=?,RSK_PF_INOUT_LOSS\=?,RSK_LOSSADVICE\=?,RSK_CASHLOSS_LMT_OC\=?,RSK_CASHLOSS_LMT_DC\=?,RSK_LEAD_UW\=?,RSK_LEAD_UW_SHARE\=?,RSK_ACCOUNTS\=?,RSK_EXCLUSION\=?,RSK_REMARKS\=?,RSK_UW_RECOMM\=?,RSK_GM_APPROVAL\=?,RSK_OTHER_COST\=?,RSK_CREASTA_STATUS\=?,RSK_EVENT_LIMIT_OC\=?,RSK_EVENT_LIMIT_DC\=?,RSK_AGGREGATE_LIMIT_OC\=?,RSK_AGGREGATE_LIMIT_DC\=?,RSK_OCCURRENT_LIMIT_OC\=?,RSK_OCCURRENT_LIMIT_DC\=?,RSK_SLADSCALE_COMM\=?,RSK_LOSS_PART_CARRIDOR\=?,RSK_COMBIN_SUB_CLASS\=?,SUB_CLASS\=?,LOGIN_ID\=?,BRANCH_CODE\=?,SYS_DATE\=SYSDATE,RSK_LEAD_UNDERWRITER_COUNTRY\=?,RSK_INCLUDE_ACQ_COST\=?,RSK_OUR_ASS_ACQ_COST\=?,RSK_OUR_ACQ_OUR_SHARE_OC\=?,RSK_LOSS_COMBIN_SUB_CLASS\=?,RSK_SLIDE_COMBIN_SUB_CLASS\=?,RSK_CRESTA_COMBIN_SUB_CLASS\=?,RSK_PRO_MANAGEMENT_EXP\=?, RSK_PRO_COMM_TYPE\=?, RSK_PRO_COMM_PER\=?, RSK_PRO_SET_UP\=?, RSK_PRO_SUP_PRO_COM\=?, RSK_PRO_LOSS_CARY_TYPE\=?, RSK_PRO_LOSS_CARY_YEAR\=?, RSK_PRO_PROFIT_CARY_TYPE\=?, RSK_PRO_PROFIT_CARY_YEAR\=?, RSK_PRO_FIRST_PFO_COM\=?, RSK_PRO_FIRST_PFO_COM_PRD\=?, RSK_PRO_SUB_PFO_COM_PRD\=?, RSK_PRO_SUB_PFO_COM\=?, RSK_PRO_SUB_SEQ_CAL\=?, RSK_PRO_NOTES\=?,RSK_DOC_STATUS\=?,RSK_RATE\=?,RSK_PREMIUM_RES_TYPE=?,FPC_TYPE=?,FPC_FIXED_DATE=TO_DATE(?,'DD/MM/YYYY'),RSK_PORTFOLIO_TYPE=? WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_ENDORSEMENT_NO\=? 
risk.update.pro3SecComm=UPDATE TTRN_RISK_COMMISSION SET RSK_BROKERAGE\=?,RSK_TAX\=?,RSK_PROFIT_COMM\=?,RSK_ACQUISTION_COST_OC\=?,RSK_ACQUISTION_COST_DC\=?,RSK_AGGREGATE_LIAB_OC\=?,RSK_AGGREGATE_LIAB_DC\=?,RSK_REINSTATE_NO\=?,RSK_REINSTATE_ADDL_PREM_OC \=?,RSK_REINSTATE_ADDL_PREM_DC\=?,RSK_LEAD_UW\=?,RSK_LEAD_UW_SHARE\=?,RSK_ACCOUNTS\=?,RSK_EXCLUSION\=?,RSK_REMARKS\=?,RSK_UW_RECOMM\=?,RSK_GM_APPROVAL\=?,RSK_OTHER_COST\=?,RSK_REINSTATE_ADDL_PREM_PCT\=?,RSK_BURNING_COST_PCT\=?,RSK_AGGREGATE_deduct_OC\=?,RSK_AGGREGATE_deduct_DC\=?,RSK_OCCURRENT_LIMIT_OC\=?,RSK_OCCURRENT_LIMIT_DC\=?,RSK_REINSTATEMENT_PREMIUM\=?,RSK_CREASTA_STATUS\=?,RSK_LEAD_UNDERWRITER_COUNTRY\=?,LOGIN_ID\=?,BRANCH_CODE\=?,SYS_DATE\=SYSDATE,RSK_DOC_STATUS\=?,RSK_NOCLAIMBONUS_PRCENT\=?,RSK_BONUS_ID\=?, RSK_LAYER_NO \=? WHERE RSK_PROPOSAL_NUMBER\=?  AND RSK_ENDORSEMENT_NO\=?
risk.update.pro4SecComm=UPDATE TTRN_RISK_COMMISSION SET RSK_BROKERAGE\=?,RSK_TAX\=?,RSK_PROFIT_COMM\=?,RSK_ACQUISTION_COST_OC\=?,RSK_ACQUISTION_COST_DC\=?,RSK_COMM_QUOTASHARE\=?,RSK_COMM_SURPLUS\=?,RSK_OVERRIDER_PERC\=?,RSK_PREMIUM_RESERVE\=?,RSK_LOSS_RESERVE\=?,RSK_INTEREST\=?,RSK_PF_INOUT_PREM\=?,RSK_PF_INOUT_LOSS\=?,RSK_LOSSADVICE\=?,RSK_CASHLOSS_LMT_OC\=?,RSK_CASHLOSS_LMT_DC\=?,RSK_LEAD_UW\=?,RSK_LEAD_UW_SHARE\=?,RSK_ACCOUNTS\=?,RSK_EXCLUSION\=?,RSK_REMARKS\=?,RSK_UW_RECOMM\=?,RSK_GM_APPROVAL\=?,RSK_OTHER_COST\=?,RSK_CREASTA_STATUS\=?,RSK_EVENT_LIMIT_OC\=?,RSK_EVENT_LIMIT_DC\=?,RSK_AGGREGATE_LIMIT_OC\=?,RSK_AGGREGATE_LIMIT_DC\=?,RSK_OCCURRENT_LIMIT_OC\=?,RSK_OCCURRENT_LIMIT_DC\=?,RSK_SLADSCALE_COMM\=?,RSK_LOSS_PART_CARRIDOR\=?,RSK_COMBIN_SUB_CLASS\=?,SUB_CLASS\=?,LOGIN_ID\=?,BRANCH_CODE\=?,SYS_DATE\=SYSDATE,RSK_LEAD_UNDERWRITER_COUNTRY\=?,RSK_INCLUDE_ACQ_COST\=?,RSK_OUR_ASS_ACQ_COST\=?,RSK_OUR_ACQ_OUR_SHARE_OC\=?,RSK_LOSS_COMBIN_SUB_CLASS\=?,RSK_SLIDE_COMBIN_SUB_CLASS\=?,RSK_CRESTA_COMBIN_SUB_CLASS\=?,RSK_PRO_MANAGEMENT_EXP\=?, RSK_PRO_COMM_TYPE\=?, RSK_PRO_COMM_PER\=?, RSK_PRO_SET_UP\=?, RSK_PRO_SUP_PRO_COM\=?, RSK_PRO_LOSS_CARY_TYPE\=?, RSK_PRO_LOSS_CARY_YEAR\=?, RSK_PRO_PROFIT_CARY_TYPE\=?, RSK_PRO_PROFIT_CARY_YEAR\=?, RSK_PRO_FIRST_PFO_COM\=?, RSK_PRO_FIRST_PFO_COM_PRD\=?, RSK_PRO_SUB_PFO_COM_PRD\=?, RSK_PRO_SUB_PFO_COM\=?, RSK_PRO_SUB_SEQ_CAL\=?, RSK_PRO_NOTES\=?,RSK_DOC_STATUS\=?,RSK_COMMISSION_QS_YN\=?,RSK_COMMISSION_SUR_YN\=?,RSK_OVERRIDE_YN\=?,RSK_BROKARAGE_YN\=?,RSK_TAX_YN\=?,RSK_OTHER_COST_YN\=?,RSK_CEED_ODI_YN\=?,RSK_RATE\=?,RSK_COMMISSION_TYPE\=? WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_ENDORSEMENT_NO\=?

#risk.update.pro5SecComm=UPDATE TTRN_RISK_COMMISSION SET RSK_REINSTATE_NO\=?,RSK_REINSTATE_ADDL_PREM_PCT\=?,RSK_BURNING_COST_PCT\=?,RSK_REMARKS\=?,LOGIN_ID\=?,BRANCH_CODE\=?,SYS_DATE\=SYSDATE,RSK_DOC_STATUS\=? WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_LAYER_NO \=?  AND RSK_ENDORSEMENT_NO\=?
risk.update.pro5SecComm=UPDATE TTRN_RISK_COMMISSION SET RSK_BROKERAGE\=?,RSK_TAX\=?,RSK_PROFIT_COMM\=?,RSK_ACQUISTION_COST_OC\=?,RSK_ACQUISTION_COST_DC\=?,RSK_AGGREGATE_LIAB_OC\=?,RSK_AGGREGATE_LIAB_DC\=?,RSK_REINSTATE_NO\=?,RSK_REINSTATE_ADDL_PREM_OC \=?,RSK_REINSTATE_ADDL_PREM_DC\=?,RSK_LEAD_UW\=?,RSK_LEAD_UW_SHARE\=?,RSK_ACCOUNTS\=?,RSK_EXCLUSION\=?,RSK_REMARKS\=?,RSK_UW_RECOMM\=?,RSK_GM_APPROVAL\=?,RSK_OTHER_COST\=?,RSK_REINSTATE_ADDL_PREM_PCT\=?,RSK_BURNING_COST_PCT\=?,RSK_AGGREGATE_deduct_OC\=?,RSK_AGGREGATE_deduct_DC\=?,RSK_OCCURRENT_LIMIT_OC\=?,RSK_OCCURRENT_LIMIT_DC\=?,RSK_REINSTATEMENT_PREMIUM\=?,RSK_CREASTA_STATUS\=?,RSK_LEAD_UNDERWRITER_COUNTRY\=?,LOGIN_ID\=?,BRANCH_CODE\=?,SYS_DATE\=SYSDATE,RSK_DOC_STATUS\=?,RSK_NOCLAIMBONUS_PRCENT\=?,RSK_BONUS_ID\=? ,RSK_LAYER_NO \=? WHERE RSK_PROPOSAL_NUMBER\=?   AND RSK_ENDORSEMENT_NO\=?

risk.select.policyNoprodCode=SELECT TYPE FROM CONSTANT_DETAIL WHERE CATEGORY_ID=?
risk.update.contNo=UPDATE TTRN_RISK_DETAILS SET RSK_CONTRACT_NO=? WHERE RSK_PROPOSAL_NUMBER=?
CLASS_LIMIT_UPDATE_CONTNO=UPDATE TTRN_RSK_CLASS_LIMITS SET RSK_CONTRACT_NO=? WHERE RSK_PROPOSAL_NUMBER=?
risk.update.positionMaster=UPDATE POSITION_MASTER SET LAYER_NO=?,REINSURANCE_ID=?,PRODUCT_ID=?,DEPT_ID=?,CEDING_COMPANY_ID=?,UW_YEAR=?,UW_MONTH=TO_DATE(?,'DD/MM/YYYY'),ACCOUNT_DATE=TO_DATE(?,'DD/MM/YYYY'),INCEPTION_DATE=TO_DATE(?,'DD/MM/YYYY'),EXPIRY_DATE=TO_DATE(?,'DD/MM/YYYY'),PROPOSAL_STATUS=?,ENTRY_DATE=SYSDATE,CONTRACT_STATUS=?,BROKER_ID=?,RETRO_TYPE=?,UPDATE_LOGIN_ID=?,RSK_DUMMY_CONTRACT=?,DATA_MAP_CONT_NO=?,Bouquet_Mode_YN=?,Bouquet_No=?,UW_YEAR_TO=? WHERE PROPOSAL_NO=? AND AMEND_ID=?
risk.update.mndInstallmentsData=UPDATE TTRN_MND_INSTALLMENTS SET CONTRACT_NO=?,LAYER_NO=?,INSTALLMENT_DATE=TO_DATE(?,'DD/MM/YYYY'),MND_PREMIUM_OC=?,MND_PREMIUM_DC=? WHERE INSTALLMENT_NO=? AND PROPOSAL_NO=? AND ENDORSEMENT_NO=?
risk.update.pro24ContSecPage=UPDATE TTRN_RISK_PROPOSAL SET RSK_LIMIT_OS_OC =?,RSK_LIMIT_OS_DC=?,RSK_EPI_OSOF_OC=?,RSK_EPI_OSOF_DC=?,RSK_EPI_OSOE_OC=?,RSK_EPI_OSOE_DC=?,RSK_XLCOST_OS_OC=?,RSK_XLCOST_OS_DC=?,RSK_PREMIUM_QUOTA_SHARE=?,RSK_PREMIUM_SURPULS=?,RSK_PREMIUM_QUOTA_SHARE_DC=?,RSK_PREMIUM_SURPLUS_DC=?,COMM_QS_AMT=?,COMM_SURPLUS_AMT=?,COMM_QS_AMT_DC=?,COMM_SURPLUS_AMT_DC=?  WHERE  RSK_ENDORSEMENT_NO=? AND RSK_PROPOSAL_NUMBER =?
risk.select.endo=SELECT  MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER \=? 
risk.update.pro35ContSecPage=UPDATE TTRN_RISK_PROPOSAL SET RSK_LIMIT_OS_OC \=?,RSK_LIMIT_OS_DC\=?,RSK_EPI_OSOF_OC\=?,RSK_EPI_OSOF_DC\=?,RSK_MD_PREM_OS_OC \=?,RSK_MD_PREM_OS_DC \=? WHERE  RSK_ENDORSEMENT_NO\=? AND RSK_PROPOSAL_NUMBER \=? AND RSK_LAYER_NO \=? 
risk.insert.retroCessDtls=INSERT INTO TTRN_RETRO_CESSIONARY (SNO, PROPOSAL_NO, CONTRACT_NO,CEDING_COMPANY_ID, BROKER_ID, SHARE_ACCEPTED,SHARE_SIGNED, COMISSION, PROPOSAL_STATUS,AMEND_ID,LAYER_NO,ENTRY_DATE,LOGIN_ID,BRANCH_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?)
risk.update.retroCessDtls=UPDATE TTRN_RETRO_CESSIONARY SET CONTRACT_NO=?,CEDING_COMPANY_ID=?, BROKER_ID=?, SHARE_ACCEPTED=?,SHARE_SIGNED=?, COMISSION=?, PROPOSAL_STATUS=?,LAYER_NO=? WHERE SNO=? AND PROPOSAL_NO=? AND AMEND_ID=?
risk.insert.pro24RskProposal=INSERT INTO TTRN_RISK_PROPOSAL(RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_LAYER_NO,RSK_LIMIT_OC,RSK_LIMIT_DC,RSK_EPI_OFFER_OC,RSK_EPI_OFFER_DC,RSK_EPI_ESTIMATE,RSK_EPI_EST_OC,RSK_EPI_EST_DC,RSK_XLCOST_OC,RSK_XLCOST_DC,RSK_CEDANT_RETENTION,RSK_SHARE_WRITTEN,RSK_SHARE_SIGNED,RSK_CEDRET_TYPE,RSK_SP_RETRO,RSK_NO_OF_INSURERS,RSK_MAX_LMT_COVER,RSK_LIMIT_OS_OC,RSK_LIMIT_OS_DC,RSK_EPI_OSOF_OC,RSK_EPI_OSOF_DC,RSK_EPI_OSOE_OC,RSK_EPI_OSOE_DC,RSK_XLCOST_OS_OC,RSK_XLCOST_OS_DC,LIMIT_PER_VESSEL_OC,LIMIT_PER_VESSEL_DC,LIMIT_PER_LOCATION_OC,LIMIT_PER_LOCATION_DC,RSK_TREATY_SURP_LIMIT_OC,RSK_TREATY_SURP_LIMIT_DC,RSK_TREATY_SURP_LIMIT_OS_OC,RSK_TREATY_SURP_LIMIT_OS_DC,SUB_CLASS,LOGIN_ID,BRANCH_CODE,SYS_DATE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)
risk.insert.pro35RskProposal=INSERT INTO TTRN_RISK_PROPOSAL(RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_LAYER_NO,RSK_LIMIT_OC,RSK_LIMIT_DC,RSK_XLPREM_OC,RSK_XLPREM_DC,RSK_DEDUC_OC,RSK_EPI_EST_OC,RSK_EPI_EST_DC,RSK_MD_PREM_OC,RSK_MD_PREM_DC,RSK_SHARE_WRITTEN,RSK_SHARE_SIGNED,RSK_ADJRATE,RSK_PF_COVERED,RSK_SUBJ_PREMIUM_OC,RSK_SUBJ_PREMIUM_DC,RSK_MAX_LMT_COVER,RSK_DEDUC_DC,RSK_SP_RETRO,RSK_NO_OF_INSURERS,RSK_LIMIT_OS_OC,RSK_LIMIT_OS_DC,RSK_EPI_OSOF_OC,RSK_EPI_OSOF_DC,RSK_MD_PREM_OS_OC,RSK_MD_PREM_OS_DC,LIMIT_PER_VESSEL_OC,LIMIT_PER_VESSEL_DC,LIMIT_PER_LOCATION_OC,LIMIT_PER_LOCATION_DC,EGPNI_AS_OFFER,OURASSESSMENT,EGPNI_AS_OFFER_DC,LOGIN_ID,BRANCH_CODE,SYS_DATE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)
risk.insert.pro2SecComm=INSERT INTO TTRN_RISK_COMMISSION(RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_LAYER_NO,RSK_BROKERAGE,RSK_TAX,RSK_PROFIT_COMM,RSK_RESERVE_ON_LOSS,RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,RSK_COMM_QUOTASHARE,RSK_COMM_SURPLUS,RSK_OVERRIDER_PERC,RSK_PREMIUM_RESERVE,RSK_LOSS_RESERVE,RSK_INTEREST,RSK_PF_INOUT_PREM,RSK_PF_INOUT_LOSS,RSK_LOSSADVICE,RSK_CASHLOSS_LMT_OC,RSK_CASHLOSS_LMT_DC,RSK_LEAD_UW,RSK_LEAD_UW_SHARE,RSK_ACCOUNTS,RSK_EXCLUSION,RSK_REMARKS,RSK_UW_RECOMM,RSK_GM_APPROVAL,RSK_DECISION,RSK_ENTRY_DATE,RSK_END_DATE,RSK_STATUS,RSK_OTHER_COST,RSK_CREASTA_STATUS,RSK_EVENT_LIMIT_OC,RSK_EVENT_LIMIT_DC,RSK_AGGREGATE_LIMIT_OC,RSK_AGGREGATE_LIMIT_DC,RSK_OCCURRENT_LIMIT_OC,RSK_OCCURRENT_LIMIT_DC,RSK_SLADSCALE_COMM,RSK_LOSS_PART_CARRIDOR,RSK_COMBIN_SUB_CLASS,SUB_CLASS,LOGIN_ID,BRANCH_CODE,SYS_DATE,RSK_LEAD_UNDERWRITER_COUNTRY,RSK_INCLUDE_ACQ_COST,RSK_OUR_ASS_ACQ_COST,RSK_OUR_ACQ_OUR_SHARE_OC,RSK_LOSS_COMBIN_SUB_CLASS,RSK_SLIDE_COMBIN_SUB_CLASS,RSK_CRESTA_COMBIN_SUB_CLASS,RSK_PRO_MANAGEMENT_EXP, RSK_PRO_COMM_TYPE, RSK_PRO_COMM_PER, RSK_PRO_SET_UP, RSK_PRO_SUP_PRO_COM, RSK_PRO_LOSS_CARY_TYPE, RSK_PRO_LOSS_CARY_YEAR, RSK_PRO_PROFIT_CARY_TYPE, RSK_PRO_PROFIT_CARY_YEAR, RSK_PRO_FIRST_PFO_COM, RSK_PRO_FIRST_PFO_COM_PRD, RSK_PRO_SUB_PFO_COM_PRD, RSK_PRO_SUB_PFO_COM, RSK_PRO_SUB_SEQ_CAL, RSK_PRO_NOTES,RSK_DOC_STATUS,RSK_RATE,RSK_PREMIUM_RES_TYPE,FPC_TYPE,FPC_FIXED_DATE,RSK_PORTFOLIO_TYPE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?)
risk.insert.pro3SecComm=INSERT INTO TTRN_RISK_COMMISSION(RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_LAYER_NO,RSK_BROKERAGE,RSK_TAX,RSK_PROFIT_COMM,RSK_RESERVE_ON_LOSS,RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,RSK_AGGREGATE_LIAB_OC,RSK_AGGREGATE_LIAB_DC,RSK_REINSTATE_NO,RSK_REINSTATE_ADDL_PREM_OC,RSK_REINSTATE_ADDL_PREM_DC,RSK_LEAD_UW,RSK_LEAD_UW_SHARE,RSK_ACCOUNTS,RSK_EXCLUSION,RSK_REMARKS,RSK_UW_RECOMM,RSK_GM_APPROVAL,RSK_DECISION,RSK_ENTRY_DATE,RSK_END_DATE,RSK_STATUS,RSK_OTHER_COST,RSK_REINSTATE_ADDL_PREM_PCT,RSK_BURNING_COST_PCT,RSK_AGGREGATE_deduct_OC,RSK_AGGREGATE_deduct_DC,RSK_OCCURRENT_LIMIT_OC,RSK_OCCURRENT_LIMIT_DC,RSK_REINSTATEMENT_PREMIUM,RSK_CREASTA_STATUS,RSK_LEAD_UNDERWRITER_COUNTRY,LOGIN_ID,BRANCH_CODE,SYS_DATE,RSK_DOC_STATUS,RSK_NOCLAIMBONUS_PRCENT,RSK_BONUS_ID) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?)
risk.insert.pro4SecComm=INSERT INTO TTRN_RISK_COMMISSION(RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_LAYER_NO,RSK_BROKERAGE,RSK_TAX,RSK_PROFIT_COMM,RSK_RESERVE_ON_LOSS,RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,RSK_COMM_QUOTASHARE,RSK_COMM_SURPLUS,RSK_OVERRIDER_PERC,RSK_PREMIUM_RESERVE,RSK_LOSS_RESERVE,RSK_INTEREST,RSK_PF_INOUT_PREM,RSK_PF_INOUT_LOSS,RSK_LOSSADVICE,RSK_CASHLOSS_LMT_OC,RSK_CASHLOSS_LMT_DC,RSK_LEAD_UW,RSK_LEAD_UW_SHARE,RSK_ACCOUNTS,RSK_EXCLUSION,RSK_REMARKS,RSK_UW_RECOMM,RSK_GM_APPROVAL,RSK_DECISION,RSK_ENTRY_DATE,RSK_END_DATE,RSK_STATUS,RSK_OTHER_COST,RSK_CREASTA_STATUS,RSK_EVENT_LIMIT_OC,RSK_EVENT_LIMIT_DC,RSK_AGGREGATE_LIMIT_OC,RSK_AGGREGATE_LIMIT_DC,RSK_OCCURRENT_LIMIT_OC,RSK_OCCURRENT_LIMIT_DC,RSK_SLADSCALE_COMM,RSK_LOSS_PART_CARRIDOR,RSK_COMBIN_SUB_CLASS,SUB_CLASS,LOGIN_ID,BRANCH_CODE,SYS_DATE,RSK_LEAD_UNDERWRITER_COUNTRY,RSK_INCLUDE_ACQ_COST,RSK_OUR_ASS_ACQ_COST,RSK_OUR_ACQ_OUR_SHARE_OC,RSK_LOSS_COMBIN_SUB_CLASS,RSK_SLIDE_COMBIN_SUB_CLASS,RSK_CRESTA_COMBIN_SUB_CLASS,RSK_PRO_MANAGEMENT_EXP, RSK_PRO_COMM_TYPE, RSK_PRO_COMM_PER, RSK_PRO_SET_UP, RSK_PRO_SUP_PRO_COM, RSK_PRO_LOSS_CARY_TYPE, RSK_PRO_LOSS_CARY_YEAR, RSK_PRO_PROFIT_CARY_TYPE, RSK_PRO_PROFIT_CARY_YEAR, RSK_PRO_FIRST_PFO_COM, RSK_PRO_FIRST_PFO_COM_PRD, RSK_PRO_SUB_PFO_COM_PRD, RSK_PRO_SUB_PFO_COM, RSK_PRO_SUB_SEQ_CAL, RSK_PRO_NOTES,RSK_DOC_STATUS,RSK_COMMISSION_QS_YN,RSK_COMMISSION_SUR_YN,RSK_OVERRIDE_YN,RSK_BROKARAGE_YN,RSK_TAX_YN,RSK_OTHER_COST_YN,RSK_CEED_ODI_YN,RSK_RATE,RSK_COMMISSION_TYPE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
#risk.insert.pro5SecComm=INSERT INTO TTRN_RISK_COMMISSION (RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_LAYER_NO,RSK_REINSTATE_NO,RSK_REINSTATE_ADDL_PREM_PCT,RSK_BURNING_COST_PCT,RSK_REMARKS,RSK_ENTRY_DATE,RSK_END_DATE,LOGIN_ID,BRANCH_CODE,SYS_DATE,RSK_DOC_STATUS) VALUES(?,?,?,?,?,?,?,SYSDATE,SYSDATE,?,?,SYSDATE,?)
risk.insert.pro5SecComm=INSERT INTO TTRN_RISK_COMMISSION(RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_LAYER_NO,RSK_BROKERAGE,RSK_TAX,RSK_PROFIT_COMM,RSK_RESERVE_ON_LOSS,RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,RSK_AGGREGATE_LIAB_OC,RSK_AGGREGATE_LIAB_DC,RSK_REINSTATE_NO,RSK_REINSTATE_ADDL_PREM_OC,RSK_REINSTATE_ADDL_PREM_DC,RSK_LEAD_UW,RSK_LEAD_UW_SHARE,RSK_ACCOUNTS,RSK_EXCLUSION,RSK_REMARKS,RSK_UW_RECOMM,RSK_GM_APPROVAL,RSK_DECISION,RSK_ENTRY_DATE,RSK_END_DATE,RSK_STATUS,RSK_OTHER_COST,RSK_REINSTATE_ADDL_PREM_PCT,RSK_BURNING_COST_PCT,RSK_AGGREGATE_deduct_OC,RSK_AGGREGATE_deduct_DC,RSK_OCCURRENT_LIMIT_OC,RSK_OCCURRENT_LIMIT_DC,RSK_REINSTATEMENT_PREMIUM,RSK_CREASTA_STATUS,RSK_LEAD_UNDERWRITER_COUNTRY,LOGIN_ID,BRANCH_CODE,SYS_DATE,RSK_DOC_STATUS,RSK_NOCLAIMBONUS_PRCENT,RSK_BONUS_ID) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?)
risk.insert.isAmendIDProTreaty=INSERT INTO TTRN_RISK_DETAILS(RSK_PROPOSAL_NUMBER, RSK_ENDORSEMENT_NO, RSK_LAYER_NO, RSK_PRODUCTID,RSK_DEPTID, RSK_PFCID, RSK_SPFCID, RSK_POLBRANCH, RSK_CEDINGID,RSK_BROKERID, RSK_TREATYID, RSK_MONTH, RSK_UWYEAR, RSK_UNDERWRITTER,RSK_INCEPTION_DATE, RSK_EXPIRY_DATE, RSK_ACCOUNT_DATE, RSK_ORIGINAL_CURR, RSK_EXCHANGE_RATE,RSK_BASIS, RSK_PERIOD_OF_NOTICE, RSK_RISK_COVERED, RSK_TERRITORY_SCOPE, RSK_TERRITORY,RSK_ENTRY_DATE, RSK_END_DATE, RSK_STATUS,RSK_REMARKS,RSK_CONTRACT_NO,RSK_PROPOSAL_TYPE,RSK_ACCOUNTING_PERIOD,RSK_RECEIPT_STATEMENT,RSK_RECEIPT_PAYEMENT,MND_INSTALLMENTS,RETRO_CESSIONARIES,RSK_RETRO_TYPE,RSK_INSURED_NAME,OLD_CONTRACTNO,INWARD_BUS_TYPE,TREATYTYPE,RSK_BUSINESS_TYPE,RSK_EXCHANGE_TYPE,RSK_PERILS_COVERED,RSK_LOC_ISSUED,RSK_UMBRELLA_XL,LOGIN_ID,BRANCH_CODE,SYS_DATE,COUNTRIES_INCLUDE,COUNTRIES_EXCLUDE,RSK_NO_OF_LINE,RS_ENDORSEMENT_TYPE,RSK_RUN_OFF_YEAR,RSK_LOC_BNK_NAME,RSK_LOC_CRDT_PRD,RSK_LOC_CRDT_AMT,RSK_LOC_BENFCRE_NAME,RSK_CESSION_EXG_RATE,RSK_FIXED_RATE,RETENTIONYN,RSK_ACCOUNT_PERIOD_NOTICE,RSK_STATEMENT_CONFIRM) VALUES (?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD-MM-YYYY'),?,?,TO_DATE(?,'DD-MM-YYYY'),TO_DATE(?,'DD-MM-YYYY'),TO_DATE(?,'DD-MM-YYYY'),?,?,?,?,?,?,?,SYSDATE,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
risk.insert.instalPrem=INSERT INTO TTRN_MND_INSTALLMENTS(INSTALLMENT_NO,PROPOSAL_NO,CONTRACT_NO,LAYER_NO,ENDORSEMENT_NO,INSTALLMENT_DATE,MND_PREMIUM_OC,MND_PREMIUM_DC,STATUS,ENTRY_DATE,PAYEMENT_DUE_DAY,LOGIN_ID,BRANCH_CODE) VALUES (?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,'Y',SYSDATE,?,?,?)
risk.insert.positionMaster=INSERT INTO POSITION_MASTER(PROPOSAL_NO,CONTRACT_NO,AMEND_ID,LAYER_NO,REINSURANCE_ID,PRODUCT_ID,DEPT_ID,CEDING_COMPANY_ID,UW_YEAR,UW_MONTH,ACCOUNT_DATE,INCEPTION_DATE,EXPIRY_DATE,PROPOSAL_STATUS,ENTRY_DATE,CONTRACT_STATUS,LOGIN_ID,BASE_LAYER,OLD_CONTRACTNO,RENEWAL_STATUS,BROKER_ID,BRANCH_CODE,RETRO_TYPE,UPDATE_LOGIN_ID,ENDT_STATUS,RSK_DUMMY_CONTRACT,DATA_MAP_CONT_NO,Bouquet_Mode_YN,Bouquet_No,UW_YEAR_TO,SECTION_NO) VALUES(?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

##Riskdetils Query
risk.select.getDtlName=SELECT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID='6' AND STATUS='Y' AND CATEGORY_DETAIL_ID=?
risk.select.maxRskStatus=SELECT RD.RSK_STATUS FROM TTRN_RISK_DETAILS RD WHERE RD.RSK_PROPOSAL_NUMBER=? AND RD.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER)
risk.select.getRskProNO=SELECT NVL(RSK_PROPOSAL_NUMBER,'') FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER = ?
risk.select.getInstNo=SELECT COUNT(1) CNT FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO = ? AND INSTALLMENT_NO=?  AND ENDORSEMENT_NO=?
risk.select.getGetRetroCnt=SELECT COUNT(1) CNT FROM TTRN_INSURER_DETAILS WHERE PROPOSAL_NO = ? AND INSURER_NO=?  AND ENDORSEMENT_NO=?
risk.select.getRetroCessCnt=SELECT COUNT(1) CNT FROM TTRN_RETRO_CESSIONARY WHERE PROPOSAL_NO = ? AND SNO=?  AND AMEND_ID=?
risk.select.getMaxRskProNO=SELECT MAX(TO_NUMBER(RSK_PROPOSAL_NUMBER)) FROM TTRN_RISK_DETAILS
risk.select.getNextRskProNO=SELECT MAX(TO_NUMBER(RSK_PROPOSAL_NUMBER)+1) FROM TTRN_RISK_DETAILS
risk.select.getRetroCessDtls=SELECT A.SNO,A.CEDING_COMPANY_ID,A.BROKER_ID,A.SHARE_ACCEPTED,A.SHARE_SIGNED,A.COMISSION,A.PROPOSAL_STATUS FROM TTRN_RETRO_CESSIONARY A WHERE AMEND_ID = (SELECT MAX (AMEND_ID) FROM  TTRN_RETRO_CESSIONARY WHERE  A.PROPOSAL_NO = PROPOSAL_NO AND A.SNO=SNO) AND A.PROPOSAL_NO=? AND A.SNO BETWEEN 0 AND ? ORDER BY SNO
risk.select.viewRetroCessDtls=SELECT A.SNO,A.CEDING_COMPANY_ID,A.BROKER_ID,A.SHARE_ACCEPTED,A.SHARE_SIGNED,A.COMISSION,A.PROPOSAL_STATUS FROM TTRN_RETRO_CESSIONARY A WHERE AMEND_ID = ? AND A.PROPOSAL_NO=? AND A.SNO BETWEEN 0 AND ? ORDER BY SNO
risk.select.getMaxEndorseNo=SELECT NVL(MAX(RSK_ENDORSEMENT_NO),'0') FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER=?
GET_MAX_AMEND_RISK_PROPOSAL=SELECT NVL(MAX(RSK_ENDORSEMENT_NO),'0') FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=?
##risk.select.getMaxProNo=SELECT MAX(PROPOSAL_NO) FROM POLICY_NO_GENERATION WHERE PRODUCT_ID=? AND BRANCH_CODE=?
risk.select.getRskStatus=SELECT RSK_STATUS FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER=?
##risk.select.getEditModeData=SELECT DE.RSK_PROPOSAL_NUMBER, DE.RSK_ENDORSEMENT_NO, DE.RSK_CONTRACT_NO, DE.RSK_LAYER_NO,RSK_PRODUCTID,RSK_DEPTID,RSK_PFCID, RSK_SPFCID , DE.RSK_POLBRANCH, DE.RSK_CEDINGID, DE.RSK_BROKERID, DE.RSK_TREATYID, TO_CHAR(DE.RSK_MONTH,'DD/MM/YYYY') RSK_MONTH, DE.RSK_UWYEAR, DE.RSK_UNDERWRITTER,TO_CHAR(DE.RSK_INCEPTION_DATE,'DD/MM/YYYY') RSK_INCEPTION_DATE,TO_CHAR(DE.RSK_EXPIRY_DATE,'DD/MM/YYYY') RSK_EXPIRY_DATE,TO_CHAR(DE.RSK_ACCOUNT_DATE,'DD/MM/YYYY') RSK_ACCOUNT_DATE, DE.RSK_ORIGINAL_CURR, DE.RSK_EXCHANGE_RATE,DE.RSK_BASIS, DE.RSK_PERIOD_OF_NOTICE, DE. RSK_RISK_COVERED, DE. RSK_TERRITORY_SCOPE, DE.RSK_TERRITORY,DE.RSK_ENTRY_DATE, DE. RSK_END_DATE, DE. RSK_STATUS, DE.RSK_REMARKS,PR.RSK_LIMIT_OC,PR.RSK_EPI_OFFER_OC,PR.RSK_EPI_ESTIMATE,PR.RSK_EPI_EST_OC,PR.RSK_XLCOST_OC,PR.RSK_CEDANT_RETENTION,PR.RSK_SHARE_WRITTEN,PR.RSK_SHARE_SIGNED,DE.RSK_PROPOSAL_TYPE,DE.RSK_ACCOUNTING_PERIOD,DE.RSK_RECEIPT_STATEMENT,DE.RSK_RECEIPT_PAYEMENT,DE.RETRO_CESSIONARIES,PR.RSK_CEDRET_TYPE,PR.RSK_SP_RETRO,PR.RSK_NO_OF_INSURERS,PR.RSK_MAX_LMT_COVER,DE.RSK_RETRO_TYPE,DE.RSK_INSURED_NAME,DE.OLD_CONTRACTNO,PM.LOGIN_ID,PR.LIMIT_PER_VESSEL_OC,PR.LIMIT_PER_VESSEL_DC,PR.LIMIT_PER_LOCATION_OC,PR.LIMIT_PER_LOCATION_DC FROM TTRN_RISK_DETAILS DE,TTRN_RISK_PROPOSAL PR,POSITION_MASTER PM
risk.select.getEditModeData= SELECT DE.RSK_PROPOSAL_NUMBER, DE.RSK_ENDORSEMENT_NO, DE.RSK_CONTRACT_NO, DE.RSK_LAYER_NO,RSK_PRODUCTID,RSK_DEPTID,RSK_PFCID, RSK_SPFCID , DE.RSK_POLBRANCH, DE.RSK_CEDINGID, DE.RSK_BROKERID, DE.RSK_TREATYID, TO_CHAR(DE.RSK_MONTH,'DD/MM/YYYY') RSK_MONTH, DE.RSK_UWYEAR, DE.RSK_UNDERWRITTER,TO_CHAR(DE.RSK_INCEPTION_DATE,'DD/MM/YYYY') RSK_INCEPTION_DATE,TO_CHAR(DE.RSK_EXPIRY_DATE,'DD/MM/YYYY') RSK_EXPIRY_DATE,TO_CHAR(DE.RSK_ACCOUNT_DATE,'DD/MM/YYYY') RSK_ACCOUNT_DATE, DE.RSK_ORIGINAL_CURR, DE.RSK_EXCHANGE_RATE,DE.RSK_BASIS, DE.RSK_PERIOD_OF_NOTICE, DE. RSK_RISK_COVERED, DE. RSK_TERRITORY_SCOPE, DE.RSK_TERRITORY,DE.RSK_ENTRY_DATE, DE. RSK_END_DATE, DE. RSK_STATUS, DE.RSK_REMARKS,PR.RSK_LIMIT_OC,PR.RSK_EPI_OFFER_OC,PR.RSK_EPI_ESTIMATE,PR.RSK_EPI_EST_OC,PR.RSK_XLCOST_OC,PR.RSK_CEDANT_RETENTION,PR.RSK_SHARE_WRITTEN,PR.RSK_SHARE_SIGNED,DE.RSK_PROPOSAL_TYPE,DE.RSK_ACCOUNTING_PERIOD,DE.RSK_RECEIPT_STATEMENT,DE.RSK_RECEIPT_PAYEMENT,DE.RETRO_CESSIONARIES,PR.RSK_CEDRET_TYPE,PR.RSK_SP_RETRO,PR.RSK_NO_OF_INSURERS,PR.RSK_MAX_LMT_COVER,DE.RSK_RETRO_TYPE,DE.RSK_INSURED_NAME,DE.OLD_CONTRACTNO,PM.LOGIN_ID,PR.LIMIT_PER_VESSEL_OC,PR.LIMIT_PER_VESSEL_DC,PR.LIMIT_PER_LOCATION_OC,PR.LIMIT_PER_LOCATION_DC,DE.INWARD_BUS_TYPE,DE.TREATYTYPE,PR.RSK_TREATY_SURP_LIMIT_OC,PR.RSK_TRTY_LMT_PML_OC,PR.RSK_TRTY_LMT_SUR_PML_OC,PR.RSK_TRTY_LMT_OURASS_PML_OC,PR.RSK_TREATY_SURP_LIMIT_DC,DE.COUNTRIES_INCLUDE,DE.COUNTRIES_EXCLUDE,DE.RSK_NO_OF_LINE,PR.RSK_PML,PR.RSK_PML_PERCENT,DE.RSK_PERILS_COVERED,DE.RSK_LOC_ISSUED, DE.RS_ENDORSEMENT_TYPE,DE.RSK_RUN_OFF_YEAR,DE.RSK_LOC_BNK_NAME,DE.RSK_LOC_CRDT_PRD,DE.RSK_LOC_CRDT_AMT,DE.RSK_LOC_BENFCRE_NAME,PM.BASE_LAYER,DE.RSK_CESSION_EXG_RATE,DE.RSK_FIXED_RATE,PM.RSK_DUMMY_CONTRACT,DE.RETENTIONYN,PM.DATA_MAP_CONT_NO,PM.Bouquet_Mode_YN,PM.Bouquet_No,PM.UW_YEAR_TO,PR.RISK_DET_YN,PR.BROKER_DET_YN,PR.COVER_DET_YN,PR.PREMIUM_DET_YN,PR.ACQCOST_DET_YN,PR.COMM_DET_YN,PR.DEPOSIT_DET_YN,PR.LOSS_DET_YN,PR.DOC_DET_YN,PR.PAYMENT_PARTNER,PM.SECTION_NO,PR.QUOTESHARE_PERCENT,DE.RSK_ACCOUNT_PERIOD_NOTICE,DE.RSK_STATEMENT_CONFIRM FROM TTRN_RISK_DETAILS DE,TTRN_RISK_PROPOSAL PR,POSITION_MASTER PM
risk.select.getEditModeContCond=WHERE DE.RSK_CONTRACT_NO=? AND DE.RSK_PROPOSAL_NUMBER=PR.RSK_PROPOSAL_NUMBER AND DE.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=?) AND PR.RSK_ENDORSEMENT_NO=(SELECT MAX(B.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL B, TTRN_RISK_DETAILS A WHERE A.RSK_CONTRACT_NO=? AND A.RSK_PROPOSAL_NUMBER=B.RSK_PROPOSAL_NUMBER ) AND PM.PROPOSAL_NO=DE.RSK_PROPOSAL_NUMBER AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO=PM.PROPOSAL_NO)
risk.select.getEditModeProCond=WHERE DE.RSK_PROPOSAL_NUMBER=? AND DE.RSK_PROPOSAL_NUMBER=PR.RSK_PROPOSAL_NUMBER AND DE.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER=?) AND PR.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=?) AND PM.PROPOSAL_NO=DE.RSK_PROPOSAL_NUMBER AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO=PM.PROPOSAL_NO)
UPDATE_RISK_PROPOSAL_DETAILS=UPDATE TTRN_RISK_PROPOSAL SET RSK_EVENT_LIMIT_OC=?,RSK_EVENT_LIMIT_DC=?,RSK_EVENT_LIMIT_OS_OC=?,RSK_EVENT_LIMIT_OS_DC=?,RSK_COVER_LIMIT_UXL_OC=?,RSK_COVER_LIMIT_UXL_DC=?,RSK_COVER_LIMIT_UXL_OS_OC=?,RSK_COVER_LIMIT_UXL_OS_DC=?,RSK_DEDUCTABLE_UXL_OC=?,RSK_DEDUCTABLE_UXL_DC=?,RSK_DEDUCTABLE_UXL_OS_OC=?,RSK_DEDUCTABLE_UXL_OS_DC=?,RSK_PML=?,RSK_PML_PERCENT=?,RSK_EGNPI_PML_OC=?,RSK_EGNPI_PML_DC=?,RSK_EGNPI_PML_OS_OC=?,RSK_EGNPI_PML_OS_DC=?,RSK_PREMIUM_BASIS=?,RSK_MINIMUM_RATE=?,RSK_MAXIIMUM_RATE=?,RSK_BURNING_COST_LF=?,RSK_MINIMUM_PREMIUM_OC=?,RSK_MINIMUM_PREMIUM_DC=?,RSK_MINIMUM_PREMIUM_OS_OC=?,RSK_MINIMUM_PREMIUM_OS_DC=?,RSK_PAYMENT_DUE_DAYS=?,RSK_TRTY_LMT_PML_OC=?,RSK_TRTY_LMT_PML_DC=?,RSK_TRTY_LMT_PML_OS_OC=?,RSK_TRTY_LMT_PML_OS_DC=?,RSK_TRTY_LMT_SUR_PML_OC=?,RSK_TRTY_LMT_SUR_PML_DC=?,RSK_TRTY_LMT_SUR_PML_OS_OC=?,RSK_TRTY_LMT_SUR_PML_OS_DC=?,RSK_TRTY_LMT_OURASS_PML_OC=?,RSK_TRTY_LMT_OURASS_PML_DC=?,RSK_TRTY_LMT_OURASS_PML_OS_OC=?,RSK_TRTY_LMTOUR_ASS_PML_OS_DC=?,RISK_DET_YN=?,BROKER_DET_YN=?,COVER_DET_YN=?,PREMIUM_DET_YN=?,ACQCOST_DET_YN=?,COMM_DET_YN=?,DEPOSIT_DET_YN=?,LOSS_DET_YN=?,DOC_DET_YN=?,PAYMENT_PARTNER=?,INTALL_DET_YN=?,REINST_DET_YN=?,RATE_ON_LINE=?,QUOTESHARE_PERCENT=? WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO=?
#####risk.select.getEditModeDataPro3=SELECT DE.RSK_PROPOSAL_NUMBER, DE.RSK_ENDORSEMENT_NO, DE.RSK_CONTRACT_NO, DE.RSK_LAYER_NO,RSK_PRODUCTID,RSK_DEPTID,RSK_PFCID, RSK_SPFCID,DE.RSK_POLBRANCH, DE.RSK_CEDINGID,DE.RSK_BROKERID, DE.RSK_TREATYID,TO_CHAR(DE.RSK_MONTH,'DD/MM/YYYY') RSK_MONTH, DE.RSK_UWYEAR, DE.RSK_UNDERWRITTER,TO_CHAR(DE.RSK_INCEPTION_DATE,'DD/MM/YYYY') RSK_INCEPTION_DATE,TO_CHAR(DE.RSK_EXPIRY_DATE,'DD/MM/YYYY') RSK_EXPIRY_DATE,TO_CHAR(DE.RSK_ACCOUNT_DATE,'DD/MM/YYYY') RSK_ACCOUNT_DATE, DE.RSK_ORIGINAL_CURR, DE.RSK_EXCHANGE_RATE,DE.RSK_BASIS, DE.RSK_TERRITORY_SCOPE,DE.RSK_TERRITORY,DE.RSK_STATUS,PR.RSK_LIMIT_OC,PR.RSK_EPI_EST_OC,PR.RSK_SHARE_WRITTEN,PR.RSK_SHARE_SIGNED,PR. RSK_MAX_LMT_COVER,PR.RSK_SUBJ_PREMIUM_OC,PR.RSK_XLPREM_OC ,PR.RSK_DEDUC_OC,RSK_MD_PREM_OC , RSK_ADJRATE ,RSK_PF_COVERED,DE.RSK_PROPOSAL_TYPE,DE.RSK_ACCOUNTING_PERIOD,DE.MND_INSTALLMENTS,DE.RETRO_CESSIONARIES,PR.RSK_SP_RETRO,PR.RSK_NO_OF_INSURERS,DE.OLD_CONTRACTNO,PM.LOGIN_ID,PR.LIMIT_PER_VESSEL_OC,PR.LIMIT_PER_VESSEL_DC,PR.LIMIT_PER_LOCATION_OC,PR.LIMIT_PER_LOCATION_DC FROM TTRN_RISK_DETAILS DE,TTRN_RISK_PROPOSAL PR,POSITION_MASTER PM
risk.select.getEditModeDataPro3=SELECT DE.RSK_PROPOSAL_NUMBER, DE.RSK_ENDORSEMENT_NO, DE.RSK_CONTRACT_NO, DE.RSK_LAYER_NO,RSK_PRODUCTID,RSK_DEPTID,RSK_PFCID, RSK_SPFCID,DE.RSK_POLBRANCH, DE.RSK_CEDINGID,DE.RSK_BROKERID, DE.RSK_TREATYID,TO_CHAR(DE.RSK_MONTH,'DD/MM/YYYY') RSK_MONTH, DE.RSK_UWYEAR, DE.RSK_UNDERWRITTER,TO_CHAR(DE.RSK_INCEPTION_DATE,'DD/MM/YYYY') RSK_INCEPTION_DATE,TO_CHAR(DE.RSK_EXPIRY_DATE,'DD/MM/YYYY') RSK_EXPIRY_DATE,TO_CHAR(DE.RSK_ACCOUNT_DATE,'DD/MM/YYYY') RSK_ACCOUNT_DATE, DE.RSK_ORIGINAL_CURR, DE.RSK_EXCHANGE_RATE,DE.RSK_BASIS, DE.RSK_TERRITORY_SCOPE,DE.RSK_TERRITORY,DE.RSK_STATUS,PR.RSK_LIMIT_OC,PR.RSK_EPI_EST_OC,PR.RSK_SHARE_WRITTEN,PR.RSK_SHARE_SIGNED,PR. RSK_MAX_LMT_COVER,PR.RSK_SUBJ_PREMIUM_OC,PR.RSK_XLPREM_OC ,PR.RSK_DEDUC_OC,RSK_MD_PREM_OC , RSK_ADJRATE ,RSK_PF_COVERED,DE.RSK_PROPOSAL_TYPE,DE.RSK_ACCOUNTING_PERIOD,DE.MND_INSTALLMENTS,DE.RETRO_CESSIONARIES,PR.RSK_SP_RETRO,PR.RSK_NO_OF_INSURERS,DE.OLD_CONTRACTNO,PM.LOGIN_ID,PR.LIMIT_PER_VESSEL_OC,PR.LIMIT_PER_VESSEL_DC,PR.LIMIT_PER_LOCATION_OC,PR.LIMIT_PER_LOCATION_DC,EGPNI_AS_OFFER,OURASSESSMENT,DE.INWARD_BUS_TYPE,DE.RSK_BUSINESS_TYPE,DE.RSK_EXCHANGE_TYPE,DE.RSK_PERILS_COVERED,DE.RSK_LOC_ISSUED,DE.RSK_UMBRELLA_XL,PR.RSK_EVENT_LIMIT_OC,PR.RSK_COVER_LIMIT_UXL_OC,PR.RSK_DEDUCTABLE_UXL_OC,PR.RSK_PML,PR.RSK_PML_PERCENT,PR.RSK_EGNPI_PML_OC,PR.RSK_PREMIUM_BASIS,PR.RSK_MINIMUM_RATE,PR.RSK_MAXIIMUM_RATE,PR.RSK_BURNING_COST_LF,PR.RSK_MINIMUM_PREMIUM_OC,PR.RSK_PAYMENT_DUE_DAYS,PR.RSK_TRTY_LMT_PML_OC,PR.RSK_TRTY_LMT_SUR_PML_OC,PR.RSK_TRTY_LMT_OURASS_PML_OC,DE.COUNTRIES_INCLUDE,DE.COUNTRIES_EXCLUDE,DE.RS_ENDORSEMENT_TYPE,DE.RSK_LOC_BNK_NAME,DE.RSK_LOC_CRDT_PRD,DE.RSK_LOC_CRDT_AMT,DE.RSK_LOC_BENFCRE_NAME,PR.RSK_MINIMUM_PREMIUM_OC,PR.RSK_MINIMUM_PREMIUM_DC,PR.RSK_MINIMUM_PREMIUM_OS_OC,PR.RSK_MINIMUM_PREMIUM_OS_DC,PR.RSK_COVER_LIMIT_UXL_OC,PR.RSK_COVER_LIMIT_UXL_DC,PR.RSK_COVER_LIMIT_UXL_OS_OC,PR.RSK_COVER_LIMIT_UXL_OS_DC,PR.RSK_DEDUCTABLE_UXL_OC,PR.RSK_DEDUCTABLE_UXL_DC,PR.RSK_DEDUCTABLE_UXL_OS_OC,PR.RSK_DEDUCTABLE_UXL_OS_DC,PM.BASE_LAYER,PM.DATA_MAP_CONT_NO,PM.Bouquet_Mode_YN,PM.Bouquet_No,PM.UW_YEAR_TO,PR.PAYMENT_PARTNER,PR.RATE_ON_LINE,PR.INTALL_DET_YN,PR.ACQCOST_DET_YN,PR.REINST_DET_YN,PR.RISK_DET_YN,PR.BROKER_DET_YN,PR.PREMIUM_DET_YN FROM TTRN_RISK_DETAILS DE,TTRN_RISK_PROPOSAL PR,POSITION_MASTER PM
risk.select.getEditModeDataPro3ContCond=WHERE DE.RSK_CONTRACT_NO=? AND DE.RSK_PROPOSAL_NUMBER=PR.RSK_PROPOSAL_NUMBER AND DE.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=?) AND PR.RSK_ENDORSEMENT_NO=(SELECT MAX(B.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL B, TTRN_RISK_DETAILS A WHERE A.RSK_CONTRACT_NO=? AND A.RSK_PROPOSAL_NUMBER=B.RSK_PROPOSAL_NUMBER ) AND PM.PROPOSAL_NO=DE.RSK_PROPOSAL_NUMBER AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM position_master WHERE PROPOSAL_NO=PM.PROPOSAL_NO)
risk.select.getEditModeDataPro3ProCond=WHERE DE.RSK_PROPOSAL_NUMBER=? AND DE.RSK_PROPOSAL_NUMBER=PR.RSK_PROPOSAL_NUMBER AND DE.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER=?) AND PR.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL  WHERE RSK_PROPOSAL_NUMBER=?) AND PM.PROPOSAL_NO=DE.RSK_PROPOSAL_NUMBER AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM position_master WHERE PROPOSAL_NO=PM.PROPOSAL_NO)
risk.select.getQuotaShare=SELECT RP.RSK_PREMIUM_QUOTA_SHARE,RP.RSK_PREMIUM_SURPULS,RP.RSK_XLCOST_OS_OC FROM TTRN_RISK_PROPOSAL RP WHERE  RP.RSK_PROPOSAL_NUMBER=? AND  RP.RSK_PREMIUM_QUOTA_SHARE IS NOT NULL AND RP.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=RP.RSK_PROPOSAL_NUMBER AND RSK_PREMIUM_QUOTA_SHARE IS NOT NULL )
risk.select.getEditModeSecPageData=SELECT PR.RSK_LIMIT_OS_OC,PR.RSK_LIMIT_OS_DC,PR.RSK_EPI_OSOF_OC,PR.RSK_EPI_OSOF_DC,PR.RSK_EPI_OSOE_OC,PR.RSK_EPI_OSOE_DC,PR.RSK_XLCOST_OS_OC,PR.RSK_XLCOST_OS_DC,COM.RSK_COMM_QUOTASHARE,COM.RSK_COMM_SURPLUS,COM.RSK_OVERRIDER_PERC,COM.RSK_BROKERAGE,COM.RSK_TAX,COM.RSK_ACQUISTION_COST_OC,COM.RSK_PROFIT_COMM,COM.RSK_COMBIN_SUB_CLASS,COM.RSK_PREMIUM_RESERVE,COM.RSK_LOSS_RESERVE,COM.RSK_INTEREST,COM.RSK_CASHLOSS_LMT_OC,COM.RSK_PF_INOUT_PREM,COM.RSK_PF_INOUT_LOSS,COM.RSK_LOSSADVICE,COM.RSK_LEAD_UW,COM.RSK_LEAD_UW_SHARE,COM.RSK_ACCOUNTS,COM.RSK_EXCLUSION,COM.RSK_REMARKS,COM.RSK_UW_RECOMM,COM.RSK_GM_APPROVAL,COM.RSK_SLADSCALE_COMM,COM.RSK_LOSS_PART_CARRIDOR,com.RSK_COMBIN_SUB_CLASS,PR.RSK_PREMIUM_QUOTA_SHARE,PR.RSK_PREMIUM_SURPULS,COM.RSK_OTHER_COST,COM.RSK_CREASTA_STATUS,COM.RSK_EVENT_LIMIT_OC,COM.RSK_EVENT_LIMIT_DC,COM.RSK_AGGREGATE_LIMIT_OC,COM.RSK_AGGREGATE_LIMIT_DC,COM.RSK_OCCURRENT_LIMIT_OC,COM.RSK_OCCURRENT_LIMIT_DC,COM.RSK_LEAD_UNDERWRITER_COUNTRY,COM.RSK_INCLUDE_ACQ_COST,COM.RSK_OUR_ASS_ACQ_COST,COM.RSK_OUR_ACQ_OUR_SHARE_OC,COM.RSK_LOSS_COMBIN_SUB_CLASS,COM.RSK_SLIDE_COMBIN_SUB_CLASS,COM.RSK_CRESTA_COMBIN_SUB_CLASS,COM.RSK_PRO_MANAGEMENT_EXP, COM.RSK_PRO_COMM_TYPE, COM.RSK_PRO_COMM_PER, COM.RSK_PRO_SET_UP, COM.RSK_PRO_SUP_PRO_COM, COM.RSK_PRO_LOSS_CARY_TYPE, COM.RSK_PRO_LOSS_CARY_YEAR, COM.RSK_PRO_PROFIT_CARY_TYPE, COM.RSK_PRO_PROFIT_CARY_YEAR, COM.RSK_PRO_FIRST_PFO_COM, COM.RSK_PRO_FIRST_PFO_COM_PRD, COM.RSK_PRO_SUB_PFO_COM_PRD, COM.RSK_PRO_SUB_PFO_COM, COM.RSK_PRO_SUB_SEQ_CAL, COM.RSK_PRO_NOTES,COM.RSK_COMMISSION_QS_YN,COM.RSK_NOCLAIMBONUS_PRCENT,COM.RSK_BONUS_ID,COM.RSK_COMMISSION_SUR_YN,COM.RSK_OVERRIDE_YN,COM.RSK_BROKARAGE_YN,COM.RSK_TAX_YN,COM.RSK_OTHER_COST_YN,COM.RSK_CEED_ODI_YN,COM.RSK_RATE,COM.RSK_COMMISSION_TYPE,COM.RSK_PREMIUM_RES_TYPE,COM.RSK_PORTFOLIO_TYPE,COM.FPC_TYPE,TO_CHAR(COM.FPC_FIXED_DATE,'DD/MM/YYYY')FPC_FIXED_DATE,COM.RSK_PORTFOLIO_TYPE FROM TTRN_RISK_PROPOSAL PR,TTRN_RISK_COMMISSION COM WHERE PR.RSK_PROPOSAL_NUMBER \=? AND PR.RSK_PROPOSAL_NUMBER\=COM.RSK_PROPOSAL_NUMBER AND PR.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER\=?) AND COM.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER\=?)
RISK_SELECT_COMM_GETQUOTASHARE = SELECT RP.COMM_QS_AMT,RP.COMM_SURPLUS_AMT FROM TTRN_RISK_PROPOSAL RP WHERE  RP.RSK_PROPOSAL_NUMBER=? AND RP.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=RP.RSK_PROPOSAL_NUMBER  )
risk.select.getEditModeSecPagePro3Data=SELECT PR.RSK_LIMIT_OS_OC,PR.RSK_LIMIT_OS_DC,PR.RSK_EPI_OSOF_OC,PR.RSK_EPI_OSOF_DC,COM.RSK_BROKERAGE,COM.RSK_TAX,COM.RSK_ACQUISTION_COST_OC,COM.RSK_PROFIT_COMM,RSK_MD_PREM_OS_OC,RSK_MD_PREM_OS_DC,RSK_AGGREGATE_LIAB_OC,RSK_REINSTATE_NO,RSK_REINSTATE_ADDL_PREM_OC,COM.RSK_LEAD_UW,COM.RSK_LEAD_UW_SHARE,COM.RSK_ACCOUNTS,COM.RSK_EXCLUSION,COM.RSK_REMARKS ,COM.RSK_UW_RECOMM,COM.RSK_GM_APPROVAL,COM.RSK_OTHER_COST,COM.RSK_REINSTATE_ADDL_PREM_PCT,COM.RSK_BURNING_COST_PCT,COM.RSK_AGGREGATE_DEDUCT_OC,COM.RSK_REINSTATEMENT_PREMIUM,COM.RSK_CREASTA_STATUS,COM.RSK_LEAD_UNDERWRITER_COUNTRY,COM.RSK_BONUS_ID,COM.RSK_NOCLAIMBONUS_PRCENT,COM.RSK_OCCURRENT_LIMIT_OC,COM.RSK_OCCURRENT_LIMIT_DC FROM TTRN_RISK_PROPOSAL PR,TTRN_RISK_COMMISSION COM WHERE PR.RSK_PROPOSAL_NUMBER =? AND PR.RSK_PROPOSAL_NUMBER=COM.RSK_PROPOSAL_NUMBER AND PR.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=?) AND COM.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=?) AND COM.RSK_LAYER_NO=?
risk.select.getInstalmentData=SELECT INSTALLMENT_NO,TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE,MND_PREMIUM_OC,PAYEMENT_DUE_DAY,TRANSACTION_NO FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO=? AND LAYER_NO=? AND ENDORSEMENT_NO=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO=? AND LAYER_NO=? AND ENDORSEMENT_NO IS NOT NULL ) AND ENDORSEMENT_NO IS NOT NULL ORDER BY INSTALLMENT_NO
GET_INSTALMENT_COUNT=select count(*) from TTRN_MND_INSTALLMENTS TMI WHERE PROPOSAL_NO=? AND LAYER_NO=? AND ENDORSEMENT_NO=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO=TMI.PROPOSAL_NO AND LAYER_NO=TMI.LAYER_NO AND ENDORSEMENT_NO IS NOT NULL ) AND ENDORSEMENT_NO IS NOT NULL
risk.select.viewInstalmentData=SELECT INSTALLMENT_NO,TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE,MND_PREMIUM_OC,PAYEMENT_DUE_DAY FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO\=? AND LAYER_NO\=? AND ENDORSEMENT_NO\=? AND ENDORSEMENT_NO IS NOT NULL ORDER BY INSTALLMENT_NO
#S#INSERT_CLASS_LIMIT=INSERT INTO TTRN_RSK_CLASS_LIMITS(RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_CONTRACT_NO,RSK_LAYER_NO,RSK_PRODUCTID,RSK_COVER_CLASS,RSK_COVER_LIMT,RSK_COVER_LIMT_PERCENTAGE,RSK_DEDUCTABLE_LIMT,RSK_DEDUCTABLE_PERCENTAGE,ENTRY_DATE,BRANCH_CODE,STATUS,RSK_SNO,RSK_EGNPI_AS_OFF,RSK_COVER_SUB_CLASS)values(?,?,?,?,?,?,?,?,?,?,sysdate,?,'Y',?,?,?)
#S#GET_CLASS_LIMIT_DETAILS=SELECT RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_CONTRACT_NO,RSK_LAYER_NO,RSK_PRODUCTID,RSK_COVER_CLASS,RSK_COVER_LIMT,RSK_COVER_LIMT_PERCENTAGE,RSK_DEDUCTABLE_LIMT,RSK_DEDUCTABLE_PERCENTAGE,ENTRY_DATE,BRANCH_CODE,STATUS,RSK_EGNPI_AS_OFF,RSK_COVER_SUB_CLASS FROM TTRN_RSK_CLASS_LIMITS TRCL where RSK_PROPOSAL_NUMBER=? and RSK_LAYER_NO=? and RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) from TTRN_RSK_CLASS_LIMITS where  RSK_PROPOSAL_NUMBER=TRCL.RSK_PROPOSAL_NUMBER) order by RSK_SNO
INSERT_CLASS_LIMIT=INSERT INTO TTRN_RSK_CLASS_LIMITS(RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_CONTRACT_NO,RSK_LAYER_NO,RSK_PRODUCTID,RSK_COVER_CLASS,RSK_COVER_LIMT,RSK_COVER_LIMT_PERCENTAGE,RSK_DEDUCTABLE_LIMT,RSK_DEDUCTABLE_PERCENTAGE,ENTRY_DATE,BRANCH_CODE,STATUS,RSK_SNO,RSK_EGNPI_AS_OFF,RSK_GNPI_AS_OFF,RSK_NET_MAX_RETENT_PERCENT)values(?,?,?,?,?,?,?,?,?,?,sysdate,?,'Y',?,?,?,?)
GET_CLASS_LIMIT_DETAILS=SELECT RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_CONTRACT_NO,RSK_LAYER_NO,RSK_PRODUCTID,RSK_COVER_CLASS,RSK_COVER_LIMT,RSK_COVER_LIMT_PERCENTAGE,RSK_DEDUCTABLE_LIMT,RSK_DEDUCTABLE_PERCENTAGE,ENTRY_DATE,BRANCH_CODE,STATUS,RSK_EGNPI_AS_OFF,RSK_GNPI_AS_OFF,RSK_NET_MAX_RETENT_PERCENT FROM TTRN_RSK_CLASS_LIMITS TRCL where RSK_PROPOSAL_NUMBER=? and RSK_LAYER_NO=? and RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) from TTRN_RSK_CLASS_LIMITS where  RSK_PROPOSAL_NUMBER=TRCL.RSK_PROPOSAL_NUMBER) order by RSK_SNO
DELETE_CLASS_LIMIT=DELETE TTRN_RSK_CLASS_LIMITS TRCL WHERE RSK_PROPOSAL_NUMBER=?  and RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) from TTRN_RSK_CLASS_LIMITS where  RSK_PROPOSAL_NUMBER=TRCL.RSK_PROPOSAL_NUMBER)
#risk.select.getThirdPageData=SELECT   RP.RSK_PREMIUM_QUOTA_SHARE, RP.RSK_PREMIUM_SURPULS, RC.RSK_BROKERAGE, rc.RSK_BURNING_COST_PCT,rc.RSK_SLADSCALE_COMM,rc.RSK_LOSS_PART_CARRIDOR,rc.RSK_COMBIN_SUB_CLASS, rc.RSK_REINSTATE_ADDL_PREM_PCT, RP.RSK_PREMIUM_QUOTA_SHARE, RP.RSK_PREMIUM_SURPULS, comm_surplus_amt, NVL (( ( (  NVL (RC.RSK_OVERRIDER_PERC, 0) + NVL (RC.RSK_BROKERAGE, 0)  + NVL (RC.RSK_TAX, 0) + NVL (RC.RSK_OTHER_COST, 0)) / 100) * RP.RSK_EPI_OSOE_OC), 0) OTHER_ACQ_COST_AMT, round(NVL (( ( (  NVL (RC.RSK_OVERRIDER_PERC, 0) + NVL (RC.RSK_BROKERAGE, 0) + NVL (RC.RSK_TAX, 0) + NVL (RC.RSK_OTHER_COST, 0)) / 100) * RP.RSK_EPI_OSOE_OC), 0 )/(select rsk_exchange_rate from ttrn_risk_details trd where RSK_PROPOSAL_NUMBER\=RP.RSK_PROPOSAL_NUMBER and RSK_ENDORSEMENT_NO\=(Select max(RSK_ENDORSEMENT_NO) from ttrn_risk_details td where trd.RSK_PROPOSAL_NUMBER\=td.RSK_PROPOSAL_NUMBER)),2)OTHER_ACQ_COST_AMT_UGX,RC.RSK_COMBIN_SUB_CLASS,RSK_TAX,RSK_PROFIT_COMM,RSK_RESERVE_ON_LOSS,RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,RSK_COMM_QUOTASHARE,RSK_COMM_SURPLUS,RSK_OVERRIDER_PERC,RSK_PREMIUM_RESERVE,RSK_LOSS_RESERVE,RSK_INTEREST,RSK_PF_INOUT_PREM,RSK_PF_INOUT_LOSS,RSK_LOSSADVICE, round(RSK_LOSSADVICE/(select rsk_exchange_rate from ttrn_risk_details trd where RSK_PROPOSAL_NUMBER\=RP.RSK_PROPOSAL_NUMBER and RSK_ENDORSEMENT_NO\=(Select max(RSK_ENDORSEMENT_NO) from ttrn_risk_details td where trd.RSK_PROPOSAL_NUMBER\=td.RSK_PROPOSAL_NUMBER)),2)RSK_LOSSADVICE_DC, RSK_CASHLOSS_LMT_OC, RSK_CASHLOSS_LMT_DC, RSK_AGGREGATE_LIAB_OC,RSK_AGGREGATE_LIAB_DC, RSK_REINSTATE_NO, RSK_REINSTATE_ADDL_PREM_OC, RSK_REINSTATE_ADDL_PREM_DC, (SELECT   P.FIRST_NAME || ' ' || P.LAST_NAME FROM   PERSONAL_INFO P WHERE   P.BRANCH_CODE \= ? and CUSTOMER_ID\=RSK_LEAD_UW AND P.CUSTOMER_TYPE \= 'L' AND STATUS \= 'Y'  AND P.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE       BRANCH_CODE \= P.BRANCH_CODE AND CUSTOMER_TYPE \= P.CUSTOMER_TYPE AND STATUS \= P.STATUS AND CUSTOMER_ID \= P.CUSTOMER_ID))RSK_LEAD_UW, RSK_LEAD_UW_SHARE, RSK_ACCOUNTS, RSK_EXCLUSION,rc.RSK_REMARKS,RSK_UW_RECOMM, RSK_GM_APPROVAL,RSK_DECISION, rc.RSK_ENTRY_DATE, rc.RSK_END_DATE,rc.RSK_STATUS, RSK_OTHER_COST,RSK_REINSTATE_ADDL_PREM_PCT,RP.LIMIT_PER_VESSEL_OC, RP.LIMIT_PER_VESSEL_DC, RP.LIMIT_PER_LOCATION_OC, RP.LIMIT_PER_LOCATION_DC, RSK_PREMIUM_QUOTA_SHARE_DC, RSK_PREMIUM_SURPLUS_DC, COMM_QS_AMT, COMM_SURPLUS_AMT,COMM_QS_AMT_DC, COMM_SURPLUS_AMT_DC,RC.RSK_AGGREGATE_DEDUCT_OC, RC.RSK_AGGREGATE_DEDUCT_DC,RC.RSK_EVENT_LIMIT_OC,RC.RSK_EVENT_LIMIT_DC,RC.RSK_AGGREGATE_LIMIT_OC,RC.RSK_AGGREGATE_LIMIT_DC,RC.RSK_OCCURRENT_LIMIT_OC,RC.RSK_REINSTATEMENT_PREMIUM,RC.RSK_CREASTA_STATUS,RC.RSK_LEAD_UNDERWRITER_COUNTRY,RC.RSK_OCCURRENT_LIMIT_DC,RC.RSK_LOSS_COMBIN_SUB_CLASS,RC.RSK_SLIDE_COMBIN_SUB_CLASS,RC.RSK_CRESTA_COMBIN_SUB_CLASS,RC.RSK_PRO_MANAGEMENT_EXP, RC.RSK_PRO_COMM_TYPE, RC.RSK_PRO_COMM_PER, RC.RSK_PRO_SET_UP, RC.RSK_PRO_SUP_PRO_COM, RC.RSK_PRO_LOSS_CARY_TYPE, RC.RSK_PRO_LOSS_CARY_YEAR,RC.RSK_OCCURRENT_LIMIT_OC,RC.RSK_OCCURRENT_LIMIT_DC, RC.RSK_PRO_PROFIT_CARY_TYPE, RC.RSK_PRO_PROFIT_CARY_YEAR,RC.RSK_NOCLAIMBONUS_PRCENT,RC.RSK_BONUS_ID , RC.RSK_PRO_FIRST_PFO_COM, RC.RSK_PRO_FIRST_PFO_COM_PRD, RC.RSK_PRO_SUB_PFO_COM_PRD, RC.RSK_PRO_SUB_PFO_COM, RC.RSK_PRO_SUB_SEQ_CAL,RC.RSK_CREASTA_STATUS, RC.RSK_PRO_NOTES,RC.RSK_RATE,RC.RSK_COMMISSION_TYPE,(select to_char(endorsement_date,'DD/MM/YYYY') from position_master pm where pm.proposal_no\=RP.RSK_PROPOSAL_NUMBER and pm.amend_id\=RP.RSK_ENDORSEMENT_NO) ENDT_DATE FROM      TTRN_RISK_PROPOSAL RP LEFT OUTER JOIN (SELECT   * FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER \= ? AND RSK_ENDORSEMENT_NO \= ?) RC ON RP.RSK_PROPOSAL_NUMBER \= RC.RSK_PROPOSAL_NUMBER WHERE   RP.RSK_PROPOSAL_NUMBER \=? AND RP.RSK_ENDORSEMENT_NO \=?
risk.select.getThirdPageData = SELECT   RC.RSK_COMMISSION_QS_YN,RC.RSK_COMMISSION_SUR_YN,RC.RSK_OVERRIDE_YN,RC.RSK_BROKARAGE_YN,RC.RSK_TAX_YN,RC.RSK_OTHER_COST_YN,RC.RSK_CEED_ODI_YN,RP.RSK_PREMIUM_QUOTA_SHARE, RP.RSK_PREMIUM_SURPULS, RC.RSK_BROKERAGE,RC.RSK_INCLUDE_ACQ_COST,RC.RSK_OUR_ASS_ACQ_COST,RC.RSK_OUR_ACQ_OUR_SHARE_OC,  rc.RSK_BURNING_COST_PCT,rc.RSK_SLADSCALE_COMM,rc.RSK_LOSS_PART_CARRIDOR,  rc.RSK_COMBIN_SUB_CLASS, rc.RSK_REINSTATE_ADDL_PREM_PCT, RP.  RSK_PREMIUM_QUOTA_SHARE, RP.RSK_PREMIUM_SURPULS, comm_surplus_amt,   NVL (  ( ( (  NVL (RC.RSK_OVERRIDER_PERC, 0) + NVL (RC.RSK_COMM_QUOTASHARE, 0)+ NVL (RC.RSK_COMM_SURPLUS, 0)  +  NVL (RC.RSK_BROKERAGE, 0)  + NVL  (RC.RSK_TAX, 0) + NVL (RC.RSK_OTHER_COST, 0)) / 100) * RP.  RSK_EPI_EST_OC), 0) + NVL (RC.RSK_OUR_ASS_ACQ_COST, 0) OTHER_ACQ_COST_AMT  , round((NVL (( ( (  NVL (RC.  RSK_OVERRIDER_PERC, 0) +  NVL (RC.RSK_BROKERAGE, 0) + NVL (RC.RSK_COMM_QUOTASHARE, 0)+ NVL (RC.RSK_COMM_SURPLUS, 0)  + NVL (RC.RSK_TAX, 0)  + NVL (RC.RSK_OTHER_COST, 0)) / 100) * RP.RSK_EPI_EST_OC), 0 )+ NVL (RC.RSK_OUR_ASS_ACQ_COST, 0))/(  select rsk_exchange_rate  from ttrn_risk_details trd  where RSK_PROPOSAL_NUMBER=RP.RSK_PROPOSAL_NUMBER  and RSK_ENDORSEMENT_NO=(  Select max(RSK_ENDORSEMENT_NO)  from ttrn_risk_details td  where trd.RSK_PROPOSAL_NUMBER=td.RSK_PROPOSAL_NUMBER)),2)   OTHER_ACQ_COST_AMT_UGX  ,RC.RSK_COMBIN_SUB_CLASS,RSK_TAX,RSK_PROFIT_COMM,  RSK_RESERVE_ON_LOSS,RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,  RSK_COMM_QUOTASHARE,RSK_COMM_SURPLUS,RSK_OVERRIDER_PERC,  RSK_PREMIUM_RESERVE,RSK_LOSS_RESERVE,RSK_INTEREST,RSK_PF_INOUT_PREM,  RSK_PF_INOUT_LOSS,RSK_LOSSADVICE, round(RSK_LOSSADVICE/(  select rsk_exchange_rate  from ttrn_risk_details trd  where RSK_PROPOSAL_NUMBER=RP.RSK_PROPOSAL_NUMBER  and RSK_ENDORSEMENT_NO=(  Select max(RSK_ENDORSEMENT_NO)  from ttrn_risk_details td  where trd.RSK_PROPOSAL_NUMBER=td.RSK_PROPOSAL_NUMBER)),2)  RSK_LOSSADVICE_DC, RSK_CASHLOSS_LMT_OC, RSK_CASHLOSS_LMT_DC,  RSK_AGGREGATE_LIAB_OC,RSK_AGGREGATE_LIAB_DC, RSK_REINSTATE_NO,  RSK_REINSTATE_ADDL_PREM_OC, RSK_REINSTATE_ADDL_PREM_DC, (  SELECT   P.FIRST_NAME || ' ' || P.LAST_NAME  FROM   PERSONAL_INFO P  WHERE   P.BRANCH_CODE = ?  and CUSTOMER_ID=RSK_LEAD_UW  AND P.CUSTOMER_TYPE = 'L'  AND STATUS = 'Y'  AND P.AMEND_ID = (  SELECT   MAX (AMEND_ID)  FROM   PERSONAL_INFO  WHERE  BRANCH_CODE = P.BRANCH_CODE  AND CUSTOMER_TYPE = P.CUSTOMER_TYPE  AND STATUS = P.STATUS  AND CUSTOMER_ID = P.CUSTOMER_ID))RSK_LEAD_UW,RSK_LEAD_UW RSK_LEAD_UWID, RSK_LEAD_UW_SHARE,  RSK_ACCOUNTS, RSK_EXCLUSION,rc.RSK_REMARKS,RSK_UW_RECOMM,  RSK_GM_APPROVAL,RSK_DECISION, rc.RSK_ENTRY_DATE, rc.RSK_END_DATE,rc.  RSK_STATUS, RSK_OTHER_COST,RSK_REINSTATE_ADDL_PREM_PCT,RP.  LIMIT_PER_VESSEL_OC, RP.LIMIT_PER_VESSEL_DC, RP.LIMIT_PER_LOCATION_OC,  RP.LIMIT_PER_LOCATION_DC, RSK_PREMIUM_QUOTA_SHARE_DC,  RSK_PREMIUM_SURPLUS_DC, COMM_QS_AMT, COMM_SURPLUS_AMT,COMM_QS_AMT_DC,  COMM_SURPLUS_AMT_DC,RC.RSK_AGGREGATE_DEDUCT_OC, RC.  RSK_AGGREGATE_DEDUCT_DC,RC.RSK_EVENT_LIMIT_OC,RC.RSK_EVENT_LIMIT_DC,RC.  RSK_AGGREGATE_LIMIT_OC,RC.RSK_AGGREGATE_LIMIT_DC,RC.  RSK_OCCURRENT_LIMIT_OC,RC.RSK_REINSTATEMENT_PREMIUM,RC.  RSK_CREASTA_STATUS,RC.RSK_LEAD_UNDERWRITER_COUNTRY,RC.  RSK_OCCURRENT_LIMIT_DC,RC.RSK_LOSS_COMBIN_SUB_CLASS,RC.  RSK_SLIDE_COMBIN_SUB_CLASS,RC.RSK_CRESTA_COMBIN_SUB_CLASS,RC.  RSK_PRO_MANAGEMENT_EXP, RC.RSK_PRO_COMM_TYPE, RC.RSK_PRO_COMM_PER, RC.  RSK_PRO_SET_UP, RC.RSK_PRO_SUP_PRO_COM, RC.RSK_PRO_LOSS_CARY_TYPE, RC.  RSK_PRO_LOSS_CARY_YEAR,RC.RSK_OCCURRENT_LIMIT_OC,RC.  RSK_OCCURRENT_LIMIT_DC, RC.RSK_PRO_PROFIT_CARY_TYPE, RC.  RSK_PRO_PROFIT_CARY_YEAR,RC.RSK_NOCLAIMBONUS_PRCENT,RC.RSK_BONUS_ID , RC  .RSK_PRO_FIRST_PFO_COM, RC.RSK_PRO_FIRST_PFO_COM_PRD, RC.  RSK_PRO_SUB_PFO_COM_PRD, RC.RSK_PRO_SUB_PFO_COM, RC.RSK_PRO_SUB_SEQ_CAL,  RC.RSK_CREASTA_STATUS, RC.RSK_PRO_NOTES,RC.RSK_RATE,RC.  RSK_COMMISSION_TYPE,(  select to_char(endorsement_date,'DD/MM/YYYY')  from position_master pm  where pm.proposal_no=RP.RSK_PROPOSAL_NUMBER  and pm.amend_id=RP.RSK_ENDORSEMENT_NO) ENDT_DATE  FROM TTRN_RISK_PROPOSAL RP LEFT OUTER JOIN (  SELECT   *  FROM   TTRN_RISK_COMMISSION  WHERE   RSK_PROPOSAL_NUMBER = ?  AND RSK_ENDORSEMENT_NO = ?) RC ON RP.RSK_PROPOSAL_NUMBER = RC.  RSK_PROPOSAL_NUMBER  WHERE   RP.RSK_PROPOSAL_NUMBER =?  AND RP.RSK_ENDORSEMENT_NO =?
risk.select.chechProposalStatus=SELECT B.RSK_STATUS,A.RSK_SHARE_SIGNED,B.RSK_CONTRACT_NO FROM TTRN_RISK_PROPOSAL A, TTRN_RISK_DETAILS B WHERE A.RSK_PROPOSAL_NUMBER = B.RSK_PROPOSAL_NUMBER AND A.RSK_PROPOSAL_NUMBER =? AND A.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER =? ) AND B.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER =? )
GET_BASE_LAYER_DETAILS=SELECT PROPOSAL_NO,BASE_LAYER,CONTRACT_NO,CONTRACT_STATUS FROM POSITION_MASTER PM WHERE PRODUCT_ID=? AND BRANCH_CODE=? AND PROPOSAL_NO=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO=PM.PROPOSAL_NO)
#risk.select.getCommonData=SELECT RD.RSK_INSURED_NAME,RD.RSK_DEPTID,DM.TMAS_DEPARTMENT_NAME,(select detail_name from constant_detail where category_id \= '4' and type\= rd.RSK_PROPOSAL_TYPE ) proposal_type,(select detail_name from constant_detail where category_id\= '5' and type\= rd.RSK_ACCOUNTING_PERIOD ) accounting_period,rd.RSK_RECEIPT_STATEMENT,rd.RSK_RECEIPT_PAYEMENT, rd.RSK_PROPOSAL_NUMBER,PFC.TMAS_PFC_NAME,SPFC.TMAS_SPFC_NAME,pi.COMPANY_NAME,rd.RSK_TREATYID,PIb.FIRST_NAME || ' ' || PIb.LAST_NAME BROKER,TO_CHAR (rd.RSK_MONTH, 'DD/MM/YYYY') MONTH,pb.TMAS_POL_BRANCH_NAME,rd.RSK_CONTRACT_NO,rd.RSK_UWYEAR,rd.RSK_UNDERWRITTER,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') AS RSK_INCEPTION_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') AS RSK_EXPIRY_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') AS RSK_ACCOUNT_DATE,cm.CURRENCY_NAME,cm.SHORT_NAME,CM.CURRENCY_ID,rd.RSK_EXCHANGE_RATE,rd.RSK_BASIS,rd.RSK_PERIOD_OF_NOTICE,rd.RSK_RISK_COVERED,rd.RSK_TERRITORY_SCOPE,rd.RSK_TERRITORY,rd.RSK_STATUS,rd.RSK_LAYER_NO,TM.TERRITORY_DESC,UM.UNDERWRITTER,rd.MND_INSTALLMENTS,rd.RSK_RETRO_TYPE,rd.RETRO_CESSIONARIES,RD.RSK_BUSINESS_TYPE,RSK_NO_OF_LINE,RD.RSK_EXCHANGE_TYPE,RD.RSK_PERILS_COVERED,RD.RSK_LOC_ISSUED,RD.RSK_UMBRELLA_XL,RD.RSK_RUN_OFF_YEAR,RD.RSK_LOC_BNK_NAME,RD.RSK_LOC_CRDT_PRD,RD.RSK_LOC_CRDT_AMT,RD.RSK_LOC_BENFCRE_NAME,(select detail_name from constant_detail where category_id \= '24' and type\= RD.INWARD_BUS_TYPE )INWARD_BUS_TYPE, (select detail_name from constant_detail where category_id \= '25' and type\= RD.TREATYTYPE )TREATYTYPE,(select detail_name from constant_detail where category_id \= '29' and CATEGORY_DETAIL_ID\= RD.RSK_BUSINESS_TYPE )RSK_BUSINESS_TYPE_Con,(select listagg(detail_name,', ') within group(order by detail_name) csv from constant_detail where category_id \= '30' and CATEGORY_DETAIL_ID in(select * from table(   split_text_fn( RD.RSK_PERILS_COVERED,',')))) RSK_PERILS_COVERED_Con,RD.COUNTRIES_INCLUDE,RD.COUNTRIES_EXCLUDE,RD.RSK_CESSION_EXG_RATE,RD.RSK_FIXED_RATE  FROM TTRN_RISK_DETAILS RD LEFT OUTER JOIN  TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID \= RD.RSK_PFCID AND PFC.BRANCH_CODE \= ? LEFT OUTER JOIN  TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID \= RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE \= ? LEFT OUTER JOIN  PERSONAL_INFO PIB  ON RD.RSK_BROKERID \= PIB.CUSTOMER_ID AND PIB.BRANCH_CODE \= ? LEFT OUTER JOIN  PERSONAL_INFO PI  ON RD.RSK_CEDINGID \= PI.CUSTOMER_ID  AND PI.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH \= PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE \= ? LEFT OUTER JOIN  CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR \= CM.CURRENCY_ID AND CM.BRANCH_CODE \= ? LEFT OUTER JOIN TERRITORY_MASTER TM  ON RD.RSK_TERRITORY \= TM.TERRITORY_CODE AND TM.BRANCH_CODE \= ? LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER \= UM.UWR_CODE AND UM.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID \= RD.RSK_DEPTID AND DM.BRANCH_CODE \= ? AND DM.TMAS_STATUS \= 'Y' WHERE  RD.RSK_PROPOSAL_NUMBER \= ? AND PIB.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PI.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO \= ? AND CM.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE)
risk.select.getCommonData=SELECT RD.RSK_INSURED_NAME,RD.RS_ENDORSEMENT_TYPE,RD.RSK_DEPTID,DM.TMAS_DEPARTMENT_NAME,(select detail_name from constant_detail where category_id \= '4' and type\= rd.RSK_PROPOSAL_TYPE ) proposal_type,(select detail_name from constant_detail where category_id\= '5' and type\= rd.RSK_ACCOUNTING_PERIOD ) accounting_period,rd.RSK_RECEIPT_STATEMENT,rd.RSK_RECEIPT_PAYEMENT, rd.RSK_PROPOSAL_NUMBER,PFC.TMAS_PFC_NAME,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE \= RD.BRANCH_CODE) TMAS_SPFC_NAME,RD.RSK_SPFCID,pi.COMPANY_NAME,rd.RSK_TREATYID,PIb.FIRST_NAME || ' ' || PIb.LAST_NAME BROKER,TO_CHAR (rd.RSK_MONTH, 'DD/MM/YYYY') MONTH,pb.TMAS_POL_BRANCH_NAME,rd.RSK_CONTRACT_NO,rd.RSK_UWYEAR,rd.RSK_UNDERWRITTER,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') AS RSK_INCEPTION_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') AS RSK_EXPIRY_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') AS RSK_ACCOUNT_DATE,cm.CURRENCY_NAME,cm.SHORT_NAME,CM.CURRENCY_ID,rd.RSK_EXCHANGE_RATE,rd.RSK_BASIS,rd.RSK_PERIOD_OF_NOTICE,rd.RSK_RISK_COVERED,rd.RSK_TERRITORY_SCOPE,rd.RSK_TERRITORY,rd.RSK_STATUS,rd.RSK_LAYER_NO,TM.TERRITORY_DESC,UM.UNDERWRITTER,rd.MND_INSTALLMENTS,rd.RSK_RETRO_TYPE,rd.RETRO_CESSIONARIES,RD.RSK_BUSINESS_TYPE,RSK_NO_OF_LINE,RD.RSK_EXCHANGE_TYPE,RD.RSK_PERILS_COVERED,DECODE(RD.RSK_LOC_ISSUED,'Y','Yes','No')  RSK_LOC_ISSUED,decode(RD.RSK_UMBRELLA_XL,'Y','Yes','No') RSK_UMBRELLA_XL,RD.RSK_RUN_OFF_YEAR,RD.RSK_LOC_BNK_NAME,RD.RSK_LOC_CRDT_PRD,RD.RSK_LOC_CRDT_AMT,RD.RSK_LOC_BENFCRE_NAME,(select detail_name from constant_detail where category_id \= '24' and type\= RD.INWARD_BUS_TYPE )INWARD_BUS_TYPE, (select detail_name from constant_detail where category_id \= '25' and type\= RD.TREATYTYPE )TREATYTYPE,RD.TREATYTYPE TREATYTYPEID,(select detail_name from constant_detail where category_id \= '29' and CATEGORY_DETAIL_ID\= RD.RSK_BUSINESS_TYPE )RSK_BUSINESS_TYPE_Con,(select listagg(detail_name,', ') within group(order by detail_name) csv from constant_detail where category_id \= '30' and CATEGORY_DETAIL_ID in(select * from table(   split_text_fn( RD.RSK_PERILS_COVERED,',')))) RSK_PERILS_COVERED_Con,RD.COUNTRIES_INCLUDE,RD.COUNTRIES_EXCLUDE,RD.RSK_CESSION_EXG_RATE,RD.RSK_FIXED_RATE  FROM TTRN_RISK_DETAILS RD LEFT OUTER JOIN  TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID \= RD.RSK_PFCID AND PFC.BRANCH_CODE \= ?  LEFT OUTER JOIN  PERSONAL_INFO PIB  ON RD.RSK_BROKERID \= PIB.CUSTOMER_ID AND PIB.BRANCH_CODE \= ? LEFT OUTER JOIN  PERSONAL_INFO PI  ON RD.RSK_CEDINGID \= PI.CUSTOMER_ID  AND PI.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH \= PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE \= ? LEFT OUTER JOIN  CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR \= CM.CURRENCY_ID AND CM.BRANCH_CODE \= ? LEFT OUTER JOIN TERRITORY_MASTER TM  ON RD.RSK_TERRITORY \= TM.TERRITORY_CODE AND TM.BRANCH_CODE \= ? LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER \= UM.UWR_CODE AND UM.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID \= RD.RSK_DEPTID AND DM.BRANCH_CODE \= ? AND DM.TMAS_STATUS \= 'Y' WHERE  RD.RSK_PROPOSAL_NUMBER \= ? AND PIB.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PI.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO \= ? AND CM.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE)
#RISK_SELECT_GETCOMMONDATA_PTTY=SELECT RD.RSK_INSURED_NAME,RD.RSK_DEPTID,DM.TMAS_DEPARTMENT_NAME,(select detail_name from constant_detail where category_id \= '4' and type\= rd.RSK_PROPOSAL_TYPE ) proposal_type,(select detail_name from constant_detail where category_id\= '5' and type\= rd.RSK_ACCOUNTING_PERIOD ) accounting_period,rd.RSK_RECEIPT_STATEMENT,rd.RSK_RECEIPT_PAYEMENT, rd.RSK_PROPOSAL_NUMBER,PFC.TMAS_PFC_NAME,SPFC.TMAS_SPFC_NAME,pi.COMPANY_NAME,rd.RSK_TREATYID,PIb.FIRST_NAME || ' ' || PIb.LAST_NAME BROKER,TO_CHAR (rd.RSK_MONTH, 'DD/MM/YYYY') MONTH,pb.TMAS_POL_BRANCH_NAME,rd.RSK_CONTRACT_NO,rd.RSK_UWYEAR,rd.RSK_UNDERWRITTER,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') AS RSK_INCEPTION_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') AS RSK_EXPIRY_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') AS RSK_ACCOUNT_DATE,cm.CURRENCY_NAME,cm.SHORT_NAME,CM.CURRENCY_ID,rd.RSK_EXCHANGE_RATE,rd.RSK_BASIS,rd.RSK_PERIOD_OF_NOTICE,rd.RSK_RISK_COVERED,rd.RSK_TERRITORY_SCOPE,rd.RSK_TERRITORY,rd.RSK_STATUS,rd.RSK_LAYER_NO,TM.TERRITORY_DESC,UM.UNDERWRITTER,rd.MND_INSTALLMENTS,rd.RSK_RETRO_TYPE,rd.RETRO_CESSIONARIES,RD.RSK_BUSINESS_TYPE,RSK_NO_OF_LINE,RD.RSK_EXCHANGE_TYPE,RD.RSK_PERILS_COVERED,RD.RSK_LOC_ISSUED,RD.RSK_UMBRELLA_XL,RD.RSK_RUN_OFF_YEAR,RD.RSK_LOC_BNK_NAME,RD.RSK_LOC_CRDT_PRD,RD.RSK_LOC_CRDT_AMT,RD.RSK_LOC_BENFCRE_NAME,(select detail_name from constant_detail where category_id \= '24' and type\= RD.INWARD_BUS_TYPE )INWARD_BUS_TYPE, (select detail_name from constant_detail where category_id \= '43' and type\= RD.TREATYTYPE )TREATYTYPE_NAME,RD.TREATYTYPE,(select detail_name from constant_detail where category_id \= '29' and CATEGORY_DETAIL_ID\= RD.RSK_BUSINESS_TYPE )RSK_BUSINESS_TYPE_Con,(select listagg(detail_name,', ') within group(order by detail_name) csv from constant_detail where category_id \= '30' and CATEGORY_DETAIL_ID in(select * from table(   split_text_fn( RD.RSK_PERILS_COVERED,',')))) RSK_PERILS_COVERED_Con,RD.COUNTRIES_INCLUDE,RD.COUNTRIES_EXCLUDE,RD.RSK_CESSION_EXG_RATE,RD.RSK_FIXED_RATE  FROM TTRN_RISK_DETAILS RD LEFT OUTER JOIN  TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID \= RD.RSK_PFCID AND PFC.BRANCH_CODE \= ? LEFT OUTER JOIN  TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID \= RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE \= ? LEFT OUTER JOIN  PERSONAL_INFO PIB  ON RD.RSK_BROKERID \= PIB.CUSTOMER_ID AND PIB.BRANCH_CODE \= ? LEFT OUTER JOIN  PERSONAL_INFO PI  ON RD.RSK_CEDINGID \= PI.CUSTOMER_ID  AND PI.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH \= PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE \= ? LEFT OUTER JOIN  CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR \= CM.CURRENCY_ID AND CM.BRANCH_CODE \= ? LEFT OUTER JOIN TERRITORY_MASTER TM  ON RD.RSK_TERRITORY \= TM.TERRITORY_CODE AND TM.BRANCH_CODE \= ? LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER \= UM.UWR_CODE AND UM.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID \= RD.RSK_DEPTID AND DM.BRANCH_CODE \= ? AND DM.TMAS_STATUS \= 'Y' WHERE  RD.RSK_PROPOSAL_NUMBER \= ? AND PIB.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PI.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO \= ? AND CM.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE)
RISK_SELECT_GETCOMMONDATA_PTTY=SELECT RD.RSK_INSURED_NAME,RD.RSK_DEPTID,DM.TMAS_DEPARTMENT_NAME,(select detail_name from constant_detail where category_id \= '4' and type\= rd.RSK_PROPOSAL_TYPE ) proposal_type,(select detail_name from constant_detail where category_id\= '5' and type\= rd.RSK_ACCOUNTING_PERIOD ) accounting_period,rd.RSK_RECEIPT_STATEMENT,rd.RSK_RECEIPT_PAYEMENT, rd.RSK_PROPOSAL_NUMBER,PFC.TMAS_PFC_NAME,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE \= RD.BRANCH_CODE) TMAS_SPFC_NAME,RD.RSK_SPFCID,(SELECT   detail_name  FROM   constant_detail WHERE   category_id \= '37' AND TYPE \= RD.RS_ENDORSEMENT_TYPE) RS_ENDORSEMENT_TYPE,pi.COMPANY_NAME,rd.RSK_TREATYID,PIb.FIRST_NAME || ' ' || PIb.LAST_NAME BROKER,TO_CHAR (rd.RSK_MONTH, 'DD/MM/YYYY') MONTH,pb.TMAS_POL_BRANCH_NAME,rd.RSK_CONTRACT_NO,rd.RSK_UWYEAR,rd.RSK_UNDERWRITTER,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') AS RSK_INCEPTION_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') AS RSK_EXPIRY_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') AS RSK_ACCOUNT_DATE,cm.CURRENCY_NAME,cm.SHORT_NAME,CM.CURRENCY_ID,rd.RSK_EXCHANGE_RATE,rd.RSK_BASIS,rd.RSK_PERIOD_OF_NOTICE,rd.RSK_RISK_COVERED,rd.RSK_TERRITORY_SCOPE,rd.RSK_TERRITORY,rd.RSK_STATUS,rd.RSK_LAYER_NO,TM.TERRITORY_DESC,UM.UNDERWRITTER,rd.MND_INSTALLMENTS,rd.RSK_RETRO_TYPE,rd.RETRO_CESSIONARIES,RD.RSK_BUSINESS_TYPE,RSK_NO_OF_LINE,RD.RSK_EXCHANGE_TYPE,RD.RSK_PERILS_COVERED,DECODE(RD.RSK_LOC_ISSUED,'Y','Yes','No') RSK_LOC_ISSUED,RD.RSK_UMBRELLA_XL,RD.RSK_RUN_OFF_YEAR,RD.RSK_LOC_BNK_NAME,RD.RSK_LOC_CRDT_PRD,RD.RSK_LOC_CRDT_AMT,RD.RSK_LOC_BENFCRE_NAME,(select detail_name from constant_detail where category_id \= '24' and type\= RD.INWARD_BUS_TYPE )INWARD_BUS_TYPE, (select detail_name from constant_detail where category_id \= '43' and type\= RD.TREATYTYPE )TREATYTYPE_NAME,RD.TREATYTYPE,(select detail_name from constant_detail where category_id \= '29' and CATEGORY_DETAIL_ID\= RD.RSK_BUSINESS_TYPE )RSK_BUSINESS_TYPE_Con,(select listagg(detail_name,', ') within group(order by detail_name) csv from constant_detail where category_id \= '30' and CATEGORY_DETAIL_ID in(select * from table(   split_text_fn( RD.RSK_PERILS_COVERED,',')))) RSK_PERILS_COVERED_Con,RD.COUNTRIES_INCLUDE,RD.COUNTRIES_EXCLUDE,RD.RSK_CESSION_EXG_RATE,RD.RSK_FIXED_RATE,DECODE(RD.RETENTIONYN,'Y','Yes','No') RETENTIONYN  FROM TTRN_RISK_DETAILS RD LEFT OUTER JOIN  TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID \= RD.RSK_PFCID AND PFC.BRANCH_CODE \= ?  LEFT OUTER JOIN  PERSONAL_INFO PIB  ON RD.RSK_BROKERID \= PIB.CUSTOMER_ID AND PIB.BRANCH_CODE \= ? LEFT OUTER JOIN  PERSONAL_INFO PI  ON RD.RSK_CEDINGID \= PI.CUSTOMER_ID  AND PI.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH \= PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE \= ? LEFT OUTER JOIN  CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR \= CM.CURRENCY_ID AND CM.BRANCH_CODE \= ? LEFT OUTER JOIN TERRITORY_MASTER TM  ON RD.RSK_TERRITORY \= TM.TERRITORY_CODE AND TM.BRANCH_CODE \= ? LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER \= UM.UWR_CODE AND UM.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID \= RD.RSK_DEPTID AND DM.BRANCH_CODE \= ? AND DM.TMAS_STATUS \= 'Y' WHERE  RD.RSK_PROPOSAL_NUMBER \= ? AND PIB.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PI.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO \= ? AND CM.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE)
#SELECT RD.RSK_DEPTID,DM.TMAS_DEPARTMENT_NAME,(select detail_name from constant_detail where category_id \= '4' and type\= rd.RSK_PROPOSAL_TYPE ) proposal_type,(select detail_name from constant_detail where category_id\= '5' and type\= rd.RSK_ACCOUNTING_PERIOD ) accounting_period,rd.RSK_RECEIPT_STATEMENT,rd.RSK_RECEIPT_PAYEMENT, rd.RSK_PROPOSAL_NUMBER,PFC.TMAS_PFC_NAME,SPFC.TMAS_SPFC_NAME,pi.COMPANY_NAME,rd.RSK_TREATYID,PIb.FIRST_NAME || ' ' || PIb.LAST_NAME BROKER,TO_CHAR (rd.RSK_MONTH, 'DD/MM/YYYY') MONTH,pb.TMAS_POL_BRANCH_NAME,rd.RSK_CONTRACT_NO,rd.RSK_UWYEAR,rd.RSK_UNDERWRITTER,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') AS RSK_INCEPTION_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') AS RSK_EXPIRY_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') AS RSK_ACCOUNT_DATE,cm.CURRENCY_NAME,rd.RSK_EXCHANGE_RATE,rd.RSK_BASIS,rd.RSK_PERIOD_OF_NOTICE,rd.RSK_RISK_COVERED,rd.RSK_TERRITORY_SCOPE,rd.RSK_TERRITORY,rd.RSK_STATUS,rd.RSK_LAYER_NO,TM.TERRITORY_DESC,UM.UNDERWRITTER,rd.MND_INSTALLMENTS FROM TTRN_RISK_DETAILS RD LEFT OUTER JOIN  TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID \= RD.RSK_PFCID AND PFC.BRANCH_CODE \= ? LEFT OUTER JOIN  TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID \= RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE \= ? LEFT OUTER JOIN  PERSONAL_INFO PIB  ON RD.RSK_BROKERID \= PIB.CUSTOMER_ID AND PIB.BRANCH_CODE \= ? LEFT OUTER JOIN  PERSONAL_INFO PI  ON RD.RSK_CEDINGID \= PI.CUSTOMER_ID  AND PI.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH \= PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE \= ? LEFT OUTER JOIN  CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR \= CM.CURRENCY_ID AND CM.BRANCH_CODE \= ? LEFT OUTER JOIN TERRITORY_MASTER TM  ON RD.RSK_TERRITORY \= TM.TERRITORY_CODE AND TM.BRANCH_CODE \= ? LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER \= UM.UWR_CODE AND UM.BRANCH_CODE \= ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID \= RD.RSK_DEPTID AND DM.BRANCH_CODE \= ? AND DM.TMAS_STATUS \= 'Y' WHERE  RD.RSK_PROPOSAL_NUMBER \= ? AND PIB.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PI.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO \= (SELECT MAX (RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER) AND CM.AMEND_ID \= (SELECT MAX (AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE)
#risk.select.getSecondViewData=SELECT RSK_MD_INSTALLMENT_NOS,DECODE(RSK_CEDRET_TYPE,'P','Percentage','Amount') CEDRET_TYPE,RSK_LIMIT_OC,RSK_LIMIT_DC,RSK_EPI_OFFER_OC,RSK_EPI_OFFER_DC,RSK_EPI_ESTIMATE,RSK_XLPREM_OC,RSK_XLPREM_DC ,RSK_DEDUC_OC, RSK_EPI_EST_OC,RSK_EPI_EST_DC,RSK_XLCOST_OC,RSK_XLCOST_DC,RSK_CEDANT_RETENTION,RSK_SHARE_WRITTEN,RSK_SHARE_SIGNED,RSK_MD_PREM_OC,RSK_MD_PREM_DC,RSK_ADJRATE,RSK_PF_COVERED,RSK_SUBJ_PREMIUM_OC,RSK_SUBJ_PREMIUM_DC,RSK_MAX_LMT_COVER,RSK_DEDUC_DC, RSK_LIMIT_OS_OC, RSK_LIMIT_OS_DC,RSK_EPI_OSOF_OC, RSK_EPI_OSOF_DC,RSK_EPI_OSOE_OC,RSK_EPI_OSOE_DC, RSK_XLCOST_OS_OC, RSK_XLCOST_OS_DC, RSK_MD_PREM_OS_OC , RSK_MD_PREM_OS_DC,RSK_SP_RETRO,RSK_NO_OF_INSURERS,RSK_MAX_LMT_COVER FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_LIMIT_OS_OC IS NOT NULL AND RSK_ENDORSEMENT_NO \=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_LIMIT_OS_OC IS NOT NULL )
risk.select.getSecondViewData=SELECT RSK_MD_INSTALLMENT_NOS,DECODE(RSK_CEDRET_TYPE,'P','Percentage','Amount') CEDRET_TYPE,RSK_LIMIT_OC,RSK_LIMIT_DC,RSK_EPI_OFFER_OC,RSK_EPI_OFFER_DC,RSK_EPI_ESTIMATE,RSK_XLPREM_OC,RSK_XLPREM_DC ,RSK_DEDUC_OC, RSK_EPI_EST_OC,RSK_EPI_EST_DC,RSK_XLCOST_OC,RSK_XLCOST_DC,RSK_CEDANT_RETENTION,RSK_SHARE_WRITTEN,RSK_SHARE_SIGNED,RSK_MD_PREM_OC,RSK_MD_PREM_DC,RSK_ADJRATE,RSK_PF_COVERED,RSK_SUBJ_PREMIUM_OC,RSK_SUBJ_PREMIUM_DC,RSK_MAX_LMT_COVER,RSK_DEDUC_DC, RSK_LIMIT_OS_OC, RSK_LIMIT_OS_DC,RSK_EPI_OSOF_OC, RSK_EPI_OSOF_DC,RSK_EPI_OSOE_OC,RSK_EPI_OSOE_DC, RSK_XLCOST_OS_OC, RSK_XLCOST_OS_DC, RSK_MD_PREM_OS_OC , RSK_MD_PREM_OS_DC,DECODE(RSK_SP_RETRO,'Y','Yes','No')  RSK_SP_RETRO,RSK_NO_OF_INSURERS,RSK_MAX_LMT_COVER,EGPNI_AS_OFFER,EGPNI_AS_OFFER_DC,OURASSESSMENT,RSK_TREATY_SURP_LIMIT_OC,RSK_TREATY_SURP_LIMIT_DC,RSK_TREATY_SURP_LIMIT_OS_OC,RSK_TREATY_SURP_LIMIT_OS_DC,RSK_EVENT_LIMIT_OC,RSK_EVENT_LIMIT_DC,RSK_EVENT_LIMIT_OS_OC,RSK_EVENT_LIMIT_OS_DC,RSK_COVER_LIMIT_UXL_OC,RSK_COVER_LIMIT_UXL_DC,RSK_COVER_LIMIT_UXL_OS_OC,RSK_COVER_LIMIT_UXL_OS_DC,RSK_DEDUCTABLE_UXL_OC,RSK_DEDUCTABLE_UXL_DC,RSK_DEDUCTABLE_UXL_OS_OC,RSK_DEDUCTABLE_UXL_OS_DC,DECODE(RSK_PML,'Y','Yes','No') RSK_PML,RSK_PML_PERCENT,RSK_EGNPI_PML_OC,RSK_EGNPI_PML_DC,RSK_EGNPI_PML_OS_OC,RSK_EGNPI_PML_OS_DC,RSK_PREMIUM_BASIS,RSK_MINIMUM_RATE,RSK_MAXIIMUM_RATE,RSK_BURNING_COST_LF,RSK_MINIMUM_PREMIUM_OC,RSK_MINIMUM_PREMIUM_DC,RSK_MINIMUM_PREMIUM_OS_OC,RSK_MINIMUM_PREMIUM_OS_DC,RSK_PAYMENT_DUE_DAYS,(select DETAIL_NAME from constant_detail where CATEGORY_ID\='31' and CATEGORY_DETAIL_ID\=RSK_PREMIUM_BASIS)RSK_PREMIUM_BASIS_Con,RSK_TRTY_LMT_PML_OC, RSK_TRTY_LMT_PML_DC, RSK_TRTY_LMT_PML_OS_OC, RSK_TRTY_LMT_PML_OS_DC, RSK_TRTY_LMT_SUR_PML_OC,  RSK_TRTY_LMT_SUR_PML_DC, RSK_TRTY_LMT_SUR_PML_OS_OC, RSK_TRTY_LMT_SUR_PML_OS_DC,RSK_MINIMUM_PREMIUM_OC,RSK_MINIMUM_PREMIUM_DC,RSK_MINIMUM_PREMIUM_OS_OC,RSK_MINIMUM_PREMIUM_OS_DC,RSK_COVER_LIMIT_UXL_OC,RSK_COVER_LIMIT_UXL_DC,RSK_COVER_LIMIT_UXL_OS_OC,RSK_COVER_LIMIT_UXL_OS_DC,RSK_DEDUCTABLE_UXL_OC,RSK_DEDUCTABLE_UXL_DC,RSK_DEDUCTABLE_UXL_OS_OC,RSK_DEDUCTABLE_UXL_OS_DC,RSK_TRTY_LMT_PML_OC,RSK_TRTY_LMT_PML_DC,RSK_TRTY_LMT_SUR_PML_DC,RSK_TRTY_LMT_SUR_PML_OC,RSK_TREATY_SURP_LIMIT_OC,RSK_TREATY_SURP_LIMIT_DC FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER\=?  AND RSK_ENDORSEMENT_NO \=?
risk.select.getRiskComMaxAmendId=SELECT NVL(MAX(RSK_ENDORSEMENT_NO),'0') FROM  TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=?
risk.select.getRenewalStatus=SELECT NVL(PM.RENEWAL_STATUS,'0') FROM POSITION_MASTER PM WHERE PM.PROPOSAL_NO=? AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO=PM.PROPOSAL_NO)
risk.select.getNextAmendID=SELECT MAX(AMEND_ID )+1 FROM POSITION_MASTER WHERE PROPOSAL_NO=?
risk.select.getRetroCessCount=SELECT COUNT(*) FROM TTRN_RETRO_CESSIONARY WHERE PROPOSAL_NO=?
risk.select.getRiskCommCount=SELECT COUNT(*) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=?
risk.select.getRskContractNo=SELECT NVL(RC.RSK_CONTRACT_NO,'0') FROM TTRN_RISK_DETAILS RC WHERE RC.RSK_PROPOSAL_NUMBER\=? AND RC.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER\=RC.RSK_PROPOSAL_NUMBER)
RISK_SELECT_GETRSKCONTRACTNO = SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS   WHERE RSK_PROPOSAL_NUMBER=?
risk.select.getRskProIdByContNo=SELECT RSK_PRODUCTID FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=?
risk.select.getRskProIdByProNo=SELECT RD.RSK_PRODUCTID FROM TTRN_RISK_DETAILS RD WHERE  RD.RSK_PROPOSAL_NUMBER=? AND  RD.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER= RD.RSK_PROPOSAL_NUMBER)
risk.select.getPro1ShareSign=SELECT SHARE_SIGNED FROM TTRN_FAC_RISK_PROPOSAL  WHERE RSK_PROPOSAL_NUMBER='"+BEANOBJ.GETPROPOSAL_NO()+"' AND  RSK_ENDORSEMENT_NO IS NOT NULL AND  RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_FAC_RISK_PROPOSAL WHERE  RSK_PROPOSAL_NUMBER='"+BEANOBJ.GETPROPOSAL_NO()+"' AND RSK_ENDORSEMENT_NO IS NOT NULL )
risk.select.getPro2ShareSign=SELECT RSK_SHARE_SIGNED FROM TTRN_RISK_PROPOSAL  WHERE RSK_PROPOSAL_NUMBER='"+BEANOBJ.GETPROPOSAL_NO()+"' AND  RSK_ENDORSEMENT_NO IS NOT NULL AND  RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_RISK_PROPOSAL WHERE  RSK_PROPOSAL_NUMBER='"+BEANOBJ.GETPROPOSAL_NO()+"' AND RSK_ENDORSEMENT_NO IS NOT NULL )
risk.select.getPro3ShareSign=SELECT RSK_SHARE_SIGNED,RSK_EPI_OSOF_OC,RSK_MD_PREM_OS_OC,RSK_EPI_OSOF_OC-RSK_MD_PREM_OS_OC AS ADJ_PRE FROM TTRN_RISK_PROPOSAL  WHERE RSK_PROPOSAL_NUMBER='"+BEANOBJ.GETPROPOSAL_NO()+"' AND  RSK_ENDORSEMENT_NO IS NOT NULL AND  RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_RISK_PROPOSAL WHERE  RSK_PROPOSAL_NUMBER='"+BEANOBJ.GETPROPOSAL_NO()+"' AND RSK_ENDORSEMENT_NO IS NOT NULL )
#risk.select.getSecPageData=SELECT RK.RSK_PROPOSAL_NUMBER,PFC.TMAS_PFC_NAME,SPFC.TMAS_SPFC_NAME,PERSONAL.COMPANY_NAME,PI.FIRST_NAME||' '|| PI.LAST_NAME AS BROKER,TO_CHAR (RK.RSK_MONTH, 'DD/MM/YYYY') MONTH,BRAN.TMAS_POL_BRANCH_NAME,RK.RSK_CONTRACT_NO,RK.RSK_UWYEAR, TDM.TMAS_DEPARTMENT_NAME,(select C.DETAIL_NAME from CONSTANT_DETAIL C where RK.RS_ENDORSEMENT_TYPE \= C.TYPE  ) DETAIL_NAME FROM   TTRN_RISK_DETAILS RK, TMAS_PFC_MASTER PFC,TMAS_SPFC_MASTER SPFC,PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,TMAS_POLICY_BRANCH BRAN, TMAS_DEPARTMENT_MASTER TDM WHERE  RK.RSK_PROPOSAL_NUMBER \= ? AND PFC.TMAS_PFC_ID \= RSK_PFCID AND PFC.BRANCH_CODE\=? AND SPFC.TMAS_SPFC_ID \= RK.RSK_SPFCID AND SPFC.BRANCH_CODE\=? AND SPFC.TMAS_PRODUCT_ID \= ?  AND TDM.BRANCH_CODE \= SPFC.BRANCH_CODE AND TDM.TMAS_PRODUCT_ID \= SPFC.TMAS_PRODUCT_ID AND TDM.TMAS_DEPARTMENT_ID\=RK.RSK_DEPTID AND RK.RSK_CEDINGID \= PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE\='C' AND PERSONAL.BRANCH_CODE\=? AND PERSONAL.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=PERSONAL.CUSTOMER_ID AND CUSTOMER_TYPE\=PERSONAL.CUSTOMER_TYPE AND BRANCH_CODE\=PERSONAL.BRANCH_CODE) AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND PI.CUSTOMER_TYPE\='B' AND PI.BRANCH_CODE\=? AND PI.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=PI.CUSTOMER_ID AND CUSTOMER_TYPE\=PI.CUSTOMER_TYPE AND BRANCH_CODE\=PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS  WHERE   RSK_PROPOSAL_NUMBER \=RK.RSK_PROPOSAL_NUMBER) AND RK.RSK_POLBRANCH \= BRAN.TMAS_POL_BRANCH_ID AND BRAN.BRANCH_CODE\=?
risk.select.getSecPageData=SELECT   RK.RSK_PROPOSAL_NUMBER, PFC.TMAS_PFC_NAME, (select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RK.RSK_SPFCID,' ', '')))) AND SPFC.TMAS_PRODUCT_ID \= TDM.TMAS_PRODUCT_ID AND TDM.BRANCH_CODE \= SPFC.BRANCH_CODE)TMAS_SPFC_NAME, PERSONAL.COMPANY_NAME, PI.FIRST_NAME || ' ' || PI.LAST_NAME AS BROKER, TO_CHAR (RK.RSK_MONTH, 'DD/MM/YYYY') MONTH, BRAN.TMAS_POL_BRANCH_NAME, RK.RSK_CONTRACT_NO, RK.RSK_UWYEAR, TDM.TMAS_DEPARTMENT_NAME,RK.RS_ENDORSEMENT_TYPE DETAIL_NAME FROM   TTRN_RISK_DETAILS RK, TMAS_PFC_MASTER PFC, PERSONAL_INFO PERSONAL, PERSONAL_INFO PI, TMAS_POLICY_BRANCH BRAN,TMAS_DEPARTMENT_MASTER TDM WHERE  RK.RSK_PROPOSAL_NUMBER \= ? AND PFC.TMAS_PFC_ID \= RSK_PFCID  AND PFC.BRANCH_CODE \= ? AND TDM.BRANCH_CODE \= ? AND TDM.TMAS_PRODUCT_ID \= ? AND TDM.TMAS_DEPARTMENT_ID \= RK.RSK_DEPTID AND RK.RSK_CEDINGID \= PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE \= 'C'  AND PERSONAL.BRANCH_CODE \= ? AND PERSONAL.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID \= PERSONAL.CUSTOMER_ID AND CUSTOMER_TYPE \= PERSONAL.CUSTOMER_TYPE AND BRANCH_CODE \= PERSONAL.BRANCH_CODE) AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND PI.CUSTOMER_TYPE \= 'B' AND PI.BRANCH_CODE \= ? AND PI.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID \= PI.CUSTOMER_ID AND CUSTOMER_TYPE \= PI.CUSTOMER_TYPE AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER \= RK.RSK_PROPOSAL_NUMBER) AND RK.RSK_POLBRANCH \= BRAN.TMAS_POL_BRANCH_ID AND BRAN.BRANCH_CODE \= ?
#  risk.select.getSecPageData=SELECT RK.RSK_PROPOSAL_NUMBER,PFC.TMAS_PFC_NAME,SPFC.TMAS_SPFC_NAME,PERSONAL.COMPANY_NAME,PI.FIRST_NAME||' '|| PI.LAST_NAME AS BROKER,TO_CHAR (RK.RSK_MONTH, 'DD/MM/YYYY') MONTH,BRAN.TMAS_POL_BRANCH_NAME,RK.RSK_CONTRACT_NO,RK.RSK_UWYEAR, TDM.TMAS_DEPARTMENT_NAME,(select C.DETAIL_NAME from CONSTANT_DETAIL C where RK.RS_ENDORSEMENT_TYPE \= C.TYPE  ) DETAIL_NAME FROM   TTRN_RISK_DETAILS RK, TMAS_PFC_MASTER PFC,TMAS_SPFC_MASTER SPFC,PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,TMAS_POLICY_BRANCH BRAN, TMAS_DEPARTMENT_MASTER TDM WHERE  RK.RSK_PROPOSAL_NUMBER \= ? AND PFC.TMAS_PFC_ID \= RSK_PFCID AND PFC.BRANCH_CODE\=? AND SPFC.TMAS_SPFC_ID \= RK.RSK_SPFCID AND SPFC.BRANCH_CODE\=? AND SPFC.TMAS_PRODUCT_ID \= ?  AND TDM.BRANCH_CODE \= SPFC.BRANCH_CODE AND TDM.TMAS_PRODUCT_ID \= SPFC.TMAS_PRODUCT_ID AND TDM.TMAS_DEPARTMENT_ID\=RK.RSK_DEPTID AND RK.RSK_CEDINGID \= PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE\='C' AND PERSONAL.BRANCH_CODE\=? AND PERSONAL.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=PERSONAL.CUSTOMER_ID AND CUSTOMER_TYPE\=PERSONAL.CUSTOMER_TYPE AND BRANCH_CODE\=PERSONAL.BRANCH_CODE) AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND PI.CUSTOMER_TYPE\='B' AND PI.BRANCH_CODE\=? AND PI.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=PI.CUSTOMER_ID AND CUSTOMER_TYPE\=PI.CUSTOMER_TYPE AND BRANCH_CODE\=PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS  WHERE   RSK_PROPOSAL_NUMBER \=RK.RSK_PROPOSAL_NUMBER) AND RK.RSK_POLBRANCH \= BRAN.TMAS_POL_BRANCH_ID AND BRAN.BRANCH_CODE\=?  
risk.select.getBrokerage=SELECT RSK_BROKERAGE,RSK_TAX FROM TTRN_RISK_COMMISSION WHERE RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=?) AND RSK_PROPOSAL_NUMBER=?
risk.select.getRemarks=SELECT RD.RSK_REMARKS FROM TTRN_RISK_DETAILS RD WHERE RD.RSK_PROPOSAL_NUMBER\=? AND RD.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER AND RSK_REMARKS IS NOT NULL) AND RD.RSK_REMARKS IS NOT NULL
risk.select.getCommDet=SELECT COM.RSK_REINSTATE_NO,COM.RSK_REINSTATE_ADDL_PREM_PCT,COM.RSK_BURNING_COST_PCT,COM.RSK_REMARKS FROM TTRN_RISK_COMMISSION COM WHERE COM.RSK_PROPOSAL_NUMBER=? AND COM.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=COM.RSK_PROPOSAL_NUMBER)
##risk.select.uwYear=SELECT DISTINCT  A.UW_YEAR CONTDET1,A.UW_YEAR CONTDET2 FROM POSITION_MASTER A WHERE A.PRODUCT_ID  \=? AND A.CONTRACT_STATUS \='A' AND A.CONTRACT_NO IS NOT NULL   AND A.CONTRACT_NO \!\='0' AND TRUNC(TO_DATE(?,'DD/MM/YYYY'))<TRUNC(TO_DATE(A.EXPIRY_DATE,'DD/MM/YY')) AND A.BRANCH_CODE \= ? AND A.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE A.PRODUCT_ID\=PRODUCT_ID  AND A.CONTRACT_NO \= CONTRACT_NO  AND TRUNC(TO_DATE(?,'DD/MM/YYYY'))<TRUNC(TO_DATE(EXPIRY_DATE,'DD/MM/YY')) AND A.BRANCH_CODE \= BRANCH_CODE) ORDER BY A.UW_YEAR
risk.select.uwYear=SELECT DISTINCT  A.UW_YEAR CONTDET1,A.UW_YEAR CONTDET2 FROM POSITION_MASTER A WHERE A.PRODUCT_ID  \=? AND A.CONTRACT_STATUS \='A' AND A.CONTRACT_NO IS NOT NULL   AND A.CONTRACT_NO \!\='0' AND TRUNC(TO_DATE(EXPIRY_DATE,'DD/MM/YY'))<TRUNC(TO_DATE(?,'DD/MM/YYYY'))  AND A.BRANCH_CODE \= ? AND A.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER P WHERE P.PRODUCT_ID\=A.PRODUCT_ID  AND P.CONTRACT_NO \= A.CONTRACT_NO AND P.CONTRACT_STATUS \=A.CONTRACT_STATUS AND TRUNC(TO_DATE(EXPIRY_DATE,'DD/MM/YY'))<TRUNC(TO_DATE(?,'DD/MM/YYYY')) AND P.BRANCH_CODE \= A.BRANCH_CODE) ORDER BY A.UW_YEAR
risk.select.getLayerDupcheckByBaseLayer=SELECT LAYER_NO  FROM POSITION_MASTER WHERE  LAYER_NO=? AND BASE_LAYER=?
risk.select.getLayerDupcheckByProNo=SELECT LAYER_NO FROM POSITION_MASTER PM WHERE  LAYER_NO=? AND PROPOSAL_NO=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO=PM.PROPOSAL_NO)

##Premium Query
premium.select.sumOfPaidPremium=SELECT NVL(SUM(PREMIUM_QUOTASHARE_OC),'0') FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=?
GETSETTLEMET_STATUS = SELECT ALLOCATED_TILL_DATE,NETDUE_OC FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=?
premium.select.currency=SELECT CM.SHORT_NAME CURRENCY_NAME FROM CURRENCY_MASTER CM WHERE CM.CURRENCY_ID=? AND CM.BRANCH_CODE=? AND CM.STATUS='Y' AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE BRANCH_CODE=CM.BRANCH_CODE AND  COUNTRY_ID=CM.COUNTRY_ID AND STATUS=CM.STATUS AND CURRENCY_ID=CM.CURRENCY_ID)
premium.select.currency.short=SELECT CM.SHORT_NAME FROM CURRENCY_MASTER CM WHERE CM.CURRENCY_ID=? AND CM.BRANCH_CODE=? AND CM.STATUS='Y' AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE BRANCH_CODE=CM.BRANCH_CODE AND  COUNTRY_ID=CM.COUNTRY_ID AND STATUS=CM.STATUS AND CURRENCY_ID=CM.CURRENCY_ID)
#premium.select.currecy.name=select COUNTRY_SHORT_NAME from country_master cm where country_id in (select COUNTRY_ID from tmas_branch_master where branch_code=?) and rownum=1 and cm.branch_code=?
premium.select.currecy.name=SELECT COUNTRY_SHORT_NAME FROM TMAS_BRANCH_MASTER WHERE  BRANCH_CODE=?
premium.select.personalInfo=SELECT FIRST_NAME FROM PERSONAL_INFO A,TTRN_RISK_DETAILS B WHERE B.RSK_BROKERID=A.CUSTOMER_ID AND B.RSK_PROPOSAL_NUMBER=?
premium.select.contractNo=SELECT CONTRACT_NO FROM  RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=?
premium.select.sum=SELECT SUM(PREMIUM_QUOTASHARE_OC) FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=?
premium.insert.facpremium=INSERT INTO RSK_PREMIUM_DETAILS_TEMP (RECEIPT_NO,CONTRACT_NO,REQUEST_NO,TRANSACTION_MONTH_YEAR,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER,CURRENCY_ID ,EXCHANGE_RATE,PREMIUM_QUOTASHARE_OC,COMMISSION,COMMISSION_QUOTASHARE_OC,BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME,STATUS,NETDUE_OC,ENTERING_MODE,SETTLEMENT_STATUS,OTHER_COST_OC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,BROKERAGE_AMT_DC,TAX_AMT_DC,NETDUE_DC,OTHER_COST_DC,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,ENTRY_DATE,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,PREMIUM_CLASS,PREMIUM_SUBCLASS,STATEMENT_DATE,PROPOSAL_NO,PRODUCT_ID,REVERSEL_STATUS,TRANS_STATUS,TRANS_TYPE) VALUES(?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?)
#premium.insert.facpremium=INSERT INTO RSK_PREMIUM_DETAILS (RECEIPT_NO,CONTRACT_NO,TRANSACTION_NO,TRANSACTION_MONTH_YEAR,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER,CURRENCY_ID ,EXCHANGE_RATE,PREMIUM_QUOTASHARE_OC,COMMISSION,COMMISSION_QUOTASHARE_OC,BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME,STATUS,NETDUE_OC,ENTERING_MODE,SETTLEMENT_STATUS,OTHER_COST_OC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,BROKERAGE_AMT_DC,TAX_AMT_DC,NETDUE_DC,OTHER_COST_DC,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,ENTRY_DATE,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC) VALUES(?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?)
premium.insert.facpremium.auto=INSERT INTO RSK_PREMIUM_DETAILS (RECEIPT_NO,CONTRACT_NO,TRANSACTION_NO, TRANSACTION_MONTH_YEAR,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER,CURRENCY_ID , EXCHANGE_RATE,PREMIUM_QUOTASHARE_OC,COMMISSION,COMMISSION_QUOTASHARE_OC,BROKERAGE,BROKERAGE_AMT_OC, TAX,TAX_AMT_OC,STATEMENT_DATE, STATUS,NETDUE_OC,ENTERING_MODE,SETTLEMENT_STATUS,OTHER_COST_OC, PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,BROKERAGE_AMT_DC,TAX_AMT_DC,NETDUE_DC,OTHER_COST_DC,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,ENTRY_DATE,LAYER_NO,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,ENTRY_DATE_TIME,PROPOSAL_NO,PRODUCT_ID,PREMIUM_CLASS,PREMIUM_SUBCLASS) VALUES(:receipt,:contractNo,:transactionNo, TO_DATE(:transactionDate,'DD/MM/YYYY'),:installmentDate,:installmentNo,:currencyId, :exRate,:premQS,:commission,:commissionOC,:brokerage,:brokerageOC, :tax,:taxOC,to_date(:entryDate,'dd/mm/yyyy'), :status,:netDueOC,:enteringMode,:settlementStatus,:otherCostOC, :premQSDC,:commissionDC,:brokerageDC,:taxDC,:netDueDC,:otherCostDC,:cedantRef,:remark,:totalCrOC,:totalCrDC,:totalDrOC,:totalDrDC,:whtOC,:whtDC,SYSDATE,:layerNo,'Yes',:loginId,:branchCode,:subClass,:taxDetectedOC,:taxDetectedDC,:servicetaxOC,:servicetaxDC,to_date(:receivedDate,'dd/mm/yyyy'),:proposalNo,:productId,:premiumClass,:premiumsubClass)
premium.insert.nonproppremium.auto=INSERT INTO RSK_PREMIUM_DETAILS (RECEIPT_NO,CONTRACT_NO,TRANSACTION_NO, TRANSACTION_MONTH_YEAR,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER,CURRENCY_ID , EXCHANGE_RATE,M_DPREMIUM_OC,COMMISSION,COMMISSION_QUOTASHARE_OC,BROKERAGE,BROKERAGE_AMT_OC, TAX,TAX_AMT_OC,STATEMENT_DATE, STATUS,NETDUE_OC,ENTERING_MODE,SETTLEMENT_STATUS,OTHER_COST_OC, M_DPREMIUM_DC,COMMISSION_QUOTASHARE_DC,BROKERAGE_AMT_DC,TAX_AMT_DC,NETDUE_DC,OTHER_COST_DC,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,ENTRY_DATE,LAYER_NO,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,ENTRY_DATE_TIME,PROPOSAL_NO,PRODUCT_ID,PREMIUM_CLASS,PREMIUM_SUBCLASS) VALUES(:receipt,:contractNo,:transactionNo, TO_DATE(:transactionDate,'DD/MM/YYYY'),:installmentDate,:installmentNo,:currencyId, :exRate,:premQS,:commission,:commissionOC,:brokerage,:brokerageOC, :tax,:taxOC,to_date(:entryDate,'dd/mm/yyyy'), :status,:netDueOC,:enteringMode,:settlementStatus,:otherCostOC, :premQSDC,:commissionDC,:brokerageDC,:taxDC,:netDueDC,:otherCostDC,:cedantRef,:remark,:totalCrOC,:totalCrDC,:totalDrOC,:totalDrDC,:whtOC,:whtDC,SYSDATE,:layerNo,'Yes',:loginId,:branchCode,:subClass,:taxDetectedOC,:taxDetectedDC,:servicetaxOC,:servicetaxDC,:bonusOC,:bonusDC,to_date(:receivedDate,'dd/mm/yyyy'),:proposalNo,:productId,:premiumClass,:premiumsubClass)
UPDATE_MND_INSTALLMENT_AUTO=UPDATE TTRN_MND_INSTALLMENTS TMI SET TRANSACTION_NO=:transactionNo WHERE  CONTRACT_NO = :contractNo AND LAYER_NO = :layerNo and INSTALLMENT_NO=:installmentNo AND ENDORSEMENT_NO = (SELECT   MAX (ENDORSEMENT_NO)  FROM   TTRN_MND_INSTALLMENTS  WHERE   CONTRACT_NO = TMI.CONTRACT_NO AND LAYER_NO = TMI.LAYER_NO and INSTALLMENT_NO=TMI.INSTALLMENT_NO)
PREMIUM_INSERT_TREATYPREMIUM_TEMP=INSERT INTO RSK_PREMIUM_DETAILS_TEMP ( CONTRACT_NO,REQUEST_NO,TRANSACTION_MONTH_YEAR ,ACCOUNT_PERIOD_QTR,ACCOUNT_PERIOD_YEAR,CURRENCY_ID ,EXCHANGE_RATE,BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME, PREMIUM_QUOTASHARE_OC,COMMISSION_QUOTASHARE_OC,PREMIUM_SURPLUS_OC,COMMISSION_SURPLUS_OC, PREMIUM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_OC,PREMIUM_PORTFOLIOOUT_OC,LOSS_RESERVE_RELEASED_OC ,PREMIUMRESERVE_QUOTASHARE_OC,CASH_LOSS_CREDIT_OC,LOSS_RESERVERETAINED_OC,PROFIT_COMMISSION_OC, CASH_LOSSPAID_OC, STATUS,ENTERING_MODE,RECEIPT_NO,CLAIMS_PAID_OC,SETTLEMENT_STATUS,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,NETDUE_OC,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,PREMIUM_SURPLUS_DC,COMMISSION_SURPLUS_DC, PREMIUM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_DC,PREMIUM_PORTFOLIOOUT_DC,LOSS_RESERVE_RELEASED_DC  ,PREMIUMRESERVE_QUOTASHARE_DC,CASH_LOSS_CREDIT_DC,LOSS_RESERVERETAINED_DC,PROFIT_COMMISSION_DC, CASH_LOSSPAID_DC,CLAIMS_PAID_DC,XL_COST_DC, CLAIM_PORTFOLIO_OUT_DC,PREMIUM_RESERVE_REALSED_DC,NETDUE_DC,OTHER_COST_DC,COMMISSION,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,INTEREST_OC,INTEREST_DC,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,ENTRY_DATE,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,OVERRIDER,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC, SC_COMM_OC,SC_COMM_DC,PREMIUM_CLASS,PREMIUM_SUBCLASS,ACCOUNTING_PERIOD_DATE,STATEMENT_DATE,OSBYN,LPC_OC,LPC_DC,SECTION_NAME, PROPOSAL_NO,PRODUCT_ID,TRANS_STATUS,TRANS_TYPE) values (?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?)
#premium.insert.treatypremium=INSERT INTO RSK_PREMIUM_DETAILS ( CONTRACT_NO,TRANSACTION_NO,TRANSACTION_MONTH_YEAR ,ACCOUNT_PERIOD_QTR,ACCOUNT_PERIOD_YEAR,CURRENCY_ID ,EXCHANGE_RATE,BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME, PREMIUM_QUOTASHARE_OC,COMMISSION_QUOTASHARE_OC,PREMIUM_SURPLUS_OC,COMMISSION_SURPLUS_OC, PREMIUM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_OC,PREMIUM_PORTFOLIOOUT_OC,LOSS_RESERVE_RELEASED_OC ,PREMIUMRESERVE_QUOTASHARE_OC,CASH_LOSS_CREDIT_OC,LOSS_RESERVERETAINED_OC,PROFIT_COMMISSION_OC, CASH_LOSSPAID_OC, STATUS,ENTERING_MODE,RECEIPT_NO,CLAIMS_PAID_OC,SETTLEMENT_STATUS,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,NETDUE_OC,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,PREMIUM_SURPLUS_DC,COMMISSION_SURPLUS_DC, PREMIUM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_DC,PREMIUM_PORTFOLIOOUT_DC,LOSS_RESERVE_RELEASED_DC  ,PREMIUMRESERVE_QUOTASHARE_DC,CASH_LOSS_CREDIT_DC,LOSS_RESERVERETAINED_DC,PROFIT_COMMISSION_DC, CASH_LOSSPAID_DC,CLAIMS_PAID_DC,XL_COST_DC, CLAIM_PORTFOLIO_OUT_DC,PREMIUM_RESERVE_REALSED_DC,NETDUE_DC,OTHER_COST_DC,COMMISSION,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,INTEREST_OC,INTEREST_DC,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,ENTRY_DATE,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,OVERRIDER,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC, SC_COMM_OC,SC_COMM_DC) values (?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
premium.insert.treatypremium=INSERT INTO RSK_PREMIUM_DETAILS ( CONTRACT_NO,TRANSACTION_NO,TRANSACTION_MONTH_YEAR ,ACCOUNT_PERIOD_QTR,ACCOUNT_PERIOD_YEAR,CURRENCY_ID ,EXCHANGE_RATE,BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME, PREMIUM_QUOTASHARE_OC,COMMISSION_QUOTASHARE_OC,PREMIUM_SURPLUS_OC,COMMISSION_SURPLUS_OC, PREMIUM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_OC,PREMIUM_PORTFOLIOOUT_OC,LOSS_RESERVE_RELEASED_OC ,PREMIUMRESERVE_QUOTASHARE_OC,CASH_LOSS_CREDIT_OC,LOSS_RESERVERETAINED_OC,PROFIT_COMMISSION_OC, CASH_LOSSPAID_OC, STATUS,ENTERING_MODE,RECEIPT_NO,CLAIMS_PAID_OC,SETTLEMENT_STATUS,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,NETDUE_OC,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,PREMIUM_SURPLUS_DC,COMMISSION_SURPLUS_DC, PREMIUM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_DC,PREMIUM_PORTFOLIOOUT_DC,LOSS_RESERVE_RELEASED_DC  ,PREMIUMRESERVE_QUOTASHARE_DC,CASH_LOSS_CREDIT_DC,LOSS_RESERVERETAINED_DC,PROFIT_COMMISSION_DC, CASH_LOSSPAID_DC,CLAIMS_PAID_DC,XL_COST_DC, CLAIM_PORTFOLIO_OUT_DC,PREMIUM_RESERVE_REALSED_DC,NETDUE_DC,OTHER_COST_DC,COMMISSION,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,INTEREST_OC,INTEREST_DC,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,ENTRY_DATE,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,OVERRIDER,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC, SC_COMM_OC,SC_COMM_DC,PREMIUM_CLASS,PREMIUM_SUBCLASS,ACCOUNTING_PERIOD_DATE,STATEMENT_DATE,OSBYN,LPC_OC,LPC_DC,SECTION_NAME, PROPOSAL_NO,PRODUCT_ID,BUSINESS_TYPE) values (?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?)
premium.insert.xolpremium= INSERT INTO RSK_PREMIUM_DETAILS ( CONTRACT_NO,TRANSACTION_NO,TRANSACTION_MONTH_YEAR ,ACCOUNT_PERIOD_QTR,ACCOUNT_PERIOD_YEAR,CURRENCY_ID ,EXCHANGE_RATE,BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME ,COMMISSION,M_DPREMIUM_OC, ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC ,STATUS,NETDUE_OC, LAYER_NO,ENTERING_MODE,RECEIPT_NO,INSTALMENT_NUMBER, SETTLEMENT_STATUS,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC,NETDUE_DC,OTHER_COST_DC,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,ENTRY_DATE,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,GNPI_ENDT_NO,PREMIUM_SUBCLASS,PREMIUM_CLASS,STATEMENT_DATE, PROPOSAL_NO,PRODUCT_ID,REVERSEL_STATUS) VALUES (?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?)
premium.insert.retoxolpremium=INSERT INTO RSK_XL_PREMIUM_DETAILS ( CONTRACT_NO,TRANSACTION_NO,TRANSACTION_MONTH_YEAR ,ACCOUNT_PERIOD_QTR,ACCOUNT_PERIOD_YEAR,CURRENCY_ID ,EXCHANGE_RATE,BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME ,COMMISSION,M_DPREMIUM_OC, ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC ,STATUS,NETDUE_OC, LAYER_NO,ENTERING_MODE,RECEIPT_NO,INSTALMENT_NUMBER, SETTLEMENT_STATUS,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC,NETDUE_DC,OTHER_COST_DC,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,ENTRY_DATE,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,GNPI_ENDT_NO,PREMIUM_SUBCLASS,PREMIUM_CLASS,STATEMENT_DATE, PROPOSAL_NO,PRODUCT_ID,REVERSEL_STATUS) VALUES (?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?)
#premium.select.facContDet= SELECT RK.RSK_DEPTID,RK.RSK_CONTRACT_NO,RK.RSK_ENDORSEMENT_NO,PFC.TMAS_PFC_NAME,SPFC.TMAS_SPFC_NAME,PERSONAL.COMPANY_NAME COMPANY, RK.RSK_TREATYID ,PI.FIRST_NAME ||' '||PI.LAST_NAME BROKER,TO_CHAR(RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE,TO_CHAR(RK.RSK_EXPIRY_DATE,'DD/MM/YYYY')  EXP_DATE,TO_CHAR(RK.RSK_MONTH,'DD/MM/YYYY') MONTH,RK.RSK_PROPOSAL_NUMBER ,RK.RSK_UWYEAR,RK.RSK_LAYER_NO,RK.RSK_INSURED_NAME,RK.RSK_ORIGINAL_CURR,CM.CURRENCY_NAME,PERSONAL.ADDRESS1 || ' ' || PERSONAL.ADDRESS2 Address,PI.Special_Rate FROM TTRN_RISK_DETAILS RK ,TMAS_PFC_MASTER PFC, TMAS_SPFC_MASTER SPFC, PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,CURRENCY_MASTER CM WHERE RK.RSK_CONTRACT_NO=?    AND PFC.TMAS_PFC_ID=RSK_PFCID AND PFC.BRANCH_CODE=? AND SPFC.TMAS_SPFC_ID=RK.RSK_SPFCID AND SPFC.BRANCH_CODE=? AND SPFC.TMAS_PRODUCT_ID=? AND RK.RSK_CEDINGID=PERSONAL.CUSTOMER_ID AND PERSONAL.BRANCH_CODE=? AND PERSONAL.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE  CUSTOMER_ID=PERSONAL.CUSTOMER_ID AND   BRANCH_CODE=PERSONAL.BRANCH_CODE ) AND RK.RSK_BROKERID=PI.CUSTOMER_ID AND PI.BRANCH_CODE=? AND PI.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE  CUSTOMER_ID=PI.CUSTOMER_ID AND  BRANCH_CODE=PI.BRANCH_CODE ) AND RK.RSK_ENDORSEMENT_NO=( SELECT MAX( RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=?) AND CM.CURRENCY_ID=RK.RSK_ORIGINAL_CURR AND CM.BRANCH_CODE=PI.BRANCH_CODE AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CM.CURRENCY_ID AND BRANCH_CODE=CM.BRANCH_CODE )
premium.select.facContDet= SELECT RK.RSK_DEPTID,RK.RSK_SPFCID,RK.RSK_CONTRACT_NO,RK.RSK_ENDORSEMENT_NO,PFC.TMAS_PFC_NAME,RK.RSK_SPFCID,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RK.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RK.RSK_PRODUCTID AND PFC.BRANCH_CODE = SPFC.BRANCH_CODE)TMAS_SPFC_NAME,PERSONAL.COMPANY_NAME COMPANY, RK.RSK_TREATYID ,PI.FIRST_NAME ||' '||PI.LAST_NAME BROKER,TO_CHAR(RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE,TO_CHAR(RK.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') RSK_ACCOUNT_DATE,TO_CHAR(RK.RSK_EXPIRY_DATE,'DD/MM/YYYY')  EXP_DATE,TO_CHAR(RK.RSK_MONTH,'DD/MM/YYYY') MONTH,RK.RSK_PROPOSAL_NUMBER ,RK.RSK_UWYEAR,RK.RSK_LAYER_NO,RK.RSK_INSURED_NAME,RK.RSK_ORIGINAL_CURR,CM.CURRENCY_NAME,CM.SHORT_NAME,PERSONAL.ADDRESS1 || ' ' || PERSONAL.ADDRESS2 Address,PI.Special_Rate FROM TTRN_RISK_DETAILS RK ,TMAS_PFC_MASTER PFC, PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,CURRENCY_MASTER CM WHERE RK.RSK_CONTRACT_NO=?    AND PFC.TMAS_PFC_ID=RSK_PFCID AND PFC.BRANCH_CODE=? AND  RK.BRANCH_CODE=? AND RK.RSK_PRODUCTID=? AND RK.RSK_CEDINGID=PERSONAL.CUSTOMER_ID AND PERSONAL.BRANCH_CODE=? AND PERSONAL.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE  CUSTOMER_ID=PERSONAL.CUSTOMER_ID AND   BRANCH_CODE=PERSONAL.BRANCH_CODE ) AND RK.RSK_BROKERID=PI.CUSTOMER_ID AND PI.BRANCH_CODE=? AND PI.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE  CUSTOMER_ID=PI.CUSTOMER_ID AND  BRANCH_CODE=PI.BRANCH_CODE ) AND RK.RSK_ENDORSEMENT_NO=( SELECT MAX( RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=?) AND CM.CURRENCY_ID=RK.RSK_ORIGINAL_CURR AND CM.BRANCH_CODE=PI.BRANCH_CODE AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CM.CURRENCY_ID AND BRANCH_CODE=CM.BRANCH_CODE )
premium.select.treatyContDet1= SELECT   RK.TREATYTYPE,RK.RSK_DEPTID,RK.RSK_SPFCID,RK.RSK_CONTRACT_NO,RK.RSK_ENDORSEMENT_NO, PFC.TMAS_PFC_NAME,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RK.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= RK.RSK_PRODUCTID AND PFC.BRANCH_CODE \= SPFC.BRANCH_CODE)TMAS_SPFC_NAME, PERSONAL.COMPANY_NAME COMPANY, RK.RSK_TREATYID, PI.FIRST_NAME || ' ' || PI.LAST_NAME BROKER, TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE,TO_CHAR(RK.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') RSK_ACCOUNT_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,TO_CHAR(RK.RSK_MONTH,'DD/MM/YYYY') MONTH, BRANCH.TMAS_POL_BRANCH_NAME,RK.RSK_PROPOSAL_NUMBER, RK.RSK_UWYEAR, RK.RSK_LAYER_NO,RK.RSK_ORIGINAL_CURR,CM.SHORT_NAME CURRENCY_NAME,PERSONAL.ADDRESS1 || ' ' || PERSONAL.ADDRESS2 Address,RK.INWARD_BUS_TYPE,(select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID\=RK.RSK_DEPTID and branch_code\=RK.branch_code  and TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y')  TMAS_DEPARTMENT_NAME FROM   TTRN_RISK_DETAILS RK,TMAS_PFC_MASTER PFC, PERSONAL_INFO PERSONAL, TMAS_POLICY_BRANCH BRANCH,PERSONAL_INFO PI,CURRENCY_MASTER CM  WHERE RK.RSK_CONTRACT_NO \= ? 
premium.select.treatyContDet2= AND PFC.TMAS_PFC_ID \= RK.RSK_PFCID AND PFC.BRANCH_CODE \= ? AND RK.BRANCH_CODE \= ? AND RK.RSK_PRODUCTID \= ? AND RK.RSK_CEDINGID \= PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE\='C' AND PERSONAL.BRANCH_CODE \= ? AND PERSONAL.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PERSONAL.CUSTOMER_ID AND BRANCH_CODE \= PERSONAL.BRANCH_CODE) AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND   PI.CUSTOMER_TYPE\='B' AND PI.BRANCH_CODE \= ? AND PI.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO \=? 
#premium.select.treatyContDet1= SELECT   RK.RSK_DEPTID,RK.RSK_CONTRACT_NO,RK.RSK_ENDORSEMENT_NO, PFC.TMAS_PFC_NAME,SPFC.TMAS_SPFC_NAME, PERSONAL.COMPANY_NAME COMPANY, RK.RSK_TREATYID, PI.FIRST_NAME || ' ' || PI.LAST_NAME BROKER, TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,TO_CHAR(RK.RSK_MONTH,'DD/MM/YYYY') MONTH, BRANCH.TMAS_POL_BRANCH_NAME,RK.RSK_PROPOSAL_NUMBER, RK.RSK_UWYEAR, RK.RSK_LAYER_NO,RK.RSK_ORIGINAL_CURR,CM.CURRENCY_NAME,PERSONAL.ADDRESS1 || ' ' || PERSONAL.ADDRESS2 Address FROM   TTRN_RISK_DETAILS RK,TMAS_PFC_MASTER PFC, TMAS_SPFC_MASTER SPFC, PERSONAL_INFO PERSONAL, TMAS_POLICY_BRANCH BRANCH,PERSONAL_INFO PI,CURRENCY_MASTER CM  WHERE RK.RSK_CONTRACT_NO \= ? 
#premium.select.treatyContDet2= AND PFC.TMAS_PFC_ID \= RK.RSK_PFCID AND PFC.BRANCH_CODE \= ? AND SPFC.TMAS_SPFC_ID \= RK.RSK_SPFCID AND SPFC.BRANCH_CODE \= ? AND SPFC.TMAS_PRODUCT_ID \= ? AND RK.RSK_CEDINGID \= PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE\='C' AND PERSONAL.BRANCH_CODE \= ? AND PERSONAL.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PERSONAL.CUSTOMER_ID AND BRANCH_CODE \= PERSONAL.BRANCH_CODE) AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND   PI.CUSTOMER_TYPE\='B' AND PI.BRANCH_CODE \= ? AND PI.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO \=? 
premium.select.treatyContDet3= )AND RK.RSK_POLBRANCH = BRANCH.TMAS_POL_BRANCH_ID AND BRANCH.BRANCH_CODE = ? AND CM.CURRENCY_ID=RK.RSK_ORIGINAL_CURR AND CM.BRANCH_CODE=PI.BRANCH_CODE AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CM.CURRENCY_ID AND BRANCH_CODE=CM.BRANCH_CODE )
premium.select.xolLayerNo1=AND RK.RSK_LAYER_NO\=? 
premium.select.xolLayerNo2=AND RSK_LAYER_NO=?
premium.select.commissionDetails=SELECT RSK_OUR_ASS_ACQ_COST,RSK_COMM,RSK_COMM_QUOTASHARE,RSK_COMM_SURPLUS,RSK_OVERRIDER_PERC,RSK_BROKERAGE,RSK_TAX,RSK_PREMIUM_RESERVE,RSK_LOSS_RESERVE,RSK_OTHER_COST,RSK_ACQUISTION_COST_OC,RSK_MANAGEMENT_EXPENSES,RSK_PROFIT_COMM, NVL(RSK_PREMIUM_RESERVE,0) RSK_PREMIUM_RESERVE FROM  TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=?)
#premium.select.facProposalDetails=SELECT SHARE_SIGNED,GWPI_OUR_SHARE_OC, FROM TTRN_FAC_RISK_PROPOSAL  WHERE RSK_PROPOSAL_NUMBER=? AND  RSK_ENDORSEMENT_NO IS NOT NULL AND  RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_FAC_RISK_PROPOSAL WHERE  RSK_PROPOSAL_NUMBER=? AND  RSK_ENDORSEMENT_NO IS NOT NULL )
premium.select.facProposalDetails=SELECT SHARE_SIGNED,GWPI_OUR_SHARE_OC,(NVL(GWPI_OUR_SHARE_OC,0)/NVL(D.RSK_EXCHANGE_RATE,0)) GWPI_OC,NVL(D.RSK_EXCHANGE_RATE,0) RSK_EXCHANGE_RATE FROM TTRN_FAC_RISK_PROPOSAL F,TTRN_RISK_DETAILS D  WHERE F.RSK_PROPOSAL_NUMBER=? AND  F.RSK_ENDORSEMENT_NO IS NOT NULL AND D.RSK_PROPOSAL_NUMBER=F.RSK_PROPOSAL_NUMBER AND D.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS RD WHERE RD.RSK_PROPOSAL_NUMBER=D.RSK_PROPOSAL_NUMBER) AND  F.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_FAC_RISK_PROPOSAL FP WHERE  FP.RSK_PROPOSAL_NUMBER=? AND  FP.RSK_ENDORSEMENT_NO IS NOT NULL )
premium.select.treatyProposalDetails=SELECT RSK_PREMIUM_QUOTA_SHARE,RSK_PREMIUM_SURPULS,RSK_XLCOST_OS_OC,RSK_SHARE_SIGNED,RSK_EPI_OSOF_OC,RSK_MD_PREM_OS_OC,NVL(RSK_EPI_OSOF_OC,'0')-NVL(RSK_MD_PREM_OS_OC,'0')  ADJ_PRE,RSK_EPI_OSOE_OC,NVL(D.RSK_EXCHANGE_RATE,0) RSK_EXCHANGE_RATE  FROM TTRN_RISK_PROPOSAL F,TTRN_RISK_DETAILS D   WHERE F.RSK_PROPOSAL_NUMBER=? AND  F.RSK_ENDORSEMENT_NO IS NOT NULL AND D.RSK_PROPOSAL_NUMBER=F.RSK_PROPOSAL_NUMBER AND D.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS RD WHERE RD.RSK_PROPOSAL_NUMBER=D.RSK_PROPOSAL_NUMBER) AND F.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_RISK_PROPOSAL WHERE  RSK_PROPOSAL_NUMBER=? AND RSK_PREMIUM_QUOTA_SHARE IS NOT NULL)
premium.select.treatyXOLfacProposalDetails=SELECT RSK_PREMIUM_QUOTA_SHARE,RSK_PREMIUM_SURPULS,RSK_XLCOST_OS_OC,RSK_SHARE_SIGNED,RSK_EPI_OSOF_OC,RSK_MD_PREM_OS_OC,NVL(RSK_EPI_OSOF_OC,'0')-NVL(RSK_MD_PREM_OS_OC,'0')  ADJ_PRE,NVL(D.RSK_EXCHANGE_RATE,0) RSK_EXCHANGE_RATE FROM TTRN_RISK_PROPOSAL F,TTRN_RISK_DETAILS D  WHERE F.RSK_PROPOSAL_NUMBER=? AND  F.RSK_ENDORSEMENT_NO IS NOT NULL AND   D.RSK_PROPOSAL_NUMBER=F.RSK_PROPOSAL_NUMBER AND D.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS RD WHERE RD.RSK_PROPOSAL_NUMBER=D.RSK_PROPOSAL_NUMBER) AND F.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_RISK_PROPOSAL  WHERE  RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO IS NOT NULL)
premium.select.currencySel=SELECT CUR.CURRENCY_NAME,RS.RSK_EXCHANGE_RATE,CUR.CURRENCY_ID FROM TTRN_RISK_DETAILS RS,CURRENCY_MASTER CUR WHERE RS.RSK_CONTRACT_NO\=?  AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO\=?) AND CUR.CURRENCY_ID\=RS.RSK_ORIGINAL_CURR AND CUR.COUNTRY_ID\=?
##premium.update.updateTran=UPDATE POLICY_NO_GENERATION SET TRANSACTION_ID\= (SELECT MAX(TRANSACTION_ID)+1 FROM POLICY_NO_GENERATION WHERE PRODUCT_ID\=? AND BRANCH_CODE\=? )WHERE PRODUCT_ID\=? AND BRANCH_CODE\=?
premium.select.facCommDtl=SELECT RSK_COMM,RSK_COMM_SURPLUS,RSK_OVERRIDER_PERC, RSK_BROKERAGE,RSK_TAX,RSK_ACQUISTION_COST_OC,RSK_MANAGEMENT_EXPENSES, RSK_OTHER_COST FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=?)
premium.select.facCommDtl1=SELECT RSK_COMM_QUOTASHARE,RSK_COMM_SURPLUS,RSK_OVERRIDER_PERC, RSK_BROKERAGE,RSK_TAX,RSK_PREMIUM_RESERVE,RSK_LOSS_RESERVE,RSK_OTHER_COST FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=?)
premium.select.premSearch=SELECT SUM(PREM_RESERVE_REL),SUM(PREM_RESERVE_RETENTION) FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=?
premium.update.facUpdatePre=UPDATE RSK_PREMIUM_DETAILS SET ACCOUNT_PERIOD_QTR\=?,INSTALMENT_NUMBER\=?,TRANSACTION_MONTH_YEAR\=TO_DATE(?,'DD/MM/YYYY'),CURRENCY_ID\=?,EXCHANGE_RATE\=?,PREMIUM_QUOTASHARE_OC\=?,COMMISSION\=?,COMMISSION_QUOTASHARE_OC\=?,BROKERAGE\=? ,BROKERAGE_AMT_OC\=?,TAX\=?,TAX_AMT_OC\=?,ENTRY_DATE_TIME\=to_date(?,'dd/mm/yyyy'),STATUS\=?, NETDUE_OC\=?,ENTERING_MODE\=?,RECEIPT_NO\=?,OTHER_COST_OC\=?,PREMIUM_QUOTASHARE_DC\=?, COMMISSION_QUOTASHARE_DC\=?,BROKERAGE_AMT_DC\=?,TAX_AMT_DC\=?,NETDUE_DC\=?,OTHER_COST_DC\=?, CEDANT_REFERENCE\=?,REMARKS\=?,TOTAL_CR_OC\=?,TOTAL_CR_DC\=?,TOTAL_DR_OC\=?,TOTAL_DR_DC\=?,AMENDMENT_DATE\=to_date(?,'dd/mm/yyyy'),ENTRY_DATE\=SYSDATE,MOVEMENT_YN\=NULL,WITH_HOLDING_TAX_OC\=?,WITH_HOLDING_TAX_DC\=?,RI_CESSION\=?,LOGIN_ID\=?,BRANCH_CODE\=?,TDS_OC\=?,TDS_DC\=?,ST_OC\=?,ST_DC\=?,BONUS_OC\=?,BONUS_DC\=?,PREMIUM_CLASS\=?,PREMIUM_SUBCLASS\=?,STATEMENT_DATE\=TO_DATE(?,'DD/MM/YYYY'),TRANS_TYPE\=? WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=? 
premium.update.treatyUpdatePre=UPDATE RSK_PREMIUM_DETAILS SET TRANSACTION_MONTH_YEAR\=TO_DATE(?,'DD/MM/YYYY') ,ACCOUNT_PERIOD_QTR\=?,ACCOUNT_PERIOD_YEAR\=?,CURRENCY_ID\=? ,EXCHANGE_RATE\=?,BROKERAGE\=?,BROKERAGE_AMT_OC\=?,TAX\=?,TAX_AMT_OC\=?,ENTRY_DATE_TIME\=to_date(?,'dd/mm/yyyy'), PREMIUM_QUOTASHARE_OC\=?,COMMISSION_QUOTASHARE_OC\=?,PREMIUM_SURPLUS_OC\=?,COMMISSION_SURPLUS_OC\=?, PREMIUM_PORTFOLIOIN_OC\=?,CLAIM_PORTFOLIOIN_OC\=?,PREMIUM_PORTFOLIOOUT_OC\=?,LOSS_RESERVE_RELEASED_OC\=? ,PREMIUMRESERVE_QUOTASHARE_OC\=?,CASH_LOSS_CREDIT_OC\=?,LOSS_RESERVERETAINED_OC\=?,PROFIT_COMMISSION_OC\=?, CASH_LOSSPAID_OC\=?,ENTERING_MODE\=?,RECEIPT_NO\=?,CLAIMS_PAID_OC\=?,SETTLEMENT_STATUS\=?,XL_COST_OC\=?, CLAIM_PORTFOLIO_OUT_OC\=?,PREMIUM_RESERVE_REALSED_OC\=?,NETDUE_OC\=?,OTHER_COST_OC\=?,BROKERAGE_AMT_DC\=?,TAX_AMT_DC\=?,PREMIUM_QUOTASHARE_DC\=?,COMMISSION_QUOTASHARE_DC\=?,PREMIUM_SURPLUS_DC\=?,COMMISSION_SURPLUS_DC\=?,PREMIUM_PORTFOLIOIN_DC\=?, CLAIM_PORTFOLIOIN_DC\=?,PREMIUM_PORTFOLIOOUT_DC\=?,LOSS_RESERVE_RELEASED_DC\=?, PREMIUMRESERVE_QUOTASHARE_DC\=?,CASH_LOSS_CREDIT_DC\=?,LOSS_RESERVERETAINED_DC\=?,PROFIT_COMMISSION_DC\=?, CASH_LOSSPAID_DC\=?,CLAIMS_PAID_DC\=?,XL_COST_DC\=?, CLAIM_PORTFOLIO_OUT_DC\=?,PREMIUM_RESERVE_REALSED_DC\=?,NETDUE_DC\=?, OTHER_COST_DC\=?,CEDANT_REFERENCE\=?,REMARKS\=?,TOTAL_CR_OC\=?,TOTAL_CR_DC\=?,TOTAL_DR_OC\=?,TOTAL_DR_DC\=?,INTEREST_OC\=?,INTEREST_DC\=?,OSCLAIM_LOSSUPDATE_OC\=?,OSCLAIM_LOSSUPDATE_DC\=?,ENTRY_DATE\=SYSDATE,MOVEMENT_YN\=NULL,OVERRIDER_AMT_OC\=?,OVERRIDER_AMT_DC\=?,OVERRIDER\=?,AMENDMENT_DATE\=to_date(?,'dd/mm/yyyy'),WITH_HOLDING_TAX_OC\=?,WITH_HOLDING_TAX_DC\=?,RI_CESSION\=?,SUB_CLASS\=?,TDS_OC\=?,TDS_DC\=?,ST_OC\=?,ST_DC\=?, SC_COMM_OC\=?,SC_COMM_DC\=?,PREMIUM_CLASS\=?,PREMIUM_SUBCLASS\=?,ACCOUNTING_PERIOD_DATE\=TO_DATE(?,'DD/MM/YYYY'),STATEMENT_DATE\=TO_DATE(?,'DD/MM/YYYY'),OSBYN\=?,LPC_OC\=?,LPC_DC\=?,SECTION_NAME\=? WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=?
#premium.update.facUpdatePre=UPDATE RSK_PREMIUM_DETAILS SET ACCOUNT_PERIOD_QTR\=?,INSTALMENT_NUMBER\=?,TRANSACTION_MONTH_YEAR\=TO_DATE(?,'DD/MM/YYYY'),CURRENCY_ID\=?,EXCHANGE_RATE\=?,PREMIUM_QUOTASHARE_OC\=?,COMMISSION\=?,COMMISSION_QUOTASHARE_OC\=?,BROKERAGE\=? ,BROKERAGE_AMT_OC\=?,TAX\=?,TAX_AMT_OC\=?,ENTRY_DATE_TIME\=to_date(?,'dd/mm/yyyy'),STATUS\=?, NETDUE_OC\=?,ENTERING_MODE\=?,RECEIPT_NO\=?,OTHER_COST_OC\=?,PREMIUM_QUOTASHARE_DC\=?, COMMISSION_QUOTASHARE_DC\=?,BROKERAGE_AMT_DC\=?,TAX_AMT_DC\=?,NETDUE_DC\=?,OTHER_COST_DC\=?, CEDANT_REFERENCE\=?,REMARKS\=?,TOTAL_CR_OC\=?,TOTAL_CR_DC\=?,TOTAL_DR_OC\=?,TOTAL_DR_DC\=?,AMENDMENT_DATE\=to_date(?,'dd/mm/yyyy'),ENTRY_DATE\=SYSDATE,MOVEMENT_YN\=NULL,WITH_HOLDING_TAX_OC\=?,WITH_HOLDING_TAX_DC\=?,RI_CESSION\=?,LOGIN_ID\=?,BRANCH_CODE\=?,TDS_OC\=?,TDS_DC\=?,ST_OC\=?,ST_DC\=?,BONUS_OC\=?,BONUS_DC\=? WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=? 
#premium.update.treatyUpdatePre=UPDATE RSK_PREMIUM_DETAILS SET TRANSACTION_MONTH_YEAR\=TO_DATE(?,'DD/MM/YYYY') ,ACCOUNT_PERIOD_QTR\=?,ACCOUNT_PERIOD_YEAR\=?,CURRENCY_ID\=? ,EXCHANGE_RATE\=?,BROKERAGE\=?,BROKERAGE_AMT_OC\=?,TAX\=?,TAX_AMT_OC\=?,ENTRY_DATE_TIME\=to_date(?,'dd/mm/yyyy'), PREMIUM_QUOTASHARE_OC\=?,COMMISSION_QUOTASHARE_OC\=?,PREMIUM_SURPLUS_OC\=?,COMMISSION_SURPLUS_OC\=?, PREMIUM_PORTFOLIOIN_OC\=?,CLAIM_PORTFOLIOIN_OC\=?,PREMIUM_PORTFOLIOOUT_OC\=?,LOSS_RESERVE_RELEASED_OC\=? ,PREMIUMRESERVE_QUOTASHARE_OC\=?,CASH_LOSS_CREDIT_OC\=?,LOSS_RESERVERETAINED_OC\=?,PROFIT_COMMISSION_OC\=?, CASH_LOSSPAID_OC\=?,ENTERING_MODE\=?,RECEIPT_NO\=?,CLAIMS_PAID_OC\=?,SETTLEMENT_STATUS\=?,XL_COST_OC\=?, CLAIM_PORTFOLIO_OUT_OC\=?,PREMIUM_RESERVE_REALSED_OC\=?,NETDUE_OC\=?,OTHER_COST_OC\=?,BROKERAGE_AMT_DC\=?,TAX_AMT_DC\=?,PREMIUM_QUOTASHARE_DC\=?,COMMISSION_QUOTASHARE_DC\=?,PREMIUM_SURPLUS_DC\=?,COMMISSION_SURPLUS_DC\=?,PREMIUM_PORTFOLIOIN_DC\=?, CLAIM_PORTFOLIOIN_DC\=?,PREMIUM_PORTFOLIOOUT_DC\=?,LOSS_RESERVE_RELEASED_DC\=?, PREMIUMRESERVE_QUOTASHARE_DC\=?,CASH_LOSS_CREDIT_DC\=?,LOSS_RESERVERETAINED_DC\=?,PROFIT_COMMISSION_DC\=?, CASH_LOSSPAID_DC\=?,CLAIMS_PAID_DC\=?,XL_COST_DC\=?, CLAIM_PORTFOLIO_OUT_DC\=?,PREMIUM_RESERVE_REALSED_DC\=?,NETDUE_DC\=?, OTHER_COST_DC\=?,CEDANT_REFERENCE\=?,REMARKS\=?,TOTAL_CR_OC\=?,TOTAL_CR_DC\=?,TOTAL_DR_OC\=?,TOTAL_DR_DC\=?,INTEREST_OC\=?,INTEREST_DC\=?,OSCLAIM_LOSSUPDATE_OC\=?,OSCLAIM_LOSSUPDATE_DC\=?,ENTRY_DATE\=SYSDATE,MOVEMENT_YN\=NULL,OVERRIDER_AMT_OC\=?,OVERRIDER_AMT_DC\=?,OVERRIDER\=?,AMENDMENT_DATE\=to_date(?,'dd/mm/yyyy'),WITH_HOLDING_TAX_OC\=?,WITH_HOLDING_TAX_DC\=?,RI_CESSION\=?,SUB_CLASS\=?,TDS_OC\=?,TDS_DC\=?,ST_OC\=?,ST_DC\=?, SC_COMM_OC\=?,SC_COMM_DC\=? WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=?
premium.update.xolUpdatePre= UPDATE RSK_PREMIUM_DETAILS SET TRANSACTION_MONTH_YEAR\=TO_DATE(?,'DD/MM/YYYY'), CURRENCY_ID\=?  ,EXCHANGE_RATE\=?,BROKERAGE\=?,BROKERAGE_AMT_OC\=?,TAX\=?,TAX_AMT_OC\=?,ENTRY_DATE_TIME\=to_date(?,'dd/mm/yyyy'), COMMISSION\=?,M_DPREMIUM_OC\=?,ADJUSTMENT_PREMIUM_OC\=?, REC_PREMIUM_OC\=?, NETDUE_OC\=? ,ENTERING_MODE\=?,RECEIPT_NO\=?,OTHER_COST_OC\=?, BROKERAGE_AMT_DC\=?,TAX_AMT_DC\=?,M_DPREMIUM_DC\=?,ADJUSTMENT_PREMIUM_DC\=?, REC_PREMIUM_DC\=?,NETDUE_DC\=?,OTHER_COST_DC\=?,CEDANT_REFERENCE\=?,REMARKS\=?,TOTAL_CR_OC\=?,TOTAL_CR_DC\=?,TOTAL_DR_OC\=?,TOTAL_DR_DC\=?,AMENDMENT_DATE\=to_date(?,'dd/mm/yyyy'),ENTRY_DATE\=SYSDATE,MOVEMENT_YN\=NULL,WITH_HOLDING_TAX_OC\=?,WITH_HOLDING_TAX_DC\=?,RI_CESSION\=?,SUB_CLASS\=?,TDS_OC\=?,TDS_DC\=?,ST_OC\=?,ST_DC\=?,BONUS_OC\=?,BONUS_DC\=?,GNPI_ENDT_NO\=?,PREMIUM_CLASS\=?,STATEMENT_DATE\=TO_DATE(?,'DD/MM/YYYY') WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=?
premium.update.retroxolUpdatePre= UPDATE RSK_XL_PREMIUM_DETAILS SET TRANSACTION_MONTH_YEAR\=TO_DATE(?,'DD/MM/YYYY'), CURRENCY_ID\=?  ,EXCHANGE_RATE\=?,BROKERAGE\=?,BROKERAGE_AMT_OC\=?,TAX\=?,TAX_AMT_OC\=?,ENTRY_DATE_TIME\=to_date(?,'dd/mm/yyyy'), COMMISSION\=?,M_DPREMIUM_OC\=?,ADJUSTMENT_PREMIUM_OC\=?, REC_PREMIUM_OC\=?, NETDUE_OC\=? ,ENTERING_MODE\=?,RECEIPT_NO\=?,OTHER_COST_OC\=?, BROKERAGE_AMT_DC\=?,TAX_AMT_DC\=?,M_DPREMIUM_DC\=?,ADJUSTMENT_PREMIUM_DC\=?, REC_PREMIUM_DC\=?,NETDUE_DC\=?,OTHER_COST_DC\=?,CEDANT_REFERENCE\=?,REMARKS\=?,TOTAL_CR_OC\=?,TOTAL_CR_DC\=?,TOTAL_DR_OC\=?,TOTAL_DR_DC\=?,AMENDMENT_DATE\=to_date(?,'dd/mm/yyyy'),ENTRY_DATE\=SYSDATE,MOVEMENT_YN\=NULL,WITH_HOLDING_TAX_OC\=?,WITH_HOLDING_TAX_DC\=?,RI_CESSION\=?,SUB_CLASS\=?,TDS_OC\=?,TDS_DC\=?,ST_OC\=?,ST_DC\=?,BONUS_OC\=?,BONUS_DC\=?,GNPI_ENDT_NO\=?,PREMIUM_CLASS\=?,STATEMENT_DATE\=TO_DATE(?,'DD/MM/YYYY') WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=?

premium.select.facPremiumView=SELECT TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER, CURRENCY_ID ,EXCHANGE_RATE,PREMIUM_QUOTASHARE_OC,COMMISSION,COMMISSION_QUOTASHARE_OC, BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME,STATUS,RECEIPT_NO,NETDUE_OC ,TRANSACTION_NO,OTHER_COST_OC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,BROKERAGE_AMT_DC,TAX_AMT_DC, NETDUE_DC,OTHER_COST_DC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,SETTLEMENT_STATUS, WITH_HOLDING_TAX_OC, WITH_HOLDING_TAX_DC,TO_CHAR (TO_DATE(ACCOUNT_PERIOD_QTR,'DD/MM/YYYY')+30, 'DD/MM/YYYY') due_date,RI_CESSION,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,(select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID\=RK.PREMIUM_CLASS and branch_code\=RK.branch_code  and TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y')  TMAS_DEPARTMENT_NAME,PREMIUM_SUBCLASS, (select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RK.PREMIUM_SUBCLASS,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= ? AND RK.BRANCH_CODE \= SPFC.BRANCH_CODE)PREMIUM_SUBCLASS_VAL,REVERSEL_STATUS,REVERSE_TRANSACTION_NO from RSK_PREMIUM_DETAILS RK WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=?
premium.select.treatyPremiumView= SELECT OSBYN,CONTRACT_NO,TRANSACTION_NO,(SELECT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID \= '49' AND TYPE \= PD.ACCOUNT_PERIOD_QTR) ACCOUNT_PERIOD_QTR,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,EXCHANGE_RATE,BROKERAGE ,BROKERAGE_AMT_OC, TAX, TAX_AMT_OC, PREMIUM_QUOTASHARE_OC, COMMISSION_QUOTASHARE_OC ,PREMIUM_SURPLUS_OC, COMMISSION_SURPLUS_OC, PREMIUM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_OC, PREMIUM_PORTFOLIOOUT_OC ,LOSS_RESERVE_RELEASED_OC, PREMIUMRESERVE_QUOTASHARE_OC, CASH_LOSS_CREDIT_OC, LOSS_RESERVERETAINED_OC ,PROFIT_COMMISSION_OC, CASH_LOSSPAID_OC, NETDUE_OC,RECEIPT_NO,SETTLEMENT_STATUS,CLAIMS_PAID_OC,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,ACCOUNT_PERIOD_YEAR,CURRENCY_ID,OTHER_COST_OC, BROKERAGE_AMT_DC,TAX_AMT_DC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,PREMIUM_SURPLUS_DC,COMMISSION_SURPLUS_DC, PREMIUM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_DC,PREMIUM_PORTFOLIOOUT_DC,LOSS_RESERVE_RELEASED_DC ,PREMIUMRESERVE_QUOTASHARE_DC,CASH_LOSS_CREDIT_DC,LOSS_RESERVERETAINED_DC,PROFIT_COMMISSION_DC, CASH_LOSSPAID_DC,CLAIMS_PAID_DC,XL_COST_DC,CLAIM_PORTFOLIO_OUT_DC,PREMIUM_RESERVE_REALSED_DC, NETDUE_DC,OTHER_COST_DC,COMMISSION,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,INTEREST_OC,INTEREST_DC,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (ACCOUNTING_PERIOD_DATE+30, 'DD/MM/YYYY') due_date,RI_CESSION,TDS_OC,TDS_DC,ST_OC,ST_DC,SC_COMM_OC,SC_COMM_DC,LPC_OC,LPC_DC,PREMIUM_CLASS,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(PD.PREMIUM_SUBCLASS,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= '2' AND PD.BRANCH_CODE \= SPFC.BRANCH_CODE)PREMIUM_SUBCLASS,PD.PREMIUM_SUBCLASS SUB,(select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID\=PD.PREMIUM_CLASS and branch_code\=PD.branch_code  and TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y')  TMAS_DEPARTMENT_NAME,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY')STATEMENT_DATE,(SELECT SECTION_NAME FROM TTRN_PTTY_SECTION TPS WHERE CONTRACT_NO\=PD.CONTRACT_NO AND DEPT_ID\=PD.SUB_CLASS  AND SECTION_NO\=PD.SECTION_NAME AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_PTTY_SECTION WHERE CONTRACT_NO\=TPS.CONTRACT_NO AND DEPT_ID\=TPS.DEPT_ID ))SECTION_NAME from RSK_PREMIUM_DETAILS PD WHERE CONTRACT_NO\=? and TRANSACTION_NO\=?
PREMIUM_SELECT_TREATYPREMIUMVIEW_TEMP = SELECT OSBYN,CONTRACT_NO,TRANSACTION_NO,(SELECT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID \= '49' AND TYPE \= PD.ACCOUNT_PERIOD_QTR) ACCOUNT_PERIOD_QTR,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,EXCHANGE_RATE,BROKERAGE ,BROKERAGE_AMT_OC, TAX, TAX_AMT_OC, PREMIUM_QUOTASHARE_OC, COMMISSION_QUOTASHARE_OC ,PREMIUM_SURPLUS_OC, COMMISSION_SURPLUS_OC, PREMIUM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_OC, PREMIUM_PORTFOLIOOUT_OC ,LOSS_RESERVE_RELEASED_OC, PREMIUMRESERVE_QUOTASHARE_OC, CASH_LOSS_CREDIT_OC, LOSS_RESERVERETAINED_OC ,PROFIT_COMMISSION_OC, CASH_LOSSPAID_OC, NETDUE_OC,RECEIPT_NO,SETTLEMENT_STATUS,CLAIMS_PAID_OC,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,ACCOUNT_PERIOD_YEAR,CURRENCY_ID,OTHER_COST_OC, BROKERAGE_AMT_DC,TAX_AMT_DC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,PREMIUM_SURPLUS_DC,COMMISSION_SURPLUS_DC, PREMIUM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_DC,PREMIUM_PORTFOLIOOUT_DC,LOSS_RESERVE_RELEASED_DC ,PREMIUMRESERVE_QUOTASHARE_DC,CASH_LOSS_CREDIT_DC,LOSS_RESERVERETAINED_DC,PROFIT_COMMISSION_DC, CASH_LOSSPAID_DC,CLAIMS_PAID_DC,XL_COST_DC,CLAIM_PORTFOLIO_OUT_DC,PREMIUM_RESERVE_REALSED_DC, NETDUE_DC,OTHER_COST_DC,COMMISSION,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,INTEREST_OC,INTEREST_DC,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (ACCOUNTING_PERIOD_DATE+30, 'DD/MM/YYYY') due_date,RI_CESSION,TDS_OC,TDS_DC,ST_OC,ST_DC,SC_COMM_OC,SC_COMM_DC,LPC_OC,LPC_DC,PREMIUM_CLASS,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(PD.PREMIUM_SUBCLASS,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= '2' AND PD.BRANCH_CODE \= SPFC.BRANCH_CODE)PREMIUM_SUBCLASS,PD.PREMIUM_SUBCLASS SUB,(select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID\=PD.PREMIUM_CLASS and branch_code\=PD.branch_code  and TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y')  TMAS_DEPARTMENT_NAME,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY')STATEMENT_DATE,(SELECT SECTION_NAME FROM TTRN_PTTY_SECTION TPS WHERE CONTRACT_NO\=PD.CONTRACT_NO AND DEPT_ID\=PD.SUB_CLASS  AND SECTION_NO\=PD.SECTION_NAME AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_PTTY_SECTION WHERE CONTRACT_NO\=TPS.CONTRACT_NO AND DEPT_ID\=TPS.DEPT_ID ))SECTION_NAME from RSK_PREMIUM_DETAILS_TEMP PD WHERE CONTRACT_NO\=? and REQUEST_NO\=?
#premium.select.treatyPremiumView= SELECT CONTRACT_NO,TRANSACTION_NO,(SELECT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID \= '7' AND TYPE \= PD.ACCOUNT_PERIOD_QTR) ACCOUNT_PERIOD_QTR,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,EXCHANGE_RATE,BROKERAGE ,BROKERAGE_AMT_OC, TAX, TAX_AMT_OC, PREMIUM_QUOTASHARE_OC, COMMISSION_QUOTASHARE_OC ,PREMIUM_SURPLUS_OC, COMMISSION_SURPLUS_OC, PREMIUM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_OC, PREMIUM_PORTFOLIOOUT_OC ,LOSS_RESERVE_RELEASED_OC, PREMIUMRESERVE_QUOTASHARE_OC, CASH_LOSS_CREDIT_OC, LOSS_RESERVERETAINED_OC ,PROFIT_COMMISSION_OC, CASH_LOSSPAID_OC, NETDUE_OC,RECEIPT_NO,SETTLEMENT_STATUS,CLAIMS_PAID_OC,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,ACCOUNT_PERIOD_YEAR,CURRENCY_ID,OTHER_COST_OC, BROKERAGE_AMT_DC,TAX_AMT_DC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,PREMIUM_SURPLUS_DC,COMMISSION_SURPLUS_DC, PREMIUM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_DC,PREMIUM_PORTFOLIOOUT_DC,LOSS_RESERVE_RELEASED_DC ,PREMIUMRESERVE_QUOTASHARE_DC,CASH_LOSS_CREDIT_DC,LOSS_RESERVERETAINED_DC,PROFIT_COMMISSION_DC, CASH_LOSSPAID_DC,CLAIMS_PAID_DC,XL_COST_DC,CLAIM_PORTFOLIO_OUT_DC,PREMIUM_RESERVE_REALSED_DC, NETDUE_DC,OTHER_COST_DC,COMMISSION,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,INTEREST_OC,INTEREST_DC,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (TRANSACTION_MONTH_YEAR+30, 'DD/MM/YYYY') due_date,RI_CESSION,TDS_OC,TDS_DC,ST_OC,ST_DC,SC_COMM_OC,SC_COMM_DC from RSK_PREMIUM_DETAILS PD WHERE CONTRACT_NO\=? and TRANSACTION_NO\=?
premium.select.XolPremiumView= SELECT CONTRACT_NO,TRANSACTION_NO,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,EXCHANGE_RATE,BROKERAGE, BROKERAGE_AMT_OC, TAX, TAX_AMT_OC,COMMISSION,M_DPREMIUM_OC, ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC ,NETDUE_OC, LAYER_NO,ENTERING_MODE,ENTRY_DATE_TIME,ACCOUNT_PERIOD_QTR,CURRENCY_ID,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC,NETDUE_DC,OTHER_COST_DC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE, CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,SETTLEMENT_STATUS,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,INSTALMENT_NUMBER,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (TO_DATE(ACCOUNT_PERIOD_QTR,'DD/MM/YYYY')+30, 'DD/MM/YYYY') due_date,RI_CESSION,(select TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE\=? AND TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y' and TMAS_DEPARTMENT_ID\=SUB_CLASS)SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,GNPI_ENDT_NO,(select TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE\=? AND TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y' and TMAS_DEPARTMENT_ID\=PREMIUM_CLASS)PREMIUM_CLASS,REVERSEL_STATUS,REVERSE_TRANSACTION_NO from RSK_PREMIUM_DETAILS where CONTRACT_NO\=? and TRANSACTION_NO\=?
GET_RETO_VIEW= SELECT OSBYN,CONTRACT_NO,TRANSACTION_NO,(SELECT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID \= '49' AND TYPE \= PD.ACCOUNT_PERIOD_QTR) ACCOUNT_PERIOD_QTR,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,EXCHANGE_RATE,BROKERAGE ,BROKERAGE_AMT_OC, TAX, TAX_AMT_OC, PREMIUM_QUOTASHARE_OC, COMMISSION_QUOTASHARE_OC ,PREMIUM_SURPLUS_OC, COMMISSION_SURPLUS_OC, PREMIUM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_OC, PREMIUM_PORTFOLIOOUT_OC ,LOSS_RESERVE_RELEASED_OC, PREMIUMRESERVE_QUOTASHARE_OC, CASH_LOSS_CREDIT_OC, LOSS_RESERVERETAINED_OC ,PROFIT_COMMISSION_OC, CASH_LOSSPAID_OC, NETDUE_OC,RECEIPT_NO,SETTLEMENT_STATUS,CLAIMS_PAID_OC,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,ACCOUNT_PERIOD_YEAR,CURRENCY_ID,OTHER_COST_OC, BROKERAGE_AMT_DC,TAX_AMT_DC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_DC,PREMIUM_SURPLUS_DC,COMMISSION_SURPLUS_DC, PREMIUM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_DC,PREMIUM_PORTFOLIOOUT_DC,LOSS_RESERVE_RELEASED_DC ,PREMIUMRESERVE_QUOTASHARE_DC,CASH_LOSS_CREDIT_DC,LOSS_RESERVERETAINED_DC,PROFIT_COMMISSION_DC, CASH_LOSSPAID_DC,CLAIMS_PAID_DC,XL_COST_DC,CLAIM_PORTFOLIO_OUT_DC,PREMIUM_RESERVE_REALSED_DC, NETDUE_DC,OTHER_COST_DC,COMMISSION,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,INTEREST_OC,INTEREST_DC,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (TRANSACTION_MONTH_YEAR+30, 'DD/MM/YYYY') due_date,RI_CESSION,TDS_OC,TDS_DC,ST_OC,ST_DC,SC_COMM_OC,SC_COMM_DC,LPC_OC,LPC_DC,PREMIUM_CLASS,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(PD.PREMIUM_SUBCLASS,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= '2' AND PD.BRANCH_CODE \= SPFC.BRANCH_CODE)PREMIUM_SUBCLASS,PD.PREMIUM_SUBCLASS SUB,(select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID\=PD.PREMIUM_CLASS and branch_code\=PD.branch_code  and TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y')  TMAS_DEPARTMENT_NAME,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY')STATEMENT_DATE from TTRN_RETRO_PRCL PD WHERE CONTRACT_NO\=? and TRANSACTION_NO\=?

premium.select.retroXolPremiumView= SELECT CONTRACT_NO,TRANSACTION_NO,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,EXCHANGE_RATE,BROKERAGE, BROKERAGE_AMT_OC, TAX, TAX_AMT_OC,COMMISSION,M_DPREMIUM_OC, ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC ,NETDUE_OC, LAYER_NO,ENTERING_MODE,ENTRY_DATE_TIME,ACCOUNT_PERIOD_QTR,CURRENCY_ID,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC,NETDUE_DC,OTHER_COST_DC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE, CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,SETTLEMENT_STATUS,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,INSTALMENT_NUMBER,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (TO_DATE(ACCOUNT_PERIOD_QTR,'DD/MM/YYYY')+30, 'DD/MM/YYYY') due_date,RI_CESSION,(select TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE\=? AND TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y' and TMAS_DEPARTMENT_ID\=SUB_CLASS)SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,GNPI_ENDT_NO,(select TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE\=? AND TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y' and TMAS_DEPARTMENT_ID\=PREMIUM_CLASS)PREMIUM_CLASS,REVERSEL_STATUS,REVERSE_TRANSACTION_NO  from RSK_XL_PREMIUM_DETAILS where CONTRACT_NO\=? and TRANSACTION_NO\=?
premium.select.PremiumedList1=SELECT RK.RSK_CONTRACT_NO ,PERSONAL.COMPANY_NAME,PI.FIRST_NAME ||' '||PI.LAST_NAME BROKER_NAME, RK.RSK_PROPOSAL_NUMBER,  RK.RSK_LAYER_NO,RK.RSK_DEPTID,TRA.TRANSACTION_NO,TRA.INSTALMENT_NUMBER ||' ' ||TRA.ACCOUNT_PERIOD_QTR INS_DETAIL, case rk.RSK_PRODUCTID when 2 then (SELECT DISTINCT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID\=49 AND TYPE\=TRA.ACCOUNT_PERIOD_QTR and STATUS\='Y') || ' ' || TRA.ACCOUNT_PERIOD_YEAR else TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR  end ACC_PER, TO_CHAR(TRA.ENTRY_DATE_TIME,'DD/MM/YYYY') INS_DATE, TO_CHAR(TRA.STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRA.ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,NVL(TRA.ALLOCATED_TILL_DATE,'0') ALLOC_AMT,TRA.MOVEMENT_YN,TRA.SETTLEMENT_STATUS,TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY')TRANSACTION_DATE ,TO_CHAR (TRA.STATEMENT_DATE, 'DD/MM/YYYY')STATEMENT_DATE,TRA.REVERSE_TRANSACTION_NO FROM TTRN_RISK_DETAILS RK , PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,RSK_PREMIUM_DETAILS TRA WHERE RK.RSK_CONTRACT_NO\=? AND RK.RSK_CEDINGID\=PERSONAL.CUSTOMER_ID AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND PERSONAL.BRANCH_CODE\=? AND PERSONAL.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE  CUSTOMER_ID\=PERSONAL.CUSTOMER_ID AND   BRANCH_CODE\=PERSONAL.BRANCH_CODE ) AND PI.BRANCH_CODE \= PERSONAL.BRANCH_CODE AND PI.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO\=?
premium.select.retroPremiumedList1=SELECT RK.RSK_CONTRACT_NO ,PERSONAL.COMPANY_NAME,PI.FIRST_NAME ||' '||PI.LAST_NAME BROKER_NAME, RK.RSK_PROPOSAL_NUMBER,  RK.RSK_LAYER_NO,RK.RSK_DEPTID,TRA.TRANSACTION_NO,TRA.INSTALMENT_NUMBER ||' ' ||TRA.ACCOUNT_PERIOD_QTR INS_DETAIL, case rk.RSK_PRODUCTID when 2 then (SELECT DISTINCT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID\=49 AND TYPE\=TRA.ACCOUNT_PERIOD_QTR and STATUS\='Y') || ' ' || TRA.ACCOUNT_PERIOD_YEAR else TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR  end ACC_PER, TO_CHAR(TRA.ENTRY_DATE_TIME,'DD/MM/YYYY') INS_DATE,NVL(TRA.ALLOCATED_TILL_DATE,'0') ALLOC_AMT,TRA.MOVEMENT_YN,TRA.SETTLEMENT_STATUS,TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY')TRANSACTION_DATE,TO_CHAR (TRA.STATEMENT_DATE, 'DD/MM/YYYY')STATEMENT_DATE,TRA.REVERSE_TRANSACTION_NO FROM TTRN_RISK_DETAILS RK , PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,RSK_XL_PREMIUM_DETAILS TRA WHERE RK.RSK_CONTRACT_NO\=? AND RK.RSK_CEDINGID\=PERSONAL.CUSTOMER_ID AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND PERSONAL.BRANCH_CODE\=? AND PERSONAL.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE  CUSTOMER_ID\=PERSONAL.CUSTOMER_ID AND   BRANCH_CODE\=PERSONAL.BRANCH_CODE ) AND PI.BRANCH_CODE \= PERSONAL.BRANCH_CODE AND PI.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO\=? 
premium.select.xolLayer1= AND RSK_LAYER_NO=?
premium.select.PremiumedList2= ) AND TRA.CONTRACT_NO\=RK.RSK_CONTRACT_NO 
premium.select.xolLayer2= AND TRA.LAYER_NO\=RK.RSK_LAYER_NO 
premium.select.xolLayer3= AND RK.RSK_LAYER_NO\=? 
premium.select.PremiumedList3= ORDER BY TRA.TRANSACTION_NO DESC
premium.select.facPremiumEdit=SELECT TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER, CURRENCY_ID ,EXCHANGE_RATE,PREMIUM_QUOTASHARE_OC,COMMISSION,COMMISSION_QUOTASHARE_OC, BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME,STATUS,RECEIPT_NO,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY') AMENDMENT_DATE,ENTERING_MODE,OTHER_COST_OC ,CEDANT_REFERENCE,REMARKS,NETDUE_OC,TOTAL_CR_OC,TOTAL_DR_OC,SETTLEMENT_STATUS, WITH_HOLDING_TAX_OC, WITH_HOLDING_TAX_DC,RI_CESSION,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,REVERSE_TRANSACTION_NO,REVERSEL_STATUS from RSK_PREMIUM_DETAILS WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=?
premium.select.treetyXOLPremiumEdit=SELECT TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,ACCOUNT_PERIOD_QTR, ACCOUNT_PERIOD_YEAR,CURRENCY_ID,EXCHANGE_RATE,BROKERAGE_AMT_OC,TAX_AMT_OC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY'),TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY') AMENDMENT_DATE,PREMIUM_QUOTASHARE_OC,  COMMISSION_QUOTASHARE_OC,PREMIUM_SURPLUS_OC,COMMISSION_SURPLUS_OC,PREMIUM_PORTFOLIOIN_OC, CLAIM_PORTFOLIOIN_OC,PREMIUM_PORTFOLIOOUT_OC,LOSS_RESERVE_RELEASED_OC,PREMIUMRESERVE_QUOTASHARE_OC, CASH_LOSS_CREDIT_OC,LOSS_RESERVERETAINED_OC,PROFIT_COMMISSION_OC,CASH_LOSSPAID_OC,STATUS,  REMARKS,NETDUE_OC,ENTERING_MODE,RECEIPT_NO,CLAIMS_PAID_OC,SETTLEMENT_STATUS,M_DPREMIUM_OC,ADJUSTMENT_PREMIUM_OC,REC_PREMIUM_OC  ,COMMISSION,INSTALMENT_NUMBER,to_char(ENTRY_DATE_TIME,'DD/MM/YYYY') INS_DATE,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,  OTHER_COST_OC,CEDANT_REFERENCE,REMARKS,NETDUE_OC,TOTAL_CR_OC,TOTAL_DR_OC,INTEREST_OC,OSCLAIM_LOSSUPDATE_OC,OVERRIDER,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,SC_Comm_OC,SC_Comm_DC,BONUS_OC,BONUS_DC,PREMIUM_SUBCLASS,LPC_OC,LPC_DC,GNPI_ENDT_NO,nvl(PRD_ALLOCATED_TILL_DATE,0)PRD_ALLOCATED_TILL_DATE,nvl(LRD_ALLOCATED_TILL_DATE,0)LRD_ALLOCATED_TILL_DATE,PREMIUM_CLASS,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,OSBYN,SECTION_NAME,REVERSEL_STATUS,REVERSE_TRANSACTION_NO FROM RSK_PREMIUM_DETAILS where CONTRACT_NO\=? AND TRANSACTION_NO\=?
#premium.select.treetyXOLPremiumEdit=SELECT TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,ACCOUNT_PERIOD_QTR, ACCOUNT_PERIOD_YEAR,CURRENCY_ID,EXCHANGE_RATE,BROKERAGE_AMT_OC,TAX_AMT_OC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY'),TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY') AMENDMENT_DATE,PREMIUM_QUOTASHARE_OC,  COMMISSION_QUOTASHARE_OC,PREMIUM_SURPLUS_OC,COMMISSION_SURPLUS_OC,PREMIUM_PORTFOLIOIN_OC, CLAIM_PORTFOLIOIN_OC,PREMIUM_PORTFOLIOOUT_OC,LOSS_RESERVE_RELEASED_OC,PREMIUMRESERVE_QUOTASHARE_OC, CASH_LOSS_CREDIT_OC,LOSS_RESERVERETAINED_OC,PROFIT_COMMISSION_OC,CASH_LOSSPAID_OC,STATUS,  REMARKS,NETDUE_OC,ENTERING_MODE,RECEIPT_NO,CLAIMS_PAID_OC,SETTLEMENT_STATUS,M_DPREMIUM_OC,ADJUSTMENT_PREMIUM_OC,REC_PREMIUM_OC  ,COMMISSION,INSTALMENT_NUMBER,to_char(ENTRY_DATE_TIME,'DD/MM/YYYY') INS_DATE,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,  OTHER_COST_OC,CEDANT_REFERENCE,REMARKS,NETDUE_OC,TOTAL_CR_OC,TOTAL_DR_OC,INTEREST_OC,OSCLAIM_LOSSUPDATE_OC,OVERRIDER,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,SC_Comm_OC,SC_Comm_DC,BONUS_OC,BONUS_DC FROM RSK_PREMIUM_DETAILS where CONTRACT_NO\=? AND TRANSACTION_NO\=?
premium.select.retrotreetyXOLPremiumEdit = SELECT CONTRACT_NO,TRANSACTION_NO,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,EXCHANGE_RATE,BROKERAGE, BROKERAGE_AMT_OC, TAX, TAX_AMT_OC,COMMISSION,M_DPREMIUM_OC, ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC ,NETDUE_OC, LAYER_NO,ENTERING_MODE,ENTRY_DATE_TIME,ACCOUNT_PERIOD_QTR,CURRENCY_ID,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC,NETDUE_DC,OTHER_COST_DC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE, CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,SETTLEMENT_STATUS,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,INSTALMENT_NUMBER,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (TRANSACTION_MONTH_YEAR+30, 'DD/MM/YYYY') due_date,RI_CESSION,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,GNPI_ENDT_NO,PREMIUM_CLASS,REVERSE_TRANSACTION_NO,REVERSEL_STATUS  from RSK_XL_PREMIUM_DETAILS where CONTRACT_NO=? and TRANSACTION_NO=?
GET_RETRO_PREMIUM=select REFERENCE,REMARKS,CONTRACT_NO,TRANSACTION_NO,PREMIUM_CLASS,SPC,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY')  TRANSACTION_MONTH_YEAR,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY') AMENDMENT_DATE,UWY,RETRO_CONTRACT_NUMBER,RETROCESSIONAIRE,RETRO_BROKER,CURRENCY_ID,EXCHANGE_RATE,PREMIUM_QUOTASHARE_OC,PREMIUM_QUOTASHARE_DC,PREMIUM_QUOTASHARE_RC, COMMISSION_QUOTASHARE_OC,COMMISSION_QUOTASHARE_DC,COMMISSION_QUOTASHARE_RC,PREMIUM_PORTFOLIOIN_OC,PREMIUM_PORTFOLIOIN_DC,PREMIUM_PORTFOLIOIN_RC, CLAIM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_RC,BROKERAGE_AMT_OC,BROKERAGE_AMT_DC,BROKERAGE_AMT_RC,PREMIUM_RESERVE_REALSED_OC,PREMIUM_RESERVE_REALSED_DC,PREMIUM_RESERVE_REALSED_RC, LOSS_RESERVE_RELEASED_OC,LOSS_RESERVE_RELEASED_DC,LOSS_RESERVE_RELEASED_RC,TAX_AMT_OC,TAX_AMT_DC,TAX_AMT_RC, OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,OVERRIDER_AMT_RC,INTEREST_OC,INTEREST_DC,INTEREST_RC,OTHER_COST_OC,OTHER_COST_DC,OTHER_COST_RC,CASH_LOSS_CREDIT_OC,CASH_LOSS_CREDIT_DC,CASH_LOSS_CREDIT_RC, PREMIUM_PORTFOLIOOUT_OC,PREMIUM_PORTFOLIOOUT_DC,PREMIUM_PORTFOLIOOUT_RC,TDS_OC,TDS_DC,TDS_RC,CLAIM_PORTFOLIO_OUT_OC,CLAIM_PORTFOLIO_OUT_DC,CLAIM_PORTFOLIO_OUT_RC, PREMIUMRESERVE_QUOTASHARE_OC,PREMIUMRESERVE_QUOTASHARE_DC,PREMIUMRESERVE_QUOTASHARE_RC,ST_OC,ST_DC,ST_RC,LOSS_RESERVERETAINED_OC,LOSS_RESERVERETAINED_DC,LOSS_RESERVERETAINED_RC, LPC_OC,LPC_DC,LPC_RC,PROFIT_COMMISSION_OC,PROFIT_COMMISSION_DC,PROFIT_COMMISSION_RC,CASH_LOSSPAID_OC,CASH_LOSSPAID_DC,CASH_LOSSPAID_RC,CLAIMS_PAID_OC,CLAIMS_PAID_DC,CLAIMS_PAID_RC,SC_COMM_OC,SC_COMM_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()' ),',') from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in( select * from table(SPLIT_TEXT_FN(replace(PD.SPC,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= '4' AND PD.BRANCH_CODE \= SPFC.BRANCH_CODE) PREMIUM_SUBCLASS_NAME,( select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID\=PD.PREMIUM_CLASS and branch_code\=PD.branch_code and TMAS_PRODUCT_ID\='4' AND TMAS_STATUS\='Y')  TMAS_DEPARTMENT_NAME,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,OSCLAIM_LOSSUPDATE_RC,((nvl(PREMIUM_QUOTASHARE_OC,0))+(nvl(PREMIUM_PORTFOLIOIN_OC,0))+(nvl(CLAIM_PORTFOLIOIN_OC,0))+(nvl(PREMIUM_RESERVE_REALSED_OC,0))+(nvl(LOSS_RESERVE_RELEASED_OC,0))+(nvl(INTEREST_OC,0))+(nvl(CASH_LOSS_CREDIT_OC,0))+(nvl(TDS_OC,0))+(nvl(ST_OC,0))+(nvl(LPC_OC,0))) TOTAL_OC ,((nvl(COMMISSION_QUOTASHARE_OC,0))+(nvl(SC_COMM_OC,0))+(nvl(COMMISSION_SURPLUS_OC,0))+(nvl(BROKERAGE_AMT_OC,0))+(nvl(TAX_AMT_OC,0))+(nvl(WITH_HOLDING_TAX_OC,0))+(nvl(OVERRIDER_AMT_OC,0))+(nvl(OTHER_COST_OC,0))+(nvl(PREMIUM_PORTFOLIOOUT_OC,0))+(nvl(CLAIM_PORTFOLIO_OUT_OC,0))+(nvl(PREMIUMRESERVE_QUOTASHARE_OC,0))+ (nvl(LOSS_RESERVERETAINED_OC,0))+(nvl(PROFIT_COMMISSION_OC,0))+(nvl(CASH_LOSSPAID_OC,0))+(nvl(CLAIMS_PAID_OC,0))) TOTAL_DC,BUSINESS_TYPE  from ttrn_retro_prcl PD where RETRO_CONTRACT_NUMBER\=? AND TRANSACTION_NO\=? and PD.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_RETRO_PRCL TT WHERE TT.RETRO_CONTRACT_NUMBER\=PD.RETRO_CONTRACT_NUMBER AND TT.TRANSACTION_NO\=PD.TRANSACTION_NO)

premium.select.xolPreList= SELECT   A.CONTRACT_NO,B.TMAS_DEPARTMENT_NAME, A.CEDING_COMPANY_ID, A.UW_YEAR,C.COMPANY_NAME,A.LAYER_NO ,(Select FIRST_NAME from personal_info pi where pi.Customer_id\=A.BROKER_ID and pi.branch_code\=A.branch_code) First_name FROM   POSITION_MASTER A,TMAS_DEPARTMENT_MASTER B, PERSONAL_INFO C WHERE A.CONTRACT_NO \= ? AND A.LAYER_NO\=? AND A.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO\=A.CONTRACT_NO AND  LAYER_NO\=A.LAYER_NO) AND A.DEPT_ID \= B.TMAS_DEPARTMENT_ID AND B.BRANCH_CODE\=A.BRANCH_CODE AND B.TMAS_PRODUCT_ID\=A.PRODUCT_ID AND C.CUSTOMER_ID \= A.CEDING_COMPANY_ID AND C.BRANCH_CODE\=A.BRANCH_CODE AND C.CUSTOMER_TYPE\='C' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\=C.BRANCH_CODE) 
premium.select.facTreatyPreList= SELECT A.CONTRACT_NO,A.PROPOSAL_NO, B.TMAS_DEPARTMENT_NAME,A.PRODUCT_ID, A.CEDING_COMPANY_ID, A.UW_YEAR, C.COMPANY_NAME, A.LAYER_NO,A.DEPT_ID, (select FIRST_NAME from personal_info pi where pi.customer_id=A.broker_id and customer_type='B' and pi.branch_code=A.branch_code and rownum=1) Broker_name FROM POSITION_MASTER A, TMAS_DEPARTMENT_MASTER B, PERSONAL_INFO C WHERE A.CONTRACT_NO = ? AND DEPT_ID=? AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = A.CONTRACT_NO AND  DEPT_ID=A.DEPT_ID) AND A.DEPT_ID = B.TMAS_DEPARTMENT_ID AND B.BRANCH_CODE = A.BRANCH_CODE AND B.TMAS_PRODUCT_ID = A.PRODUCT_ID AND C.CUSTOMER_ID = A.CEDING_COMPANY_ID AND C.BRANCH_CODE = A.BRANCH_CODE AND C.CUSTOMER_TYPE = 'C'AND C.AMEND_ID =(SELECT MAX (AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID = C.CUSTOMER_ID AND BRANCH_CODE = C.BRANCH_CODE)
#premium.select.mdInstalmentList= SELECT INSTALLMENT_NO || '_'|| TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') KEY1,INSTALLMENT_NO || '\:'|| TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') VALUE,INSTALLMENT_NO FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND LAYER_NO\=? AND ENDORSEMENT_NO\=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND LAYER_NO\=?) AND TO_CHAR(INSTALLMENT_NO) NOT IN ( SELECT DISTINCT (INSTALMENT_NUMBER) FROM  RSK_PREMIUM_DETAILS P,TTRN_MND_INSTALLMENTS M WHERE P.CONTRACT_NO\=M.CONTRACT_NO AND P.CONTRACT_NO\=? AND P.LAYER_NO\=? AND P.INSTALMENT_NUMBER IS NOT NULL)
#PREMIUM_MND_INS_LIST = SELECT INSTALLMENT_NO || '_'|| TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') KEY1,INSTALLMENT_NO || '\:'|| TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') VALUE,INSTALLMENT_NO FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND LAYER_NO\=? AND ENDORSEMENT_NO\=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND LAYER_NO\=?) AND TRANSACTION_NO IS NULL AND INSTALLMENT_NO NOT IN(SELECT INSTALMENT_NUMBER FROM RSK_PREMIUM_DETAILS_TEMP WHERE TRANS_STATUS IN ('A','P') AND CONTRACT_NO\=? AND ACCOUNT_PERIOD_QTR IS NOT NULL) order by INSTALLMENT_NO
PREMIUM_MND_INS_LIST = SELECT INSTALLMENT_NO || '_'|| TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') KEY1,INSTALLMENT_NO || '\:'|| TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') VALUE,INSTALLMENT_NO FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND LAYER_NO\=? AND ENDORSEMENT_NO\=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND LAYER_NO\=?) AND TRANSACTION_NO IS NULL AND INSTALLMENT_NO NOT IN(SELECT INSTALMENT_NUMBER FROM RSK_PREMIUM_DETAILS_TEMP WHERE  REVERSE_TRANSACTION_NO is null AND CONTRACT_NO\=? AND LAYER_NO=? AND ACCOUNT_PERIOD_QTR IS NOT NULL) order by INSTALLMENT_NO
##TRANS_STATUS IN ('A','P')
premium.select.mdInstalmentList= SELECT INSTALLMENT_NO || '_'|| TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') KEY1,INSTALLMENT_NO || '\:'|| TO_CHAR(INSTALLMENT_DATE,'DD/MM/YYYY') VALUE,INSTALLMENT_NO FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND LAYER_NO\=? AND ENDORSEMENT_NO\=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND LAYER_NO\=?) AND TRANSACTION_NO IS NULL  order by INSTALLMENT_NO

premium.select.InstalmentAmountQuery= SELECT MND_PREMIUM_OC FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND ENDORSEMENT_NO\=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO\=? AND INSTALLMENT_NO\=? ) AND INSTALLMENT_NO\=?  
##premium.select.maxTransationNo=SELECT NVL(MAX(TRANSACTION_ID),'0')+1 FROM POLICY_NO_GENERATION WHERE PRODUCT_ID\=? AND BRANCH_CODE\=?
premium.select.xolPreList1=SELECT A.CONTRACT_NO,B.TMAS_DEPARTMENT_NAME,A.CEDING_COMPANY_ID,D.RSK_UWYEAR,C.COMPANY_NAME,D.RSK_LAYER_NO FROM POSITION_MASTER A, TMAS_DEPARTMENT_MASTER B,PERSONAL_INFO C,TTRN_RISK_DETAILS D WHERE A.CONTRACT_NO\=? AND A.DEPT_ID\=B.TMAS_DEPARTMENT_ID AND C.CUSTOMER_ID\=A.CEDING_COMPANY_ID AND D.RSK_CONTRACT_NO\=? 
premium.select.DateSelect=SELECT  TO_CHAR (A.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (A.EXPIRY_DATE, 'DD/MM/YYYY') FROM  POSITION_MASTER A WHERE  A.CONTRACT_NO = ? AND A.AMEND_ID IN (SELECT  MAX (B.AMEND_ID) FROM  POSITION_MASTER B WHERE  B.PRODUCT_ID = ? AND A.CONTRACT_NO = B.CONTRACT_NO)
premium.select.GWPIQuery=SELECT GWPI_OUR_SHARE_OC FROM TTRN_FAC_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO IS NOT NULL AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_FAC_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO IS NOT NULL )

#premium.select.mdInstallments=SELECT   INSTALMENT_NUMBER FROM   RSK_PREMIUM_DETAILS WHERE   CONTRACT_NO = ? AND LAYER_NO = ? AND INSTALMENT_NUMBER!='RP' AND INSTALMENT_NUMBER!='AP' ORDER BY INSTALMENT_NUMBER
premium.select.mdInstallments=SELECT   INSTALMENT_NUMBER FROM   RSK_PREMIUM_DETAILS_TEMP WHERE   CONTRACT_NO = ? AND LAYER_NO = ? AND INSTALMENT_NUMBER!='RP' AND INSTALMENT_NUMBER!='AP' AND INSTALMENT_NUMBER!='RTP' AND INSTALMENT_NUMBER!='RVP' AND TRANS_STATUS!='R' ORDER BY INSTALMENT_NUMBER
XOL_PREMIUM_SELECT_MDINSTALLMENTS = SELECT   INSTALMENT_NUMBER FROM   RSK_XL_PREMIUM_DETAILS WHERE   CONTRACT_NO = ? AND LAYER_NO = ? AND INSTALMENT_NUMBER!='RP' AND INSTALMENT_NUMBER!='AP' AND INSTALMENT_NUMBER!='RTP' AND INSTALMENT_NUMBER!='RVP' ORDER BY INSTALMENT_NUMBER
premium.select.mndPremiumOC=SELECT M.MND_PREMIUM_OC  FROM TTRN_MND_INSTALLMENTS M WHERE M.CONTRACT_NO=? AND M.LAYER_NO=? AND M.INSTALLMENT_NO=? AND M.ENDORSEMENT_NO=(SELECT MAX(ENDORSEMENT_NO)  FROM TTRN_MND_INSTALLMENTS WHERE CONTRACT_NO=M.CONTRACT_NO AND LAYER_NO=M.LAYER_NO AND INSTALLMENT_NO=M.INSTALLMENT_NO)
premium.select.RPPremiumOC=SELECT NVL(SUM(REC_PREMIUM_OC),'0') FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=? AND LAYER_NO = ? AND INSTALMENT_NUMBER='RP'
XOL_PREMIUM_SELECT_RPPREMIUMOC = SELECT NVL(SUM(REC_PREMIUM_OC),'0') FROM RSK_XL_PREMIUM_DETAILS WHERE CONTRACT_NO=? AND LAYER_NO = ? AND INSTALMENT_NUMBER='RP'
premium.select.getFacSPRetro=SELECT RP.SP_RETRO,RP.NO_OF_INSURERS,RP.RSK_PROPOSAL_NUMBER FROM TTRN_FAC_RISK_PROPOSAL RP,TTRN_RISK_DETAILS RD WHERE RP.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER AND RP.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_FAC_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=RP.RSK_PROPOSAL_NUMBER) AND RD.RSK_CONTRACT_NO=? AND RD.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RD.RSK_CONTRACT_NO)
premium.select.getTreatySPRetro=SELECT   RP.RSK_SP_RETRO, RP.RSK_NO_OF_INSURERS,RP.RSK_PROPOSAL_NUMBER FROM   TTRN_RISK_PROPOSAL RP, TTRN_RISK_DETAILS RD WHERE   RP.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RP.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER) AND RD.RSK_CONTRACT_NO =?  AND RD.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_CONTRACT_NO = RD.RSK_CONTRACT_NO)
premium.select.geXOLSPRetro=SELECT RP.RSK_SP_RETRO, RP.RSK_NO_OF_INSURERS,RP.RSK_PROPOSAL_NUMBER FROM TTRN_RISK_PROPOSAL RP, TTRN_RISK_DETAILS RD WHERE   RP.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RP.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER) AND RD.RSK_CONTRACT_NO =? AND RD.RSK_LAYER_NO=? AND RD.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_CONTRACT_NO = RD.RSK_CONTRACT_NO AND RSK_LAYER_NO=RD.RSK_LAYER_NO)
premium.select.insDetails=SELECT   A.CONTRACT_NO,A.RETRO_PERCENTAGE,TYPE,UW_YEAR,RETRO_TYPE FROM TTRN_INSURER_DETAILS A WHERE A.ENDORSEMENT_NO = (SELECT   MAX (ENDORSEMENT_NO) FROM   TTRN_INSURER_DETAILS WHERE   A.PROPOSAL_NO=PROPOSAL_NO AND A.INSURER_NO=INSURER_NO) AND A.PROPOSAL_NO = ?  AND A.INSURER_NO BETWEEN 0 AND ? ORDER BY A.INSURER_NO
premium.select.getNoRetroCess=SELECT RD.RETRO_CESSIONARIES FROM TTRN_RISK_DETAILS RD WHERE RD.RSK_CONTRACT_NO=? AND RD.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RD.RSK_CONTRACT_NO)
premium.select.getXOLNoRetroCess=SELECT RD.RETRO_CESSIONARIES FROM TTRN_RISK_DETAILS RD WHERE RD.RSK_CONTRACT_NO=? AND RD.RSK_LAYER_NO=? AND RD.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RD.RSK_CONTRACT_NO AND RSK_LAYER_NO=RD.RSK_LAYER_NO)
premium.select.getSumOfShareSign=SELECT NVL(SUM(A.SHARE_SIGNED),0) FROM TTRN_RETRO_CESSIONARY A WHERE AMEND_ID = (SELECT MAX (AMEND_ID) FROM  TTRN_RETRO_CESSIONARY WHERE  A.CONTRACT_NO = CONTRACT_NO AND A.PROPOSAL_STATUS=PROPOSAL_STATUS AND A.SNO=SNO) AND A.CONTRACT_NO=? AND A.PROPOSAL_STATUS='A' AND A.SNO BETWEEN 0 AND ? ORDER BY A.SNO
premium.select.getXOLSumOfShareSign=SELECT NVL(SUM(A.SHARE_SIGNED),0) FROM TTRN_RETRO_CESSIONARY A WHERE AMEND_ID = (SELECT MAX (AMEND_ID) FROM  TTRN_RETRO_CESSIONARY WHERE  A.CONTRACT_NO = CONTRACT_NO AND A.LAYER_NO=LAYER_NO AND A.PROPOSAL_STATUS=PROPOSAL_STATUS AND A.SNO=SNO) AND A.CONTRACT_NO=? AND A.LAYER_NO=? AND A.PROPOSAL_STATUS='A' AND A.SNO BETWEEN 0 AND ? ORDER BY A.SNO
premium.detail.archive={CALL PREMIUM_DETAIL_ARCHIVE(?,?,?,?,?,?,?,?)}
#premium.sp.retroSplit={CALL RETROPREMIUM_SPLIT(?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?)}
premium.sp.retroSplit={CALL RetroPremium_Split_claim(?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?)}
premium.insert.facpremium.auto.retro={CALL RetroPremium_Split_claim(:contractNo,:layerNo,'1',:transactionNo,TO_DATE(:transactionDate,'DD/MM/YYYY'),:currencyId,:exRate,:branchCode,'P',TO_DATE('','DD/MM/YYYY'),'','','','','','Yes')}
premium.insert.nonproppremium.auto.retro={CALL RetroPremium_Split_claim(:contractNo,:layerNo,'3',:transactionNo,TO_DATE(:transactionDate,'DD/MM/YYYY'),:currencyId,:exRate,:branchCode,'P',TO_DATE('','DD/MM/YYYY'),'','','','','','Yes')}
##premium.select.getOsClaimLossUpdate=SELECT CM.CURRENCY_NAME,CASE WHEN  NVL(?,0) = RPD1.TRANSACTION_NO THEN RPD2.OSCLAIM_LOSSUPDATE_OC ELSE RPD1.OSCLAIM_LOSSUPDATE_OC END OSCLAIM_LOSSUPDATE_OC FROM RSK_PREMIUM_DETAILS RPD1 LEFT OUTER JOIN RSK_PREMIUM_DETAILS RPD2 ON RPD1.CURRENCY_ID = RPD2.CURRENCY_ID AND RPD1.CONTRACT_NO = RPD2.CONTRACT_NO AND RPD1.TRANSACTION_NO > RPD2.TRANSACTION_NO JOIN CURRENCY_MASTER CM ON CM.CURRENCY_ID = RPD2.CURRENCY_ID WHERE RPD1.CONTRACT_NO =?  AND NVL(RPD1.OSCLAIM_LOSSUPDATE_OC,0) != 0 AND CM.BRANCH_CODE = ? AND CM.STATUS = 'Y' AND TRUNC(CM.EFFECTIVE_DATE) <= TRUNC(SYSDATE) AND CM.AMEND_ID = ( SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE =CM.BRANCH_CODE AND STATUS = 'Y' AND TRUNC(EFFECTIVE_DATE) <= TRUNC(SYSDATE)) AND RPD2.TRANSACTION_NO = ( SELECT MAX(TRANSACTION_NO) FROM RSK_PREMIUM_DETAILS WHERE CURRENCY_ID = RPD1.CURRENCY_ID AND TRANSACTION_NO < RPD1.TRANSACTION_NO  and CONTRACT_NO = RPD1.CONTRACT_NO AND NVL(OSCLAIM_LOSSUPDATE_OC,0) != 0 )
premium.select.getOsClaimLossUpdate=SELECT CM.SHORT_NAME CURRENCY_NAME ,PD.OSCLAIM_LOSSUPDATE_OC FROM RSK_PREMIUM_DETAILS PD,CURRENCY_MASTER CM WHERE CM.CURRENCY_ID = PD.CURRENCY_ID AND CM.BRANCH_CODE = ? AND CM.STATUS = 'Y' AND TRUNC(CM.EFFECTIVE_DATE) <= TRUNC(SYSDATE) AND CM.AMEND_ID = ( SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y' AND TRUNC(EFFECTIVE_DATE) <= TRUNC(SYSDATE)) AND PD.CONTRACT_NO = ? AND PD.TRANSACTION_NO IN (SELECT DISTINCT MAX(transaction_no) KEEP (DENSE_RANK LAST ORDER BY transaction_no) OVER (PARTITION BY contract_no,currency_id) RNK FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=? AND NVL(osclaim_lossupdate_oc,0) > 0
##premium.select.getOsClaimLossUpdateNew=AND RPD1.TRANSACTION_NO > RPD2.TRANSACTION_NO AND RPD1.TRANSACTION_NO = ( SELECT MAX(TRANSACTION_NO) FROM RSK_PREMIUM_DETAILS WHERE CURRENCY_ID = RPD1.CURRENCY_ID AND  CONTRACT_NO = RPD1.CONTRACT_NO)
premium.select.getOsClaimLossUpdateNew=)
##premium.select.getOsClaimLossUpdateEdit=AND RPD1.TRANSACTION_NO \=?
premium.select.getOsClaimLossUpdateEdit=AND TRANSACTION_NO < ?
premium.select.getClaimNoDropdown=SELECT CLAIM_NO FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO\=? ORDER BY CLAIM_NO
premium.insert.cashLossCreditUpdate=INSERT INTO TTRN_CASH_LOSS_CREDIT_UPDATE (CONTRACT_NO,TRANSACTION_NO,CLAIM_NO,CURRENCY_ID,EXCHANGE_RATE,CASH_LOSS_CREDIT_OC,CASH_LOSS_CREDIT_DC,AMEND_ID,ENTRY_DATE,STATUS) VALUES (?,?,?,?,?,?,?,(SELECT NVL(MAX(AMEND_ID),'-1')+1 FROM TTRN_CASH_LOSS_CREDIT_UPDATE WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=? AND CLAIM_NO\=?),SYSDATE,'Y')
premium.select.cashLossCreditUpdate=SELECT LU.CLAIM_NO,LU.CURRENCY_ID,LU.CASH_LOSS_CREDIT_OC,CASH_LOSS_CREDIT_DC FROM  TTRN_CASH_LOSS_CREDIT_UPDATE LU where LU.CONTRACT_NO\=? AND LU.TRANSACTION_NO\=? AND AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM TTRN_CASH_LOSS_CREDIT_UPDATE WHERE CONTRACT_NO \= LU.CONTRACT_NO AND TRANSACTION_NO \= LU.TRANSACTION_NO AND CLAIM_NO \= LU.CLAIM_NO) order by LU.CLAIM_NO
premium.select.sumOfPaidClaim=SELECT NVL(SUM(PAID_AMOUNT_DC),'0') PAID_AMOUNT_DC FROM TTRN_CLAIM_PAYMENT WHERE CONTRACT_NO=? AND CLAIM_NO=?
premium.select.sumOfCashLossUpdate=SELECT NVL(SUM(LU.CASH_LOSS_CREDIT_DC),'0') CASH_LOSS_CREDIT_DC FROM TTRN_CASH_LOSS_CREDIT_UPDATE LU WHERE LU.CONTRACT_NO=? AND LU.TRANSACTION_NO!=? AND LU.CLAIM_NO=?  AND LU.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_CASH_LOSS_CREDIT_UPDATE WHERE CONTRACT_NO=LU.CONTRACT_NO AND TRANSACTION_NO!=? AND CLAIM_NO=LU.CLAIM_NO)
premium.mov.rep.max.date=SELECT TO_CHAR(MAX(TO_DATE(B.REMARKS || '/' || A.ACCOUNT_PERIOD_DATE,'DD/MM/YYYY')),'DD/MM/YYYY') AS MAX_DATE FROM (SELECT ACCOUNT_PERIOD_QTR,MAX(ACCOUNT_PERIOD_DATE) ACCOUNT_PERIOD_DATE FROM TRANSACTION_MOVEMENT_DETAILS WHERE BRANCH_CODE =? AND REPORT_TYPE='F' GROUP BY   ACCOUNT_PERIOD_QTR ORDER BY ACCOUNT_PERIOD_QTR,ACCOUNT_PERIOD_DATE DESC) A, CONSTANT_DETAIL B WHERE A.ACCOUNT_PERIOD_QTR = B.TYPE AND B.CATEGORY_ID ='12'

##Login
login.select.makeAuthendication=SELECT USERTYPE,LOGIN_ID,BRANCH_CODE FROM TMAS_LOGIN_MASTER WHERE LOGIN_ID=? AND TRIM(PASSWORD)=? AND STATUS='1'
login.select.insertSessionInfo=SELECT END_TIME,START_TIME,SUBSTR(((CASE WHEN END_TIME IS NULL THEN SYSDATE ELSE END_TIME END)-START_TIME),INSTR(((CASE WHEN END_TIME IS NULL THEN SYSDATE ELSE END_TIME END)-START_TIME),' ')+4,2) MINUTES,SUBSTR(((CASE WHEN END_TIME IS NULL THEN SYSDATE ELSE END_TIME END)-START_TIME),INSTR(((CASE WHEN END_TIME IS NULL THEN SYSDATE ELSE END_TIME END)-START_TIME),' ')+1,2)  HOURS FROM TMAS_SESSION_MASTER WHERE START_TIME IN(SELECT MAX(START_TIME) FROM TMAS_SESSION_MASTER WHERE LOGIN_ID\=? AND TO_CHAR(START_TIME,'DD-MM-YYYY')\=TO_CHAR(SYSDATE,'DD-MM-YYYY') AND STATUS\='1') AND STATUS\='1' 
login.insert.sessionMas=INSERT INTO TMAS_SESSION_MASTER(SESSION_ID,LOGIN_ID,START_TIME,SYS_IP_ADDRESS,STATUS) VALUES(?,?,SYSDATE,?,'1')
#INSERT INTO TMAS_SESSION_MASTER(SESSION_ID,LOGIN_ID,START_TIME,STATUS) VALUES(?,?,SYSDATE,'1')
login.update.updateSessionInfo=UPDATE TMAS_SESSION_MASTER SET END_TIME=SYSDATE WHERE LOGIN_ID=? AND STATUS='1' AND SESSION_ID=?

##User Manipulation
user.getHomePageMap=SELECT HP_ID,HP_NAME FROM TMAS_HOMEPAGE_MASTER WHERE HP_BRANCH_CODE=? AND HP_STATUS=? AND HP_USER_TYPE='User' ORDER BY HP_ORDER_NO
user.getProductMap1=SELECT TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER WHERE  BRANCH_CODE\=?  
user.getProductMap2= AND TMAS_PRODUCT_ID IN (?)
user.getProductMap3= AND TMAS_STATUS=?  ORDER BY TMAS_PRODUCT_ID
user.getHomePageProdIDs=SELECT HP_PRODUCT_IDS FROM TMAS_HOMEPAGE_MASTER WHERE HP_ID=? AND HP_BRANCH_CODE=? AND HP_STATUS=?

##Policy
policy.select.branchInsert=SELECT TMAS_POL_BRANCH_NAME FROM TMAS_POLICY_BRANCH WHERE LOWER(TMAS_POL_BRANCH_NAME) = LOWER(?)
policy.select.branchInsert1=SELECT TMAS_POL_BRANCH_NAME FROM TMAS_POLICY_BRANCH WHERE LOWER(TMAS_POL_BRANCH_NAME) \= LOWER(?) 
policy.select.mode=SELECT TMAS_POL_BRANCH_NAME FROM TMAS_POLICY_BRANCH WHERE TMAS_POL_BRANCH_ID \=? AND BRANCH_CODE\=? 
claim.select.sumPaidAmt=SELECT SUM(PAID_AMOUNT_OC) FROM TTRN_CLAIM_PAYMENT WHERE  CLAIM_NO\=? and CONTRACT_NO\=?
claim.select.sumPaidAmt1=SELECT SUM(PAID_AMOUNT_OC) FROM TTRN_CLAIM_PAYMENT WHERE  CLAIM_NO\=? and CONTRACT_NO\=?
#policy.insert.getInsertQuery=INSERT INTO TMAS_POLICY_BRANCH ( TMAS_POL_BRANCH_ID,TMAS_POL_BRANCH_NAME,TMAS_STATUS,CORE_COMPANY_CODE,BRANCH_CODE ) VALUES ( ?,?,?,?,? )
policy.insert.getInsertQuery=INSERT INTO TMAS_POLICY_BRANCH ( TMAS_POL_BRANCH_ID,TMAS_POL_BRANCH_NAME,TMAS_STATUS,CORE_COMPANY_CODE,BRANCH_CODE ) VALUES ( (SELECT MAX(TMAS_POL_BRANCH_ID)+1 FROM TMAS_POLICY_BRANCH where branch_code=?),?,?,?,? )
policy.select.maxPid=SELECT MAX(TMAS_POL_BRANCH_ID) FROM TMAS_POLICY_BRANCH where branch_code=?
policy.select.getEditPolicyBranchQuery=SELECT TMAS_POL_BRANCH_ID,TMAS_POL_BRANCH_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_POLICY_BRANCH WHERE TMAS_POL_BRANCH_ID = ? AND BRANCH_CODE=?
policy.select.checkCount=SELECT COUNT(*) FROM TMAS_POLICY_BRANCH WHERE LOWER(TMAS_POL_BRANCH_ID)=LOWER(?) AND BRANCH_CODE=?
policy.update.getUpdatePolicy=UPDATE TMAS_POLICY_BRANCH SET TMAS_POL_BRANCH_NAME = ?, TMAS_STATUS = ?, CORE_COMPANY_CODE=? WHERE TMAS_POL_BRANCH_ID = ? AND BRANCH_CODE=?
policy.select.coreCheckInsert=SELECT COUNT(*) FROM TMAS_POLICY_BRANCH WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=?
policy.select.coreCheckUpdate=SELECT COUNT(*) FROM TMAS_POLICY_BRANCH WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=? AND TMAS_POL_BRANCH_ID!=?
policy.insert.validate=select count(*) from tmas_policy_branch where lower(TMAS_POL_BRANCH_NAME)=lower(?) and  branch_code=?
policy.edit.validate=select count(*) from tmas_policy_branch where lower(TMAS_POL_BRANCH_NAME)=lower(?) and TMAS_POL_BRANCH_ID!=? and branch_code=?
##Claim Querys
claim.select.firstName=SELECT FIRST_NAME FROM PERSONAL_INFO A,TTRN_RISK_DETAILS B WHERE B.RSK_BROKERID=A.CUSTOMER_ID AND B.RSK_PROPOSAL_NUMBER=?
claim.select.customerId=SELECT A.CUSTOMER_ID FROM PERSONAL_INFO A,TTRN_RISK_DETAILS B WHERE B.RSK_BROKERID=A.CUSTOMER_ID AND B.RSK_PROPOSAL_NUMBER=?
claim.select.lossEstimateRevisedOc=SELECT LOSS_ESTIMATE_REVISED_OC FROM TTRN_CLAIM_UPDATION WHERE CLAIM_NO=? AND CONTRACT_NO=? AND SL_NO=(SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION WHERE CLAIM_NO=? AND CONTRACT_NO=? )
claim.select.facGetCliamQuery=SELECT   (select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RK.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RK.RSK_PRODUCTID AND PERSONAL.BRANCH_CODE = SPFC.BRANCH_CODE)TMAS_SPFC_NAME,RK.RSK_CONTRACT_NO,RK.RSK_ORIGINAL_CURR,RK.RSK_ENDORSEMENT_NO,PERSONAL.COMPANY_NAME CEDING_COMPANY,RK.RSK_CEDINGID, RK.RSK_PROPOSAL_NUMBER, RP.SHARE_SIGNED, SUM_INSURED_OUR_SHARE_DC, SUM_INSURED_OUR_SHARE_OC, RP.RSK_CEDANT_RETENTION, TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INCP_DATE,TO_CHAR(RK.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') RSK_ACCOUNT_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE, RK.RSK_TREATYID, PI.FIRST_NAME||' '||PI.LAST_NAME BROKER_NAME, RK.RSK_BROKERID, RK.RSK_INSURED_NAME, RK.RSK_PROPOSAL_NUMBER,RK.RSK_SPFCID,RK.RSK_DEPTID FROM   TTRN_RISK_DETAILS RK, PERSONAL_INFO PERSONAL, TTRN_FAC_RISK_PROPOSAL RP,PERSONAL_INFO PI WHERE RK.RSK_PROPOSAL_NUMBER = ? AND RK.RSK_PRODUCTID = ? AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND PERSONAL.BRANCH_CODE=? AND PERSONAL.CUSTOMER_TYPE='C' AND PERSONAL.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PERSONAL.CUSTOMER_ID AND BRANCH_CODE=PERSONAL.BRANCH_CODE AND CUSTOMER_TYPE=PERSONAL.CUSTOMER_TYPE) AND RK.RSK_BROKERID = PI.CUSTOMER_ID AND PI.BRANCH_CODE=? AND PI.CUSTOMER_TYPE='B' AND PI.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO  WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND BRANCH_CODE=PI.BRANCH_CODE AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE) AND RP.RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND RK.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER =? ) AND RP.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER)
#claim.select.facGetCliamQuery=SELECT  RK.RSK_DEPTID,RK.RSK_CONTRACT_NO,RK.RSK_ORIGINAL_CURR,RK.RSK_ENDORSEMENT_NO,PERSONAL.COMPANY_NAME CEDING_COMPANY,RK.RSK_CEDINGID, RK.RSK_PROPOSAL_NUMBER, RP.SHARE_SIGNED, SUM_INSURED_OUR_SHARE_DC, SUM_INSURED_OUR_SHARE_OC, RP.RSK_CEDANT_RETENTION, TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INCP_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE, RK.RSK_TREATYID, PI.FIRST_NAME||' '||PI.LAST_NAME BROKER_NAME, RK.RSK_BROKERID, RK.RSK_INSURED_NAME, RK.RSK_PROPOSAL_NUMBER FROM   TTRN_RISK_DETAILS RK, PERSONAL_INFO PERSONAL, TTRN_FAC_RISK_PROPOSAL RP,PERSONAL_INFO PI WHERE RK.RSK_PROPOSAL_NUMBER = ? AND RK.RSK_PRODUCTID = ? AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND PERSONAL.BRANCH_CODE=? AND PERSONAL.CUSTOMER_TYPE='C' AND PERSONAL.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PERSONAL.CUSTOMER_ID AND BRANCH_CODE=PERSONAL.BRANCH_CODE AND CUSTOMER_TYPE=PERSONAL.CUSTOMER_TYPE) AND RK.RSK_BROKERID = PI.CUSTOMER_ID AND PI.BRANCH_CODE=? AND PI.CUSTOMER_TYPE='B' AND PI.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO  WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND BRANCH_CODE=PI.BRANCH_CODE AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE) AND RP.RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND RK.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER =? ) AND RP.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER)
claim.select.xolOrTeatyGetClimeQuery=SELECT   (select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RK.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RK.RSK_PRODUCTID AND PERSONAL.BRANCH_CODE = SPFC.BRANCH_CODE)TMAS_SPFC_NAME,RK.RSK_CONTRACT_NO,RK.RSK_ENDORSEMENT_NO,  PERSONAL.COMPANY_NAME CEDING_COMPANY,  RK.RSK_CEDINGID,   RK.RSK_PROPOSAL_NUMBER, RP.RSK_SHARE_SIGNED,  RP.RSK_LIMIT_OC,  RP.RSK_LIMIT_DC,  RP.RSK_LIMIT_OS_OC,RP.RSK_LIMIT_OS_DC,  RP.RSK_CEDANT_RETENTION,  TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INCP_DATE,TO_CHAR(RK.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') RSK_ACCOUNT_DATE,  TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,  RK.RSK_TREATYID,  RP.RSK_PF_COVERED,  RK.RSK_INSURED_NAME,  RK.RSK_RISK_COVERED,  PI.FIRST_NAME||' '||PI.LAST_NAME BROKER_NAME,  RK.RSK_BROKERID, RK.RSK_PROPOSAL_TYPE,RK.RSK_BASIS, RC.RSK_CASHLOSS_LMT_OC,RC.RSK_CASHLOSS_LMT_DC,(select TMAS_DEPARTMENT_NAME from TMAS_DEPARTMENT_MASTER where TMAS_DEPARTMENT_ID=RK.RSK_DEPTID AND RK.RSK_PRODUCTID=TMAS_PRODUCT_ID and Branch_code=PERSONAL.BRANCH_CODE and TMAS_STATUS='Y') TMAS_DEPARTMENT_NAME,RK.RSK_SPFCID,RK.RSK_DEPTID,RK.RSK_UWYEAR ,RC.RSK_REINSTATEMENT_PREMIUM  FROM TTRN_RISK_DETAILS RK, PERSONAL_INFO PERSONAL, TTRN_RISK_PROPOSAL RP,PERSONAL_INFO PI,TTRN_RISK_COMMISSION RC  WHERE RK.RSK_PROPOSAL_NUMBER = ?  AND RK.RSK_PRODUCTID = ?  AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID  AND PERSONAL.BRANCH_CODE=? AND PERSONAL.CUSTOMER_TYPE='C' AND PERSONAL.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PERSONAL.CUSTOMER_ID  AND BRANCH_CODE=PERSONAL.BRANCH_CODE AND CUSTOMER_TYPE=PERSONAL.CUSTOMER_TYPE)  AND RK.RSK_BROKERID = PI.CUSTOMER_ID  AND PI.BRANCH_CODE=? AND PI.CUSTOMER_TYPE='B' AND PI.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO  WHERE CUSTOMER_ID=PI.CUSTOMER_ID  AND BRANCH_CODE=PI.BRANCH_CODE AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE)  AND RP.RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER  AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID  AND RK.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO)  FROM   TTRN_RISK_DETAILS  WHERE   RSK_PROPOSAL_NUMBER =? )  AND RP.RSK_ENDORSEMENT_NO =  (SELECT   MAX (RSK_ENDORSEMENT_NO)  FROM   TTRN_RISK_PROPOSAL  WHERE   RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER) AND RC.RSK_PROPOSAL_NUMBER=RP.RSK_PROPOSAL_NUMBER AND RC.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=RC.RSK_PROPOSAL_NUMBER)
CLAIM_SELECT_RETRO_GETCLIMEQUERY = SELECT   (select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RK.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RK.RSK_PRODUCTID AND PERSONAL.BRANCH_CODE = SPFC.BRANCH_CODE)TMAS_SPFC_NAME,RK.RSK_CONTRACT_NO,RK.RSK_ENDORSEMENT_NO,  PERSONAL.COMPANY_NAME CEDING_COMPANY,  RK.RSK_CEDINGID,   RK.RSK_PROPOSAL_NUMBER, RP.RSK_SHARE_SIGNED,  RP.RSK_LIMIT_OC,  RP.RSK_LIMIT_DC,  RP.RSK_LIMIT_OS_OC,RP.RSK_LIMIT_OS_DC,  RP.RSK_CEDANT_RETENTION,  TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INCP_DATE, TO_CHAR(RK.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') RSK_ACCOUNT_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,  RK.RSK_TREATYID,  RP.RSK_PF_COVERED,  RK.RSK_INSURED_NAME,  RK.RSK_RISK_COVERED,  PI.FIRST_NAME||' '||PI.LAST_NAME BROKER_NAME,  RK.RSK_BROKERID, RK.RSK_PROPOSAL_TYPE,RK.RSK_BASIS,(select TMAS_DEPARTMENT_NAME from TMAS_DEPARTMENT_MASTER where TMAS_DEPARTMENT_ID=RK.RSK_DEPTID AND RK.RSK_PRODUCTID=TMAS_PRODUCT_ID and Branch_code=PERSONAL.BRANCH_CODE and TMAS_STATUS='Y') TMAS_DEPARTMENT_NAME,RK.RSK_SPFCID,RK.RSK_DEPTID,RK.RSK_UWYEAR   FROM TTRN_RISK_DETAILS RK, PERSONAL_INFO PERSONAL, TTRN_RISK_PROPOSAL RP,PERSONAL_INFO PI  WHERE RK.RSK_PROPOSAL_NUMBER = ?  AND RK.RSK_PRODUCTID = ?  AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID  AND PERSONAL.BRANCH_CODE=? AND PERSONAL.CUSTOMER_TYPE='C' AND PERSONAL.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PERSONAL.CUSTOMER_ID  AND BRANCH_CODE=PERSONAL.BRANCH_CODE AND CUSTOMER_TYPE=PERSONAL.CUSTOMER_TYPE)  AND RK.RSK_BROKERID = PI.CUSTOMER_ID  AND PI.BRANCH_CODE=? AND PI.CUSTOMER_TYPE='B' AND PI.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO  WHERE CUSTOMER_ID=PI.CUSTOMER_ID  AND BRANCH_CODE=PI.BRANCH_CODE AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE)  AND RP.RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER  AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID  AND RK.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO)  FROM   TTRN_RISK_DETAILS  WHERE   RSK_PROPOSAL_NUMBER =? )  AND RP.RSK_ENDORSEMENT_NO =  (SELECT   MAX (RSK_ENDORSEMENT_NO)  FROM   TTRN_RISK_PROPOSAL  WHERE   RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER)
#claim.select.xolOrTeatyGetClimeQuery=SELECT   RK.RSK_CONTRACT_NO,RK.RSK_ENDORSEMENT_NO,  PERSONAL.COMPANY_NAME CEDING_COMPANY,  RK.RSK_CEDINGID,   RK.RSK_PROPOSAL_NUMBER, RP.RSK_SHARE_SIGNED,  RP.RSK_LIMIT_OC,  RP.RSK_LIMIT_DC,  RP.RSK_LIMIT_OS_OC,RP.RSK_LIMIT_OS_DC,  RP.RSK_CEDANT_RETENTION,  TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INCP_DATE,  TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,  RK.RSK_TREATYID,  RP.RSK_PF_COVERED,  RK.RSK_INSURED_NAME,  RK.RSK_RISK_COVERED,  PI.FIRST_NAME||' '||PI.LAST_NAME BROKER_NAME,  RK.RSK_BROKERID, RK.RSK_PROPOSAL_TYPE,RK.RSK_BASIS, RC.RSK_CASHLOSS_LMT_OC,RC.RSK_CASHLOSS_LMT_DC,RK.RSK_DEPTID,(select TMAS_DEPARTMENT_NAME from TMAS_DEPARTMENT_MASTER where TMAS_DEPARTMENT_ID=RK.RSK_DEPTID AND RK.RSK_PRODUCTID=TMAS_PRODUCT_ID and Branch_code=PERSONAL.BRANCH_CODE ) TMAS_DEPARTMENT_NAME   FROM TTRN_RISK_DETAILS RK, PERSONAL_INFO PERSONAL, TTRN_RISK_PROPOSAL RP,PERSONAL_INFO PI,TTRN_RISK_COMMISSION RC  WHERE RK.RSK_PROPOSAL_NUMBER = ?  AND RK.RSK_PRODUCTID = ?  AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID  AND PERSONAL.BRANCH_CODE=? AND PERSONAL.CUSTOMER_TYPE='C' AND PERSONAL.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PERSONAL.CUSTOMER_ID  AND BRANCH_CODE=PERSONAL.BRANCH_CODE AND CUSTOMER_TYPE=PERSONAL.CUSTOMER_TYPE)  AND RK.RSK_BROKERID = PI.CUSTOMER_ID  AND PI.BRANCH_CODE=? AND PI.CUSTOMER_TYPE='B' AND PI.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO  WHERE CUSTOMER_ID=PI.CUSTOMER_ID  AND BRANCH_CODE=PI.BRANCH_CODE AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE)  AND RP.RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER  AND RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID  AND RK.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO)  FROM   TTRN_RISK_DETAILS  WHERE   RSK_PROPOSAL_NUMBER =? )  AND RP.RSK_ENDORSEMENT_NO =  (SELECT   MAX (RSK_ENDORSEMENT_NO)  FROM   TTRN_RISK_PROPOSAL  WHERE   RSK_PROPOSAL_NUMBER = RK.RSK_PROPOSAL_NUMBER) AND RC.RSK_PROPOSAL_NUMBER=RP.RSK_PROPOSAL_NUMBER AND RC.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=RC.RSK_PROPOSAL_NUMBER)
#claim.select.claimEdit=SELECT CLAIM_NO,STATUS_OF_CLAIM,TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') LOSS_DATE,TO_CHAR(REPORT_DATE,'DD/MM/YYYY') REP_DATE,LOSS_DETAILS,CAUSE_OF_LOSS,LOCATION,LOSS_ESTIMATE_OC,LOSS_ESTIMATE_OS_OC,EXCHANGE_RATE,LOSS_ESTIMATE_OS_DC,ADVICE_UW,ADVICE_MANAGEMENT,RI_RECOVERY,RI_RECOVERY_AMOUNT_DC,RECOVERY_FROM,CREATED_BY,TO_CHAR(CREATED_DATE,'DD/MM/YYYY') CREATED_DT,MODIFIED_BY,TO_CHAR(MODIFIED_DATE,'DD/MM/YYYY') MODIFIED_DT,UPDATED_BY,TO_CHAR(UPDATED_DATE,'DD/MM/YYYY') UPDATED_DT,CURRENCY,REMARKS,ADVICE_UW_EMAILID,ADVICE_MGT_EMAILID,RISK_CODE,ACCUMULATION_CODE,EVENT_CODE,LAYER_NO,insured_name FROM TTRN_CLAIM_DETAILS WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
claim.select.claimEdit=SELECT CLAIM_NO,STATUS_OF_CLAIM,TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') LOSS_DATE,TO_CHAR(REPUDATE_DATE,'DD/MM/YYYY') REPUDATE_DATE,TO_CHAR(RES_POS_DATE,'DD/MM/YYYY') RES_POS_DATE,TO_CHAR(RES_POS_DATE,'DD/MM/YYYY') RES_POS_DATE,TO_CHAR(REPORT_DATE,'DD/MM/YYYY') REP_DATE,LOSS_DETAILS,CAUSE_OF_LOSS,LOCATION,LOSS_ESTIMATE_OC,LOSS_ESTIMATE_OS_OC,EXCHANGE_RATE,LOSS_ESTIMATE_OS_DC,ADVICE_UW,ADVICE_MANAGEMENT,RI_RECOVERY,RI_RECOVERY_AMOUNT_DC,RECOVERY_FROM,CREATED_BY,TO_CHAR(CREATED_DATE,'DD/MM/YYYY') CREATED_DT,MODIFIED_BY,TO_CHAR(MODIFIED_DATE,'DD/MM/YYYY') MODIFIED_DT,UPDATED_BY,TO_CHAR(UPDATED_DATE,'DD/MM/YYYY') UPDATED_DT,TO_CHAR(REOPENED_DATE,'DD/MM/YYYY') REOPENED_DATE,CURRENCY,(SELECT SHORT_NAME FROM CURRENCY_MASTER CM WHERE CURRENCY_ID\=TC.CURRENCY AND BRANCH_CODE\= TC.BRANCH_CODE AND STATUS\='Y' AND AMEND_ID\= (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER C WHERE C.CURRENCY_ID\=CM.CURRENCY_ID AND C.BRANCH_CODE\=CM.BRANCH_CODE AND C.STATUS\='Y')) CURRENCY_NAME,REMARKS,ADVICE_UW_EMAILID,ADVICE_MGT_EMAILID,RISK_CODE,ACCUMULATION_CODE,EVENT_CODE,LAYER_NO,insured_name,RECORD_FEES_CRE_RESERVE, SAF_100_OC, SAF_100_DC,OTH_FEE_100_OC, OTH_FEE_100_DC, C_IBNR_100_OC, C_IBNR_100_DC,RECORD_IBNR,CEDENT_CLAIM_NO,SAF_OS_DC,OTH_FEE_OS_DC,C_IBNR_OS_DC,SAF_OS_OC,OTH_FEE_OS_OC,C_IBNR_OS_OC,GROSSLOSS_FGU_OC,CLAIM_CLASS,CLAIM_SUBCLASS,COVER_LIMIT_DEPTID FROM TTRN_CLAIM_DETAILS TC WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
#claim.select.claimEdit=SELECT CLAIM_NO,STATUS_OF_CLAIM,TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') LOSS_DATE,TO_CHAR(RES_POS_DATE,'DD/MM/YYYY') RES_POS_DATE,TO_CHAR(REPORT_DATE,'DD/MM/YYYY') REP_DATE,LOSS_DETAILS,CAUSE_OF_LOSS,LOCATION,LOSS_ESTIMATE_OC,LOSS_ESTIMATE_OS_OC,EXCHANGE_RATE,LOSS_ESTIMATE_OS_DC,ADVICE_UW,ADVICE_MANAGEMENT,RI_RECOVERY,RI_RECOVERY_AMOUNT_DC,RECOVERY_FROM,CREATED_BY,TO_CHAR(CREATED_DATE,'DD/MM/YYYY') CREATED_DT,MODIFIED_BY,TO_CHAR(MODIFIED_DATE,'DD/MM/YYYY') MODIFIED_DT,UPDATED_BY,TO_CHAR(UPDATED_DATE,'DD/MM/YYYY') UPDATED_DT,CURRENCY,REMARKS,ADVICE_UW_EMAILID,ADVICE_MGT_EMAILID,RISK_CODE,ACCUMULATION_CODE,EVENT_CODE,LAYER_NO,insured_name,RECORD_FEES_CRE_RESERVE, SAF_100_OC, SAF_100_DC,OTH_FEE_100_OC, OTH_FEE_100_DC, C_IBNR_100_OC, C_IBNR_100_DC,RECORD_IBNR,CEDENT_CLAIM_NO,SAF_OS_DC,OTH_FEE_OS_DC,C_IBNR_OS_DC,SAF_OS_OC,OTH_FEE_OS_OC,C_IBNR_OS_OC,GROSSLOSS_FGU_OC FROM TTRN_CLAIM_DETAILS WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
#claim.select.getClaimReserveList=SELECT PAID_AMOUNT_OC,PAYMENT_REQUEST_NO,LOSS_ESTIMATE_REVISED_OC ,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,TO_CHAR(p.INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT,PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_DC,CLAIM_PAYMENT_NO,RESERVE_ID,SETTLEMENT_STATUS,t.TRANSACTION_NO,Decode(r.TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT') TRANS_TYPE FROM TTRN_CLAIM_PAYMENT p left join TTRN_ALLOCATED_TRANSACTION t on t.CONTRACT_NO \= p.CONTRACT_NO AND t.PAID_AMOUNT \= p.PAID_AMOUNT_OC AND t.TYPE \= 'C' left join TTRN_PAYMENT_RECEIPT r on t.RECEIPT_NO \= r.PAYMENT_RECEIPT_NO WHERE p.CLAIM_NO\=? AND p.CONTRACT_NO\=? ORDER BY CLAIM_PAYMENT_NO DESC
claim.select.getClaimReserveList=SELECT SL_NO,PAID_AMOUNT_OC,PAYMENT_REQUEST_NO,LOSS_ESTIMATE_REVISED_OC ,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,TO_CHAR(p.INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT,PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_DC,CLAIM_PAYMENT_NO,RESERVE_ID,SETTLEMENT_STATUS,t.RECEIPT_NO TRANSACTION_NO,Decode(r.TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT','ADJUSTMENT') TRANS_TYPE FROM TTRN_CLAIM_PAYMENT p left join TTRN_ALLOCATED_TRANSACTION t on t.CONTRACT_NO \= p.CONTRACT_NO AND t.PAID_AMOUNT \= p.PAID_AMOUNT_OC AND t.TYPE \= 'C' AND T.TRANSACTION_NO\=P.CLAIM_PAYMENT_NO left join TTRN_PAYMENT_RECEIPT r on t.RECEIPT_NO \= r.PAYMENT_RECEIPT_NO WHERE p.CLAIM_NO\=? AND p.CONTRACT_NO\=?   and  decode(r.AMEND_ID,'',1,r.AMEND_ID) \= (case when r.AMEND_ID is not null then  (select max(AMEND_ID) from  TTRN_PAYMENT_RECEIPT pr where pr.PAYMENT_RECEIPT_NO\= r.PAYMENT_RECEIPT_NO)  else 1 end) ORDER BY CLAIM_PAYMENT_NO DESC
#SELECT PAID_AMOUNT_OC,PAYMENT_REQUEST_NO,LOSS_ESTIMATE_REVISED_OC ,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT,PAID_AMOUNT_DC,LOSS_ESTIMATE_REVISED_DC,CLAIM_PAYMENT_NO,RESERVE_ID,SETTLEMENT_STATUS FROM TTRN_CLAIM_PAYMENT WHERE CLAIM_NO\=? AND CONTRACT_NO\=? ORDER BY CLAIM_PAYMENT_NO DESC
#SELECT PAID_AMOUNT_OC,PAYMENT_REQUEST_NO,LOSS_ESTIMATE_REVISED_OC ,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,TO_CHAR(p.INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT,PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_DC,CLAIM_PAYMENT_NO,RESERVE_ID,SETTLEMENT_STATUS,t.TRANSACTION_NO,Decode(r.TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT') TRANS_TYPE FROM TTRN_CLAIM_PAYMENT p left join TTRN_ALLOCATED_TRANSACTION t on t.CONTRACT_NO \= p.CONTRACT_NO AND t.PAID_AMOUNT \= p.PAID_AMOUNT_OC AND t.TYPE \= 'C' left join TTRN_PAYMENT_RECEIPT r on t.RECEIPT_NO \= r.PAYMENT_RECEIPT_NO WHERE p.CLAIM_NO\=? AND p.CONTRACT_NO\=? ORDER BY CLAIM_PAYMENT_NO DESC
claim.select.getClaimUpdateList=SELECT A.LOSS_ESTIMATE_REVISED_OC,A.LOSS_ESTIMATE_REVISED_DC,A.UPDATE_REFERENCE,TO_CHAR(A.INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT,A.SL_NO,A.CLAIM_NO,A.CONTRACT_NO,A.UPDATE_REFERENCE,NVL((SELECT SUM(PAID_AMOUNT_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=A.SL_NO AND CONTRACT_NO =A.CONTRACT_NO AND CLAIM_NO = A.CLAIM_NO ),'0') PAIDAMTOC,NVL((SELECT SUM(PAID_AMOUNT_DC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=A.SL_NO AND CONTRACT_NO =A.CONTRACT_NO AND CLAIM_NO = A.CLAIM_NO ),'0') PAIDAMTUSD FROM TTRN_CLAIM_UPDATION A WHERE A.CLAIM_NO=? AND A.CONTRACT_NO=? AND A.SL_NO=(SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION WHERE CLAIM_NO = A.CLAIM_NO AND CONTRACT_NO = A.CONTRACT_NO)
#claim.select.getClaimUpdateList=SELECT A.LOSS_ESTIMATE_REVISED_OC,A.LOSS_ESTIMATE_REVISED_DC,A.UPDATE_REFERENCE,A.C_IBNR_100_OC,TO_CHAR(A.INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT,A.SL_NO,A.CLAIM_NO,A.CONTRACT_NO,A.UPDATE_REFERENCE,NVL((SELECT SUM(PAID_AMOUNT_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=A.SL_NO AND CONTRACT_NO =A.CONTRACT_NO AND CLAIM_NO = A.CLAIM_NO ),'0') PAIDAMTOC,NVL((SELECT SUM(PAID_AMOUNT_DC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=A.SL_NO AND CONTRACT_NO =A.CONTRACT_NO AND CLAIM_NO = A.CLAIM_NO ),'0') PAIDAMTUSD,NVL((SELECT SUM(NETCLAIMAMT_OURSHARE_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=A.SL_NO AND CONTRACT_NO =A.CONTRACT_NO AND CLAIM_NO = A.CLAIM_NO ),'0') NETCLAIMOC,NVL((SELECT SUM(NETCLAIMAMT_OURSHARE_DC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=A.SL_NO AND CONTRACT_NO =A.CONTRACT_NO AND CLAIM_NO = A.CLAIM_NO ),'0') NETCLAIMDC FROM TTRN_CLAIM_UPDATION A WHERE A.CLAIM_NO=? AND A.CONTRACT_NO=? AND A.SL_NO=(SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION WHERE CLAIM_NO = A.CLAIM_NO AND CONTRACT_NO = A.CONTRACT_NO)
claim.select.getClaimReviewQuery=SELECT TO_CHAR(REVIEW_DATE,'DD/MM/YYYY') REVIEW_DT,REVIEW_DONE_BY FROM TTRN_CLAIM_DETAILS WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
##claim.update.claimNo=UPDATE POLICY_NO_GENERATION SET CLIAM_NO\=(SELECT MAX(CLIAM_NO) +1 FROM POLICY_NO_GENERATION WHERE PRODUCT_ID\=? AND BRANCH_CODE\=? ) WHERE PRODUCT_ID\=? AND BRANCH_CODE\=?
##claim.select.claimNo=SELECT CLIAM_NO FROM POLICY_NO_GENERATION WHERE PRODUCT_ID\=? AND BRANCH_CODE\=?
claim.select.currencyName=SELECT CURRENCY_NAME FROM CURRENCY_MASTER WHERE CURRENCY_ID=?
##claim.update.claimPaymentNO=UPDATE POLICY_NO_GENERATION SET CLAIM_PAYMENT_NO=(SELECT MAX(CLAIM_PAYMENT_NO) +1 FROM POLICY_NO_GENERATION WHERE PRODUCT_ID=? AND BRANCH_CODE=? ) WHERE PRODUCT_ID=? AND BRANCH_CODE=?
##claim.select.climePaymentNo=SELECT CLAIM_PAYMENT_NO FROM POLICY_NO_GENERATION WHERE PRODUCT_ID=? AND BRANCH_CODE=?
#claim.insert.payment=INSERT INTO TTRN_CLAIM_PAYMENT (SL_NO,LAYER_NO,PAYMENT_REQUEST_NO,PAID_AMOUNT_OC,PAID_AMOUNT_DC,LOSS_ESTIMATE_REVISED_OC,LOSS_ESTIMATE_REVISED_DC,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,INCEPTION_DATE,CLAIM_NO,CONTRACT_NO,STATUS,CLAIM_PAYMENT_NO,REMARKS,ADVICE_TREASURY_EMAILID,RESERVE_ID,SETTLEMENT_STATUS) VALUES(?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,'Y',?,?,?,?,'Pending')
claim.insert.payment=INSERT INTO TTRN_CLAIM_PAYMENT (SL_NO,LAYER_NO,PAYMENT_REQUEST_NO,PAID_AMOUNT_OC,PAID_AMOUNT_DC,LOSS_ESTIMATE_REVISED_OC,LOSS_ESTIMATE_REVISED_DC,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,INCEPTION_DATE,CLAIM_NO,CONTRACT_NO,STATUS,CLAIM_PAYMENT_NO,REMARKS,ADVICE_TREASURY_EMAILID,RESERVE_ID,SETTLEMENT_STATUS,REINSTATEMENT_TYPE,REINSPREMIUM_OURSHARE_OC,REINSPREMIUM_OURSHARE_DC,PAID_CLAIM_OS_OC,PAID_CLAIM_OS_DC,SAF_OS_OC,SAF_OS_DC,OTH_FEE_OS_OC,OTH_FEE_OS_DC,BRANCH_CODE,LOGIN_ID,EXCHANGE_RATE,SYS_DATE,PAYMENT_TYPE) VALUES(?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,'Y',?,?,?,?,'Pending',?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?)
#claim.insert.payment=INSERT INTO TTRN_CLAIM_PAYMENT (SL_NO,LAYER_NO,PAYMENT_REQUEST_NO,PAID_AMOUNT_OC,PAID_AMOUNT_DC,LOSS_ESTIMATE_REVISED_OC,LOSS_ESTIMATE_REVISED_DC,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,INCEPTION_DATE,CLAIM_NO,CONTRACT_NO,STATUS,CLAIM_PAYMENT_NO,REMARKS,ADVICE_TREASURY_EMAILID,RESERVE_ID,SETTLEMENT_STATUS,REINSTATEMENT_TYPE,REINSPREMIUM_OURSHARE_OC,REINSPREMIUM_OURSHARE_DC,NETCLAIMAMT_OURSHARE_OC,NETCLAIMAMT_OURSHARE_DC,Insured_Name) VALUES(?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,'Y',?,?,?,?,'Pending',?,?,?,?,?,?)
claim.update.totalAmtPaidTillDate=UPDATE TTRN_CLAIM_DETAILS SET TOTAL_AMT_PAID_TILL_DATE=? where CLAIM_NO=? and CONTRACT_NO=?
claim.update.exchange_rate = update TTRN_CLAIM_PAYMENT TCP SET exchange_rate=(Select EXCHANGE_RATE from exchange_master EM where EM.CURRENCY_ID=?  AND TRUNC(TCP.Inception_date) between Trunc(Inception_date) ANd   Trunc(Expiry_date) And BRANCH_CODE=?) WHERE CLAIM_PAYMENT_NO=?
claim.insert.getUpdationQuery=INSERT INTO TTRN_CLAIM_UPDATION (SL_NO,LAYER_NO,LOSS_ESTIMATE_REVISED_OC,LOSS_ESTIMATE_REVISED_DC,UPDATE_REFERENCE,INCEPTION_DATE,CLAIM_NO,CONTRACT_NO,STATUS,REMARKS,BRANCH_CODE, LOGIN_ID, SAF_100_OC, SAF_100_DC, OTH_FEE_100_OC, OTH_FEE_100_DC, C_IBNR_100_OC, C_IBNR_100_DC, SAF_OS_OC,OTH_FEE_OS_OC,C_IBNR_OS_OC,SAF_OS_DC, OTH_FEE_OS_DC, C_IBNR_OS_DC, LOSS_ESTIMATE_100_OC, LOSS_ESTIMATE_100_DC,RESERVE_FEES,RESERVE_IBNR,EXCHANGE_RATE,TOT_RES_AMOUNT_OC ,TOT_RES_AMOUNT_DC,RES_POS_DATE,SYS_DATE) VALUES(?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,'Y',? ,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),sysdate)
##claim.update.ttrnClaimDetails=UPDATE TTRN_CLAIM_DETAILS SET LOSS_ESTIMATE_OS_OC=?,LOSS_ESTIMATE_OS_DC=? WHERE CLAIM_NO=? AND CONTRACT_NO=?
claim.update.ttrnClaimDetailsRDandrdb=UPDATE TTRN_CLAIM_DETAILS SET REVIEW_DATE=TO_DATE(?,'DD/MM/YYYY'),REVIEW_DONE_BY=? WHERE CONTRACT_NO=? AND CLAIM_NO=?
claim.select.maxSno=SELECT NVL(MAX(SNO)+1,'1') FROM TTRN_CLAIM_REVIEW WHERE CONTRACT_NO=? AND CLAIM_NO=?
claim.insert.ttrnClaimReview=INSERT INTO TTRN_CLAIM_REVIEW(SNO,CONTRACT_NO,LAYER_NO,CLAIM_NO,REVIEW_DATE,REVIEW_DONE_BY,INCEPTION_DATE,EXPIRY_DATE,STATUS,REMARKS) VALUES(?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?)
claim.select.paymentReqNo=SELECT COUNT(*) FROM TTRN_CLAIM_PAYMENT WHERE CLAIM_NO=? AND PAYMENT_REQUEST_NO=?
claim.select.maxSnoDTB1=SELECT NVL(MAX(SL_NO),'0')+1 FROM
claim.select.maxSnoDTB2=WHERE CLAIM_NO=? AND CONTRACT_NO=?
claim.select.lossEstimateOsOc=SELECT LOSS_ESTIMATE_OS_OC FROM TTRN_CLAIM_DETAILS WHERE CLAIM_NO=? AND CONTRACT_NO=?
claim.select.sumPaidAmtOc=SELECT NVL(SUM(PAID_AMOUNT_OC),'0') PAID_AMT FROM TTRN_CLAIM_PAYMENT WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
claim.select.revSumPaidAmt=SELECT NVL(SUM(CP.PAID_AMOUNT_OC),'0') PAID_AMT FROM TTRN_CLAIM_PAYMENT CP WHERE CP.CLAIM_NO=? AND CP.CONTRACT_NO=? AND CP.RESERVE_ID=(SELECT NVL(MAX(SL_NO),'1') MAXID FROM TTRN_CLAIM_UPDATION WHERE  CLAIM_NO=CP.CLAIM_NO AND CONTRACT_NO=CP.CONTRACT_NO)
claim.select.revSumPaidAmt1=SELECT NVL(SUM(CP.PAID_AMOUNT_OC),'0') PAID_AMT FROM TTRN_CLAIM_PAYMENT CP WHERE CP.CLAIM_NO=? AND CP.CONTRACT_NO=? AND CP.RESERVE_ID=(SELECT NVL(MAX(SL_NO),'1') MAXID FROM TTRN_CLAIM_UPDATION WHERE  CLAIM_NO=CP.CLAIM_NO AND CONTRACT_NO=CP.CONTRACT_NO)
claim.select.totalAmtPaidTillDate=SELECT TOTAL_AMT_PAID_TILL_DATE FROM TTRN_CLAIM_DETAILS WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
##claim.select.lossEstimate=SELECT NVL(SUM(LOSS_ESTIMATE_REVISED_OC),'0') LOSSESTIMATE FROM TTRN_CLAIM_UPDATION CU WHERE CU.CONTRACT_NO=? AND CU.SL_NO=(SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION WHERE CONTRACT_NO=CU.CONTRACT_NO AND CLAIM_NO=CU.CLAIM_NO)
#claim.select.claimTableList=SELECT CLAIM_NO,TO_CHAR(DATE_OF_LOSS,'MM/DD/YYYY') AS DATE_OF_LOSS ,TO_CHAR(CREATED_DATE,'MM/DD/YYYY') AS CREATED_DATE,STATUS_OF_CLAIM,CONTRACT_NO,(TOTAL_AMT_PAID_TILL_DATE-LOSS_ESTIMATE_OS_OC) AS EDITVIEW FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO=? AND nvl(LAYER_NO,0)=nvl(?,0) ORDER BY CLAIM_NO DESC
claim.select.claimTableList=SELECT CLAIM_NO,TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') AS DATE_OF_LOSS ,TO_CHAR(CREATED_DATE,'DD/MM/YYYY') AS CREATED_DATE,STATUS_OF_CLAIM,CONTRACT_NO,(TOTAL_AMT_PAID_TILL_DATE-LOSS_ESTIMATE_OS_OC) AS EDITVIEW FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO=? AND nvl(LAYER_NO,0)=nvl(?,0) AND SUB_CLASS=? ORDER BY CLAIM_NO DESC
#clime.select.getClaimRESERVEList=SELECT  TC.LOSS_ESTIMATE_REVISED_OC, TC.LOSS_ESTIMATE_REVISED_DC, TC.UPDATE_REFERENCE, TO_CHAR (TC.INCEPTION_DATE, 'DD/MM/YYYY') AS INCEPTION_DT,  TC.SL_NO, TC.CLAIM_NO,TC.CONTRACT_NO, TC.UPDATE_REFERENCE,TC.C_IBNR_100_OC, NVL ((SELECT SUM (REINSPREMIUM_OURSHARE_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID = TC.SL_NO AND CONTRACT_NO = TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO),'0') REINSPREMIUM_OURSHARE_OC,NVL((SELECT SUM(PAID_AMOUNT_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') PAIDAMTOC, NVL((SELECT SUM(PAID_AMOUNT_DC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') PAIDAMTUSD , NVL((SELECT SUM(NETCLAIMAMT_OURSHARE_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') NETCLAIMOC, NVL((SELECT SUM(NETCLAIMAMT_OURSHARE_DC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') NETCLAIMDC , NVL(loss_Estimate_Revised_OC,0) loss_Estimate_Revised_OC_2A , TP.PAID_CLAIM_OS_OC PAID_CLAIM_OS_OC_2B , NVL(loss_Estimate_Revised_OC,0)-TP.PAID_CLAIM_OS_OC OC_OS_Amount_2C, NVL(tc.SAF_OS_OC,0) SAF_OS_OC_3A, TP.SAF_OS_OC SAF_OS_OC_3B, NVL(tc.SAF_OS_OC,0)-TP.SAF_OS_OC Surveyor_OS_AMT_3C, NVL(tc.OTH_FEE_OS_OC,0) OTH_FEE_OS_OC_4A, TP.OTH_FEE_OS_OC OTH_FEE_OS_OC_4B, NVL(tc.OTH_FEE_OS_OC,0)-TP.OTH_FEE_OS_OC Other_Profess_OS_AMT_4C, NVL(loss_Estimate_Revised_OC,0)+NVL(loss_Estimate_Revised_OC,0)+NVL(tc.SAF_OS_OC,0) Total_A , TP.PAID_CLAIM_OS_OC+TP.PAID_CLAIM_OS_OC+TP.SAF_OS_OC Total_b, (NVL(loss_Estimate_Revised_OC,0)-TP.PAID_CLAIM_OS_OC)+(NVL(tc.SAF_OS_OC,0)-TP.SAF_OS_OC)+(NVL(tc.OTH_FEE_OS_OC,0)-TP.OTH_FEE_OS_OC) TOTAL_C FROM TTRN_CLAIM_UPDATION tc,(SELECT CONTRACT_NO,CLAIM_NO,SUM(NVL(PAID_CLAIM_OS_OC,0)) PAID_CLAIM_OS_OC,SUM(NVL(SAF_OS_OC,0)) SAF_OS_OC, SUM(NVL(OTH_FEE_OS_OC,0)) OTH_FEE_OS_OC from ttrn_claim_payment Tcp WHERE CLAIM_NO=? and CONTRACT_NO=? AND  reserve_id=(select max(reserve_id) from ttrn_claim_payment where Tcp.CONTRACT_NO=CONTRACT_NO AND CLAIM_NO=TCP.CLAIM_NO ) GROUP BY CONTRACT_NO,CLAIM_NO )TP  WHERE TC.CONTRACT_NO=TP.CONTRACT_NO AND TP.CLAIM_NO=TC.CLAIM_NO AND tc.SL_NO=(select max(sl_no) from TTRN_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TP.CLAIM_NO )
#clime.select.getClaimRESERVEList=SELECT  TC.LOSS_ESTIMATE_REVISED_OC, TC.LOSS_ESTIMATE_REVISED_DC, TC.UPDATE_REFERENCE, TO_CHAR (TC.INCEPTION_DATE, 'DD/MM/YYYY') AS INCEPTION_DT,  TC.SL_NO, TC.CLAIM_NO,TC.CONTRACT_NO,TC.C_IBNR_100_OC, NVL ((SELECT SUM (REINSPREMIUM_OURSHARE_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID = TC.SL_NO AND CONTRACT_NO = TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO),'0') REINSPREMIUM_OURSHARE_OC,NVL((SELECT SUM(PAID_AMOUNT_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') PAIDAMTOC, NVL((SELECT SUM(PAID_AMOUNT_DC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') PAIDAMTUSD  , NVL(loss_Estimate_Revised_OC,0) loss_Estimate_Revised_OC_2A , TP.PAID_CLAIM_OS_OC PAID_CLAIM_OS_OC_2B , NVL(loss_Estimate_Revised_OC,0)-TP.PAID_CLAIM_OS_OC OC_OS_Amount_2C, NVL(tc.SAF_OS_OC,0) SAF_OS_OC_3A, TP.SAF_OS_OC SAF_OS_OC_3B, NVL(tc.SAF_OS_OC,0)-TP.SAF_OS_OC Surveyor_OS_AMT_3C, NVL(tc.OTH_FEE_OS_OC,0) OTH_FEE_OS_OC_4A, TP.OTH_FEE_OS_OC OTH_FEE_OS_OC_4B, NVL(tc.OTH_FEE_OS_OC,0)-TP.OTH_FEE_OS_OC Other_Profess_OS_AMT_4C, NVL(loss_Estimate_Revised_OC,0)+NVL(tc.SAF_OS_OC,0)+NVL(tc.OTH_FEE_OS_OC,0) Total_A , TP.PAID_CLAIM_OS_OC+TP.SAF_OS_OC + TP.OTH_FEE_OS_OC Total_b, (NVL(loss_Estimate_Revised_OC,0)-TP.PAID_CLAIM_OS_OC)+(NVL(tc.SAF_OS_OC,0)-TP.SAF_OS_OC)+(NVL(tc.OTH_FEE_OS_OC,0)-TP.OTH_FEE_OS_OC) TOTAL_C FROM TTRN_CLAIM_UPDATION tc,(SELECT nvl(SUM(NVL(PAID_CLAIM_OS_OC,0)),0) PAID_CLAIM_OS_OC,nvl(SUM(NVL(SAF_OS_OC,0)),0) SAF_OS_OC, nvl(SUM(NVL(OTH_FEE_OS_OC,0)),0) OTH_FEE_OS_OC from ttrn_claim_payment Tcp WHERE CONTRACT_NO=?  AND CLAIM_NO=? AND  reserve_id=(select max(reserve_id) from ttrn_claim_payment where Tcp.CONTRACT_NO=CONTRACT_NO AND CLAIM_NO=TCP.CLAIM_NO ))TP  WHERE TC.CONTRACT_NO=? AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no) from TTRN_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TC.CLAIM_NO )
clime.select.getClaimRESERVEList=SELECT  TC.LOSS_ESTIMATE_REVISED_OC, TC.LOSS_ESTIMATE_REVISED_DC, TC.UPDATE_REFERENCE, TO_CHAR (TC.INCEPTION_DATE, 'DD/MM/YYYY') AS INCEPTION_DT,  TC.SL_NO, TC.CLAIM_NO,TC.CONTRACT_NO,TC.C_IBNR_100_OC,TC.C_IBNR_OS_OC, NVL ((SELECT SUM (REINSPREMIUM_OURSHARE_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID = TC.SL_NO AND CONTRACT_NO = TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO),'0') REINSPREMIUM_OURSHARE_OC,NVL((SELECT SUM(PAID_AMOUNT_OC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') PAIDAMTOC, NVL((SELECT SUM(PAID_AMOUNT_DC) FROM TTRN_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') PAIDAMTUSD  , NVL(loss_Estimate_Revised_OC,0) loss_Estimate_Revised_OC_2A , NVL(TP.PAID_CLAIM_OS_OC,0) PAID_CLAIM_OS_OC_2B , NVL(loss_Estimate_Revised_OC,0)-NVL(TP.PAID_CLAIM_OS_OC,0) OC_OS_Amount_2C, NVL(tc.SAF_OS_OC,0) SAF_OS_OC_3A, NVL(TP.SAF_OS_OC,0) SAF_OS_OC_3B, NVL(tc.SAF_OS_OC,0)-NVL(TP.SAF_OS_OC,0) Surveyor_OS_AMT_3C, NVL(tc.OTH_FEE_OS_OC,0) OTH_FEE_OS_OC_4A, NVL(TP.OTH_FEE_OS_OC,0) OTH_FEE_OS_OC_4B, NVL(tc.OTH_FEE_OS_OC,0)-NVL(TP.OTH_FEE_OS_OC,0) Other_Profess_OS_AMT_4C, NVL(loss_Estimate_Revised_OC,0)+NVL(tc.SAF_OS_OC,0)+NVL(tc.OTH_FEE_OS_OC,0) Total_A , NVL(TP.PAID_CLAIM_OS_OC,0)+NVL(TP.SAF_OS_OC,0) + NVL(TP.OTH_FEE_OS_OC,0) Total_b, (NVL(loss_Estimate_Revised_OC,0)-NVL(TP.PAID_CLAIM_OS_OC,0))+(NVL(tc.SAF_OS_OC,0)-NVL(TP.SAF_OS_OC,0))+(NVL(tc.OTH_FEE_OS_OC,0)-NVL(TP.OTH_FEE_OS_OC,0)) TOTAL_C FROM TTRN_CLAIM_UPDATION tc left outer join (SELECT   reserve_id,NVL (SUM (NVL (PAID_CLAIM_OS_OC, 0)), 0) PAID_CLAIM_OS_OC, NVL (SUM (NVL (SAF_OS_OC, 0)), 0) SAF_OS_OC, NVL (SUM (NVL (OTH_FEE_OS_OC, 0)), 0) OTH_FEE_OS_OC FROM   ttrn_claim_payment Tcp WHERE   CONTRACT_NO = ? AND CLAIM_NO = ? group by reserve_id) TP on ( tp.reserve_id=tc.SL_NO)  WHERE   TC.CONTRACT_NO = ? AND TC.CLAIM_NO = ? order by SL_NO
##claim.select.getClaimList=SELECT CD.CLAIM_NO,TO_CHAR(CD.DATE_OF_LOSS ,'DD/MM/YYYY') AS DATEOFLOSS,CD.LOSS_ESTIMATE_OS_OC,CD.CURRENCY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY') AS CREATEDDATE,CM.CURRENCY_NAME FROM TTRN_CLAIM_DETAILS CD,CURRENCY_MASTER CM  WHERE CD.CLAIM_NO =? AND CD.CONTRACT_NO =? AND CM.BRANCH_CODE=? AND CM.CURRENCY_ID=CD.CURRENCY AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE  BRANCH_CODE=BRANCH_CODE AND CURRENCY_ID=CM.CURRENCY_ID)
claim.select.getClaimList=SELECT CD.CLAIM_NO,TO_CHAR(CD.DATE_OF_LOSS ,'DD/MM/YYYY') AS DATEOFLOSS,CD.LOSS_ESTIMATE_OS_OC,CD.CURRENCY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY') AS CREATEDDATE,CM.SHORT_NAME CURRENCY_NAME FROM TTRN_CLAIM_DETAILS CD,CURRENCY_MASTER CM WHERE CD.CLAIM_NO =? AND CD.CONTRACT_NO =? AND CM.BRANCH_CODE=? AND CM.CURRENCY_ID=CD.CURRENCY AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER c WHERE  c.BRANCH_CODE=cm.BRANCH_CODE AND c.CURRENCY_ID=CM.CURRENCY_ID)
claim.insert.cliamDetails=INSERT INTO TTRN_CLAIM_DETAILS (STATUS_OF_CLAIM,DATE_OF_LOSS,REPORT_DATE,LOSS_DETAILS,CAUSE_OF_LOSS,CURRENCY,LOSS_ESTIMATE_OC,LOSS_ESTIMATE_OS_OC,EXCHANGE_RATE,LOSS_ESTIMATE_OS_DC,ADVICE_UW,ADVICE_MANAGEMENT,RI_RECOVERY,RI_RECOVERY_AMOUNT_DC,RECOVERY_FROM,CREATED_BY,CREATED_DATE,LOCATION,REMARKS,ADVICE_UW_EMAILID, ADVICE_MGT_EMAILID,INCEPTION_DATE,STATUS,RISK_CODE,ACCUMULATION_CODE,EVENT_CODE,insured_name,SUB_CLASS,BRANCH_CODE, LOGIN_ID, RECORD_FEES_CRE_RESERVE, SAF_100_OC, SAF_100_DC,OTH_FEE_100_OC, OTH_FEE_100_DC, C_IBNR_100_OC, C_IBNR_100_DC,RECORD_IBNR,CEDENT_CLAIM_NO,SAF_OS_OC,OTH_FEE_OS_OC,C_IBNR_OS_OC,SAF_OS_DC,OTH_FEE_OS_DC,C_IBNR_OS_DC,Loss_Estimate_DC,REOPENED_DATE,GROSSLOSS_FGU_OC,CLAIM_CLASS,CLAIM_SUBCLASS,RES_POS_DATE,COVER_LIMIT_DEPTID,PROPOSAL_NO,PRODUCT_ID,REPUDATE_DATE,CONTRACT_NO,CLAIM_NO,LAYER_NO) VALUES (?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,SYSDATE,'Y',?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?)
#claim.insert.cliamDetails=INSERT INTO TTRN_CLAIM_DETAILS (STATUS_OF_CLAIM,DATE_OF_LOSS,REPORT_DATE,LOSS_DETAILS,CAUSE_OF_LOSS,CURRENCY,LOSS_ESTIMATE_OC,LOSS_ESTIMATE_OS_OC,EXCHANGE_RATE,LOSS_ESTIMATE_OS_DC,ADVICE_UW,ADVICE_MANAGEMENT,RI_RECOVERY,RI_RECOVERY_AMOUNT_DC,RECOVERY_FROM,CREATED_BY,CREATED_DATE,LOCATION,REMARKS,ADVICE_UW_EMAILID, ADVICE_MGT_EMAILID,INCEPTION_DATE,STATUS,RISK_CODE,ACCUMULATION_CODE,EVENT_CODE,insured_name,SUB_CLASS,BRANCH_CODE, LOGIN_ID, RECORD_FEES_CRE_RESERVE, SAF_100_OC, SAF_100_DC,OTH_FEE_100_OC, OTH_FEE_100_DC, C_IBNR_100_OC, C_IBNR_100_DC,RECORD_IBNR,CEDENT_CLAIM_NO,SAF_OS_OC,OTH_FEE_OS_OC,C_IBNR_OS_OC,SAF_OS_DC,OTH_FEE_OS_DC,C_IBNR_OS_DC,Loss_Estimate_DC,REOPENED_DATE,GROSSLOSS_FGU_OC,RES_POS_DATE,CONTRACT_NO,CLAIM_NO,LAYER_NO) VALUES (?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,SYSDATE,'Y',?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?)
claim.select.getClaimPaymentList=SELECT PAID_AMOUNT_OC,PAYMENT_REQUEST_NO,PAID_AMOUNT_OC,LOSS_ESTIMATE_REVISED_OC,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DATE,PAID_AMOUNT_DC,LOSS_ESTIMATE_REVISED_DC,RESERVE_ID,CLAIM_PAYMENT_NO, SETTLEMENT_STATUS FROM TTRN_CLAIM_PAYMENT WHERE CLAIM_NO=? AND CONTRACT_NO=? ORDER BY CLAIM_PAYMENT_NO DESC
claim.select.getClaimReviewList=SELECT SNO,TO_CHAR(REVIEW_DATE,'DD/MM/YYYY') REVIEW_DATE,REVIEW_DONE_BY,REMARKS FROM TTRN_CLAIM_REVIEW WHERE CONTRACT_NO=? AND CLAIM_NO=?
claim.update.cliamDetailsUpdate=UPDATE TTRN_CLAIM_DETAILS SET STATUS_OF_CLAIM\=?,DATE_OF_LOSS\=TO_DATE(?,'DD/MM/YYYY'),REPORT_DATE\=TO_DATE(?,'DD/MM/YYYY'),LOSS_DETAILS\=?,CAUSE_OF_LOSS\=?,CURRENCY\=?,LOSS_ESTIMATE_OC\=?,LOSS_ESTIMATE_OS_OC\=?,EXCHANGE_RATE\=?,LOSS_ESTIMATE_OS_DC\=?,ADVICE_UW\=?,ADVICE_MANAGEMENT\=?,RI_RECOVERY\=?,RI_RECOVERY_AMOUNT_DC\=?,RECOVERY_FROM\=?,CREATED_BY\=?,CREATED_DATE\=TO_DATE(?,'DD/MM/YYYY'),INCEPTION_DATE\=SYSDATE,LOCATION\=?,REMARKS\=?,ADVICE_UW_EMAILID\=?,ADVICE_MGT_EMAILID\=?,RISK_CODE\=?,ACCUMULATION_CODE\=?,EVENT_CODE\=?,insured_name\=?,SUB_CLASS\=?,BRANCH_CODE\=?, LOGIN_ID\=?, RECORD_FEES_CRE_RESERVE\=?, SAF_100_OC\=?, SAF_100_DC\=?,OTH_FEE_100_OC\=?, OTH_FEE_100_DC\=?, C_IBNR_100_OC\=?, C_IBNR_100_DC\=?,RECORD_IBNR\=?,CEDENT_CLAIM_NO\=?,SAF_OS_OC\=?,OTH_FEE_OS_OC\=?,C_IBNR_OS_OC\=?,SAF_OS_DC\=?,OTH_FEE_OS_DC\=?,C_IBNR_OS_DC\=?,Loss_Estimate_DC\=?,REOPENED_DATE\=TO_DATE(?,'DD/MM/YYYY'),GROSSLOSS_FGU_OC\=?,CLAIM_CLASS\=?,CLAIM_SUBCLASS\=?,RES_POS_DATE\=TO_DATE(?,'DD/MM/YYYY') , COVER_LIMIT_DEPTID\=?,PROPOSAL_NO\=?,PRODUCT_ID\=?,REPUDATE_DATE\=TO_DATE(?,'DD/MM/YYYY')  WHERE CONTRACT_NO\=? AND CLAIM_NO\=? AND LAYER_NO\=? 
#claim.update.cliamDetailsUpdate=UPDATE TTRN_CLAIM_DETAILS SET STATUS_OF_CLAIM\=?,DATE_OF_LOSS\=TO_DATE(?,'DD/MM/YYYY'),REPORT_DATE\=TO_DATE(?,'DD/MM/YYYY'),LOSS_DETAILS\=?,CAUSE_OF_LOSS\=?,CURRENCY\=?,LOSS_ESTIMATE_OC\=?,LOSS_ESTIMATE_OS_OC\=?,EXCHANGE_RATE\=?,LOSS_ESTIMATE_OS_DC\=?,ADVICE_UW\=?,ADVICE_MANAGEMENT\=?,RI_RECOVERY\=?,RI_RECOVERY_AMOUNT_DC\=?,RECOVERY_FROM\=?,CREATED_BY\=?,CREATED_DATE\=TO_DATE(?,'DD/MM/YYYY'),INCEPTION_DATE\=SYSDATE,LOCATION\=?,REMARKS\=?,ADVICE_UW_EMAILID\=?,ADVICE_MGT_EMAILID\=?,RISK_CODE\=?,ACCUMULATION_CODE\=?,EVENT_CODE\=?,insured_name\=?,SUB_CLASS\=?,BRANCH_CODE\=?, LOGIN_ID\=?, RECORD_FEES_CRE_RESERVE\=?, SAF_100_OC\=?, SAF_100_DC\=?,OTH_FEE_100_OC\=?, OTH_FEE_100_DC\=?, C_IBNR_100_OC\=?, C_IBNR_100_DC\=?,RECORD_IBNR\=?,CEDENT_CLAIM_NO\=?,SAF_OS_OC\=?,OTH_FEE_OS_OC\=?,C_IBNR_OS_OC\=?,SAF_OS_DC\=?,OTH_FEE_OS_DC\=?,C_IBNR_OS_DC\=?,Loss_Estimate_DC\=?,REOPENED_DATE\=TO_DATE(?,'DD/MM/YYYY'),GROSSLOSS_FGU_OC\=?,RES_POS_DATE\=TO_DATE(?,'DD/MM/YYYY') WHERE CONTRACT_NO\=? AND CLAIM_NO\=? AND LAYER_NO\=? 
claim.select.maxResvId=SELECT NVL(MAX(SL_NO),'1') MAXID FROM TTRN_CLAIM_UPDATION WHERE  CLAIM_NO=? AND CONTRACT_NO=?
claim.select.excRate=SELECT EXCHANGE_RATE FROM TTRN_CLAIM_DETAILS WHERE CLAIM_NO=? AND CONTRACT_NO=?
#claim.select.lossEstRev=SELECT CU.LOSS_ESTIMATE_REVISED_OC FROM TTRN_CLAIM_UPDATION CU WHERE CU.CONTRACT_NO=? AND CU.CLAIM_NO=? AND CU.SL_NO=(SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION WHERE CONTRACT_NO=CU.CONTRACT_NO AND CLAIM_NO=CU.CLAIM_NO)
claim.select.lossEstRev=SELECT sum(nvl(CU.LOSS_ESTIMATE_REVISED_OC,0)+nvl(CU.SAF_OS_OC,0)+nvl(CU.OTH_FEE_OS_OC,0))LOSS_ESTIMATE_REVISED_OC FROM TTRN_CLAIM_UPDATION CU WHERE CU.CONTRACT_NO=? AND CU.CLAIM_NO=? AND CU.SL_NO=(SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION WHERE CONTRACT_NO=CU.CONTRACT_NO AND CLAIM_NO=CU.CLAIM_NO)
claim.update.closeClaim=UPDATE TTRN_CLAIM_DETAILS SET STATUS_OF_CLAIM=?,CLAIM_CLOSED_DATE=TO_DATE(?,'DD/MM/YYYY') WHERE CONTRACT_NO=? AND CLAIM_NO=?
claim.select.claimstatus=SELECT STATUS_OF_CLAIM	 FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO=? AND CLAIM_NO=?
claim.select.getInsDate=SELECT TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INS_DATE FROM TTRN_CLAIM_UPDATION WHERE CLAIM_NO=? AND SL_NO=(SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION WHERE CLAIM_NO=?)
claim.select.getLossDate=SELECT  TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') LOSS_DATE FROM  TTRN_CLAIM_DETAILS WHERE CLAIM_NO=?
claim.select.getContInsDate=SELECT TO_CHAR(RSK_INCEPTION_DATE,'DD/MM/YYYY') INS_DATE FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=?)
claim.select.getLastPayDt=SELECT   TO_CHAR (CP.INCEPTION_DATE, 'DD/MM/YYYY') AS PAY_DT FROM   TTRN_CLAIM_PAYMENT CP WHERE   CP.CLAIM_NO = ? AND CP.CONTRACT_NO = ? AND CP.CLAIM_PAYMENT_NO=(SELECT MAX(CLAIM_PAYMENT_NO) FROM TTRN_CLAIM_PAYMENT WHERE CLAIM_NO = CP.CLAIM_NO AND CONTRACT_NO=CP.CONTRACT_NO)
claim.lost.reserve.updateDate=SELECT TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY')INCEPTION_DATE FROM  TTRN_CLAIM_UPDATION TU WHERE CONTRACT_NO=? AND CLAIM_NO=?aND BRANCH_CODE=? AND SL_NO=(SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION WHERE CONTRACT_NO=TU.CONTRACT_NO AND CLAIM_NO=TU.CLAIM_NO AND BRANCH_CODE=TU.BRANCH_CODE)
#claim_allocation_list=SELECT   * FROM   ( (SELECT   SNO,TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TRANSACTION_NO,PRODUCT_NAME,DECODE (TYPE,'C','CLAIM') TYPE,PAID_AMOUNT,TAT.CURRENCY_ID, SIGN (PAID_AMOUNT) sign,DECODE (TAT.STATUS,'R','Reverted','Y','Allocated') STATUS, RECEIPT_NO, DECODE (TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT')TRANS_TYPE  FROM   TTRN_ALLOCATED_TRANSACTION TAT, TTRN_PAYMENT_RECEIPT TPR WHERE   TAT.RECEIPT_NO = TPR.PAYMENT_RECEIPT_NO AND CONTRACT_NO = ? AND TAT.TRANSACTION_NO = ?  AND TAT.STATUS = 'Y' AND tpr.amend_id =(SELECT   MAX (amend_id) FROM   Ttrn_Payment_Receipt WHERE   PAYMENT_RECEIPT_NO = tpr.PAYMENT_RECEIPT_NO AND branch_code = tpr.branch_code)) UNION ALL(SELECT   SNO,TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TRANSACTION_NO, PRODUCT_NAME,DECODE (TYPE,'C','CLAIM') TYPE, PAID_AMOUNT,TAT.CURRENCY_ID,SIGN (PAID_AMOUNT) sign,'Adjusted' STATUS,RECEIPT_NO,DECODE (ADJUSTMENT_TYPE,'W','Write Off','R','Round Off')TRANS_TYPE FROM   TTRN_ALLOCATED_TRANSACTION TAT WHERE       CONTRACT_NO = ? AND TAT.TRANSACTION_NO = ? AND TAT.STATUS = 'Y' AND TAT.RECEIPT_NO NOT IN(SELECT   TPR.PAYMENT_RECEIPT_NO FROM   TTRN_PAYMENT_RECEIPT TPR  WHERE   TAT.RECEIPT_NO = TPR.PAYMENT_RECEIPT_NO)))ORDER BY   SNO DESC
claim_allocation_list=SELECT   * FROM   ( (SELECT   SNO,TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TRANSACTION_NO,PRODUCT_NAME,DECODE (TYPE,'C','CLAIM') TYPE,PAID_AMOUNT,TAT.CURRENCY_ID, SIGN (PAID_AMOUNT) sign,DECODE (TAT.STATUS,'R','Reverted','Y','Allocated') STATUS, RECEIPT_NO, DECODE (TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT')TRANS_TYPE  FROM   TTRN_ALLOCATED_TRANSACTION TAT, TTRN_PAYMENT_RECEIPT TPR WHERE   TAT.RECEIPT_NO = TPR.PAYMENT_RECEIPT_NO AND CONTRACT_NO = ? AND TAT.TRANSACTION_NO=? AND TYPE = 'C' AND TAT.STATUS = 'Y' AND tpr.amend_id =(SELECT   MAX (amend_id) FROM   Ttrn_Payment_Receipt WHERE   PAYMENT_RECEIPT_NO = tpr.PAYMENT_RECEIPT_NO AND branch_code = tpr.branch_code)) UNION ALL(SELECT   SNO,TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TRANSACTION_NO, PRODUCT_NAME,DECODE (TYPE,'C','CLAIM') TYPE, PAID_AMOUNT,TAT.CURRENCY_ID,SIGN (PAID_AMOUNT) sign,'Adjusted' STATUS,RECEIPT_NO,DECODE (ADJUSTMENT_TYPE,'W','Write Off','R','Round Off')TRANS_TYPE FROM   TTRN_ALLOCATED_TRANSACTION TAT WHERE       CONTRACT_NO = ? AND TAT.TRANSACTION_NO=? AND TYPE = 'C' AND  TAT.STATUS = 'Y' AND TAT.RECEIPT_NO NOT IN(SELECT   TPR.PAYMENT_RECEIPT_NO FROM   TTRN_PAYMENT_RECEIPT TPR  WHERE   TAT.RECEIPT_NO = TPR.PAYMENT_RECEIPT_NO)))ORDER BY   SNO DESC
claim.retro.split={CALL RetroClaimPayment_Split(?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?)}
claim.update.retro.split={CALL RetroClaimUpdation_Split(?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?)}
#claim.loss.estimate.paid.difference = SELECT NVL(loss_Estimate_Revised_OC,0) -TP.PAID_CLAIM_OS_OC LOSS_ESTIMATE_DIFF  FROM   TTRN_CLAIM_UPDATION tc,(SELECT  CONTRACT_NO,CLAIM_NO,SUM(NVL(PAID_CLAIM_OS_OC,0)) PAID_CLAIM_OS_OC from ttrn_claim_payment Tcp  WHERE CONTRACT_NO=? AND CLAIM_NO=?  and reserve_id=(select  max(reserve_id)  from   ttrn_claim_payment  where Tcp.CONTRACT_NO=CONTRACT_NO AND CLAIM_NO=TCP.CLAIM_NO ) GROUP  BY  CONTRACT_NO,CLAIM_NO)TP  WHERE TC.CONTRACT_NO=TP.CONTRACT_NO  AND TP.CLAIM_NO=TC.CLAIM_NO AND tc.SL_NO=(select max(sl_no)  from TTRN_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=tc.CLAIM_NO )
#claim.saf.os.sum.difference = SELECT NVL(tc.SAF_OS_OC,0) -TP.SAF_OS_OC SAF_OS_DIFF  FROM   TTRN_CLAIM_UPDATION tc,(SELECT  CONTRACT_NO,CLAIM_NO,SUM(NVL(SAF_OS_OC,0)) SAF_OS_OC from ttrn_claim_payment Tcp WHERE CONTRACT_NO=? AND CLAIM_NO=?  and reserve_id=(select  max(reserve_id)  from   ttrn_claim_payment  where Tcp.CONTRACT_NO=CONTRACT_NO AND CLAIM_NO=TCP.CLAIM_NO ) GROUP  BY  CONTRACT_NO,CLAIM_NO)TP  WHERE TC.CONTRACT_NO=TP.CONTRACT_NO  AND TP.CLAIM_NO=TC.CLAIM_NO AND tc.SL_NO=(select max(sl_no)  from TTRN_CLAIM_UPDATION where SL_NO=tc.SL_NO and CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TP.CLAIM_NO )
#claim.other.fee.os.sum.difference = SELECT NVL(tc.OTH_FEE_OS_OC,0) -TP.OTH_FEE_OS_OC OTH_FEE_DIFF  FROM   TTRN_CLAIM_UPDATION tc,(SELECT  CONTRACT_NO,CLAIM_NO,SUM(NVL(OTH_FEE_OS_OC,0)) OTH_FEE_OS_OC from ttrn_claim_payment Tcp WHERE CONTRACT_NO='10410003617' AND CLAIM_NO='104300025'  and reserve_id=(select  max(reserve_id)  from   ttrn_claim_payment  where Tcp.CONTRACT_NO=CONTRACT_NO AND CLAIM_NO=TCP.CLAIM_NO ) GROUP  BY  CONTRACT_NO,CLAIM_NO)TP  WHERE TC.CONTRACT_NO=TP.CONTRACT_NO  AND TP.CLAIM_NO=TC.CLAIM_NO AND tc.SL_NO=(select max(sl_no)  from TTRN_CLAIM_UPDATION where SL_NO=tc.SL_NO and CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TP.CLAIM_NO )
claim.loss.estimate.paid.difference = SELECT NVL(loss_Estimate_Revised_OC,0) -TP.PAID_CLAIM_OS_OC LOSS_ESTIMATE_DIFF  FROM   TTRN_CLAIM_UPDATION tc,(SELECT nvl(SUM(NVL(PAID_CLAIM_OS_OC,0)),0) PAID_CLAIM_OS_OC from ttrn_claim_payment Tcp  WHERE CONTRACT_NO=? AND CLAIM_NO=?  and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=tc.CLAIM_NO )
CLAIM_LOSS_ESTIMATE_PAID_DIFFERENCE_EDIT = SELECT NVL(loss_Estimate_Revised_OC,0) -TP.PAID_CLAIM_OS_OC LOSS_ESTIMATE_DIFF  FROM   TTRN_CLAIM_UPDATION tc,(SELECT nvl(SUM(NVL(PAID_CLAIM_OS_OC,0)),0) PAID_CLAIM_OS_OC from ttrn_claim_payment Tcp  WHERE CONTRACT_NO=? AND CLAIM_NO=?  AND CLAIM_PAYMENT_NO!= ? and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=tc.CLAIM_NO )
claim.saf.os.sum.difference = SELECT NVL(tc.SAF_OS_OC,0) -TP.SAF_OS_OC SAF_OS_DIFF  FROM   TTRN_CLAIM_UPDATION tc,(SELECT  nvl(SUM(NVL(SAF_OS_OC,0)),0) SAF_OS_OC from ttrn_claim_payment Tcp WHERE CONTRACT_NO=? AND CLAIM_NO=?  and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_CLAIM_UPDATION where  CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TC.CLAIM_NO )
CLAIM_SAF_OS_SUM_DIFFERENCE_EDIT =SELECT NVL(tc.SAF_OS_OC,0) -TP.SAF_OS_OC SAF_OS_DIFF  FROM   TTRN_CLAIM_UPDATION tc,(SELECT  nvl(SUM(NVL(SAF_OS_OC,0)),0) SAF_OS_OC from ttrn_claim_payment Tcp WHERE CONTRACT_NO=? AND CLAIM_NO=? AND CLAIM_PAYMENT_NO!=? and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_CLAIM_UPDATION where  CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TC.CLAIM_NO )
claim.other.fee.os.sum.difference = SELECT NVL(tc.OTH_FEE_OS_OC,0) -TP.OTH_FEE_OS_OC OTH_FEE_DIFF  FROM   TTRN_CLAIM_UPDATION tc,(SELECT nvl(SUM(NVL(OTH_FEE_OS_OC,0)),0) OTH_FEE_OS_OC from ttrn_claim_payment Tcp WHERE CONTRACT_NO=? AND CLAIM_NO=?  and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TC.CLAIM_NO )
CLAIM_OTHER_FEE_OS_SUM_EDIT =  SELECT NVL(tc.OTH_FEE_OS_OC,0) -TP.OTH_FEE_OS_OC OTH_FEE_DIFF  FROM   TTRN_CLAIM_UPDATION tc,(SELECT nvl(SUM(NVL(OTH_FEE_OS_OC,0)),0) OTH_FEE_OS_OC from ttrn_claim_payment Tcp WHERE CONTRACT_NO=? AND CLAIM_NO=? AND CLAIM_PAYMENT_NO!=? and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TC.CLAIM_NO )
##SubProfitCenter Query
subprofit.select.tmasSpfcName=SELECT TMAS_SPFC_NAME FROM TMAS_SPFC_MASTER WHERE LOWER(TMAS_SPFC_NAME)= LOWER(?) AND TMAS_PRODUCT_ID =?
##subprofit.select.tmasSpfcAllId=SELECT COUNT(*) FROM TMAS_SPFC_MASTER WHERE TMAS_SPFC_ID=? AND BRANCH_CODE=?
subprofit.select.tmasSpfcAllId=SELECT COUNT(*) FROM TMAS_SPFC_MASTER WHERE TMAS_SPFC_ID=? AND BRANCH_CODE=?
subprofit.select.tmasSpfcNameId=SELECT TMAS_SPFC_NAME FROM TMAS_SPFC_MASTER WHERE UPPER(TMAS_SPFC_ID) =UPPER(?) AND BRANCH_CODE =?
subprofit.select.GetEditQuery=SELECT TMAS_SPFC_NAME,TMAS_STATUS,CORE_COMPANY_CODE,TMAS_SPFC_ID,TMAS_PRODUCT_ID FROM TMAS_SPFC_MASTER WHERE TMAS_SPFC_ID = ? AND BRANCH_CODE = ? AND TMAS_PRODUCT_ID=?
subprofit.insert.insertQuery=INSERT INTO TMAS_SPFC_MASTER( TMAS_SPFC_ID, TMAS_PRODUCT_ID, TMAS_SPFC_NAME, TMAS_STATUS, CORE_COMPANY_CODE ,BRANCH_CODE) VALUES (UPPER (?),?,?,?,?,?)
subprofit.update.GetUpdateDepartment=UPDATE TMAS_SPFC_MASTER SET TMAS_SPFC_NAME = ?,TMAS_STATUS = ?,CORE_COMPANY_CODE=? WHERE TMAS_SPFC_ID = ? AND TMAS_PRODUCT_ID = ? AND BRANCH_CODE=?
subprofit.select.GetListSubProfitCenter=SELECT DECODE(TMAS_STATUS,'Y','ACTIVE','DEACTIVE') STATUS,TMAS_SPFC_ID,TMAS_PRODUCT_ID,TMAS_SPFC_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_SPFC_MASTER WHERE BRANCH_CODE \= ? 
subprofit.select.GetSearchListSubProfitCenter=SELECT DECODE(TMAS_STATUS,'Y','ACTIVE','DEACTIVE') STATUS,TMAS_SPFC_ID,TMAS_PRODUCT_ID,TMAS_SPFC_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_SPFC_MASTER WHERE TMAS_PRODUCT_ID = ? AND ? LIKE '%?%'
subprofit.select.coreCheckInsert=SELECT COUNT(*) FROM TMAS_SPFC_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=?
subprofit.select.coreCheckUpdate=SELECT COUNT(*) FROM TMAS_SPFC_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=? AND TMAS_SPFC_ID!=?
subprofit.insert.validationquery=SELECT count(*)  FROM TMAS_SPFC_MASTER WHERE LOWER(TMAS_SPFC_NAME) = LOWER(?) AND TMAS_PRODUCT_ID =? and branch_code=?
subprofit.insert.validationquery1=SELECT count(*)  FROM TMAS_SPFC_MASTER WHERE LOWER(TMAS_SPFC_ID) = LOWER(?) AND TMAS_PRODUCT_ID =? and branch_code=?
subprofit.edit.validationquery=SELECT count(*) FROM TMAS_SPFC_MASTER WHERE LOWER(TMAS_SPFC_NAME) = LOWER(?) AND TMAS_PRODUCT_ID =? and TMAS_SPFC_ID!=? and branch_code=?

##ProfitCenter Query
profit.select.tmasPfcName=SELECT COUNT(1) CNT FROM TMAS_PFC_MASTER WHERE LOWER(TMAS_PFC_NAME)=LOWER(?) AND BRANCH_CODE=?
profit.select.tmasPfcNameupd=SELECT COUNT(1) CNT FROM TMAS_PFC_MASTER WHERE TMAS_PFC_ID<>? AND LOWER(TMAS_PFC_NAME)=LOWER(?) AND BRANCH_CODE=?
profit.insert.insertQuery=INSERT INTO TMAS_PFC_MASTER ( TMAS_PFC_ID, TMAS_PFC_NAME, TMAS_STATUS, CORE_COMPANY_CODE, BRANCH_CODE) VALUES ( ?,?,?,?,? )
profit.select.tmasPfcNameCheck=SELECT TMAS_PFC_NAME FROM TMAS_PFC_MASTER WHERE LOWER(TMAS_PFC_NAME)= LOWER(?)
profit.select.tmasPfcNameId=SELECT COUNT(1) CNT FROM TMAS_PFC_MASTER WHERE LOWER(TMAS_PFC_ID)\= LOWER(?) AND BRANCH_CODE\=?
profit.select.getEditProfitCenter=SELECT TMAS_PFC_NAME,TMAS_STATUS,CORE_COMPANY_CODE,TMAS_PFC_ID FROM TMAS_PFC_MASTER WHERE TMAS_PFC_ID \= ? AND BRANCH_CODE\=? 
profit.update.updateQuery=UPDATE TMAS_PFC_MASTER SET TMAS_PFC_NAME \= ?, TMAS_STATUS \= ?, CORE_COMPANY_CODE \= ? WHERE TMAS_PFC_ID \= ? AND BRANCH_CODE\=? 
##profit.select.getListProfitCenter=SELECT TMAS_PFC_ID,TMAS_PFC_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_PFC_MASTER WHERE BRANCH_CODE=?
profit.select.getListProfitCenter=SELECT DECODE(TMAS_STATUS,'Y','ACTIVE','DEACTIVE')STATUS,TMAS_PFC_ID,TMAS_PFC_NAME,CORE_COMPANY_CODE FROM TMAS_PFC_MASTER WHERE BRANCH_CODE=?
profit.select.coreCheckInsert=SELECT COUNT(*) FROM TMAS_PFC_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=?
profit.select.coreCheckUpdate=SELECT COUNT(*) FROM TMAS_PFC_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=? AND TMAS_PFC_ID!=?
profit.select.profitnamecheckupdate=SELECT COUNT(*) FROM TMAS_PFC_MASTER WHERE upper(TMAS_PFC_NAME)=upper(?) AND TMAS_PFC_ID!=?  AND BRANCH_CODE=?
profit.select.profitnamecheckinsert=SELECT COUNT(*) FROM TMAS_PFC_MASTER WHERE upper(TMAS_PFC_NAME)=upper(?) AND BRANCH_CODE=?
profit.select.profitidcheck=SELECT COUNT(*) FROM TMAS_PFC_MASTER WHERE upper(TMAS_PFC_ID)=upper(?) AND BRANCH_CODE=?


##CeddingCompanyBussiness Query
ceddingcompany.select.getViewExist=SELECT CUSTOMER_ID,FIRST_NAME,MOBILE,EMAIL,COMPANY_NAME,CED_COMPANY_PHONE FROM PERSONAL_INFO WHERE STATUS=? AND CUSTOMER_TYPE='C' ORDER BY 5 ASC

##CeddingCompanyDao Query
ceddingcompanydao.insert.insertCeddingQuery=INSERT INTO PERSONAL_INFO ( CUSTOMER_ID,TITLE,FIRST_NAME,TELEPHONE,MOBILE,FAX ,EMAIL ,ADDRESS1,ADDRESS2,OCCUPATION ,POBOX,COUNTRY,AMEND_ID,INCEPTION_DATE,EFFECTIVE_DATE,ENTRY_DATE,STATUS,LOGIN_ID,COMPANY_NAME,CUSTOMER_TYPE,CED_COMPANY_PHONE,CITY ) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,SYSDATE,SYSDATE,?,?,?,?,?,? )
ceddingcompanydao.update.getSequenceUpdate=UPDATE POLICY_NO_GENERATION SET CUSTOMER_ID=? WHERE PRODUCT_ID=?
#ceddingcompanydao.select.getSearchQueryTrue=SELECT TITLE,FIRST_NAME,TELEPHONE,MOBILE,FAX ,EMAIL ,ADDRESS1,ADDRESS2,OCCUPATION ,POBOX,COUNTRY,COMPANY_NAME,CED_COMPANY_PHONE,CITY,CUSTOMER_ID FROM PERSONAL_INFO WHERE CUSTOMER_ID = ? AND BRANCH_CODE=?
ceddingcompanydao.select.getSearchQueryTrue=SELECT TITLE,FIRST_NAME,TELEPHONE,MOBILE,FAX ,EMAIL ,ADDRESS1,ADDRESS2,OCCUPATION ,POBOX,COUNTRY,COMPANY_NAME,CED_COMPANY_PHONE,CITY,CUSTOMER_ID,CUSTOMER_TYPE,PAN_NUMBER,INDIVIDUALYN,NON_RESIDENTYN,SPECIAL_RATE FROM PERSONAL_INFO PI WHERE CUSTOMER_ID = ? AND BRANCH_CODE=? and AMEND_ID=(select max(amend_id) from PERSONAL_INFO where CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE)
ceddingcompanydao.select.getSearchQueryFalse=SELECT TITLE,FIRST_NAME,TELEPHONE,MOBILE,FAX ,EMAIL ,ADDRESS1,ADDRESS2,OCCUPATION ,POBOX,COUNTRY,COMPANY_NAME,CED_COMPANY_PHONE,CITY,CUSTOMER_ID FROM PERSONAL_INFO WHERE COMPANY_NAME like '%?%'
ceddingcompanydao.update.updateQuery=UPDATE PERSONAL_INFO SET TITLE=?,FIRST_NAME=?,TELEPHONE=?,MOBILE=?,FAX=? ,EMAIL=? ,ADDRESS1=?,ADDRESS2=?,OCCUPATION=? ,POBOX=?,COUNTRY=?,AMEND_ID=?,INCEPTION_DATE=SYSDATE,EFFECTIVE_DATE=SYSDATE,ENTRY_DATE=SYSDATE,STATUS=?,LOGIN_ID=?,COMPANY_NAME=?,CUSTOMER_TYPE=?,CED_COMPANY_PHONE=?,CITY=? WHERE CUSTOMER_ID=?
ceddingcompanydao.select.getViewExist=SELECT CUSTOMER_ID,FIRST_NAME,MOBILE,EMAIL,COMPANY_NAME,CED_COMPANY_PHONE FROM PERSONAL_INFO WHERE STATUS=? AND CUSTOMER_TYPE='C' ORDER BY 5 ASC


##CeddingCompanyArgument Query
ceddingcompanyargument.select.customerId=SELECT MAX(CUSTOMER_ID)+1 FROM POLICY_NO_GENERATION WHERE PRODUCT_ID =?

##ReportDao Query
#reportdao.select.facgetQuoteRegisterList=SELECT RD.RSK_PROPOSAL_NUMBER,RD.RSK_UWYEAR,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INC_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') ACC_DATE,sp.TMAS_SPFC_NAME,PIB.FIRST_NAME ||' '||PIB.LAST_NAME BROKER_NAME,pi.COMPANY_NAME,rd.RSK_INSURED_NAME,f.SHARE_WRITTEN,f.SHARE_SIGNED,pm.PROPOSAL_STATUS,rd.RSK_UNDERWRITTER,PM.BRANCH_CODE  FROM   TMAS_SPFC_MASTER SP, PERSONAL_INFO Pi, TTRN_RISK_DETAILS RD, TTRN_FAC_RISK_PROPOSAL F, POSITION_MASTER PM, PERSONAL_INFO PIb WHERE   SP.TMAS_SPFC_ID \= RD.RSK_SPFCID and SP.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID and sp.TMAS_STATUS \= 'Y' and SP.BRANCH_CODE \= PM.BRANCH_CODE and PM.BRANCH_CODE \= ? AND PM.PROPOSAL_NO \= F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER \= F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER \= PM.PROPOSAL_NO AND Pi.CUSTOMER_ID \= RD.RSK_CEDINGID AND Pi.BRANCH_CODE \= PM.BRANCH_CODE AND Pi.AMEND_ID \=(SELECT   MAX (AMEND_ID)  FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= Pi.CUSTOMER_ID AND BRANCH_CODE \= Pi.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE  RSK_PROPOSAL_NUMBER \=RD.RSK_PROPOSAL_NUMBER) AND PM.contract_STATUS \= 'P' AND RD.RSK_PRODUCTID \= ? AND PM.ACCOUNT_DATE BETWEEN TO_DATE (?,'DD/MM/YYYY') AND  TO_DATE (?,'DD/MM/YYYY')  and  PIb.CUSTOMER_ID \= RD.RSK_BROKERID  AND PIb.BRANCH_CODE \= pm.BRANCH_CODE  AND PIb.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PIb.CUSTOMER_ID AND BRANCH_CODE \= PIb.BRANCH_CODE)  AND F.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE  RSK_PROPOSAL_NUMBER \= F.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER  WHERE  PROPOSAL_NO \=PM.PROPOSAL_NO) 
reportdao.select.facgetQuoteRegisterList=SELECT RD.RSK_PROPOSAL_NUMBER,RD.RSK_UWYEAR,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INC_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') ACC_DATE,DECODE(RD.RSK_SPFCID,'ALL',RD.RSK_SPFCID,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= RD.RSK_PRODUCTID AND RD.BRANCH_CODE \= SPFC.BRANCH_CODE)) TMAS_SPFC_NAME,PIB.FIRST_NAME ||' '||PIB.LAST_NAME BROKER_NAME,pi.COMPANY_NAME,rd.RSK_INSURED_NAME,f.SHARE_WRITTEN,f.SHARE_SIGNED,pm.PROPOSAL_STATUS,rd.RSK_UNDERWRITTER,PM.BRANCH_CODE  FROM    PERSONAL_INFO Pi, TTRN_RISK_DETAILS RD, TTRN_FAC_RISK_PROPOSAL F, POSITION_MASTER PM, PERSONAL_INFO PIb WHERE   PM.BRANCH_CODE \= ? AND PM.PROPOSAL_NO \= F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER \= F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER \= PM.PROPOSAL_NO AND Pi.CUSTOMER_ID \= RD.RSK_CEDINGID AND Pi.BRANCH_CODE \= PM.BRANCH_CODE AND Pi.AMEND_ID \=(SELECT   MAX (AMEND_ID)  FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= Pi.CUSTOMER_ID AND BRANCH_CODE \= Pi.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE  RSK_PROPOSAL_NUMBER \=RD.RSK_PROPOSAL_NUMBER) AND PM.contract_STATUS \= 'P' AND RD.RSK_PRODUCTID \= ? AND PM.ACCOUNT_DATE BETWEEN TO_DATE (?,'DD/MM/YYYY') AND  TO_DATE (?,'DD/MM/YYYY')  and  PIb.CUSTOMER_ID \= RD.RSK_BROKERID  AND PIb.BRANCH_CODE \= pm.BRANCH_CODE  AND PIb.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PIb.CUSTOMER_ID AND BRANCH_CODE \= PIb.BRANCH_CODE)  AND F.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE  RSK_PROPOSAL_NUMBER \= F.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER  WHERE  PROPOSAL_NO \=PM.PROPOSAL_NO)
reportdao.select.facOrder=ORDER BY rd.RSK_PROPOSAL_NUMBER DESC
reportdao.select.facgetQuoteRegisterLoginId=AND PM.LOGIN_ID = ?
reportdao.select.facgetQuoteRegisterCedingId=AND RD.RSK_CEDINGID=?
reportdao.select.facgetQuoteRegisterBrokerId=AND RD.RSK_BROKERID=?
#reportdao.select.xolOrTreatygetQuoteRegisterList=SELECT   RD.RSK_PROPOSAL_NUMBER,rd.RSK_UWYEAR,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INC_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') ACC_DATE,sp.TMAS_SPFC_NAME,PIb.COMPANY_NAME BROKER_NAME,pi.COMPANY_NAME,rd.RSK_INSURED_NAME,f.RSK_SHARE_WRITTEN SHARE_WRITTEN,f.RSK_SHARE_SIGNED SHARE_SIGNED,cd.DETAIL_NAME,rd.RSK_UNDERWRITTER,PM.BRANCH_CODE    FROM   TMAS_SPFC_MASTER SP, PERSONAL_INFO Pi, TTRN_RISK_DETAILS RD, ttrn_RISK_PROPOSAL F, POSITION_MASTER PM, CONSTANT_DETAIL CD, PERSONAL_INFO pib   WHERE  SP.TMAS_SPFC_ID = RD.RSK_SPFCID and SP.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID and sp.TMAS_STATUS = 'Y' and SP.BRANCH_CODE = PM.BRANCH_CODE and PM.BRANCH_CODE = ? AND SP.TMAS_PRODUCT_ID = PM.PRODUCT_ID AND PM.PROPOSAL_NO = F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER = F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER = PM.PROPOSAL_NO AND Pi.CUSTOMER_ID = RD.RSK_CEDINGID AND Pi.BRANCH_CODE = PM.BRANCH_CODE AND Pi.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE  CUSTOMER_ID = Pi.CUSTOMER_ID AND BRANCH_CODE = Pi.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (TRD.RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS TRD  WHERE   TRD.RSK_PROPOSAL_NUMBER =RD.RSK_PROPOSAL_NUMBER) AND F.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   ttrn_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER =F.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE  PROPOSAL_NO =PM.PROPOSAL_NO) AND PM.contract_STATUS = 'P' AND RD.RSK_PRODUCTID = ? AND CD.CATEGORY_ID = 1 AND CD.TYPE = TRIM (PM.PROPOSAL_STATUS) AND PM.ACCOUNT_DATE BETWEEN TO_DATE (?,'DD/MM/YYYY') AND  TO_DATE (?,'DD/MM/YYYY') and PIb.CUSTOMER_ID = RD.RSK_BROKERID AND PIb.BRANCH_CODE = pm.BRANCH_CODE AND PIb.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO  WHERE  CUSTOMER_ID = PIb.CUSTOMER_ID AND BRANCH_CODE = PIb.BRANCH_CODE)
reportdao.select.xolOrTreatygetQuoteRegisterList=SELECT   RD.RSK_PROPOSAL_NUMBER,rd.RSK_UWYEAR,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INC_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') ACC_DATE,decode(RD.RSK_SPFCID,'ALL',RD.RSK_SPFCID,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND RD.BRANCH_CODE = SPFC.BRANCH_CODE)) TMAS_SPFC_NAME,PIb.COMPANY_NAME BROKER_NAME,pi.COMPANY_NAME,rd.RSK_INSURED_NAME,f.RSK_SHARE_WRITTEN SHARE_WRITTEN,f.RSK_SHARE_SIGNED SHARE_SIGNED,cd.DETAIL_NAME,rd.RSK_UNDERWRITTER,PM.BRANCH_CODE    FROM    PERSONAL_INFO Pi, TTRN_RISK_DETAILS RD, ttrn_RISK_PROPOSAL F, POSITION_MASTER PM, CONSTANT_DETAIL CD, PERSONAL_INFO pib   WHERE PM.BRANCH_CODE = ?  AND PM.PROPOSAL_NO = F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER = F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER = PM.PROPOSAL_NO AND Pi.CUSTOMER_ID = RD.RSK_CEDINGID AND Pi.BRANCH_CODE = PM.BRANCH_CODE AND Pi.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE  CUSTOMER_ID = Pi.CUSTOMER_ID AND BRANCH_CODE = Pi.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (TRD.RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS TRD  WHERE   TRD.RSK_PROPOSAL_NUMBER =RD.RSK_PROPOSAL_NUMBER) AND F.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   ttrn_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER =F.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE  PROPOSAL_NO =PM.PROPOSAL_NO) AND PM.contract_STATUS = 'P' AND RD.RSK_PRODUCTID = ? AND CD.CATEGORY_ID = 1 AND CD.TYPE = TRIM (PM.PROPOSAL_STATUS) AND PM.ACCOUNT_DATE BETWEEN TO_DATE (?,'DD/MM/YYYY') AND  TO_DATE (?,'DD/MM/YYYY') and PIb.CUSTOMER_ID = RD.RSK_BROKERID AND PIb.BRANCH_CODE = pm.BRANCH_CODE AND PIb.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO  WHERE  CUSTOMER_ID = PIb.CUSTOMER_ID AND BRANCH_CODE = PIb.BRANCH_CODE)
#reportdao.select.deptNameRetroRetroxol=SELECT   RD.RSK_PROPOSAL_NUMBER,rd.RSK_UWYEAR,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INC_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') ACC_DATE,sp.TMAS_SPFC_NAME,PIb.COMPANY_NAME BROKER_NAME,pi.COMPANY_NAME,rd.RSK_INSURED_NAME,f.RSK_SHARE_WRITTEN SHARE_WRITTEN,f.RSK_SHARE_SIGNED SHARE_SIGNED,cd.DETAIL_NAME,rd.RSK_UNDERWRITTER,PM.BRANCH_CODE    FROM   TMAS_SPFC_MASTER SP, PERSONAL_INFO Pi, TTRN_RISK_DETAILS RD, ttrn_RISK_PROPOSAL F, POSITION_MASTER PM, CONSTANT_DETAIL CD, PERSONAL_INFO pib   WHERE  SP.TMAS_SPFC_ID = RD.RSK_SPFCID and SP.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID and sp.TMAS_STATUS = 'Y' and SP.BRANCH_CODE = PM.BRANCH_CODE and PM.BRANCH_CODE = ? AND SP.TMAS_PRODUCT_ID = PM.PRODUCT_ID AND PM.PROPOSAL_NO = F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER = F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER = PM.PROPOSAL_NO AND Pi.CUSTOMER_ID = RD.RSK_CEDINGID AND Pi.BRANCH_CODE = PM.BRANCH_CODE AND Pi.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE  CUSTOMER_ID = Pi.CUSTOMER_ID AND BRANCH_CODE = Pi.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (TRD.RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS TRD  WHERE   TRD.RSK_PROPOSAL_NUMBER =RD.RSK_PROPOSAL_NUMBER) AND F.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   ttrn_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER =F.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE  PROPOSAL_NO =PM.PROPOSAL_NO) AND PM.contract_STATUS = 'P' AND RD.RSK_PRODUCTID in(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) AND CD.CATEGORY_ID = 1 AND CD.TYPE = TRIM (PM.PROPOSAL_STATUS) AND PM.ACCOUNT_DATE BETWEEN TO_DATE (?,'DD/MM/YYYY') AND  TO_DATE (?,'DD/MM/YYYY') and PIb.CUSTOMER_ID = RD.RSK_BROKERID AND PIb.BRANCH_CODE = pm.BRANCH_CODE AND PIb.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO  WHERE  CUSTOMER_ID = PIb.CUSTOMER_ID AND BRANCH_CODE = PIb.BRANCH_CODE)
reportdao.select.deptNameRetroRetroxol=SELECT   RD.RSK_PROPOSAL_NUMBER,rd.RSK_UWYEAR,TO_CHAR (rd.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INC_DATE,TO_CHAR (rd.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,TO_CHAR (rd.RSK_ACCOUNT_DATE, 'DD/MM/YYYY') ACC_DATE,decode(RD.RSK_SPFCID,'ALL',RD.RSK_SPFCID,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND RD.BRANCH_CODE = SPFC.BRANCH_CODE)) TMAS_SPFC_NAME,PIb.COMPANY_NAME BROKER_NAME,pi.COMPANY_NAME,rd.RSK_INSURED_NAME,f.RSK_SHARE_WRITTEN SHARE_WRITTEN,f.RSK_SHARE_SIGNED SHARE_SIGNED,cd.DETAIL_NAME,rd.RSK_UNDERWRITTER,PM.BRANCH_CODE    FROM    PERSONAL_INFO Pi, TTRN_RISK_DETAILS RD, ttrn_RISK_PROPOSAL F, POSITION_MASTER PM, CONSTANT_DETAIL CD, PERSONAL_INFO pib   WHERE PM.BRANCH_CODE = ?  AND PM.PROPOSAL_NO = F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER = F.RSK_PROPOSAL_NUMBER AND RD.RSK_PROPOSAL_NUMBER = PM.PROPOSAL_NO AND Pi.CUSTOMER_ID = RD.RSK_CEDINGID AND Pi.BRANCH_CODE = PM.BRANCH_CODE AND Pi.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE  CUSTOMER_ID = Pi.CUSTOMER_ID AND BRANCH_CODE = Pi.BRANCH_CODE) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (TRD.RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS TRD  WHERE   TRD.RSK_PROPOSAL_NUMBER =RD.RSK_PROPOSAL_NUMBER) AND F.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   ttrn_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER =F.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE  PROPOSAL_NO =PM.PROPOSAL_NO) AND PM.contract_STATUS = 'P' AND RD.RSK_PRODUCTID in(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) AND CD.CATEGORY_ID = 1 AND CD.TYPE = TRIM (PM.PROPOSAL_STATUS) AND PM.ACCOUNT_DATE BETWEEN TO_DATE (?,'DD/MM/YYYY') AND  TO_DATE (?,'DD/MM/YYYY') and PIb.CUSTOMER_ID = RD.RSK_BROKERID AND PIb.BRANCH_CODE = pm.BRANCH_CODE AND PIb.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO  WHERE  CUSTOMER_ID = PIb.CUSTOMER_ID AND BRANCH_CODE = PIb.BRANCH_CODE)
#reportdao.select.renewalDueFac=SELECT   PM.PROPOSAL_NO,PM.CONTRACT_NO,SP.TMAS_SPFC_NAME,TM.TERRITORY_DESC,PIB.FIRST_NAME BROKER_NAME,PI.COMPANY_NAME,RD.RSK_INSURED_NAME,RD.RSK_UWYEAR,TO_CHAR(RD.RSK_INCEPTION_DATE,'DD/MM/YYYY') INC_DATE,TO_CHAR(RD.RSK_EXPIRY_DATE,'DD/MM/YYYY')   EXP_DATE,FRP.SHARE_SIGNED FROM   POSITION_MASTER PM,TTRN_RISK_DETAILS RD,TTRN_FAC_RISK_PROPOSAL FRP,TMAS_SPFC_MASTER SP,PERSONAL_INFO PI,PERSONAL_INFO PIB,TERRITORY_MASTER TM WHERE  PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND FRP.RSK_PROPOSAL_NUMBER = PM.PROPOSAL_NO AND RD.RSK_PRODUCTID = ? AND PM.CONTRACT_STATUS = 'A' AND PM.CONTRACT_NO > 0 AND SP.TMAS_SPFC_ID = RD.RSK_SPFCID AND SP.TMAS_PRODUCT_ID = ? AND SP.BRANCH_CODE = ? AND SP.TMAS_STATUS = 'Y' AND PI.CUSTOMER_ID = RD.RSK_CEDINGID AND PI.BRANCH_CODE = ? AND PIB.CUSTOMER_ID = RD.RSK_BROKERID AND PIB.BRANCH_CODE = ? AND TM.TERRITORY_CODE = RD.RSK_TERRITORY AND TM.TERRITORY_STATUS = 'Y' AND TM.BRANCH_CODE = pm.branch_code and pm.branch_code=? AND RD.RSK_EXPIRY_DATE BETWEEN TO_DATE (?, 'DD/MM/YYYY') AND  TO_DATE (?, 'DD/MM/YYYY') AND FRP.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND PI.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PIB.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)
reportdao.select.renewalDueFac=SELECT   PM.PROPOSAL_NO,PM.CONTRACT_NO,DECODE(RD.RSK_SPFCID,'ALL',RD.RSK_SPFCID,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND RD.BRANCH_CODE = SPFC.BRANCH_CODE))  TMAS_SPFC_NAME,(select RTRIM(XMLAGG(XMLELEMENT(E,TERRITORY_NAME,',')).EXTRACT('//text()'),',')  from TMAS_TERRITORY SPFC where SPFC.TERRITORY_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_TERRITORY,' ', '')))) AND  RD.BRANCH_CODE = SPFC.BRANCH_CODE) TERRITORY_DESC,PIB.FIRST_NAME BROKER_NAME,PI.COMPANY_NAME,RD.RSK_INSURED_NAME,RD.RSK_UWYEAR,TO_CHAR(RD.RSK_INCEPTION_DATE,'DD/MM/YYYY') INC_DATE,TO_CHAR(RD.RSK_EXPIRY_DATE,'DD/MM/YYYY')   EXP_DATE,FRP.SHARE_SIGNED FROM   POSITION_MASTER PM,TTRN_RISK_DETAILS RD,TTRN_FAC_RISK_PROPOSAL FRP,PERSONAL_INFO PI,PERSONAL_INFO PIB WHERE  PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND FRP.RSK_PROPOSAL_NUMBER = PM.PROPOSAL_NO AND RD.RSK_PRODUCTID = ? AND PM.CONTRACT_STATUS = 'A' AND PM.CONTRACT_NO > 0 AND PI.CUSTOMER_ID = RD.RSK_CEDINGID AND PI.BRANCH_CODE = ? AND PIB.CUSTOMER_ID = RD.RSK_BROKERID AND PIB.BRANCH_CODE = ?  and pm.branch_code=? AND RD.RSK_EXPIRY_DATE BETWEEN TO_DATE (?, 'DD/MM/YYYY') AND  TO_DATE (?, 'DD/MM/YYYY') AND FRP.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND PI.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PIB.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)
reportdao.select.renewalOrder=ORDER BY PM.PROPOSAL_NO DESC
reportdao.select.renewalDueFacOrderBy=) REPORT WHERE   PI.CUSTOMER_ID =TRD.RSK_BROKERID AND TRD.RSK_PROPOSAL_NUMBER = REPORT.RSK_PROPOSAL_NUMBER AND TRD.RSK_ENDORSEMENT_NO = (SELECT   MAX (TRD1.RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS TRD1 WHERE TRD1.RSK_PROPOSAL_NUMBER = REPORT.RSK_PROPOSAL_NUMBER) AND PI.CUSTOMER_TYPE = 'B' AND PI.BRANCH_CODE=REPORT.BRANCH_CODE AND PI.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE AND BRANCH_CODE=PI.BRANCH_CODE)
#reportda.select.xolRenewalDueList=SELECT rd.RSK_PROPOSAL_NUMBER,rd.RSK_UWYEAR,rd.RSK_CONTRACT_NO ,rd.RSK_LAYER_NO,sp.TMAS_SPFC_NAME,tm.TERRITORY_DESC ,PIb.FIRST_NAME BROKER_NAME ,pi.COMPANY_NAME ,rd.RSK_TREATYID,TO_CHAR(rd.RSK_INCEPTION_DATE,'DD/MM/YYYY') INC_DATE, TO_CHAR(rd.RSK_EXPIRY_DATE,'DD/MM/YYYY') EXP_DATE,rp.RSK_SHARE_SIGNED SHARE_SIGNED ,rp.RSK_EPI_OSOF_OC,PM.BRANCH_CODE FROM TTRN_RISK_DETAILS RD,TMAS_SPFC_MASTER SP,PERSONAL_INFO PI, TTRN_RISK_PROPOSAL RP,TERRITORY_MASTER TM, POSITION_MASTER PM,personal_info pib WHERE SP.TMAS_SPFC_ID = RD.RSK_SPFCID AND SP.TMAS_PRODUCT_ID=PM.PRODUCT_ID and SP.BRANCH_CODE = PM.BRANCH_CODE and TM.BRANCH_CODE = PM.BRANCH_CODE AND PI.CUSTOMER_ID = RD.RSK_CEDINGID AND PI.CUSTOMER_TYPE='C' AND PI.BRANCH_CODE=PM.BRANCH_CODE AND PI.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE AND BRANCH_CODE=PI.BRANCH_CODE) and PM.BRANCH_CODE = ? AND RP.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RP.RSK_ENDORSEMENT_NO=( SELECT MAX(TRP.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL TRP WHERE TRP.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO=( SELECT MAX(TRD.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS  TRD WHERE TRD.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) AND RD.RSK_CONTRACT_NO > 0  AND TM.TERRITORY_CODE = RD.RSK_TERRITORY AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.AMEND_ID=( SELECT MAX(TPM.AMEND_ID) FROM POSITION_MASTER TPM WHERE TPM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER) AND PM.CONTRACT_STATUS='A' AND RD.RSK_PRODUCTID =? AND RD.RSK_EXPIRY_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and PIb.CUSTOMER_ID =RD.RSK_BROKERID AND PIb.BRANCH_CODE=pm.BRANCH_CODE AND PIb.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PIb.CUSTOMER_ID AND BRANCH_CODE=PIb.BRANCH_CODE)
reportda.select.xolRenewalDueList=SELECT rd.RSK_PROPOSAL_NUMBER,rd.RSK_UWYEAR,rd.RSK_CONTRACT_NO ,rd.RSK_LAYER_NO,DECODE(RD.RSK_SPFCID,'ALL',RD.RSK_SPFCID,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND RD.BRANCH_CODE = SPFC.BRANCH_CODE)) TMAS_SPFC_NAME, (select RTRIM(XMLAGG(XMLELEMENT(E,TERRITORY_NAME,',')).EXTRACT('//text()'),',')  from TMAS_TERRITORY SPFC where SPFC.TERRITORY_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_TERRITORY,' ', '')))) AND  RD.BRANCH_CODE = SPFC.BRANCH_CODE) TERRITORY_DESC ,PIb.FIRST_NAME BROKER_NAME ,pi.COMPANY_NAME ,rd.RSK_TREATYID,TO_CHAR(rd.RSK_INCEPTION_DATE,'DD/MM/YYYY') INC_DATE, TO_CHAR(rd.RSK_EXPIRY_DATE,'DD/MM/YYYY') EXP_DATE,rp.RSK_SHARE_SIGNED SHARE_SIGNED ,rp.RSK_EPI_OSOF_OC,PM.BRANCH_CODE FROM TTRN_RISK_DETAILS RD,PERSONAL_INFO PI, TTRN_RISK_PROPOSAL RP,POSITION_MASTER PM,personal_info pib WHERE   PI.CUSTOMER_ID = RD.RSK_CEDINGID AND PI.CUSTOMER_TYPE='C' AND PI.BRANCH_CODE=PM.BRANCH_CODE AND PI.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE AND BRANCH_CODE=PI.BRANCH_CODE) and PM.BRANCH_CODE = ? AND RP.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RP.RSK_ENDORSEMENT_NO=( SELECT MAX(TRP.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL TRP WHERE TRP.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO=( SELECT MAX(TRD.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS  TRD WHERE TRD.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) AND RD.RSK_CONTRACT_NO > 0   AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.AMEND_ID=( SELECT MAX(TPM.AMEND_ID) FROM POSITION_MASTER TPM WHERE TPM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER) AND PM.CONTRACT_STATUS='A' AND RD.RSK_PRODUCTID =? AND RD.RSK_EXPIRY_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and PIb.CUSTOMER_ID =RD.RSK_BROKERID AND PIb.BRANCH_CODE=pm.BRANCH_CODE AND PIb.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PIb.CUSTOMER_ID AND BRANCH_CODE=PIb.BRANCH_CODE)
#reportda.select.retroRetroxol=SELECT rd.RSK_PROPOSAL_NUMBER,rd.RSK_UWYEAR,rd.RSK_CONTRACT_NO ,rd.RSK_LAYER_NO,sp.TMAS_SPFC_NAME,tm.TERRITORY_DESC ,PIb.COMPANY_NAME BROKER_NAME ,pi.COMPANY_NAME ,rd.RSK_TREATYID,TO_CHAR(rd.RSK_INCEPTION_DATE,'DD/MM/YYYY') INC_DATE, TO_CHAR(rd.RSK_EXPIRY_DATE,'DD/MON/YYYY') EXP_DATE,rp.RSK_SHARE_SIGNED SHARE_SIGNED ,rp.RSK_EPI_OSOF_OC,PM.BRANCH_CODE FROM TTRN_RISK_DETAILS RD,TMAS_SPFC_MASTER SP,PERSONAL_INFO PI, TTRN_RISK_PROPOSAL RP,TERRITORY_MASTER TM, POSITION_MASTER PM,personal_info pib WHERE SP.TMAS_SPFC_ID = RD.RSK_SPFCID AND SP.TMAS_PRODUCT_ID=PM.PRODUCT_ID and SP.BRANCH_CODE = PM.BRANCH_CODE and TM.BRANCH_CODE = PM.BRANCH_CODE AND PI.CUSTOMER_ID = RD.RSK_CEDINGID AND PI.CUSTOMER_TYPE='C' AND PI.BRANCH_CODE=PM.BRANCH_CODE AND PI.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE AND BRANCH_CODE=PI.BRANCH_CODE) and PM.BRANCH_CODE = ? AND RP.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RP.RSK_ENDORSEMENT_NO=( SELECT MAX(TRP.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL TRP WHERE TRP.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO=( SELECT MAX(TRD.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS  TRD WHERE TRD.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) AND RD.RSK_CONTRACT_NO > 0  AND TM.TERRITORY_CODE = RD.RSK_TERRITORY AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.AMEND_ID=( SELECT MAX(TPM.AMEND_ID) FROM POSITION_MASTER TPM WHERE TPM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER) AND PM.CONTRACT_STATUS='A' AND RD.RSK_PRODUCTID in(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) AND RD.RSK_EXPIRY_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and PIb.CUSTOMER_ID =RD.RSK_BROKERID AND PIb.BRANCH_CODE=pm.BRANCH_CODE AND PIb.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PIb.CUSTOMER_ID AND BRANCH_CODE=PIb.BRANCH_CODE)
reportda.select.retroRetroxol=SELECT rd.RSK_PROPOSAL_NUMBER,rd.RSK_UWYEAR,rd.RSK_CONTRACT_NO ,rd.RSK_LAYER_NO,DECODE(RD.RSK_SPFCID,'ALL',RD.RSK_SPFCID,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND RD.BRANCH_CODE = SPFC.BRANCH_CODE)) TMAS_SPFC_NAME, (select RTRIM(XMLAGG(XMLELEMENT(E,TERRITORY_NAME,',')).EXTRACT('//text()'),',')  from TMAS_TERRITORY SPFC where SPFC.TERRITORY_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_TERRITORY,' ', '')))) AND  RD.BRANCH_CODE = SPFC.BRANCH_CODE)  TERRITORY_DESC ,PIb.COMPANY_NAME BROKER_NAME ,pi.COMPANY_NAME ,rd.RSK_TREATYID,TO_CHAR(rd.RSK_INCEPTION_DATE,'DD/MM/YYYY') INC_DATE, TO_CHAR(rd.RSK_EXPIRY_DATE,'DD/MON/YYYY') EXP_DATE,rp.RSK_SHARE_SIGNED SHARE_SIGNED ,rp.RSK_EPI_OSOF_OC,PM.BRANCH_CODE FROM TTRN_RISK_DETAILS RD,PERSONAL_INFO PI, TTRN_RISK_PROPOSAL RP, POSITION_MASTER PM,personal_info pib WHERE    PI.CUSTOMER_ID = RD.RSK_CEDINGID AND PI.CUSTOMER_TYPE='C' AND PI.BRANCH_CODE=PM.BRANCH_CODE AND PI.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND CUSTOMER_TYPE=PI.CUSTOMER_TYPE AND BRANCH_CODE=PI.BRANCH_CODE) and PM.BRANCH_CODE = ? AND RP.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RP.RSK_ENDORSEMENT_NO=( SELECT MAX(TRP.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL TRP WHERE TRP.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO=( SELECT MAX(TRD.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS  TRD WHERE TRD.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) AND RD.RSK_CONTRACT_NO > 0   AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.AMEND_ID=( SELECT MAX(TPM.AMEND_ID) FROM POSITION_MASTER TPM WHERE TPM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER) AND PM.CONTRACT_STATUS='A' AND RD.RSK_PRODUCTID in(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) AND RD.RSK_EXPIRY_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and PIb.CUSTOMER_ID =RD.RSK_BROKERID AND PIb.BRANCH_CODE=pm.BRANCH_CODE AND PIb.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PIb.CUSTOMER_ID AND BRANCH_CODE=PIb.BRANCH_CODE)
#report.select.PolicyRegfacltative= Select Proposal_No,Contract_No,Tmas_Pfc_Name,Underwritter,Tmas_Department_Name,Tmas_Spfc_Name ,Rsk_Uwyear,Tmas_Pol_Branch_Name,Territory_Desc,Company_Name,Broker,To_Char(Inception_Date,'DD/MM/YYYY') Inc_Date,   To_Char(Expiry_Date,'DD/MM/YYYY') Exp_Date,To_Char(Account_Date,'DD/MM/YYYY') Acc_Date,Short_Name,Rsk_Exchange_Rate,Rsk_Insured_Name,Rsk_City,Rsk_Location,M_Lop,A_Lop,Rsk_Cedret_Type,Rsk_Cedant_Retention,Rsk_Premium_Rate,Sp_Retro,Specfic_Retro,Specfic_Retro_Perc,Treaty_Retro,Treaty_Retro_Perc ,NO_OF_INSTALLMENT,No_Of_Insurers,Proposal_Status,Rsk_Interest,Share_Written,Share_Signed,Deductible_Oc,Sum_Insured_Oc,Sum_Insured_Our_Share_Oc,Pml_Our_Share_Oc,Gwpi_Our_Share_Oc,Tpl_Our_Share_Oc,Pml_Oc,Gwpi_Oc,Tpl_Oc,Rsk_Acquistion_Cost_Oc,LIMIT_PER_LOCATION_OC,LIMIT_PER_VESSEL_OC,Grade_Desc,Occupation_Code,Risk_Details,Fire_Port,Scope,Mb_Ind,Category_Zone,Earthquake_Ws_Ind,Eq_Threat,Rsk_Comm,Rsk_Brokerage,Rsk_Tax,Rsk_Other_Cost,Acc_Percentage,Cu,Cu_Rsn,Rsk_Loss_Record,Rsk_Ref_To_Ho,Rsk_Uw_Recommendation,Rsk_Remarks,Rsk_Oth_Accep,Login_Id,Broker_Id,Ceding_Company_Id,Uw_Year,Dept_Id,Deductible_dc ,Sum_Insured_dc,Sum_Insured_Our_Share_Dc,Pml_Our_Share_Dc,Gwpi_Our_Share_dc,Tpl_Our_Share_dc,Pml_dc ,Gwpi_dc ,Tpl_dc,Rsk_Acquistion_Cost_DC,Branch_Code,LIMIT_PER_VESSEL_DC,LIMIT_PER_LOCATION_DC,COVER_LIMIT_OC,COVER_LIMIT_DC,VESSEL_NAME,VESSEL_AGE,MODE_OF_TRANSPORT From Fac_Pol_Reg Where Account_Date Between To_Date(?,'DD/MM/YYYY') And To_Date(?,'DD/MM/YYYY') And Branch_Code=?
#report.select.PolicyRegfacltative= Select Proposal_No,Contract_No,Tmas_Pfc_Name,Underwritter,Tmas_Department_Name,Tmas_Spfc_Name ,Rsk_Uwyear,Tmas_Pol_Branch_Name,Territory_Desc,Company_Name,Broker,To_Char(Inception_Date,'DD/MM/YYYY') Inc_Date,To_Char(Expiry_Date,'DD/MM/YYYY') Exp_Date,To_Char(Account_Date,'DD/MM/YYYY') Acc_Date,Short_Name,Rsk_Exchange_Rate,Rsk_Insured_Name,Rsk_City,Rsk_Location,M_Lop,A_Lop,Rsk_Cedret_Type,Rsk_Cedant_Retention,Rsk_Premium_Rate,Sp_Retro,Specfic_Retro,Specfic_Retro_Perc,Treaty_Retro,Treaty_Retro_Perc ,NO_OF_INSTALLMENT,No_Of_Insurers,Proposal_Status,Rsk_Interest,Share_Written,Share_Signed,Deductible_Oc,Sum_Insured_Oc,Sum_Insured_Our_Share_Oc,Pml_Our_Share_Oc,Gwpi_Our_Share_Oc,Tpl_Our_Share_Oc,Pml_Oc,Gwpi_Oc,Tpl_Oc,Rsk_Acquistion_Cost_Oc,LIMIT_PER_LOCATION_OC,LIMIT_PER_VESSEL_OC,Grade_Desc,Occupation_Code,Risk_Details,Fire_Port,Scope,Mb_Ind,Category_Zone,Earthquake_Ws_Ind,Eq_Threat,Rsk_Comm,Rsk_Brokerage,Rsk_Tax,Rsk_Other_Cost,Acc_Percentage,Cu,Cu_Rsn,Rsk_Loss_Record,Rsk_Ref_To_Ho,Rsk_Uw_Recommendation,Rsk_Remarks,Rsk_Oth_Accep,Login_Id,Broker_Id,Ceding_Company_Id,Uw_Year,Dept_Id,Deductible_dc ,Sum_Insured_dc,Sum_Insured_Our_Share_Dc,Pml_Our_Share_Dc,Gwpi_Our_Share_dc,Tpl_Our_Share_dc,Pml_dc ,Gwpi_dc ,Tpl_dc,Rsk_Acquistion_Cost_DC,Branch_Code,LIMIT_PER_VESSEL_DC,LIMIT_PER_LOCATION_DC,COVER_LIMIT_OC,COVER_LIMIT_DC,VESSEL_NAME,VESSEL_AGE,MODE_OF_TRANSPORT,PML,MAXIMUM_LIMIT_DC UW_CAPACITY_UGX,Si_Pml,TYPE,DEDUCTIBLE_OURSHARE_OC,DEDUCTIBLE_OURSHARE_UGX,COVERLIMIT_OURSHARE_OC,COVERLIMIT_OURSHARE_UGX From Fac_Pol_Reg Where Account_Date Between To_Date(?,'DD/MM/YYYY') And To_Date(?,'DD/MM/YYYY') And Branch_Code=?
report.select.PolicyRegfacltative= Select Proposal_No,Contract_No,Tmas_Pfc_Name,Underwritter,Tmas_Department_Name,Tmas_Spfc_Name ,Rsk_Uwyear,Tmas_Pol_Branch_Name,Territory_Desc,Company_Name,Broker,To_Char(Inception_Date,'DD/MM/YYYY') Inc_Date,To_Char(Expiry_Date,'DD/MM/YYYY') Exp_Date,To_Char(Account_Date,'DD/MM/YYYY') Acc_Date,Short_Name,Rsk_Exchange_Rate,Rsk_Insured_Name,Rsk_City,Rsk_Location,M_Lop,A_Lop,Rsk_Cedret_Type,Rsk_Cedant_Retention,Rsk_Premium_Rate,Sp_Retro,Specfic_Retro,Specfic_Retro_Perc,Treaty_Retro,Treaty_Retro_Perc ,NO_OF_INSTALLMENT,No_Of_Insurers,Proposal_Status,Rsk_Interest,Share_Written,Share_Signed,Deductible_Oc,Sum_Insured_Oc,Sum_Insured_Our_Share_Oc,Pml_Our_Share_Oc,Gwpi_Our_Share_Oc,Tpl_Our_Share_Oc,Pml_Oc,Gwpi_Oc,Tpl_Oc,Rsk_Acquistion_Cost_Oc,LIMIT_PER_LOCATION_OC,LIMIT_PER_VESSEL_OC,Grade_Desc,Occupation_Code,Risk_Details,Fire_Port,Scope,Mb_Ind,Category_Zone,Earthquake_Ws_Ind,Eq_Threat,Rsk_Comm,Rsk_Brokerage,Rsk_Tax,Rsk_Other_Cost,Acc_Percentage,Cu,Cu_Rsn,Rsk_Loss_Record,Rsk_Ref_To_Ho,Rsk_Uw_Recommendation,Rsk_Remarks,Rsk_Oth_Accep,Login_Id,Broker_Id,Ceding_Company_Id,Uw_Year,Dept_Id,Deductible_dc ,Sum_Insured_dc,Sum_Insured_Our_Share_Dc,Pml_Our_Share_Dc,Gwpi_Our_Share_dc,Tpl_Our_Share_dc,Pml_dc ,Gwpi_dc ,Tpl_dc,Rsk_Acquistion_Cost_DC,Branch_Code,LIMIT_PER_VESSEL_DC,LIMIT_PER_LOCATION_DC,COVER_LIMIT_OC,COVER_LIMIT_DC,VESSEL_NAME,VESSEL_AGE,MODE_OF_TRANSPORT,PML,MAXIMUM_LIMIT_DC UW_CAPACITY_UGX,Si_Pml,TYPE,DEDUCTIBLE_OURSHARE_OC,DEDUCTIBLE_OURSHARE_UGX,COVERLIMIT_OURSHARE_OC,COVERLIMIT_OURSHARE_UGX,ENDORSEMENT_DATE,RSK_BONUS_TYPE,RSK_BONUS_PER, INWARD_BUS_TYPE, RSK_LATITUDE,RSK_LONGITUDE, RSK_LOC_ISSUED, RSK_VESSAL_TONNAGE, COVER_LIMIT_PML_OC, PSL_OC, PLL_OC, PBL_OC, PSL_OS_OC, PLL_OS_OC, PBL_OS_OC, PSL_DC, PLL_DC, PBL_DC, RSK_CREASTA_STATUS, RSK_EXCLUSION, RSK_LEAD_UW, RSK_LEAD_UNDERWRITER_COUNTRY, RSK_LEAD_UW_SHARE,PSL_OS_DC,PLL_OS_DC,COVER_LIMIT_PML_OS_OC,COVER_LIMIT_PML_DC,COVER_LIMIT_PML_OS_DC,RETEN_PER,RETRO_PER, RSK_TERRITORY, COUNTRIES_INCLUDE, COUNTRIES_EXCLUDE,RSK_RECEIPT_PAYEMENT,RSK_LOC_BNK_NAME,RSK_LOC_CRDT_PRD,RSK_LOC_CRDT_AMT,RSK_LOC_BENFCRE_NAME  From Fac_Pol_Reg Where Account_Date Between To_Date(?,'DD/MM/YYYY') And To_Date(?,'DD/MM/YYYY') And Branch_Code=?
report.select.policyRegFacLoginId= AND  LOGIN_ID=?
report.select.policyRegFacBrokerId= AND BROKER_ID=?
report.select.policyRegFacCedingId= AND CEDING_COMPANY_ID\=? 
report.select.policyRegFacUWYear=AND UW_YEAR=?
report.select.reportUWYear=AND RSK_UWYEAR=?
report.select.policyRegFacOrderBy= ORDER BY CONTRACT_NO
report.select.policyRegPropotionalTreaty=SELECT /*+ PARALLEL(PT_XOL_POL_REG,4) */ PROPOSAL_NO,CREASE_STATUS,RSK_REINSTATE_NO,decode(RSK_SLADSCALE_COMM,'Y','Yes','N','No') RSK_SLADSCALE_COMM ,decode(RSK_LOSS_PART_CARRIDOR,'Y','Yes','N','No') RSK_LOSS_PART_CARRIDOR, LAYER_NO,  CONTRACT_NO,   TMAS_PFC_NAME,UNDERWRITTER,   TMAS_DEPARTMENT_NAME,   TMAS_SPFC_NAME,   RSK_UWYEAR,RSK_MAX_LMT_COVER,   TMAS_POL_BRANCH_NAME,   COMPANY_NAME,   BROKER,RSK_TREATYID,   PROPOSAL_TYPE,  INCEPTION_DATE, EXPIRY_DATE,  TO_CHAR(ACCOUNT_DATE,'DD/MM/YYYY')  ACCOUNT_DATE,   SHORT_NAME,RSK_EXCHANGE_RATE,   RSK_PERIOD_OF_NOTICE,   RSK_RISK_COVERED,RSK_TERRITORY_SCOPE,   TERRITORY_DESC,   ACCOUNTING_PERIOD,RSK_RECEIPT_STATEMENT,   RSK_RECEIPT_PAYEMENT,   RSK_SP_RETRO,RSK_NO_OF_INSURERS,   RSK_LIMIT_OC,   RSK_EPI_OFFER_OC,RSK_EPI_ESTIMATE,   RSK_EPI_EST_OC,   RSK_XLCOST_OC,   RSK_CEDRET_TYPE,RSK_CEDANT_RETENTION,   PROPOSAL_STATUS,   RSK_SHARE_WRITTEN,RSK_SHARE_SIGNED,   RSK_LIMIT_OS_OC,   RSK_LIMIT_OS_DC,RSK_EPI_OSOF_OC,   RSK_EPI_OSOF_DC,   RSK_EPI_OSOE_OC,   RSK_EPI_OSOE_DC,RSK_XLCOST_OS_OC,   RSK_XLCOST_OS_DC,   RSK_PREMIUM_QUOTA_SHARE,RSK_PREMIUM_QUOTA_SHARE_DC,RSK_PREMIUM_SURPULS,RSK_PREMIUM_SURPULS_DC,   RSK_COMM_QUOTASHARE,   RSK_COMM_SURPLUS,COMMISSION_QS_AMOUNT,   COMMISSION_SURP_AMOUNT,   RSK_OVERRIDER_PERC,RSK_BROKERAGE,   RSK_TAX,   RSK_OTHER_COST,   OTHER_ACQ_COST_AMOUNT,ACQ_COST_AMOUNT,  RSK_PROFIT_COMM,RSK_PREMIUM_RESERVE,   RSK_LOSS_RESERVE,   RSK_INTEREST,RSK_PF_INOUT_LOSS,   RSK_PF_INOUT_PREM,   RSK_LOSSADVICE,RSK_CASHLOSS_LMT_OC,   RSK_LEAD_UW,   RSK_LEAD_UW_SHARE,   RSK_EXCLUSION,RSK_REMARKS,   RSK_UW_RECOMM,   LOGIN_ID,   BROKER_ID,CEDING_COMPANY_ID,UW_YEAR,RSK_BASIS,RSK_DEDUC_OC,RSK_SUBJ_PREMIUM_OC,RSK_ADJRATE,RSK_MD_PREM_OC,MND_INSTALLMENTS,RSK_MD_PREM_OS_OC,RSK_MD_PREM_OS_DC,RSK_AGGREGATE_LIAB_OC,RSK_REINSTATE_ADDL_PREM_PCT,RSK_REINSTATE_ADDL_PREM_OC,RSK_BURNING_COST_PCT,RSK_AGGREGATE_LIAB_DC,RSK_REINSTATE_ADDL_PREM_DC,RSK_ACQUISTION_COST_OC,RSK_ACQUISTION_COST_DC,RSK_SUBJ_PREMIUM_DC,RSK_LIMIT_DC,RSK_DEDUC_DC,RSK_EPI_EST_DC,RSK_XLPREM_DC,RSK_MD_PREM_DC,RSK_PF_COVERED,RSK_EPI_OFFER_DC,RSK_XLCOST_DC,RSK_CASHLOSS_LMT_DC,LIMIT_PER_VESSEL_OC,LIMIT_PER_VESSEL_DC,LIMIT_PER_LOCATION_OC,LIMIT_PER_LOCATION_DC,TREATY_RETRO,TREATY_RETRO_PERC,COMM_QS_AMT ,COMM_SURPLUS_AMT,COMM_QS_AMT_DC,COMM_SURPLUS_AMT_DC,RSK_LOSSADVICE_DC,RSK_COMM_QUOTASHARE_DC,COMMISSION_SURP_AMOUNT_DC,OTHER_ACQ_COST_AMOUNT_DC,ENDORSEMENT_DATE,EGPNI_AS_OFFER,OURASSESSMENT,INWARD_BUS_TYPE,TREATYTYPE,RSK_EVENT_LIMIT_OC,RSK_EVENT_LIMIT_DC, RSK_AGGREGATE_LIMIT_OC, RSK_AGGREGATE_LIMIT_DC,RSK_OCCURRENT_LIMIT_OC,RSK_OCCURRENT_LIMIT_DC,RSK_TREATY_SURP_LIMIT_OC,RSK_TREATY_SURP_LIMIT_DC,RSK_TREATY_SURP_LIMIT_OS_OC,RSK_TREATY_SURP_LIMIT_OS_DC,RSK_PML,RSK_PML_PERCENT,RSK_EPI_EST_OC,RSK_CREASTA_STATUS,RSK_LOSS_PART_CARRIDOR,RSK_PRO_NOTES, RSK_LOC_ISSUED,RSK_PERILS_COVERED,RSK_LEAD_UNDERWRITER_COUNTRY,RETEN_PER,RETRO_PER,RSK_TERRITORY, COUNTRIES_INCLUDE,COUNTRIES_EXCLUDE,RSK_INCLUDE_ACQ_COST,RSK_OUR_ASS_ACQ_COST,RSK_OUR_ACQ_OUR_SHARE_OC,RSK_NO_OF_LINE,RSK_RATE,RSK_PRO_COMM_TYPE,RSK_PRO_SUP_PRO_COM	,RSK_PRO_COMM_PER, RSK_PRO_SET_UP,RSK_PRO_LOSS_CARY_TYPE,RSK_PRO_LOSS_CARY_YEAR,RSK_PRO_PROFIT_CARY_TYPE,RSK_PRO_PROFIT_CARY_YEAR,RSK_PRO_FIRST_PFO_COM,RSK_PRO_FIRST_PFO_COM_PRD,RSK_PRO_SUB_PFO_COM_PRD, RSK_PRO_SUB_PFO_COM,RSK_PRO_SUB_SEQ_CAL,RSK_PRO_NOTES,RSK_RUN_OFF_YEAR,RSK_TRTY_LMT_PML_OC,RSK_TRTY_LMT_PML_OS_OC,RSK_TRTY_LMT_PML_DC,RSK_TRTY_LMT_PML_OS_DC,RSK_TRTY_LMT_SUR_PML_OC,RSK_TRTY_LMT_SUR_PML_OS_OC,RSK_TRTY_LMT_SUR_PML_DC,RSK_TRTY_LMT_SUR_PML_OS_DC,RSK_LOC_BNK_NAME,RSK_LOC_CRDT_PRD,RSK_LOC_CRDT_AMT,RSK_LOC_BENFCRE_NAME,TYPE,RSK_COVER_LIMIT_UXL_OC,RSK_COVER_LIMIT_UXL_OS_OC,RSK_COVER_LIMIT_UXL_DC,RSK_COVER_LIMIT_UXL_OS_DC,RSK_DEDUCTABLE_UXL_OC,RSK_DEDUCTABLE_UXL_OS_OC,RSK_DEDUCTABLE_UXL_DC,RSK_DEDUCTABLE_UXL_OS_DC,RSK_MINIMUM_PREMIUM_OC,RSK_MINIMUM_PREMIUM_OS_OC,RSK_MINIMUM_PREMIUM_DC,RSK_MINIMUM_PREMIUM_OS_DC,EGPNI_AS_OFFER_DC,MND_INSTALLMENTS,RSK_AGGREGATE_DEDUCT_OC,RSK_AGGREGATE_DEDUCT_DC,RSK_PREMIUM_BASIS,RSK_MINIMUM_RATE,RSK_MAXIIMUM_RATE,RSK_BURNING_COST_LF,RSK_REINSTATEMENT_PREMIUM,RSK_BONUS_ID,RSK_NOCLAIMBONUS_PRCENT,RSK_UMBRELLA_XL FROM PT_XOL_POL_REG WHERE PRODUCT_ID=? AND ACCOUNT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE=?
report.select.policyRegXOL=SELECT CONTRACT_NO,LAYER_NO,COMPANY_NAME,BROKER,TMAS_DEPARTMENT_NAME,TO_CHAR(INCEPTION_DATE,'DD/MON/YYYY') INC_DATE,TO_CHAR(EXPIRY_DATE,'DD/MON/YYYY') EXP_DATE,TO_CHAR(ACCOUNT_DATE,'DD/MON/YYYY') ACC_DATE,'LOB/RAB',RSK_TERRITORY_SCOPE,CURRENCY_NAME,RSK_EXCHANGE_RATE,RSK_PREMIUM_RESERVE,MND_INSTALLMENTS,RSK_LIMIT_OC,RSK_LIMIT_DC,RSK_DEDUC_OC,RSK_DEDUC_DC,RSK_MD_PREM_OC,RSK_MD_PREM_DC,RSK_ADJRATE,RSK_SHARE_WRITTEN,RSK_SHARE_SIGNED,RSK_LIMIT_OS_OC,RSK_LIMIT_OS_DC,RSK_MD_PREM_OS_OC,RSK_MD_PREM_OS_DC,RSK_AGGREGATE_LIAB_OC,RSK_AGGREGATE_LIAB_DC,'P.c',RSK_REINSTATE_NO,RSK_REINSTATE_ADDL_PREM_OC,RSK_BROKERAGE,RSK_TAX FROM MV_POLREG_XOL WHERE INCEPTION_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY')
#report.select.premiumReport=SELECT TRANSACTION_NO,TRANSACTION_DATE,TRANSACTION_MONTH_YEAR,DOC_TYPE,CONTRACT_NO,UW_YEAR,TMAS_PFC_NAME,TMAS_SPFC_NAME,RSK_INSURED_NAME,COMPANY_NAME,BROKER,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR(EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,COMMISSION,BROKERAGE,TAX,OTHER_COST,GWPI_OUR_SHARE_OC,EPI_BOOKED,EPI_BALANCE,CEDANT_REFERENCE,SHORT_NAME,TO_CHAR(STATMENT_DATE,'DD/MM/YYYY') STATMENT_DATE,PREMIUM_QUOTASHARE_OC,TOTAL_CR_OC,COMMISSION_QUOTASHARE_OC,BROKERAGE_AMT_OC,TAX_AMT_OC,OTHER_COST_OC,TOTAL_DR_OC,NETDUE_OC,ALLOCATED_TILL_DATE_OC,ALLCATION_PENDING_OC,EXCHANGE_RATE,PREMIUM_QUOTASHARE_DC,TOTAL_CR_DC,COMMISSION_QUOTASHARE_DC,BROKERAGE_AMT_DC,TAX_AMT_DC,OTHER_COST_DC,TOTAL_DR_DC,NETDUE_DC,ALLOCATED_TILL_DATE_DC,ALLCATION_PENDING_DC,REMARKS,SETTLEMENT_STATUS,INSTALLMENT_DATE,ENDORSEMENT_DATE FROM FAC_PREM_REG WHERE PRODUCT_ID=? AND TRANS_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and branch_code=?
report.select.premiumReport=Select * from table(FN_FAC_PREM_REG(?,?,?,?,?,?,?))
REPORT_SELECT_NPTTYPREMIUMREPORT = Select * from table(FN_NPTTY_PREM_REG(?,?,?,?,?,?,?))
REPORT_SELECT_PTTYPREMIUMREPORT = Select * from table(FN_PTTY_PREM_REG(?,?,?,?,?,?,?))
GET_CLAIM_REG_REPORT = Select * from table(CLAIM_REG_OSLR_REG_RT(?,?,?,?,?,?,?))

#report.select.treayPremiumReport=SELECT LAYER_NO,CONTRACT_NO,   TRANSACTION_NO,TRANSACTION_DATE,   DOC_TYPE,   TRANSACTION_MONTH_YEAR,   RSK_PFCID,   TMAS_PFC_NAME,   RSK_SPFCID,   TMAS_SPFC_NAME,   UW_YEAR,   TMAS_POL_BRANCH_NAME,   RSK_TREATYID,   COMPANY_NAME,   FIRST_NAME, INCEPTION_DATE, EXPIRY_DATE,  RSK_COMM_QUOTASHARE,   RSK_COMM_SURPLUS,   RSK_OVERRIDER_PERC,   RSK_BROKERAGE,   RSK_TAX,   RSK_OTHER_COST,   RSK_PREMIUM_RESERVE,   RSK_LOSS_RESERVE,   RSK_XLCOST_OS_OC,   RSK_PREMIUM_QUOTA_SHARE,   RSK_PREMIUM_SURPULS,   ENTERING_MODE,   SHORT_NAME,   CEDANT_REFERENCE,ENTRY_DATE_TIME,   ACCOUNT_PERIOD,   PREMIUM_QUOTASHARE_OC,   PREMIUM_SURPLUS_OC,   PREMIUM_PORTFOLIOIN_OC,   CLAIM_PORTFOLIOIN_OC,   PREMIUM_RESERVE_REALSED_OC,  LOSS_RESERVE_RELEASED_OC,   INTEREST_OC,   CASH_LOSS_CREDIT_OC,   TOTAL_CR_OC,   COMMISSION_QUOTASHARE_OC,   COMMISSION_SURPLUS_OC, BROKERAGE_AMT_OC,   TAX_AMT_OC,   OTHER_COST_OC, overrider_oc,  XL_COST_OC,   PREMIUM_PORTFOLIOOUT_OC,   CLAIM_PORTFOLIO_OUT_OC,   PREMIUM_RESERVE_RETAINED_OC,   LOSS_RESERVERETAINED_OC,   CASH_LOSSPAID_OC,   CLAIMS_PAID_OC,   TOTAL_OC,   NETDUE_OC,   ALLOCATED_TILL_DATE_OC,   ALLCATION_PENDING_OC,   EXCHANGE_RATE,   PREMIUM_QUOTASHARE_DC,   PREMIUM_SURPLUS_DC,   PREMIUM_PORTFOLIOIN_DC,   CLAIM_PORTFOLIOIN_DC,   PREMIUM_RESERVE_REALSED_DC,  LOSS_RESERVE_RELEASED_DC,   INTEREST_DC,   CASH_LOSS_CREDIT_DC,   TOTAL_CR_DC,   COMMISSION_QUOTASHARE_DC,   COMMISSION_SURPLUS_DC, BROKERAGE_AMT_DC,   TAX_AMT_DC,   OTHER_COST_DC,overrider_Dc,  XL_COST_DC,   PREMIUM_PORTFOLIOOUT_DC,   CLAIM_PORTFOLIO_OUT_DC, PREMIUM_RESERVE_RETAINED_DC,   LOSS_RESERVERETAINED_DC,   CASH_LOSSPAID_DC,   CLAIMS_PAID_DC,   TOTAL_DC,   NETDUE_DC,   ALLOCATED_TILL_DATE_DC,   ALLCATION_PENDING_DC,   REMARKS,   SETTLEMENT_STATUS,   LOGIN_ID,   BROKER_ID,   CEDING_COMPANY_ID,ADJUSTMENT_PREMIUM_OC,ADJUSTMENT_PREMIUM_DC,M_DPREMIUM_OC,M_DPREMIUM_DC,XOL_TOTAL_CREDIT_OC,XOL_TOTAL_DEBIT_OC,XOL_TOTAL_CREDIT_DC,XOL_TOTAL_DEBIT_DC,RSK_MD_PREM_OS_OC,RSK_EPI_OSOF_OC,INSTALLMENT_DATE,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,PROFIT_COMMISSION_OC,PROFIT_COMMISSION_DC ,ENDORSEMENT_DATE FROM PT_XOL_PREM_REG WHERE PRODUCT_ID=? AND TRANS_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and branch_code=?
report.select.premiumReportOrderBy= ORDER BY TRANSACTION_NO
#report.select.claimReport=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,PI.COMPANY_NAME,PIB.FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY')INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.SHARE_SIGNED,FRP.SUM_INSURED_OUR_SHARE_OC,CD.TOTAL_AMT_PAID_TILL_DATE TOTAL_AMT_PAID_TILL_DATE_OC,NVL(CD.TOTAL_AMT_PAID_TILL_DATE,0)/cd.EXCHANGE_RATE TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,CU.LOSS_ESTIMATE_REVISED_OC RESERVE_AMOUNT_OC,CU.LOSS_ESTIMATE_REVISED_DC RESERVE_AMOUNT_DC,CP.PAID_AMOUNT_OC,CP.PAID_AMOUNT_DC,NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)-nvl(CP.PAID_AMOUNT_OC,0) OS_AMOUNT_OC,NVL(CU.LOSS_ESTIMATE_REVISED_DC,0)-nvl(CP.PAID_AMOUNT_DC,0) OS_AMOUNT_DC,TO_CHAR(CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR(CD.DATE_OF_LOSS,'DD/MM/YYYY')DATE_OF_LOSS,TO_CHAR(CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION,Cm.short_name,CD.LOSS_ESTIMATE_OC,CD.LOSS_ESTIMATE_OC/cd.EXCHANGE_RATE LOSS_ESTIMATE_DC,CD.LOSS_ESTIMATE_OS_OC, CD.LOSS_ESTIMATE_OS_DC,CD.EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY')CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,cd.claim_no,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE,NVL (cp.ALLOCATED_TILL_DATE, 0)/cd.exchange_rate ALLOCATED_TILL_DATE,PM.BRANCH_CODE,rd.RSK_UWYEAR UW_YEAR,PM.BROKER_ID,PM.CEDING_COMPANY_ID FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD.RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_FAC_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID  JOIN (SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =(SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN (  SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO, RESERVE_ID) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO  AND CD.CLAIM_NO = CP.CLAIM_NO  AND CU.SL_NO = CP.RESERVE_ID WHERE PM.PRODUCT_ID = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = 1 AND cm.status = 'Y' AND CM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE) AND PIB.branch_code = ?
#report.select.claimReport=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,PI.COMPANY_NAME,PIB.FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY')INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.SHARE_SIGNED,FRP.SUM_INSURED_OUR_SHARE_OC,CD.TOTAL_AMT_PAID_TILL_DATE TOTAL_AMT_PAID_TILL_DATE_OC,NVL(CD.TOTAL_AMT_PAID_TILL_DATE,0)/cd.EXCHANGE_RATE TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,CU.LOSS_ESTIMATE_REVISED_OC RESERVE_AMOUNT_OC,CU.LOSS_ESTIMATE_REVISED_DC RESERVE_AMOUNT_DC,CP.PAID_AMOUNT_OC,CP.PAID_AMOUNT_DC,NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)-nvl(CP.PAID_AMOUNT_OC,0) OS_AMOUNT_OC,NVL(CU.LOSS_ESTIMATE_REVISED_DC,0)-nvl(CP.PAID_AMOUNT_DC,0) OS_AMOUNT_DC,TO_CHAR(CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR(CD.DATE_OF_LOSS,'DD/MM/YYYY')DATE_OF_LOSS,TO_CHAR(CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION,Cm.short_name,CD.LOSS_ESTIMATE_OC,CD.LOSS_ESTIMATE_OC/cd.EXCHANGE_RATE LOSS_ESTIMATE_DC,CD.LOSS_ESTIMATE_OS_OC, CD.LOSS_ESTIMATE_OS_DC,CD.EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY')CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,cd.claim_no,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE,NVL (cp.ALLOCATED_TILL_DATE, 0)/cd.exchange_rate ALLOCATED_TILL_DATE,PM.BRANCH_CODE,rd.RSK_UWYEAR UW_YEAR,PM.BROKER_ID,PM.CEDING_COMPANY_ID FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD.RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_FAC_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID  JOIN (SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =(SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN (  SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO, RESERVE_ID) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO  AND CD.CLAIM_NO = CP.CLAIM_NO  AND CU.SL_NO = CP.RESERVE_ID WHERE PM.PRODUCT_ID = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = ? AND cm.status = 'Y' AND CM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE) AND PIB.branch_code = ?
#report.select.claimReport=SELECT  PM.CONTRACT_NO,PM.PROPOSAL_NO,PI.COMPANY_NAME,PIB.FIRST_NAME || ' '|| PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY')INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.SHARE_SIGNED,TRIM(TO_CHAR(FRP.SUM_INSURED_OUR_SHARE_OC,'999G999G999G999G999G999G990D99')) SUM_INSURED_OUR_SHARE_OC,TRIM(TO_CHAR(CD.TOTAL_AMT_PAID_TILL_DATE,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(NVL(CD.TOTAL_AMT_PAID_TILL_DATE,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU.LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR(CU.LOSS_ESTIMATE_REVISED_DC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_DC,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)-NVL(CP.PAID_AMOUNT_OC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_DC,0)-NVL(CP.PAID_AMOUNT_DC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC,TO_CHAR(CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR(CD.DATE_OF_LOSS,'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR(CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS, CD.CAUSE_OF_LOSS,CD.LOCATION,CM.SHORT_NAME,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,TRIM(TO_CHAR(CD.EXCHANGE_RATE,'999G999G990D9999999')) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,CD.CLAIM_NO,NVL (CP.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE,PM.BRANCH_CODE,RD.RSK_UWYEAR UW_YEAR,PM.BROKER_ID,PM.CEDING_COMPANY_ID,CD.LOCATION LOCATION FROM POSITION_MASTER PM  JOIN TTRN_RISK_DETAILS RD  ON PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  JOIN  TTRN_RISK_COMMISSION RC  ON RD.RSK_PROPOSAL_NUMBER \=RC.RSK_PROPOSAL_NUMBER  JOIN   TTRN_FAC_RISK_PROPOSAL FRP  ON RD.RSK_PROPOSAL_NUMBER \=FRP.RSK_PROPOSAL_NUMBER JOIN PERSONAL_INFO PI  ON PI.CUSTOMER_ID \= RD.RSK_CEDINGID  JOIN  PERSONAL_INFO PIB  ON PIB.CUSTOMER_ID \= RD.RSK_BROKERID  JOIN TTRN_CLAIM_DETAILS CD  ON PM.CONTRACT_NO \= CD.CONTRACT_NO  JOIN CURRENCY_MASTER CM  ON CD.CURRENCY \=CM.CURRENCY_ID  JOIN (SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO \=(SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO \= A.CONTRACT_NO AND CLAIM_NO \= A.CLAIM_NO AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO \= CU.CONTRACT_NO AND CD.CLAIM_NO \= CU.CLAIM_NO LEFT OUTER JOIN (SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO,RESERVE_ID) CP ON CD.CONTRACT_NO \= CP.CONTRACT_NO AND CD.CLAIM_NO \= CP.CLAIM_NO AND CU.SL_NO \= CP.RESERVE_ID WHERE PM.PRODUCT_ID \= ? AND TRUNC(CD.CREATED_DATE) BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO \= PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER \= RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER \= FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER) AND CM.COUNTRY_ID \= ? AND CM.STATUS \= 'Y' AND CM.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE AND STATUS \= 'Y') AND CM.BRANCH_CODE \= PM.BRANCH_CODE AND PI.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND PI.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PIB.BRANCH_CODE \= ?
#report.select.claimReport=SELECT  PM.CONTRACT_NO,PM.PROPOSAL_NO,PI.COMPANY_NAME,PIB.FIRST_NAME || ' '||PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY')INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY')EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.SHARE_SIGNED,TRIM(TO_CHAR(FRP.SUM_INSURED_OUR_SHARE_OC,'999G999G999G999G999G999G990D99')) SUM_INSURED_OUR_SHARE_OC,TRIM(TO_CHAR(CD.TOTAL_AMT_PAID_TILL_DATE,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(NVL(CD.TOTAL_AMT_PAID_TILL_DATE,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99'))TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU.LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/(SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1))),'999G999G999G999G999G999G990D99'))  RESERVE_AMOUNT_DC,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99'))PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)-NVL(CP.PAID_AMOUNT_OC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_DC,0)-NVL(CP.PAID_AMOUNT_DC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC,TO_CHAR(CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR(CD.DATE_OF_LOSS,'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR(CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS, CD.CAUSE_OF_LOSS,CD.LOCATION,CM.SHORT_NAME,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,(SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,CD.CLAIM_NO,NVL (CP.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE,PM.BRANCH_CODE,RD.RSK_UWYEAR UW_YEAR,PM.BROKER_ID,PM.CEDING_COMPANY_ID,CD.LOCATION LOCATION FROM POSITION_MASTER PM  JOIN TTRN_RISK_DETAILS RD  ON PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  JOIN  TTRN_RISK_COMMISSION RC  ON RD.RSK_PROPOSAL_NUMBER \=RC.RSK_PROPOSAL_NUMBER  JOIN TTRN_FAC_RISK_PROPOSAL FRP  ON RD.RSK_PROPOSAL_NUMBER \=FRP.RSK_PROPOSAL_NUMBER JOIN PERSONAL_INFO PI  ON PI.CUSTOMER_ID \= RD.RSK_CEDINGID  JOIN  PERSONAL_INFO PIB  ON PIB.CUSTOMER_ID \= RD.RSK_BROKERID  JOIN TTRN_CLAIM_DETAILS CD  ON PM.CONTRACT_NO \= CD.CONTRACT_NO  JOIN CURRENCY_MASTER CM  ON CD.CURRENCY \=CM.CURRENCY_ID JOIN (SELECT  A.*FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy')AND  TO_DATE (?,'dd/mm/yyyy')AND A.SL_NO \=(SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO \= A.CONTRACT_NO AND CLAIM_NO \= A.CLAIM_NO AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy')AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO \= CU.CONTRACT_NO AND CD.CLAIM_NO \= CU.CLAIM_NO LEFT OUTER JOIN (SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0))PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy')AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO,RESERVE_ID) CP ON CD.CONTRACT_NO \= CP.CONTRACT_NO AND CD.CLAIM_NO \= CP.CLAIM_NO AND CU.SL_NO \= CP.RESERVE_ID WHERE PM.PRODUCT_ID \= ? AND TRUNC(CD.CREATED_DATE) BETWEEN TO_DATE (?, 'dd/mm/yyyy')AND  TO_DATE (?, 'dd/mm/yyyy')AND PM.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO \= PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO)FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER \= RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO)FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER \= FRP.RSK_PROPOSAL_NUMBER)AND RD.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO)FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER) AND CM.COUNTRY_ID \= ? AND CM.STATUS \= 'Y'AND CM.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE AND STATUS \= 'Y')AND CM.BRANCH_CODE \= PM.BRANCH_CODE AND PI.AMEND_ID \=(SELECT   MAX (AMEND_ID)FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND PI.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PIB.BRANCH_CODE \= ?
#report.select.claimReport=SELECT  PM.CONTRACT_NO,PM.PROPOSAL_NO,PI.COMPANY_NAME,PIB.FIRST_NAME || ' '||PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY')INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY')EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.SHARE_SIGNED,TRIM(TO_CHAR(FRP.SUM_INSURED_OUR_SHARE_OC,'999G999G999G999G999G999G990D99')) SUM_INSURED_OUR_SHARE_OC,TRIM(TO_CHAR(CD.TOTAL_AMT_PAID_TILL_DATE,'999G999G999G999G999G999G990D99'))TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(NVL(CD.TOTAL_AMT_PAID_TILL_DATE,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99'))TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU.LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99'))RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/(SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID)FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1))),'999G999G999G999G999G999G990D99'))  RESERVE_AMOUNT_DC,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99'))PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99'))PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)-NVL(CP.PAID_AMOUNT_OC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/((SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)))-NVL(CP.PAID_AMOUNT_OC,0)/(SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC,TO_CHAR(CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR(CD.DATE_OF_LOSS,'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR(CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS, CD.CAUSE_OF_LOSS,CD.LOCATION,CM.SHORT_NAME,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99'))LOSS_ESTIMATE_DC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99'))LOSS_ESTIMATE_OS_DC,(SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,CD.CLAIM_NO,NVL (CP.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE,PM.BRANCH_CODE,RD.RSK_UWYEAR UW_YEAR,PM.BROKER_ID,PM.CEDING_COMPANY_ID,CD.LOCATION LOCATION FROM POSITION_MASTER PM  JOIN TTRN_RISK_DETAILS RD  ON PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  JOIN  TTRN_RISK_COMMISSION RC  ON RD.RSK_PROPOSAL_NUMBER \=RC.RSK_PROPOSAL_NUMBER  JOIN TTRN_FAC_RISK_PROPOSAL FRP  ON RD.RSK_PROPOSAL_NUMBER \=FRP.RSK_PROPOSAL_NUMBER JOIN PERSONAL_INFO PI  ON PI.CUSTOMER_ID \= RD.RSK_CEDINGID  JOIN PERSONAL_INFO PIB  ON PIB.CUSTOMER_ID \= RD.RSK_BROKERID  JOIN TTRN_CLAIM_DETAILS CD  ON PM.CONTRACT_NO \= CD.CONTRACT_NO  JOIN CURRENCY_MASTER CM  ON CD.CURRENCY \=CM.CURRENCY_ID JOIN (SELECT  A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy')AND  TO_DATE (?,'dd/mm/yyyy')AND A.SL_NO \=( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO \= A.CONTRACT_NO AND CLAIM_NO \= A.CLAIM_NO AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO \= CU.CONTRACT_NO AND CD.CLAIM_NO \= CU.CLAIM_NO LEFT OUTER JOIN ( SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL ( ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO, RESERVE_ID) CP ON CD.CONTRACT_NO \= CP.CONTRACT_NO AND CD.CLAIM_NO \= CP.CLAIM_NO AND CU.SL_NO \= CP.RESERVE_ID WHERE PM.PRODUCT_ID \= ? AND TRUNC(CD.CREATED_DATE) BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID \= ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO \= PM.PROPOSAL_NO)AND RC.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER \= RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO \=( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER \= FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO)FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER) AND CM.COUNTRY_ID \= ? AND CM.STATUS \= 'Y' AND CM.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE AND STATUS \= 'Y') AND CM.BRANCH_CODE \= PM.BRANCH_CODE AND PI.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND PI.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PIB.BRANCH_CODE \= ?
#report.select.claimReport=SELECT  PM.CONTRACT_NO,PM.PROPOSAL_NO,PI.COMPANY_NAME,PIB.FIRST_NAME || ' '||PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY')INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY')EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.SHARE_SIGNED,TRIM(TO_CHAR(FRP.SUM_INSURED_OUR_SHARE_OC,'999G999G999G999G999G999G990D99')) SUM_INSURED_OUR_SHARE_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99'))TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(NVL(CP.PAID_AMOUNT_DC,0),'999G999G999G999G999G999G990D99'))TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU.LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99'))RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/(SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID)FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1))),'999G999G999G999G999G999G990D99'))  RESERVE_AMOUNT_DC,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99'))PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99'))PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)-NVL(CP.PAID_AMOUNT_OC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/((SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)))-NVL(CP.PAID_AMOUNT_OC,0)/(SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC,TO_CHAR(CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR(CD.DATE_OF_LOSS,'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR(CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS, CD.CAUSE_OF_LOSS,CD.LOCATION,CM.SHORT_NAME,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99'))LOSS_ESTIMATE_DC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99'))LOSS_ESTIMATE_OS_DC,(SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,CD.CLAIM_NO,NVL (CP.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE,PM.BRANCH_CODE,RD.RSK_UWYEAR UW_YEAR,PM.BROKER_ID,PM.CEDING_COMPANY_ID,CD.LOCATION LOCATION FROM POSITION_MASTER PM  JOIN TTRN_RISK_DETAILS RD  ON PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  JOIN  TTRN_RISK_COMMISSION RC  ON RD.RSK_PROPOSAL_NUMBER \=RC.RSK_PROPOSAL_NUMBER  JOIN TTRN_FAC_RISK_PROPOSAL FRP  ON RD.RSK_PROPOSAL_NUMBER \=FRP.RSK_PROPOSAL_NUMBER JOIN PERSONAL_INFO PI  ON PI.CUSTOMER_ID \= RD.RSK_CEDINGID  JOIN PERSONAL_INFO PIB  ON PIB.CUSTOMER_ID \= RD.RSK_BROKERID  JOIN TTRN_CLAIM_DETAILS CD  ON PM.CONTRACT_NO \= CD.CONTRACT_NO  JOIN CURRENCY_MASTER CM  ON CD.CURRENCY \=CM.CURRENCY_ID JOIN (SELECT  A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy')AND  TO_DATE (?,'dd/mm/yyyy')AND A.SL_NO \=( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO \= A.CONTRACT_NO AND CLAIM_NO \= A.CLAIM_NO AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO \= CU.CONTRACT_NO AND CD.CLAIM_NO \= CU.CLAIM_NO LEFT OUTER JOIN ( SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL ( ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO, RESERVE_ID) CP ON CD.CONTRACT_NO \= CP.CONTRACT_NO AND CD.CLAIM_NO \= CP.CLAIM_NO AND CU.SL_NO \= CP.RESERVE_ID WHERE PM.PRODUCT_ID \= ? AND TRUNC(CD.CREATED_DATE) BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID \= ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO \= PM.PROPOSAL_NO)AND RC.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER \= RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO \=( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER \= FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO)FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER) AND CM.COUNTRY_ID \= ? AND CM.STATUS \= 'Y' AND CM.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE AND STATUS \= 'Y') AND CM.BRANCH_CODE \= PM.BRANCH_CODE AND PI.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND PI.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PIB.BRANCH_CODE \= ?
report.select.claimReport=SELECT  PM.CONTRACT_NO,PM.PROPOSAL_NO,PI.COMPANY_NAME,PIB.FIRST_NAME || ' '||PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY')INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY')EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.SHARE_SIGNED,TRIM(TO_CHAR(FRP.SUM_INSURED_OUR_SHARE_OC,'999G999G999G999G999G999G990D99')) SUM_INSURED_OUR_SHARE_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99'))TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(NVL(CP.PAID_AMOUNT_DC,0),'999G999G999G999G999G999G990D99'))TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU.LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99'))RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/(SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID)FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1))),'999G999G999G999G999G999G990D99'))  RESERVE_AMOUNT_DC,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99'))PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99'))PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)-NVL(CP.PAID_AMOUNT_OC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/((SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)))-NVL(CP.PAID_AMOUNT_OC,0)/(SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC,TO_CHAR(CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR(CD.DATE_OF_LOSS,'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR(CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS, CD.CAUSE_OF_LOSS,CD.LOCATION,CM.SHORT_NAME,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99'))LOSS_ESTIMATE_DC,TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99'))LOSS_ESTIMATE_OS_DC,(SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,CD.CLAIM_NO,NVL (CP.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE,PM.BRANCH_CODE,RD.RSK_UWYEAR UW_YEAR,PM.BROKER_ID,PM.CEDING_COMPANY_ID,CD.LOCATION LOCATION FROM POSITION_MASTER PM  JOIN TTRN_RISK_DETAILS RD  ON PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  JOIN  TTRN_RISK_COMMISSION RC  ON RD.RSK_PROPOSAL_NUMBER \=RC.RSK_PROPOSAL_NUMBER  JOIN TTRN_FAC_RISK_PROPOSAL FRP  ON RD.RSK_PROPOSAL_NUMBER \=FRP.RSK_PROPOSAL_NUMBER JOIN PERSONAL_INFO PI  ON PI.CUSTOMER_ID \= RD.RSK_CEDINGID  JOIN PERSONAL_INFO PIB  ON PIB.CUSTOMER_ID \= RD.RSK_BROKERID  JOIN TTRN_CLAIM_DETAILS CD  ON PM.CONTRACT_NO \= CD.CONTRACT_NO  JOIN CURRENCY_MASTER CM  ON CD.CURRENCY \=CM.CURRENCY_ID JOIN (SELECT  A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy')AND  TO_DATE (?,'dd/mm/yyyy')AND A.SL_NO \=( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO \= A.CONTRACT_NO AND CLAIM_NO \= A.CLAIM_NO AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO \= CU.CONTRACT_NO AND CD.CLAIM_NO \= CU.CLAIM_NO LEFT OUTER JOIN ( SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL ( ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO, RESERVE_ID) CP ON CD.CONTRACT_NO \= CP.CONTRACT_NO AND CD.CLAIM_NO \= CP.CLAIM_NO AND CU.SL_NO \= CP.RESERVE_ID WHERE PM.PRODUCT_ID \= ? AND TRUNC(CD.CREATED_DATE) BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID \= ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO \= PM.PROPOSAL_NO)AND RC.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER \= RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO \=( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_FAC_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER \= FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO \=(SELECT   MAX (RSK_ENDORSEMENT_NO)FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER) AND CM.COUNTRY_ID \= ? AND CM.STATUS \= 'Y' AND CM.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE AND STATUS \= 'Y') AND CM.BRANCH_CODE \= PM.BRANCH_CODE AND PI.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND PI.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE) AND PIB.BRANCH_CODE \= ?
report.select.claimRegLoginId=AND PM.LOGIN_ID\=?
report.select.claimRegCedingId=AND PM.CEDING_COMPANY_ID=?
report.select.claimRegBrokerId=AND PM.BROKER_ID=?
report.select.claimuwyear=AND PM.UW_YEAR=?
report.select.claimRegOrderBy=ORDER BY   CD.CONTRACT_NO, CD.CLAIM_NO
report.select.retroPolicyReport=SELECT PROPOSAL_NO,CONTRACT_NO,TMAS_PFC_NAME,UNDERWRITTER,TMAS_DEPARTMENT_NAME,TMAS_SPFC_NAME,RSK_UWYEAR,RSK_MAX_LMT_COVER,TMAS_POL_BRANCH_NAME,COMPANY_NAME,BROKER,RSK_TREATYID,PROPOSAL_TYPE,INCEPTION_DATE,EXPIRY_DATE,TO_CHAR(ACCOUNT_DATE,'DD/MM/YYYY') ACCOUNT_DATE,SHORT_NAME,RSK_EXCHANGE_RATE,RSK_PERIOD_OF_NOTICE,RSK_RISK_COVERED,RSK_TERRITORY_SCOPE,ACCOUNTING_PERIOD,RSK_RECEIPT_STATEMENT,RSK_RECEIPT_PAYEMENT,RSK_SP_RETRO,RSK_NO_OF_INSURERS,RSK_LIMIT_OC,RSK_EPI_OFFER_OC,RSK_EPI_ESTIMATE,RSK_EPI_EST_OC,RSK_XLCOST_OC,RSK_CEDRET_TYPE,RSK_CEDANT_RETENTION,PROPOSAL_STATU,RSK_SHARE_WRITTEN,RSK_SHARE_SIGNED,RSK_LIMIT_OS_OC,RSK_LIMIT_OS_DC,RSK_EPI_OSOF_OC,RSK_EPI_OSOF_DC,RSK_EPI_OSOE_OC,RSK_EPI_OSOE_DC,RSK_XLCOST_OS_OC,RSK_XLCOST_OS_DC,RSK_PREMIUM_QUOTA_SHARE,RSK_PREMIUM_SURPULS,LOGIN_ID,BROKER_ID,CEDING_COMPANY_ID,UW_YEAR,RSK_LAYER_NO,RSK_BASIS,RSK_DEDUC_OC,RSK_SUBJ_PREMIUM_OC,RSK_ADJRATE,RSK_MD_PREM_OC,MND_INSTALLMENTS,RSK_MD_PREM_OS_OC,RSK_MD_PREM_OS_DC,PRODUCT_ID,LAYER_NO,RSK_SUBJ_PREMIUM_DC,RSK_LIMIT_DC,RSK_DEDUC_DC,RSK_EPI_EST_DC,RSK_XLPREM_DC,RSK_MD_PREM_DC,RSK_PF_COVERED,RSK_EPI_OFFER_DC,RSK_XLCOST_DC,RSK_RETRO_TYPE,RETRO_CESSIONARIES,RSK_REMARKS FROM RETRO_POL_REG WHERE PRODUCT_ID in(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) AND  ACCOUNT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and branch_code=?
#report.select.retroQuarRDS=SELECT CONTRACT_NO,LAYER_NO,COMPANY_NAME,BROKER_NAME,INCEPTION_DATE,INWUW_YEAR,PREMIUM_TRAN_NO,TRANSACTION_DATE,RETRO_CONTRACT_NO,RETRO_LAYER_NO,DOC_TYPE,SHORT_NAME,RETRO_PERCENTAGE,PREMIUM_QUOTASHARE_OC,PREMIUM_SURPLUS_OC,PREMIUM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_OC,PREMIUM_RESERVE_REALSED_OC,LOSS_RESERVE_RELEASED_OC,INTEREST_OC,CASH_LOSS_CREDIT_OC,TOTAL_CR_OC,COMMISSION_QUOTASHARE_OC,COMMISSION_SURPLUS_OC,BROKERAGE_AMT_OC,TAX_AMT_OC,OTHER_COST_OC,XL_COST_OC,PREMIUM_PORTFOLIOOUT_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_RETAINED_OC,LOSS_RESERVERETAINED_OC,CASH_LOSSPAID_OC,CLAIMS_PAID_OC,NETDUE_OC,EXCHANGE_RATE,PREMIUM_QUOTASHARE_DC,PREMIUM_SURPLUS_DC,PREMIUM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_DC,PREMIUM_RESERVE_REALSED_DC,LOSS_RESERVE_RELEASED_DC,INTEREST_DC,CASH_LOSS_CREDIT_DC,TOTAL_CR_DC,COMMISSION_QUOTASHARE_DC,COMMISSION_SURPLUS_DC,BROKERAGE_AMT_DC,TAX_AMT_DC,OTHER_COST_DC,XL_COST_DC,PREMIUM_PORTFOLIOOUT_DC,CLAIM_PORTFOLIO_OUT_DC,PREMIUM_RESERVE_RETAINED_DC,LOSS_RESERVERETAINED_DC,CASH_LOSSPAID_DC,CLAIMS_PAID_DC,NETDUE_DC,M_DPREMIUM_OC,ADJUSTMENT_PREMIUM_OC,REC_PREMIUM_OC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC FROM RETRO_PREM_DETAILS_FOR_RDS WHERE PRODUCT_ID=(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) AND TO_DATE(TRANSACTION_DATE,'DD/MM/YYYY') BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE=?
report.select.retroQuarRDS=SELECT CONTRACT_NO,LAYER_NO,COMPANY_NAME,BROKER_NAME,INCEPTION_DATE,INWUW_YEAR,PREMIUM_TRAN_NO,TRANSACTION_DATE,RETRO_CONTRACT_NO,RETRO_LAYER_NO, DOC_TYPE,SHORT_NAME,RETRO_PERCENTAGE,PREMIUM_QUOTASHARE_OC, PREMIUM_SURPLUS_OC,PREMIUM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_OC, PREMIUM_RESERVE_REALSED_OC,LOSS_RESERVE_RELEASED_OC,INTEREST_OC, CASH_LOSS_CREDIT_OC,TOTAL_CR_OC,COMMISSION_QUOTASHARE_OC, COMMISSION_SURPLUS_OC,BROKERAGE_AMT_OC,TAX_AMT_OC,OTHER_COST_OC, XL_COST_OC,PREMIUM_PORTFOLIOOUT_OC,CLAIM_PORTFOLIO_OUT_OC, PREMIUM_RESERVE_RETAINED_OC,LOSS_RESERVERETAINED_OC,CASH_LOSSPAID_OC, CLAIMS_PAID_OC,NETDUE_OC,EXCHANGE_RATE,PREMIUM_QUOTASHARE_DC, PREMIUM_SURPLUS_DC,PREMIUM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_DC, PREMIUM_RESERVE_REALSED_DC,LOSS_RESERVE_RELEASED_DC,INTEREST_DC, CASH_LOSS_CREDIT_DC,TOTAL_CR_DC,COMMISSION_QUOTASHARE_DC, COMMISSION_SURPLUS_DC,BROKERAGE_AMT_DC,TAX_AMT_DC,OTHER_COST_DC, XL_COST_DC,PREMIUM_PORTFOLIOOUT_DC,CLAIM_PORTFOLIO_OUT_DC, PREMIUM_RESERVE_RETAINED_DC,LOSS_RESERVERETAINED_DC,CASH_LOSSPAID_DC, CLAIMS_PAID_DC,NETDUE_DC,M_DPREMIUM_OC,ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC, TRANSACTIONTYPE,SUBCLASS,INWARDTYPE,RETRO_CEDING,RETROBROKER, RETROINCEPTION,RETROEXPIRY,RETROUWY,PREMIUM_OC,COMMISSIONOC,PROFITCOMMISSIONOC, NETDUEOC,PREMIUMUGX,NETDUE_UGX, OVERRIDER_AMT_OC, OUTWARDOVERRIDER_OC, OVERRIDER_AMT_DC, PROFIT_COMMISSION_DC, OUTWAROVERRIDER_DC FROM RETRO_PREM_DETAILS_FOR_RDS WHERE  PRODUCT_ID=( SELECT DISTINCT OLD_PRODUCT_ID FROM TMAS_HOMEPAGE_MASTER WHERE BRANCH_CODE=? AND PRODUCT_ID=? AND DEPT_ID=?) AND  TO_DATE(TRANSACTION_DATE,'DD/MM/YYYY')  BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE=?
#report.select.getCedingCompanyList=SELECT DISTINCT P.CUSTOMER_ID, CASE WHEN P.CUSTOMER_TYPE = 'C' THEN P.COMPANY_NAME ELSE P.FIRST_NAME || ' ' || P.LAST_NAME END NAME FROM PERSONAL_INFO P WHERE P.BRANCH_CODE=? AND P.CUSTOMER_TYPE=? AND STATUS=? AND P.CUSTOMER_ID IN(SELECT DISTINCT CEDING_COMPANY_ID FROM POSITION_MASTER WHERE BROKER_ID=? AND PRODUCT_ID=?)  AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE=P.BRANCH_CODE AND CUSTOMER_TYPE=P.CUSTOMER_TYPE AND STATUS=P.STATUS AND CUSTOMER_ID=P.CUSTOMER_ID) ORDER BY NAME
report.select.getCedingCompanyList=SELECT DISTINCT P.CUSTOMER_ID, CASE WHEN P.CUSTOMER_TYPE = 'C' THEN P.COMPANY_NAME ELSE P.FIRST_NAME || ' ' || P.LAST_NAME END NAME FROM PERSONAL_INFO P WHERE P.BRANCH_CODE=? AND P.CUSTOMER_TYPE=? AND STATUS=? AND P.CUSTOMER_ID IN(SELECT DISTINCT CEDING_COMPANY_ID FROM POSITION_MASTER WHERE BRANCH_CODE=? AND PRODUCT_ID=?)  AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE=P.BRANCH_CODE AND CUSTOMER_TYPE=P.CUSTOMER_TYPE AND STATUS=P.STATUS AND CUSTOMER_ID=P.CUSTOMER_ID) ORDER BY NAME
report.select.getColumnInfoList=SELECT EXCEL_HEADER_NAME,FIELD_NAME,DATA_TYPE,SUMATIONYN,FORMULA FROM XL_DOWNLOAD_CONFIG_MASTER WHERE PRODUCT_ID=(SELECT DISTINCT OLD_PRODUCT_ID FROM TMAS_HOMEPAGE_MASTER WHERE BRANCH_CODE=? AND PRODUCT_ID=? AND DEPT_ID=? AND STATUS='Y') AND  TYPE_ID=? AND STATUS=? ORDER BY SNO
report.select.getCompanyInfoList=SELECT A.COMPANY_NAME,A.TELEPHONE,A.MOBILE,A.FAX,A.EMAIL,A.POBOX,A.ADDRESS1,A.ADDRESS2,A.CITY,A.COUNTRY,A.BASE_CURRENCY,A.DEST_CURRENCY,A.FINANCIAL_YEAR,A.BAND_REPORT,A.CURRENCY_DECIMAL,A.WEB_SITE FROM COMPANY_MASTER A WHERE COMPANY_CODE=? AND STATUS=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM COMPANY_MASTER WHERE COMPANY_CODE=A.COMPANY_CODE AND STATUS=A.STATUS)
report.select.getReportName=SELECT TYPE_NAME FROM XL_TYPE_MASTER WHERE  PRODUCT_ID=? AND TYPE_ID=? AND STATUS=?
reportdao.select.getFacRetroList=SELECT CONTRACT_NO,   LAYER_NO,   RETRO_CONTRACT_NO,   RETRO_LAYER_NO,   RETRO_PERCENTAGE,   OWI_PREMIUM_USD,   OWI_COMMISSION,   OWI_OTHER_CHARGES,   OVER_RIDER,   NET,   ACCOUNT_DATE,   LOGIN_ID,   BROKER_ID,   CEDING_COMPANY_ID,   DEPT_ID,UW_YEAR,OVER_RIDER_PER FROM FAC_RETRO_DETAILS_FOR_RDS WHERE ACCOUNT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE=?
#SELECT CONTRACT_NO,   LAYER_NO,   RETRO_CONTRACT_NO,   RETRO_LAYER_NO,   RETRO_PERCENTAGE,   OWI_PREMIUM_USD,   OWI_COMMISSION,   OWI_OTHER_CHARGES,   OVER_RIDER,   NET,   ACCOUNT_DATE,   LOGIN_ID,   BROKER_ID,   CEDING_COMPANY_ID,   DEPT_ID,UW_YEAR FROM FAC_RETRO_DETAILS_FOR_RDS WHERE ACCOUNT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE=?
reportdao.select.getTreatyXOLRetroList=SELECT  CONTRACT_NO,LAYER_NO,RETRO_CONTRACT_NO,RETRO_LAYER_NO,RETRO_PERCENTAGE,OWI_PREMIUM_USD,OWI_COMMISSION_QS,OWI_COMMISSION_SURPLUS,OWI_OTHER_CHARGES,OVER_RIDER, NET, ACCOUNT_DATE, LOGIN_ID, BROKER_ID, CEDING_COMPANY_ID, PRODUCT_ID,UW_YEAR,OVER_RIDER_PER FROM PT_XOL_RETRO_DETAILS_FOR_RDS WHERE PRODUCT_ID\=? AND ACCOUNT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE\=?
#SELECT  CONTRACT_NO,LAYER_NO,RETRO_CONTRACT_NO,RETRO_LAYER_NO,RETRO_PERCENTAGE,OWI_PREMIUM_USD,OWI_COMMISSION_QS,OWI_COMMISSION_SURPLUS,OWI_OTHER_CHARGES,OVER_RIDER, NET, ACCOUNT_DATE, LOGIN_ID, BROKER_ID, CEDING_COMPANY_ID, PRODUCT_ID,UW_YEAR FROM PT_XOL_RETRO_DETAILS_FOR_RDS WHERE PRODUCT_ID\=? AND ACCOUNT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE\=?
reportdao.select.getFacRetroOrderBy=ORDER BY CONTRACT_NO
reportdao.select.getRetroFacList=SELECT  RETRO_CONTRACT_NO, RETRO_LAYER_NO,CONTRACT_NO,LAYER_NO,RETRO_PERCENTAGE,OWI_PREMIUM_USD,OWI_COMMISSION,OWI_COMMISSION_SURPLUS,OWI_OTHER_CHARGES,OVER_RIDER,NET,ACCOUNT_DATE,LOGIN_ID,BROKER_ID,CEDING_COMPANY_ID,DEPT_ID,UW_YEAR,OVER_RIDER_PER,BROKER_NAME,RETRO_TYPE,CEDING_COMPANY_NAME,IW_OVERRIDER,Currency_usd FROM RETRO_RDS_DETAILS WHERE PRODUCT_ID in(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) and ACCOUNT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and branch_code=?
#SELECT  RETRO_CONTRACT_NO, RETRO_LAYER_NO,CONTRACT_NO,LAYER_NO,RETRO_PERCENTAGE,OWI_PREMIUM_USD,OWI_COMMISSION,OWI_COMMISSION_SURPLUS,OWI_OTHER_CHARGES,OVER_RIDER,NET,ACCOUNT_DATE,LOGIN_ID,BROKER_ID,CEDING_COMPANY_ID,DEPT_ID,UW_YEAR FROM RETRO_RDS_DETAILS WHERE PRODUCT_ID in(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) and ACCOUNT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and branch_code=?
reportdao.select.getRetroTreatyXOLList=SELECT  RETRO_CONTRACT_NO,RETRO_LAYER_NO,CONTRACT_NO,LAYER_NO,RETRO_PERCENTAGE,OWI_PREMIUM_USD,OWI_COMMISSION_QS,OWI_COMMISSION_SURPLUS,OWI_OTHER_CHARGES,OVER_RIDER,NET,ACCOUNT_DATE,LOGIN_ID,BROKER_ID,CEDING_COMPANY_ID,DEPT_ID,PRODUCT_ID,UW_YEAR FROM RETRO_XOL_RDS_DETAILS WHERE PRODUCT_ID in(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) and ACCOUNT_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and branch_code=?
reportdao.select.getRetroFacOrderBy=ORDER BY RETRO_CONTRACT_NO
#reportdao.select.getTransMasterList=SELECT TRANSACTION_NO,   TO_CHAR(TRANSACTION_DATE,'DD/MM/YYYY') TRANSACTION_DATE,   TRANSACTION_MONTH,   TRANSACTION_YEAR,   DOC_TYPE,   CEDANT_REFERENCE,   CONTRACT_NO,   UW_YEAR,   RSK_SPFCID,   TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR(EXPIRY_DATE,'DD/MM/YYYY')  EXPIRY_DATE,   COMPANY_CODE,   BROKER_CODE,   RSK_INSURED_NAME,   LOSS_DATE,   CLAIM_NO,   ACCOUNT_PERIOD_QTR,   CURRENCY,   PREMIUM_QUOTASHARE_OC,   PREMIUM_SURPLUS_OC,   PREMIUM_TOTAL,   XL_COST_OC,   PREMIUM_PORTFOLIOIN_OC,   PREMIUM_PORTFOLIOOUT_OC,   NET_PREMIUM,   COMMISSION_QUOTASHARE_OC,   COMMISSION_SURPLUS_OC,   COMMISSION_TOTAL,   BROKERAGE_AMT_OC,   TAX_AMT_OC,   OTHER_COST_OC,   PROFIT_COMMISSION_OC,   TOTAL_COST,   PREMIUM_RESERVE_RETAINED_OC,   PREMIUM_RESERVE_REALSED_OC,   LOSS_RESERVERETAINED_OC,   LOSS_RESERVE_RELEASED_OC,   INTEREST_OC,   CLAIMS_PAID_OC,   CLAIM_RECOVERY_OC,   CLAIM_PORTFOLIOIN_OC,   CLAIM_PORTFOLIO_OUT_OC,   CASH_LOSSPAID_OC,   CASH_LOSS_CREDIT_OC,   NET_CLAIMS,   RECEIPT_AMOUNT,   PAYMENT_AMOUNT,   NET_DUE,   ALLOCATED_TILL_DATE,   PENDING_ALLOCATION,   ALLOCATION_NUMBER,   EXCHANGE_RATE,   PREMIUM_QUOTASHARE_DC,   PREMIUM_SURPLUS_DC,   PREMIUM_TOTAL_DC,   XL_COST_DC,   PREMIUM_PORTFOLIOIN_DC,   PREMIUM_PORTFOLIOOUT_DC,   NET_PREMIUM_DC,   COMMISSION_QUOTASHARE_DC,   COMMISSION_SURPLUS_DC,   COMMISSION_TOTAL_DC,   BROKERAGE_AMT_DC,   TAX_AMT_DC,   OTHER_COST_DC,   PROFIT_COMMISSION_DC,   TOTAL_COST_DC,   PREMIUM_RESERVE_RETAINED_DC,   PREMIUM_RESERVE_REALSED_DC,   LOSS_RESERVERETAINED_DC,   LOSS_RESERVE_RELEASED_DC,   INTEREST_DC,   CLAIMS_PAID_DC,   CLAIM_RECOVERY_DC,   CLAIM_PORTFOLIOIN_DC,   CLAIM_PORTFOLIO_OUT_DC,   CASH_LOSSPAID_DC,   CASH_LOSS_CREDIT_DC,   NET_CLAIMS_DC,   RECEIPT_AMOUNT_DC,   PAYMENT_AMOUNT_DC,   NET_DUE_DC,   ALLOCATED_TILL_DATE_DC,   PENDING_ALLOCATION_DC,   ALLOCATION_NUMBER_DC FROM TRANSACTION_REPORT WHERE BRANCH_CODE=? and TRANSACTION_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY')
#reportdao.select.getTransMasterList=SELECT TRANSACTION_NO, TO_CHAR (TRANSACTION_DATE, 'DD/MM/YYYY') TRANSACTION_DATE, AMENDMENT_DATE, TRANSACTION_MONTH, TRANSACTION_YEAR, DOC_TYPE, CEDANT_REFERENCE, CONTRACT_NO, UW_YEAR, RSK_SPFCID, TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR (EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE, COMPANY_CODE, BROKER_CODE, RSK_INSURED_NAME, LOSS_DATE, CLAIM_NO, ACCOUNT_PERIOD_QTR, CURRENCY, PREMIUM_QUOTASHARE_OC, PREMIUM_SURPLUS_OC, PREMIUM_TOTAL, XL_COST_OC, PREMIUM_PORTFOLIOIN_OC, PREMIUM_PORTFOLIOOUT_OC, NET_PREMIUM, COMMISSION_QUOTASHARE_OC, COMMISSION_SURPLUS_OC, COMMISSION_TOTAL, BROKERAGE_AMT_OC, TAX_AMT_OC, OVERRIDER_AMT_OC, OTHER_COST_OC, PROFIT_COMMISSION_OC, TOTAL_COST, WITH_HOLDING_TAX_OC, PREMIUM_RESERVE_RETAINED_OC, PREMIUM_RESERVE_REALSED_OC, LOSS_RESERVERETAINED_OC, LOSS_RESERVE_RELEASED_OC, INTEREST_OC, CLAIMS_PAID_OC, CLAIM_RECOVERY_OC, CLAIM_PORTFOLIOIN_OC, CLAIM_PORTFOLIO_OUT_OC, CASH_LOSSPAID_OC, CASH_LOSS_CREDIT_OC, NET_CLAIMS, RECEIPT_AMOUNT, PAYMENT_AMOUNT, NET_DUE, ALLOCATED_TILL_DATE, PENDING_ALLOCATION, ALLOCATION_NUMBER, EXCHANGE_RATE, PREMIUM_QUOTASHARE_DC, PREMIUM_SURPLUS_DC, PREMIUM_TOTAL_DC, XL_COST_DC, PREMIUM_PORTFOLIOIN_DC, PREMIUM_PORTFOLIOOUT_DC, NET_PREMIUM_DC, COMMISSION_QUOTASHARE_DC, COMMISSION_SURPLUS_DC, COMMISSION_TOTAL_DC, BROKERAGE_AMT_DC, TAX_AMT_DC, OVERRIDER_AMT_DC, OTHER_COST_DC, PROFIT_COMMISSION_DC, TOTAL_COST_DC, WITH_HOLDING_TAX_DC, PREMIUM_RESERVE_RETAINED_DC, PREMIUM_RESERVE_REALSED_DC, LOSS_RESERVERETAINED_DC, LOSS_RESERVE_RELEASED_DC, INTEREST_DC, CLAIMS_PAID_DC, CLAIM_RECOVERY_DC, CLAIM_PORTFOLIOIN_DC, CLAIM_PORTFOLIO_OUT_DC, CASH_LOSSPAID_DC, CASH_LOSS_CREDIT_DC, NET_CLAIMS_DC, RECEIPT_AMOUNT_DC, PAYMENT_AMOUNT_DC, NET_DUE_DC, ALLOCATED_TILL_DATE_DC, PENDING_ALLOCATION_DC, ALLOCATION_NUMBER_DC, BRANCH_CODE, REINSTATEMENTPREMIUM_OC, REINSTATEMENTPREMIUM_DC, CUSTOMER_ID, BROKER_ID, SNO, LOGIN_ID, TDS_OC, TDS_DC, ST_OC, ST_DC, SC_COMM_OC, SC_COMM_DC, BONUS_OC, BONUS_DC, LPC_OC, LPC_DC, PRD_ALLOCATED_TILL_DATE, LRD_ALLOCATED_TILL_DATE, TO_CHAR (STATEMENT_DATE, 'DD/MM/YYYY')  STATEMENT_DATE, OSBYN, DEPARTMENT_NAME, OSCLAIM_LOSSUPDATE_OC, OSCLAIM_LOSSUPDATE_DC, LAYER_NO, SAF_OS_OC, OTH_FEE_OS_OC, SAF_OS_DC, OTH_FEE_OS_DC FROM TRANSACTION_REPORT WHERE BRANCH_CODE=?  and TRANSACTION_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY')AND TO_DATE(?,'DD/MM/YYYY')AND DECODE(?,'ALL','A',DOC_TYPE) in (Select decode(?,'ALL','A',(Regexp_Substr(?,'[^,]+',1,Level)))  From  Dual B Connect By Level <= Length(?) - Length(Replace(?,',',''))+1) AND DECODE(?,'-1','A',UW_YEAR)=Decode(?,'-1','A',?) AND decode(?,'ALL','A',CONTRACT_NO) in (Select decode(?,'ALL','A',(Regexp_Substr(?,'[^,]+',1,Level)))  From  Dual B Connect By Level <= Length(?) - Length(Replace(?,',',''))+1) AND upper(DECODE(?,'-1','A',CUSTOMER_ID))=upper(Decode(?,'-1','A',?))  AND upper(DECODE(?,'-1','A',BROKER_ID))=upper(Decode(?,'-1','A',?))
reportdao.select.getTransMasterList=Select * from table(FN_TRANSACTION_REPORT(?,?,?,?,?,?,?,?))
reportdao.select.getReportProductList=SELECT DISTINCT TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER PM,XL_TYPE_MASTER TM  WHERE TM.PRODUCT_ID=PM.TMAS_PRODUCT_ID AND TM.TYPE_ID=? AND TM.STATUS='Y' AND PM.TMAS_STATUS='1' AND BRANCH_CODE=? AND TMAS_PRODUCT_ID!='5' ORDER BY TMAS_PRODUCT_ID
#report.select.claimReportPRMXOL=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB.FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,frp.RSK_LIMIT_OS_OC,frp.RSK_LIMIT_OS_DC,rc.RSK_CASHLOSS_LMT_OC,rc.RSK_CASHLOSS_LMT_DC,CD.TOTAL_AMT_PAID_TILL_DATE TOTAL_AMT_PAID_TILL_DATE_OC,CD.TOTAL_AMT_PAID_TILL_DATE/CD.EXCHANGE_RATE TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,CU.LOSS_ESTIMATE_REVISED_OC RESERVE_AMOUNT_OC,CU.LOSS_ESTIMATE_REVISED_DC RESERVE_AMOUNT_DC,CP.PAID_AMOUNT_OC,CP.PAID_AMOUNT_DC,NVL(CU.LOSS_ESTIMATE_REVISED_OC,0) - NVL(CP.PAID_AMOUNT_OC,0) OS_AMOUNT_OC,NVL(CU.LOSS_ESTIMATE_REVISED_DC,0) - NVL(CP.PAID_AMOUNT_DC,0) OS_AMOUNT_DC,TO_CHAR (CU.INCEPTION_DATE, 'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD.DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE, 'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION,Cm.short_name,CD.LOSS_ESTIMATE_OC,NVL(CD.LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE LOSS_ESTIMATE_DC,CD.LOSS_ESTIMATE_OS_OC,CD.LOSS_ESTIMATE_OS_DC,CD.EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD.CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp.ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM.PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD.RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID JOIN (SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =(SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION  WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN (  SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO, RESERVE_ID) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO AND CD.CLAIM_NO = CP.CLAIM_NO AND CU.SL_NO = CP.RESERVE_ID WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID = ? AND PM.BRANCH_CODE = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = 1 AND cm.status = 'Y' AND CM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)
#report.select.claimReportPRMXOL=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB.FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,frp.RSK_LIMIT_OS_OC,frp.RSK_LIMIT_OS_DC,rc.RSK_CASHLOSS_LMT_OC,rc.RSK_CASHLOSS_LMT_DC,CD.TOTAL_AMT_PAID_TILL_DATE TOTAL_AMT_PAID_TILL_DATE_OC,CD.TOTAL_AMT_PAID_TILL_DATE/CD.EXCHANGE_RATE TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,CU.LOSS_ESTIMATE_REVISED_OC RESERVE_AMOUNT_OC,CU.LOSS_ESTIMATE_REVISED_DC RESERVE_AMOUNT_DC,CP.PAID_AMOUNT_OC,CP.PAID_AMOUNT_DC,NVL(CU.LOSS_ESTIMATE_REVISED_OC,0) - NVL(CP.PAID_AMOUNT_OC,0) OS_AMOUNT_OC,NVL(CU.LOSS_ESTIMATE_REVISED_DC,0) - NVL(CP.PAID_AMOUNT_DC,0) OS_AMOUNT_DC,TO_CHAR (CU.INCEPTION_DATE, 'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD.DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE, 'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION,Cm.short_name,CD.LOSS_ESTIMATE_OC,NVL(CD.LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE LOSS_ESTIMATE_DC,CD.LOSS_ESTIMATE_OS_OC,CD.LOSS_ESTIMATE_OS_DC,CD.EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD.CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp.ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM.PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD.RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID JOIN (SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =(SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION  WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN (  SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO, RESERVE_ID) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO AND CD.CLAIM_NO = CP.CLAIM_NO AND CU.SL_NO = CP.RESERVE_ID WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID = ? AND PM.BRANCH_CODE = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = ? AND cm.status = 'Y' AND CM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)
#report.select.claimReportPRMXOL=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB.FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP.RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE)RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,TRIM(TO_CHAR(frp.RSK_LIMIT_OS_OC,'999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_OC,TRIM(TO_CHAR(frp.RSK_LIMIT_OS_DC,'999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_DC,TRIM(TO_CHAR(rc.RSK_CASHLOSS_LMT_OC,'999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_OC,TRIM(TO_CHAR(rc.RSK_CASHLOSS_LMT_DC,'999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_DC,TRIM(TO_CHAR(CD.TOTAL_AMT_PAID_TILL_DATE,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(CD.TOTAL_AMT_PAID_TILL_DATE/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU.LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/(SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1))),'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_DC,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0) - NVL(CP.PAID_AMOUNT_OC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_DC,0) - NVL(CP.PAID_AMOUNT_DC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC, TO_CHAR (CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD.DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE, 'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION,Cm.short_name, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(NVL(CD.LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,(SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID  AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E  WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD.ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD.CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM.LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp.ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM.PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD.RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID JOIN ( SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =(SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN (SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL ( ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO, RESERVE_ID) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO AND CD.CLAIM_NO = CP.CLAIM_NO AND CU.SL_NO = CP.RESERVE_ID WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID = ? AND PM.BRANCH_CODE = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =(SELECT MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = ? AND cm.status = 'Y' AND CM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)
#report.select.claimReportPRMXOL=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB. FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM. INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP. RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,TRIM(TO_CHAR(frp.RSK_LIMIT_OS_OC, '999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_OC,TRIM(TO_CHAR(frp. RSK_LIMIT_OS_DC,'999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_DC,TRIM( TO_CHAR(rc.RSK_CASHLOSS_LMT_OC,'999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_OC,TRIM(TO_CHAR(rc.RSK_CASHLOSS_LMT_DC, '999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_DC,TRIM(TO_CHAR(CD. TOTAL_AMT_PAID_TILL_DATE,'999G999G999G999G999G999G990D99'))TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(CD.TOTAL_AMT_PAID_TILL_DATE/CD. EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU. LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1))),'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_DC,TRIM( TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU. LOSS_ESTIMATE_REVISED_OC,0) - NVL(CP.PAID_AMOUNT_OC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/(( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)))-NVL(CP.PAID_AMOUNT_OC,0)/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC, TO_CHAR (CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD. DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION, Cm.short_name, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(NVL(CD. LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD. LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,( SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD. ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD. CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM. LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp. ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM. PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO \= RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD. RSK_PROPOSAL_NUMBER \=RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER \=FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID \= RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID \= RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO \= CD.CONTRACT_NO JOIN currency_master cm ON cd.currency \= cm.CURRENCY_ID JOIN ( SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO \=( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO \= A.CONTRACT_NO AND claim_no \= a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO \= CU.CONTRACT_NO AND CD.CLAIM_NO \= CU.CLAIM_NO LEFT OUTER JOIN ( SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL ( ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO, RESERVE_ID) CP ON CD.CONTRACT_NO \= CP.CONTRACT_NO AND CD.CLAIM_NO \= CP.CLAIM_NO AND CU.SL_NO \= CP.RESERVE_ID WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID \= ? AND PM.BRANCH_CODE \= ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID \= ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO \= PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO \=( SELECT MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER \= RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO \=( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER \= FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO \=( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID \= ? AND cm.status \= 'Y' AND CM.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE AND STATUS \= 'Y') AND cm.BRANCH_CODE \= PM.BRANCH_CODE AND PI.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND PI.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE)
report.select.claimReportPRMXOL=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB. FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM. INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP. RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,TRIM(TO_CHAR(frp.RSK_LIMIT_OS_OC, '999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_OC,TRIM(TO_CHAR(frp. RSK_LIMIT_OS_DC,'999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_DC,TRIM( TO_CHAR(rc.RSK_CASHLOSS_LMT_OC,'999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_OC,TRIM(TO_CHAR(rc.RSK_CASHLOSS_LMT_DC, '999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_DC,RD.RSK_RISK_COVERED,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99'))TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(CD.TOTAL_AMT_PAID_TILL_DATE/CD. EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU. LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1))),'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_DC,TRIM( TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU. LOSS_ESTIMATE_REVISED_OC,0) - (SELECT NVL(SUM(NETCLAIMAMT_OURSHARE_OC),0) FROM TTRN_CLAIM_PAYMENT TCP WHERE TCP.CLAIM_NO=CU.CLAIM_NO AND RESERVE_ID IN (SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION TP WHERE TP.CLAIM_NO=TCP.CLAIM_NO AND TRUNC(TP.INCEPTION_DATE) BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy')) AND TRUNC(TCP.INCEPTION_DATE) BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy')),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/(( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)))-(SELECT NVL(SUM(NETCLAIMAMT_OURSHARE_OC),0) FROM TTRN_CLAIM_PAYMENT TCP WHERE TCP.CLAIM_NO=CU.CLAIM_NO AND RESERVE_ID IN (SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION TP WHERE TP.CLAIM_NO=TCP.CLAIM_NO AND TRUNC(TP.INCEPTION_DATE) BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy')) AND TRUNC(TCP.INCEPTION_DATE) BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC, TO_CHAR (CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD. DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION, Cm.short_name, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(NVL(CD. LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD. LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,( SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD. ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD. CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM. LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp. ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM. PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD. RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID JOIN ( SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN ( SELECT   CONTRACT_NO,CLAIM_NO,SUM (NVL (PAID_AMOUNT_OC, 0)) PAID_AMOUNT_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) PAID_AMOUNT_DC,SUM (NVL ( ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO AND CD.CLAIM_NO = CP.CLAIM_NO /*AND CU.SL_NO = CP.RESERVE_ID*/ WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID = ? AND PM.BRANCH_CODE = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =( SELECT MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = ? AND cm.status = 'Y' AND CM.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE  CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)
#report.select.claimReportPRMXOL1=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB. FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM. INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP. RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,TRIM(TO_CHAR(frp.RSK_LIMIT_OS_OC, '999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_OC,TRIM(TO_CHAR(frp. RSK_LIMIT_OS_DC,'999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_DC,TRIM( TO_CHAR(rc.RSK_CASHLOSS_LMT_OC,'999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_OC,TRIM(TO_CHAR(rc.RSK_CASHLOSS_LMT_DC, '999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_DC,RD.RSK_RISK_COVERED,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_DC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_OC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_OC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_DC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_DC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_OC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_OC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_DC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU. LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1))),'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_DC,TRIM( TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU. LOSS_ESTIMATE_REVISED_OC,0) - NVL(CP.PAID_AMOUNT_OC,0),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/(( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)))-NVL(CP.PAID_AMOUNT_OC,0)/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC, TO_CHAR (CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD. DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION, Cm.short_name, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(NVL(CD. LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD. LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,( SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID\=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE\=PM.BRANCH_CODE AND AMEND_ID\=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID\=E.CURRENCY_ID AND BRANCH_CODE\=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) \=LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD. ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD. CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM. LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp. ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM. PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO \= RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD. RSK_PROPOSAL_NUMBER \=RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER \=FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID \= RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID \= RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO \= CD.CONTRACT_NO JOIN currency_master cm ON cd.currency \= cm.CURRENCY_ID JOIN ( SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO \=( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO \= A.CONTRACT_NO AND claim_no \= a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO \= CU.CONTRACT_NO AND CD.CLAIM_NO \= CU.CLAIM_NO LEFT OUTER JOIN (SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) NETCLAIMAMT_OURSHARE_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) NETCLAIMAMT_OURSHARE_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE,Sum(REINSPREMIUM_OURSHARE_OC) REINSPREMIUM_OURSHARE_OC,Sum(REINSPREMIUM_OURSHARE_DC) REINSPREMIUM_OURSHARE_DC,Sum(NETCLAIMAMT_OURSHARE_OC) PAID_AMOUNT_OC,SUM(NETCLAIMAMT_OURSHARE_DC)  PAID_AMOUNT_DC FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO,RESERVE_ID) CP ON CD.CONTRACT_NO \= CP.CONTRACT_NO AND CD.CLAIM_NO \= CP.CLAIM_NO AND CU.SL_NO \= CP.RESERVE_ID WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID \= ? AND PM.BRANCH_CODE \= ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID \= ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO \= PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO \=( SELECT MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER \= RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO \=( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER \= FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO \=( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID \= ? AND cm.status \= 'Y' AND CM.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID \= CM.CURRENCY_ID AND BRANCH_CODE \= CM.BRANCH_CODE AND STATUS \= 'Y') AND cm.BRANCH_CODE \= PM.BRANCH_CODE AND PI.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND PI.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.BRANCH_CODE \= PM.BRANCH_CODE AND PIB.AMEND_ID \=( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PIB.CUSTOMER_ID AND BRANCH_CODE \= PIB.BRANCH_CODE)
#report.select.claimReportPRMXOL1=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB. FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM. INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP. RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,TRIM(TO_CHAR(frp.RSK_LIMIT_OS_OC, '999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_OC,TRIM(TO_CHAR(frp. RSK_LIMIT_OS_DC,'999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_DC,TRIM( TO_CHAR(rc.RSK_CASHLOSS_LMT_OC,'999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_OC,TRIM(TO_CHAR(rc.RSK_CASHLOSS_LMT_DC, '999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_DC,RD.RSK_RISK_COVERED,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_DC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_OC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_OC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_DC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_DC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_OC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_OC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_DC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU. LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1))),'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_DC,TRIM( TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU. LOSS_ESTIMATE_REVISED_OC,0) - (Select Nvl(Sum(Netclaimamt_Ourshare_Oc),0) From Ttrn_Claim_Payment Tcp Where Tcp.Claim_No=CU.Claim_no And Reserve_Id In (Select Max(Sl_No) From Ttrn_Claim_Updation Tp Where Tp.Claim_No=tCP.Claim_no And Trunc(Tp.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')) and Trunc(TCP.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/(( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)))-(Select Nvl(Sum(Netclaimamt_Ourshare_Oc),0) From Ttrn_Claim_Payment Tcp Where Tcp.Claim_No=CU.Claim_no And Reserve_Id In (Select Max(Sl_No) From Ttrn_Claim_Updation Tp Where Tp.Claim_No=tCP.Claim_no And Trunc(Tp.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')) and Trunc(TCP.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy'))/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC, TO_CHAR (CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD. DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION, Cm.short_name, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(NVL(CD. LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD. LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,( SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD. ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD. CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM. LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp. ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM. PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD. RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID JOIN ( SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN (SELECT   CONTRACT_NO,CLAIM_NO,RESERVE_ID,SUM (NVL (PAID_AMOUNT_OC, 0)) NETCLAIMAMT_OURSHARE_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) NETCLAIMAMT_OURSHARE_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE,Sum(REINSPREMIUM_OURSHARE_OC) REINSPREMIUM_OURSHARE_OC,Sum(REINSPREMIUM_OURSHARE_DC) REINSPREMIUM_OURSHARE_DC,Sum(NETCLAIMAMT_OURSHARE_OC) PAID_AMOUNT_OC,SUM(NETCLAIMAMT_OURSHARE_DC)  PAID_AMOUNT_DC FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO AND CD.CLAIM_NO = CP.CLAIM_NO /*AND CU.SL_NO = CP.RESERVE_ID*/ WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID = ? AND PM.BRANCH_CODE = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =( SELECT MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = ? AND cm.status = 'Y' AND CM.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE  CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)  ORDER BY   CD.CONTRACT_NO, CD.CLAIM_NO
#report.select.claimReportPRMXOL1=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB. FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM. INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP. RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,TRIM(TO_CHAR(frp.RSK_LIMIT_OS_OC, '999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_OC,TRIM(TO_CHAR(frp. RSK_LIMIT_OS_DC,'999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_DC,TRIM( TO_CHAR(rc.RSK_CASHLOSS_LMT_OC,'999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_OC,TRIM(TO_CHAR(rc.RSK_CASHLOSS_LMT_DC, '999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_DC,RD.RSK_RISK_COVERED,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_DC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_OC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_OC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_DC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_DC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_OC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_OC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_DC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU. LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1))),'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_DC,TRIM( TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU. LOSS_ESTIMATE_REVISED_OC,0) - (Select Nvl(Sum(Netclaimamt_Ourshare_Oc),0) From Ttrn_Claim_Payment Tcp Where Tcp.Claim_No=CU.Claim_no And Reserve_Id In (Select Max(Sl_No) From Ttrn_Claim_Updation Tp Where Tp.Claim_No=tCP.Claim_no And Trunc(Tp.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')) and Trunc(TCP.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/(( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)))-(Select Nvl(Sum(Netclaimamt_Ourshare_Oc),0) From Ttrn_Claim_Payment Tcp Where Tcp.Claim_No=CU.Claim_no And Reserve_Id In (Select Max(Sl_No) From Ttrn_Claim_Updation Tp Where Tp.Claim_No=tCP.Claim_no And Trunc(Tp.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')) and Trunc(TCP.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy'))/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC, TO_CHAR (CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD. DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION, Cm.short_name, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(NVL(CD. LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD. LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,( SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD. ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD. CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM. LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp. ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM. PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD. RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID JOIN ( SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN (SELECT   CONTRACT_NO,CLAIM_NO,SUM (NVL (PAID_AMOUNT_OC, 0)) NETCLAIMAMT_OURSHARE_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) NETCLAIMAMT_OURSHARE_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE,Sum(REINSPREMIUM_OURSHARE_OC) REINSPREMIUM_OURSHARE_OC,Sum(REINSPREMIUM_OURSHARE_DC) REINSPREMIUM_OURSHARE_DC,Sum(NETCLAIMAMT_OURSHARE_OC) PAID_AMOUNT_OC,SUM(NETCLAIMAMT_OURSHARE_DC)  PAID_AMOUNT_DC FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO AND CD.CLAIM_NO = CP.CLAIM_NO /*AND CU.SL_NO = CP.RESERVE_ID*/ WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID = ? AND PM.BRANCH_CODE = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =( SELECT MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = ? AND cm.status = 'Y' AND CM.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE  CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)
#report.select.claimReportPRMXOL1=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB. FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM. INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP. RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,TRIM(TO_CHAR(frp.RSK_LIMIT_OS_OC, '999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_OC,TRIM(TO_CHAR(frp. RSK_LIMIT_OS_DC,'999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_DC,TRIM( TO_CHAR(rc.RSK_CASHLOSS_LMT_OC,'999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_OC,TRIM(TO_CHAR(rc.RSK_CASHLOSS_LMT_DC, '999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_DC,RD.RSK_RISK_COVERED,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_DC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_OC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_OC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_DC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_DC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_OC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_OC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_DC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU. LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1))),'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_DC,TRIM( TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU. LOSS_ESTIMATE_REVISED_OC,0) - (Select Nvl(Sum(Netclaimamt_Ourshare_Oc),0) From Ttrn_Claim_Payment Tcp Where Tcp.Claim_No=CU.Claim_no And Reserve_Id In (Select Max(Sl_No) From Ttrn_Claim_Updation Tp Where Tp.Claim_No=tCP.Claim_no And Trunc(Tp.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')) and Trunc(TCP.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/(( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)))-(Select Nvl(Sum(Netclaimamt_Ourshare_Oc),0) From Ttrn_Claim_Payment Tcp Where Tcp.Claim_No=CU.Claim_no And Reserve_Id In (Select Max(Sl_No) From Ttrn_Claim_Updation Tp Where Tp.Claim_No=tCP.Claim_no And Trunc(Tp.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')) and Trunc(TCP.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy'))/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC, TO_CHAR (CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD. DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION, Cm.short_name, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(NVL(CD. LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD. LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,( SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD. ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD. CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM. LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp. ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM. PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code,INSURED_NAME FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD. RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID JOIN ( SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN (SELECT   CONTRACT_NO,CLAIM_NO,SUM (NVL (PAID_AMOUNT_OC, 0)) NETCLAIMAMT_OURSHARE_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) NETCLAIMAMT_OURSHARE_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE,Sum(REINSPREMIUM_OURSHARE_OC) REINSPREMIUM_OURSHARE_OC,Sum(REINSPREMIUM_OURSHARE_DC) REINSPREMIUM_OURSHARE_DC,Sum(NETCLAIMAMT_OURSHARE_OC) PAID_AMOUNT_OC,SUM(NETCLAIMAMT_OURSHARE_DC)  PAID_AMOUNT_DC,max(INSURED_NAME) INSURED_NAME FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO AND CD.CLAIM_NO = CP.CLAIM_NO /*AND CU.SL_NO = CP.RESERVE_ID*/ WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID = ? AND PM.BRANCH_CODE = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =( SELECT MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = ? AND cm.status = 'Y' AND CM.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE  CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)
report.select.claimReportPRMXOL1=SELECT   PM.CONTRACT_NO,PM.PROPOSAL_NO,cd.claim_no,PI.COMPANY_NAME,PIB. FIRST_NAME || ' ' || PIB.LAST_NAME BROKER,RSK_INSURED_NAME,TO_CHAR (PM. INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE,FRP.RSK_CEDANT_RETENTION,DECODE(FRP. RSK_CEDRET_TYPE,'A','Amount','P','Percentage',FRP.RSK_CEDRET_TYPE) RSK_CEDRET_TYPE,FRP.RSK_SHARE_SIGNED,TRIM(TO_CHAR(frp.RSK_LIMIT_OS_OC, '999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_OC,TRIM(TO_CHAR(frp. RSK_LIMIT_OS_DC,'999G999G999G999G999G999G990D99')) RSK_LIMIT_OS_DC,TRIM( TO_CHAR(rc.RSK_CASHLOSS_LMT_OC,'999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_OC,TRIM(TO_CHAR(rc.RSK_CASHLOSS_LMT_DC, '999G999G999G999G999G999G990D99')) RSK_CASHLOSS_LMT_DC,RD.RSK_RISK_COVERED,TRIM(TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) TOTAL_AMT_PAID_TILL_DATE_DC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_OC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_OC,TRIM(TO_CHAR(NETCLAIMAMT_OURSHARE_DC,'999G999G999G999G999G999G990D99')) NETCLAIMAMT_OURSHARE_DC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_OC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_OC,TRIM(TO_CHAR(REINSPREMIUM_OURSHARE_DC,'999G999G999G999G999G999G990D99')) REINSPREMIUM_OURSHARE_DC,CU.SL_NO RESERVE_ID,TRIM(TO_CHAR(CU. LOSS_ESTIMATE_REVISED_OC,'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_OC,TRIM(TO_CHAR((CU.LOSS_ESTIMATE_REVISED_OC/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1))),'999G999G999G999G999G999G990D99')) RESERVE_AMOUNT_DC,TRIM( TO_CHAR(CP.PAID_AMOUNT_OC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_OC,TRIM(TO_CHAR(CP.PAID_AMOUNT_DC,'999G999G999G999G999G999G990D99')) PAID_AMOUNT_DC,TRIM(TO_CHAR(NVL(CU. LOSS_ESTIMATE_REVISED_OC,0) - (Select Nvl(Sum(Netclaimamt_Ourshare_Oc),0) From Ttrn_Claim_Payment Tcp Where Tcp.Claim_No=CU.Claim_no And Reserve_Id In (Select Max(Sl_No) From Ttrn_Claim_Updation Tp Where Tp.Claim_No=tCP.Claim_no And Trunc(Tp.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')) and Trunc(TCP.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')),'999G999G999G999G999G999G990D99')) OS_AMOUNT_OC,TRIM(TO_CHAR(NVL(CU.LOSS_ESTIMATE_REVISED_OC,0)/(( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)))-(Select Nvl(Sum(Netclaimamt_Ourshare_Oc),0) From Ttrn_Claim_Payment Tcp Where Tcp.Claim_No=CU.Claim_no And Reserve_Id In (Select Max(Sl_No) From Ttrn_Claim_Updation Tp Where Tp.Claim_No=tCP.Claim_no And Trunc(Tp.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy')) and Trunc(TCP.Inception_Date) Between To_Date (?,'dd/mm/yyyy') And  To_Date (?,'dd/mm/yyyy'))/( SELECT EXCHANGE_RATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1)),'999G999G999G999G999G999G990D99')) OS_AMOUNT_DC, TO_CHAR (CU.INCEPTION_DATE,'DD/MM/YYYY') RESERVE_DATE,CD.RISK_CODE,CD.ACCUMULATION_CODE,CD.EVENT_CODE,CD.STATUS_OF_CLAIM,TO_CHAR (CD. DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,TO_CHAR (CD.REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,CD.LOSS_DETAILS,CD.CAUSE_OF_LOSS,CD.LOCATION, Cm.short_name, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OC,TRIM(TO_CHAR(NVL(CD. LOSS_ESTIMATE_OC,0)/CD.EXCHANGE_RATE,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_DC, TRIM(TO_CHAR(CD.LOSS_ESTIMATE_OS_OC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_OC, TRIM(TO_CHAR(CD. LOSS_ESTIMATE_OS_DC,'999G999G999G999G999G999G990D99')) LOSS_ESTIMATE_OS_DC,( SELECT TRIM(TO_CHAR(EXCHANGE_RATE,'999G999G990D9999999')) FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=CM.CURRENCY_ID AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'),-1))+1 AND BRANCH_CODE=PM.BRANCH_CODE AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER E WHERE EM.CURRENCY_ID=E.CURRENCY_ID AND BRANCH_CODE=PM.BRANCH_CODE AND TRUNC(INCEPTION_DATE) =LAST_DAY(ADD_MONTHS(TO_DATE (?,'dd/mm/yyyy'), -1))+1)) EXCHANGE_RATE,CD.ADVICE_UW,CD.ADVICE_UW_EMAILID,CD. ADVICE_MANAGEMENT,CD.ADVICE_MGT_EMAILID,CD.RI_RECOVERY,TO_CHAR (CD. CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,CD.CREATED_BY,CD.REMARKS,PM. LOGIN_ID,NVL (cp.ALLOCATED_TILL_DATE, 0) ALLOCATED_TILL_DATE_OC,NVL (cp. ALLOCATED_TILL_DATE, 0)/cd.EXCHANGE_RATE  ALLOCATED_TILL_DATE_DC,PM. PRODUCT_ID,rd.RSK_TREATYID,frp.RSK_PF_COVERED,pm.uw_year,pm.branch_code,CP.INSURED_NAME FROM  POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_COMMISSION RC ON RD. RSK_PROPOSAL_NUMBER =RC.RSK_PROPOSAL_NUMBER JOIN TTRN_RISK_PROPOSAL FRP ON RD.RSK_PROPOSAL_NUMBER =FRP.RSK_PROPOSAL_NUMBER  JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = RD.RSK_CEDINGID JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = RD.RSK_BROKERID JOIN TTRN_CLAIM_DETAILS CD ON PM.CONTRACT_NO = CD.CONTRACT_NO JOIN currency_master cm ON cd.currency = cm.CURRENCY_ID JOIN ( SELECT   A.* FROM   TTRN_CLAIM_UPDATION A WHERE   A.INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') AND A.SL_NO =( SELECT   MAX (SL_NO) FROM   TTRN_CLAIM_UPDATION WHERE   CONTRACT_NO = A.CONTRACT_NO AND claim_no = a.claim_no AND INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy'))) CU ON CD.CONTRACT_NO = CU.CONTRACT_NO AND CD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN (SELECT   CONTRACT_NO,CLAIM_NO,SUM (NVL (PAID_AMOUNT_OC, 0)) NETCLAIMAMT_OURSHARE_OC,SUM (NVL (PAID_AMOUNT_DC, 0)) NETCLAIMAMT_OURSHARE_DC,SUM (NVL (ALLOCATED_TILL_DATE, 0)) ALLOCATED_TILL_DATE,Sum(REINSPREMIUM_OURSHARE_OC) REINSPREMIUM_OURSHARE_OC,Sum(REINSPREMIUM_OURSHARE_DC) REINSPREMIUM_OURSHARE_DC,Sum(NETCLAIMAMT_OURSHARE_OC) PAID_AMOUNT_OC,SUM(NETCLAIMAMT_OURSHARE_DC)  PAID_AMOUNT_DC,max(INSURED_NAME) INSURED_NAME FROM   TTRN_CLAIM_PAYMENT WHERE   INCEPTION_DATE BETWEEN TO_DATE (?,'dd/mm/yyyy') AND  TO_DATE (?,'dd/mm/yyyy') GROUP BY   CONTRACT_NO, CLAIM_NO) CP ON CD.CONTRACT_NO = CP.CONTRACT_NO AND CD.CLAIM_NO = CP.CLAIM_NO /*AND CU.SL_NO = CP.RESERVE_ID*/ WHERE   PM.CONTRACT_NO > 0 AND PM.PRODUCT_ID = ? AND PM.BRANCH_CODE = ? AND CD.CREATED_DATE BETWEEN TO_DATE (?, 'dd/mm/yyyy') AND  TO_DATE (?, 'dd/mm/yyyy') AND PM.AMEND_ID = ( SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND RC.RSK_ENDORSEMENT_NO =( SELECT MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_COMMISSION WHERE   RSK_PROPOSAL_NUMBER = RC.RSK_PROPOSAL_NUMBER) AND FRP.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_PROPOSAL WHERE   RSK_PROPOSAL_NUMBER = FRP.RSK_PROPOSAL_NUMBER) AND RD.RSK_ENDORSEMENT_NO =( SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND cm.COUNTRY_ID = ? AND cm.status = 'Y' AND CM.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y') AND cm.BRANCH_CODE = PM.BRANCH_CODE AND PI.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND PI.BRANCH_CODE = PM.BRANCH_CODE AND PIB.BRANCH_CODE = PM.BRANCH_CODE AND PIB.AMEND_ID =( SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE  CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE)
report.select.retroPermiumClaim=SELECT RETRO_CONTRACT_NO,RETRO_LAYER_NO,CONTRACT_NO,LAYER_NO,TRANSACTION_NO,TO_CHAR(TRANSACTION_DATE,'DD/MM/YYYY') TRANSACTION_DATE,CURRENCY_NAME,EXCHANGE_RATE,RETRO_PERCENTAGE,PREMIUM_AMT_DC,RETRO_PREMIUM_DC,OVER_RIDER,NET,TYPE,CLAIM_PAID_DC, RETRO_CLAIM_PAID_DC,PRODUCT_ID,BRANCH_CODE,uw_year FROM RETRO_PREMIUM_CLAIM WHERE PRODUCT_ID in(select distinct old_product_id from TMAS_HOMEPAGE_MASTER where branch_code=? and product_id=? and dept_id=?) AND trunc(TRANSACTION_DATE) BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') and branch_code=?

##report.select.moveMentInit=SELECT A.* FROM (SELECT DISTINCT  MD.MOVMENT_TRANID,CD.DETAIL_NAME ,MD.ACCOUNT_PERIOD_QTR,MD.ACCOUNT_PERIOD_DATE,MD.ACCOUNT_PERIOD_DATE ACCOUNT_PERIOD,MD.REPORT_TYPE, CASE WHEN (SELECT COUNT(*)  FROM TRANSACTION_MOVEMENT_DETAILS WHERE PRM_CHANGED='Y' AND BRANCH_CODE=? AND TYPE='D'  AND ACCOUNT_PERIOD_QTR=MD.ACCOUNT_PERIOD_QTR AND ACCOUNT_PERIOD_DATE=MD.ACCOUNT_PERIOD_DATE)>0 THEN 'Y' ELSE 'N' END CHANGEDYN FROM TRANSACTION_MOVEMENT_DETAILS MD,CONSTANT_DETAIL CD WHERE MD.BRANCH_CODE=? AND CD.CATEGORY_ID='12' AND CD.TYPE=MD.ACCOUNT_PERIOD_QTR AND MD.TYPE='Q'  ORDER BY 1 DESC) A
report.select.moveMentInit=SELECT A.* FROM (SELECT DISTINCT  MD.MOVMENT_TRANID,CD.DETAIL_NAME ,MD.ACCOUNT_PERIOD_QTR,MD.ACCOUNT_PERIOD_DATE,MD.ACCOUNT_PERIOD_DATE ACCOUNT_PERIOD,MD.REPORT_TYPE, CASE WHEN (SELECT COUNT(*)  FROM TRANSACTION_MOVEMENT_DETAILS WHERE PRM_CHANGED='Y' AND BRANCH_CODE=? AND TYPE='D'  AND ACCOUNT_PERIOD_QTR=MD.ACCOUNT_PERIOD_QTR AND ACCOUNT_PERIOD_DATE=MD.ACCOUNT_PERIOD_DATE)>0 THEN 'Y' ELSE 'N' END CHANGEDYN FROM TRANSACTION_MOVEMENT_DETAILS MD,CONSTANT_DETAIL CD WHERE MD.BRANCH_CODE=? AND CD.CATEGORY_ID='12' AND CD.TYPE=MD.ACCOUNT_PERIOD_QTR AND MD.TYPE='Q' AND MD.PR_CL_TYPE='PR' ORDER BY 1 DESC) A
#SELECT ROWNUM,A.* FROM (SELECT DISTINCT  CD.DETAIL_NAME ,MD.ACCOUNT_PERIOD_QTR,MD.ACCOUNT_PERIOD_DATE,MD.ACCOUNT_PERIOD_DATE ACCOUNT_PERIOD,CASE WHEN (SELECT COUNT(*)  FROM TRANSACTION_MOVEMENT_DETAILS WHERE PRM_CHANGED='Y' AND BRANCH_CODE='01' AND TYPE='Q' AND ACCOUNT_PERIOD_QTR=MD.ACCOUNT_PERIOD_QTR AND ACCOUNT_PERIOD_DATE=MD.ACCOUNT_PERIOD_DATE)>0 THEN 'Y' ELSE 'N' END CHANGEDYN FROM TRANSACTION_MOVEMENT_DETAILS MD,CONSTANT_DETAIL CD WHERE MD.BRANCH_CODE=? AND CD.CATEGORY_ID='12' AND CD.TYPE=MD.ACCOUNT_PERIOD_QTR AND MD.TYPE='Q' ORDER BY 2 DESC) A
report.select.moveMent=SELECT sno ,UW_YEAR,SPC_NAME, CURRENCY_NAME, GROSS_PREMIUM_OC SUMOFTOTPR,GROSS_PREMIUM_DC SUMOFTOTPR_DC FROM   TRANSACTION_MOVEMENT_DETAILS WHERE ACCOUNT_PERIOD_QTR=? AND ACCOUNT_PERIOD_DATE=? AND  BRANCH_CODE = ? AND REPORT_TYPE=? AND MOVMENT_TRANID=? AND TYPE='Q' ORDER BY   1, 2
#SELECT sno ,UW_YEAR,SPC_NAME, CURRENCY_NAME, SUMOFTOTPR,SUMOFTOTPR_DC FROM   TRANSACTION_MOVEMENT_DETAILS WHERE ACCOUNT_PERIOD_QTR=? AND ACCOUNT_PERIOD_DATE=? AND  BRANCH_CODE = ? AND TYPE='Q' ORDER BY   1, 2
report.select.viewJurnal=SELECT   SNO,UW_YEAR, SPC_NAME,CURRENCY_NAME, GROSS_PREMIUM_OC ,GROSS_PREMIUM_DC,GROSS_ACQUISTION_COST_OC,GROSS_ACQUISTION_COST_DC,PREMIUM_DEPOSIT_RETAINED_OC ,PREMIUM_DEPOSIT_RETAINED_DC ,PREMIUM_DEPOSIT_RELEASED_OC ,PREMIUM_DEPOSIT_RELEASED_DC ,CLAIM_DEPOSIT_RETAINED_OC,CLAIM_DEPOSIT_RETAINED_DC,CLAIM_DEPOSIT_RELEASED_OC,CLAIM_DEPOSIT_RELEASED_DC,INTEREST_ON_DEPOSIT_OC  ,INTEREST_ON_DEPOSIT_DC  ,GROSS_CLAIMS_PAID_OC  ,GROSS_CLAIMS_PAID_DC  FROM   TRANSACTION_MOVEMENT_DETAILS WHERE  ACCOUNT_PERIOD_QTR = ?  AND ACCOUNT_PERIOD_DATE = ?  AND BRANCH_CODE = ?  AND SNO = ? AND TYPE = 'Q' AND  MOVMENT_TRANID=?
#SELECT SNO,SUMOFTOTPR,SUMOFTOTPR_DC,UW_YEAR,SPC_NAME,CURRENCY_NAME, SUMOFACQ,SUMOFACQ_DC, SUMOFNETCL,SUMOFNETCL_DC,PREMIUM_DEPOSITS,PREMIUM_DEPOSITS_DC, LOSS_DEPOSITS,LOSS_DEPOSITS_DC, SUMOFINT,SUMOFINT_DC,SUM_OF_OUTSTANDING,SUM_OF_OUTSTANDING_DC FROM TRANSACTION_MOVEMENT_DETAILS WHERE ACCOUNT_PERIOD_QTR=? AND ACCOUNT_PERIOD_DATE=? AND  BRANCH_CODE = ? AND SNO =? AND TYPE='Q'
report.select.viewJurnal1=SELECT   SNO,UW_YEAR, SPC_NAME,CURRENCY_NAME, GROSS_PREMIUM_OC ,GROSS_PREMIUM_DC,GROSS_ACQUISTION_COST_OC,GROSS_ACQUISTION_COST_DC,PREMIUM_DEPOSIT_RETAINED_OC ,PREMIUM_DEPOSIT_RETAINED_DC ,PREMIUM_DEPOSIT_RELEASED_OC ,PREMIUM_DEPOSIT_RELEASED_DC ,CLAIM_DEPOSIT_RETAINED_OC,CLAIM_DEPOSIT_RETAINED_DC,CLAIM_DEPOSIT_RELEASED_OC,CLAIM_DEPOSIT_RELEASED_DC,INTEREST_ON_DEPOSIT_OC  ,INTEREST_ON_DEPOSIT_DC  ,GROSS_CLAIMS_PAID_OC  ,GROSS_CLAIMS_PAID_DC  FROM   TRANSACTION_MOVEMENT_DETAILS WHERE  ACCOUNT_PERIOD_QTR = ?  AND ACCOUNT_PERIOD_DATE = ?  AND BRANCH_CODE = ?  AND TYPE = 'Q' AND  MOVMENT_TRANID=?
#SELECT SNO,SUMOFTOTPR,SUMOFTOTPR_DC,UW_YEAR,SPC_NAME,CURRENCY_NAME, SUMOFACQ,SUMOFACQ_DC, SUMOFNETCL,SUMOFNETCL_DC,PREMIUM_DEPOSITS,PREMIUM_DEPOSITS_DC, LOSS_DEPOSITS,LOSS_DEPOSITS_DC, SUMOFINT,SUMOFINT_DC,SUM_OF_OUTSTANDING,SUM_OF_OUTSTANDING_DC FROM TRANSACTION_MOVEMENT_DETAILS WHERE ACCOUNT_PERIOD_QTR=? AND ACCOUNT_PERIOD_DATE=? AND  BRANCH_CODE = ? AND TYPE='Q'
report.sp.movementRep={CALL MOVEMENT_DATA(?,?,?,?)}
report.get.movementCnt=SELECT COUNT(*) FROM TRANSACTION_MOVEMENT_DETAILS WHERE BRANCH_CODE=? AND  ACCOUNT_PERIOD_QTR=? AND ACCOUNT_PERIOD_DATE=? AND TYPE='Q' AND REPORT_TYPE='F'
##report.select.discrepancies=SELECT PCI.UW_YEAR,PCI.SPC_NAME,PCI.CURRENCY,CD.DETAIL_NAME ACCOUNT_QTR,PCI.ACCOUNT_YEAR,SUM(PCI.PREV_AMT_DC) PREV_AMT_DC,SUM(PCI.AMOUNT_DC) AMOUNT_DC,SUM(PCI.PRM_DIFF) PRM_DIFF FROM PREMIUM_CHANGE_INFO PCI,CONSTANT_DETAIL CD WHERE PCI.ACCOUNT_QTR=? AND PCI.ACCOUNT_YEAR=? AND PCI.BRANCH_CODE=? AND CD.CATEGORY_ID='12' AND CD.TYPE=PCI.ACCOUNT_QTR GROUP BY PCI.UW_YEAR,PCI.SPC_NAME,PCI.CURRENCY,CD.DETAIL_NAME,PCI.ACCOUNT_YEAR
report.select.discrepancies=SELECT   MD.UW_YEAR,MD.SPC_NAME,MD.CURRENCY_NAME CURRENCY, CD.DETAIL_NAME ACCOUNT_QTR,MD.ACCOUNT_PERIOD_DATE ACCOUNT_YEAR, SUMOFTOTPR_PREV_DC PREV_AMT_DC,SUMOFTOTPR_DC AMOUNT_DC,SUMOFTOTPR_DC_DIFF PRM_DIFF,nvl(GROSS_PREMIUM_DC_PREV,0) GROSS_PREMIUM_DC_PREV,nvl(GROSS_PREMIUM_DC,0) GROSS_PREMIUM_DC,nvl(GROSS_PREMIUM_DC_DIFF,0) GROSS_PREMIUM_DC_DIFF,nvl(GROSS_ACQUISTION_COST_DC_PREV,0) GROSS_ACQUISTION_COST_DC_PREV,nvl(GROSS_ACQUISTION_COST_DC,0) GROSS_ACQUISTION_COST_DC,nvl(GROSS_ACQUISTION_COST_DC_DIFF,0) GROSS_ACQUISTION_COST_DC_DIFF,nvl(PREM_DEP_RETAINED_DC_PREV,0) PREM_DEP_RETAINED_DC_PREV,nvl(PREMIUM_DEPOSIT_RETAINED_DC,0) PREMIUM_DEPOSIT_RETAINED_DC,nvl(PREM_DEP_RETAINED_DC_DIFF,0) PREM_DEP_RETAINED_DC_DIFF,nvl(PREM_DEP_RELEASED_DC_PREV,0) PREM_DEP_RELEASED_DC_PREV,nvl(PREMIUM_DEPOSIT_RELEASED_DC,0) PREMIUM_DEPOSIT_RELEASED_DC,nvl(PREM_DEP_RELEASED_DC_DIFF,0) PREM_DEP_RELEASED_DC_DIFF,nvl(CLAIM_DEPOSIT_RETAINED_DC_PREV,0) CLAIM_DEPOSIT_RETAINED_DC_PREV,nvl(CLAIM_DEPOSIT_RETAINED_DC,0) CLAIM_DEPOSIT_RETAINED_DC,nvl(CLAIM_DEPOSIT_RETAINED_DC_DIFF,0) CLAIM_DEPOSIT_RETAINED_DC_DIFF,nvl(CLAIM_DEPOSIT_RELEASED_DC_PREV,0) CLAIM_DEPOSIT_RELEASED_DC_PREV,nvl(CLAIM_DEPOSIT_RELEASED_DC,0) CLAIM_DEPOSIT_RELEASED_DC,nvl(CLAIM_DEPOSIT_RELEASED_DC_DIFF,0) CLAIM_DEPOSIT_RELEASED_DC_DIFF,nvl( INTEREST_ON_DEPOSIT_DC_PREV,0) INTEREST_ON_DEPOSIT_DC_PREV,nvl(INTEREST_ON_DEPOSIT_DC,0) INTEREST_ON_DEPOSIT_DC,nvl(INTEREST_ON_DEPOSIT_DC_DIFF,0) INTEREST_ON_DEPOSIT_DC_DIFF, nvl(GROSS_CLAIMS_PAID_DC_PREV,0) GROSS_CLAIMS_PAID_DC_PREV,nvl(GROSS_CLAIMS_PAID_DC,0) GROSS_CLAIMS_PAID_DC,nvl(GROSS_CLAIMS_PAID_DC_DIFF,0) GROSS_CLAIMS_PAID_DC_DIFF FROM   TRANSACTION_MOVEMENT_DETAILS MD, CONSTANT_DETAIL CD WHERE       MD.ACCOUNT_PERIOD_QTR = ? AND MD.ACCOUNT_PERIOD_DATE = ? AND MD.BRANCH_CODE = ? AND CD.CATEGORY_ID = '12' AND CD.TYPE = MD.ACCOUNT_PERIOD_QTR AND MD.TYPE = 'D' AND MD.REPORT_TYPE=? AND MD.MOVMENT_TRANID=?
#SELECT MD.UW_YEAR ,MD.SPC_NAME,MD.CURRENCY_NAME CURRENCY,CD.DETAIL_NAME ACCOUNT_QTR,MD.ACCOUNT_PERIOD_DATE ACCOUNT_YEAR,GROSS_PREMIUM_OC AMOUNT_DC,GROSS_PREMIUM_DC PREV_AMT_DC,SUMOFTOTPR_DC PRM_DIFF FROM  TRANSACTION_MOVEMENT_DETAILS MD,CONSTANT_DETAIL CD WHERE MD.ACCOUNT_PERIOD_QTR=? AND MD.ACCOUNT_PERIOD_DATE=? AND MD.BRANCH_CODE=? AND CD.CATEGORY_ID='12' AND CD.TYPE=MD.ACCOUNT_PERIOD_QTR  AND MD.TYPE='D'
#reportdao.select.getAgeingList=SELECT   'PR' Doc_Type,'PREMIUM' Doc_Det,company_code, company_name, broker_code, broker,short_name, currency_name,EXCHANGE_RATE,NETDUE_OC,usdr,uscr,NULL mkr,to_Char(ENTRY_DATE,'dd/mm/yyyy') TRANS_DT ,0 sort,DAYS,CASE WHEN NETDUE_OC >= 0 THEN CASE WHEN DAYS BETWEEN 0 AND 30 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age1dr(0-30)", CASE WHEN NETDUE_OC < 0 THEN CASE WHEN DAYS BETWEEN 0 AND 30 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age1cr(0-30)", CASE WHEN NETDUE_OC >= 0 THEN CASE WHEN DAYS BETWEEN 31 AND 60 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age2dr(31-60)", CASE WHEN NETDUE_OC < 0 THEN CASE WHEN DAYS BETWEEN 31 AND 60 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age2cr(31-60)", CASE WHEN NETDUE_OC >= 0 THEN CASE WHEN DAYS BETWEEN 61 AND 90 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age3dr(61-90)", CASE WHEN NETDUE_OC < 0  THEN CASE WHEN DAYS BETWEEN 61 AND 90 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age3cr(61-90)", CASE WHEN NETDUE_OC >= 0 THEN CASE WHEN DAYS BETWEEN 91 AND 120 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age4dr(91-120)",CASE WHEN NETDUE_OC < 0 THEN  CASE WHEN DAYS BETWEEN 91 AND 120 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age4cr(91-120)", CASE WHEN NETDUE_OC >= 0 THEN CASE WHEN DAYS > 120 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age5dr(>120)", CASE WHEN NETDUE_OC < 0 THEN CASE WHEN DAYS > 120 THEN BAL_AMOUNT ELSE 0 END ELSE 0 END "age5cr(>120)", CASE WHEN DAYS BETWEEN 0 AND 30 THEN BAL_AMOUNT ELSE 0 END "30d", CASE WHEN DAYS BETWEEN 31 AND 60 THEN BAL_AMOUNT ELSE 0 END "60d", CASE WHEN DAYS BETWEEN 61 AND 90 THEN BAL_AMOUNT ELSE 0 END "90d", CASE WHEN DAYS BETWEEN 91 AND 120 THEN BAL_AMOUNT ELSE 0 END "120d", CASE WHEN DAYS > 120 THEN BAL_AMOUNT ELSE 0 END "over120", BAL_AMOUNT totnet, TRANSACTION_NO tran_no,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER,RSK_TREATYID,REMARKS FROM   (SELECT   A.ACCOUNT_PERIOD_QTR,A.SETTLEMENT_STATUS,PM.CONTRACT_NO,pm.layer_no,pm.login_id,A.TRANSACTION_NO,PM.CEDING_COMPANY_ID,PM.BROKER_ID,PI.COMPANY_CODE,PI.COMPANY_NAME,PIB.CUSTOMER_ID broker_code,PIB.FIRST_NAME || ' ' || PIB.LAST_NAME broker,CM.short_name,CM.CURRENCY_NAME, A.EXCHANGE_RATE, A.NETDUE_OC,CASE WHEN A.NETDUE_OC >= 0 THEN A.NETDUE_DC ELSE 0 END usdr, CASE WHEN A.NETDUE_OC < 0 THEN ABS (A.NETDUE_DC) ELSE 0 END uscr,ABS(A.NETDUE_OC - NVL (SUM(paid_amount) OVER (PARTITION BY a.contract_no,a.transaction_no),0 )) BAL_AMOUNT,NVL (ROW_NUMBER () OVER (PARTITION BY a.contract_no, a.transaction_no ORDER BY paid_amount DESC),1 ) RNM,TO_DATE (?, 'dd/mm/yyyy') - TRUNC (A.ENTRY_DATE_TIME) DAYS,A.TRANSACTION_MONTH_YEAR,A.PREMIUM_QUOTASHARE_DC,B.TYPE,B.PAID_AMOUNT,TRUNC (A.TRANSACTION_MONTH_YEAR) ENTRY_DATE,TRUNC (b.inception_date) inception_date,pm.branch_code,A.TOTAL_DR_OC,A.TOTAL_CR_OC,A.INSTALMENT_NUMBER,rd.RSK_TREATYID,A.REMARKS FROM  POSITION_MASTER PM JOIN RSK_PREMIUM_DETAILS A ON PM.CONTRACT_NO = A.CONTRACT_NO JOIN personal_info pi ON PM.CEDING_COMPANY_ID = PI.CUSTOMER_ID JOIN personal_info pib ON PM.BROKER_ID = PIb.CUSTOMER_ID JOIN ttrn_risk_details rd on pm.contract_no = rd.rsk_contract_no LEFT OUTER JOIN TTRN_ALLOCATED_TRANSACTION B ON A.CONTRACT_NO = B.CONTRACT_NO AND A.TRANSACTION_NO = B.TRANSACTION_NO AND TRUNC (b.inception_date) <= TO_DATE (?, 'dd/mm/yyyy') AND B.STATUS = 'Y' JOIN CURRENCY_MASTER CM ON A.CURRENCY_ID = CM.CURRENCY_ID WHERE   PM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER  WHERE   CONTRACT_NO = PM.CONTRACT_NO) AND pi.amend_id = (SELECT   MAX (amend_id) FROM   personal_info WHERE   customer_id = pi.customer_id AND branch_code = pi.branch_code) AND pi.branch_code = pm.branch_code AND pib.amend_id = (SELECT   MAX (amend_id) FROM personal_info WHERE   customer_id = pib.customer_id AND branch_code = pib.branch_code) AND pib.branch_code = pm.branch_code AND CM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = cm.branch_code AND STATUS = 'Y') AND CM.STATUS = 'Y' AND CM.BRANCH_CODE = pm.branch_code AND pm.branch_code = ? AND rd.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   ttrn_risk_details WHERE  rsk_contract_no = rd.rsk_contract_no ) AND TRUNC (A.ENTRY_DATE_TIME) <= TO_DATE (?, 'dd/mm/yyyy') AND NVL (A.SETTLEMENT_STATUS, 'a') NOT IN ('Allocated')) WHERE   rnm = 1
reportdao.select.getAgeingList=select  * from table(FN_DR_CR_AGEING_REPORT(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?))
reportdao.select.getMovMntSummaryList=SELECT ROWNUM, Rpt.* FROM   (  SELECT TMAS_SPFC_NAME,RD.RSK_UWYEAR, SUM (PREMIUM_QUOTASHARE_DC)+ SUM (PREMIUM_SURPLUS_DC)- SUM (XL_COST_DC)+ SUM (PREMIUM_PORTFOLIOIN_DC) - SUM (PREMIUM_PORTFOLIOOUT_DC) SUMOFTOTPR_DC FROM (SELECT TRANSACTION_MONTH_YEAR, NVL (RPD.CONTRACT_NO,CD.CONTRACT_NO) CONTRACT_NO, NVL (NVL (RPD.LAYER_NO, CD.LAYER_NO),0 ) LAYER_NO, CD.CLAIM_NO, NVL (RPD.PREMIUM_QUOTASHARE_DC,0) PREMIUM_QUOTASHARE_DC, NVL (RPD.PREMIUM_SURPLUS_DC,0) PREMIUM_SURPLUS_DC,NVL (RPD.XL_COST_DC, 0) XL_COST_DC, NVL (RPD.PREMIUM_PORTFOLIOIN_DC,0) PREMIUM_PORTFOLIOIN_DC, NVL(RPD.PREMIUM_PORTFOLIOOUT_DC,0)PREMIUM_PORTFOLIOOUT_DC,NVL (RPD.COMMISSION_QUOTASHARE_DC,0)COMMISSION_QUOTASHARE_DC,NVL (RPD.COMMISSION_SURPLUS_DC,0) COMMISSION_SURPLUS_DC,NVL (RPD.BROKERAGE_AMT_DC, 0) BROKERAGE_AMT_DC, NVL (RPD.TAX_AMT_DC, 0) TAX_AMT_DC, NVL (RPD.OTHER_COST_DC, 0) OTHER_COST_DC, NVL (RPD.PROFIT_COMMISSION_DC,0) PROFIT_COMMISSION_DC, NVL (RPD.INTEREST_DC, 0) INTEREST_DC,(CASE WHEN NVL (RPD.CLAIMS_PAID_DC, 0) > 0 THEN RPD.CLAIMS_PAID_DC ELSE 0 END)+ NVL (CP.PAID_AMOUNT_DC, 0) CLAIMS_PAID_DC,CASE WHEN NVL ( RPD.CLAIMS_PAID_DC,0) < 0 THEN RPD.CLAIMS_PAID_DC ELSE 0 END CLAIM_RECOVERY_DC, NVL (RPD.CLAIM_PORTFOLIOIN_DC, 0) CLAIM_PORTFOLIOIN_DC, NVL ( RPD.CLAIM_PORTFOLIO_OUT_DC,0) CLAIM_PORTFOLIO_OUT_DC, NVL (RPD.CASH_LOSSPAID_DC, 0) CASH_LOSSPAID_DC,  NVL (RPD.CASH_LOSS_CREDIT_DC,0) CASH_LOSS_CREDIT_DC,  NVL ( RPD.PREMIUM_RESERVE_RETAINED_DC,0) PREMIUM_RESERVE_RETAINED_DC,NVL (  RPD.LOSS_RESERVE_RELEASED_DC,0) LOSS_RESERVE_RELEASED_DC, NVL ( RPD.LOSS_RESERVERETAINED_DC, 0) LOSS_RESERVERETAINED_DC, NVL ( RPD.PREMIUM_RESERVE_RELEASE_OC, 0) PREMIUM_RESERVE_RELEASE_OC, NVL (RPD.PREMIUM_RESERVE_RELEASE_DC,0) PREMIUM_RESERVE_RELEASE_DC,NVL (OVERRIDER_AMT_DC, 0) OVERRIDER_AMT_DC,NVL(M_DPREMIUM_DC,0) M_DPREMIUM_DC FROM RSK_PREMIUM_DETAILS RPD FULL OUTER JOIN TTRN_CLAIM_DETAILS CD ON CD.CONTRACT_NO = RPD.CONTRACT_NO AND CD.LAYER_NO = RPD.LAYER_NO AND CD.CURRENCY = RPD.CURRENCY_ID LEFT OUTER JOIN TTRN_CLAIM_PAYMENT CP ON CD.CLAIM_NO = CP.CLAIM_NO) PD JOIN TTRN_RISK_DETAILS RD ON RD.RSK_CONTRACT_NO = PD.CONTRACT_NO AND NVL (RD.RSK_LAYER_NO, 0) = PD.LAYER_NO JOIN POSITION_MASTER PM ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TMAS_SPFC_MASTER SP ON SP.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SP.TMAS_SPFC_ID = RD.RSK_SPFCID LEFT OUTER JOIN CLAIM_UPDATION_SUBSET CU ON PD.CONTRACT_NO = CU.CONTRACT_NO AND PD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN CLAIM_PAYMENT_SUBSET CP ON CP.CLAIM_NO = CU.CLAIM_NO AND CP.RESERVE_ID = CU.SL_NO WHERE SP.TMAS_STATUS = 'Y' AND SP.BRANCH_CODE = PM.BRANCH_CODE AND PM.BRANCH_CODE = ? AND RD.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS  WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO) AND  pd.TRANSACTION_MONTH_YEAR BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') GROUP BY   RD.RSK_SPFCID, RD.RSK_UWYEAR,TMAS_SPFC_NAME, PM.BRANCH_CODE) Rpt
#SELECT ROWNUM, Rpt.* FROM   (  SELECT TMAS_SPFC_NAME,RD.RSK_UWYEAR, SUM (PREMIUM_QUOTASHARE_DC)+ SUM (PREMIUM_SURPLUS_DC)- SUM (XL_COST_DC)+ SUM (PREMIUM_PORTFOLIOIN_DC) - SUM (PREMIUM_PORTFOLIOOUT_DC) SUMOFTOTPR_DC FROM (SELECT TRUNC (TRANSACTION_MONTH_YEAR) TRANSACTION_MONTH_YEAR, NVL (RPD.CONTRACT_NO,CD.CONTRACT_NO) CONTRACT_NO, NVL (NVL (RPD.LAYER_NO, CD.LAYER_NO),0 ) LAYER_NO, CD.CLAIM_NO, NVL (RPD.PREMIUM_QUOTASHARE_DC,0) PREMIUM_QUOTASHARE_DC, NVL (RPD.PREMIUM_SURPLUS_DC,0) PREMIUM_SURPLUS_DC,NVL (RPD.XL_COST_DC, 0) XL_COST_DC, NVL (RPD.PREMIUM_PORTFOLIOIN_DC,0) PREMIUM_PORTFOLIOIN_DC, NVL(RPD.PREMIUM_PORTFOLIOOUT_DC,0)PREMIUM_PORTFOLIOOUT_DC,NVL (RPD.COMMISSION_QUOTASHARE_DC,0)COMMISSION_QUOTASHARE_DC,NVL (RPD.COMMISSION_SURPLUS_DC,0) COMMISSION_SURPLUS_DC,NVL (RPD.BROKERAGE_AMT_DC, 0) BROKERAGE_AMT_DC, NVL (RPD.TAX_AMT_DC, 0) TAX_AMT_DC, NVL (RPD.OTHER_COST_DC, 0) OTHER_COST_DC, NVL (RPD.PROFIT_COMMISSION_DC,0) PROFIT_COMMISSION_DC, NVL (RPD.INTEREST_DC, 0) INTEREST_DC,(CASE WHEN NVL (RPD.CLAIMS_PAID_DC, 0) > 0 THEN RPD.CLAIMS_PAID_DC ELSE 0 END)+ NVL (CP.PAID_AMOUNT_DC, 0) CLAIMS_PAID_DC,CASE WHEN NVL ( RPD.CLAIMS_PAID_DC,0) < 0 THEN RPD.CLAIMS_PAID_DC ELSE 0 END CLAIM_RECOVERY_DC, NVL (RPD.CLAIM_PORTFOLIOIN_DC, 0) CLAIM_PORTFOLIOIN_DC, NVL ( RPD.CLAIM_PORTFOLIO_OUT_DC,0) CLAIM_PORTFOLIO_OUT_DC, NVL (RPD.CASH_LOSSPAID_DC, 0) CASH_LOSSPAID_DC,  NVL (RPD.CASH_LOSS_CREDIT_DC,0) CASH_LOSS_CREDIT_DC,  NVL ( RPD.PREMIUM_RESERVE_RETAINED_DC,0) PREMIUM_RESERVE_RETAINED_DC,NVL (  RPD.LOSS_RESERVE_RELEASED_DC,0) LOSS_RESERVE_RELEASED_DC, NVL ( RPD.LOSS_RESERVERETAINED_DC, 0) LOSS_RESERVERETAINED_DC, NVL ( RPD.PREMIUM_RESERVE_RELEASE_OC, 0) PREMIUM_RESERVE_RELEASE_OC, NVL (RPD.PREMIUM_RESERVE_RELEASE_DC,0) PREMIUM_RESERVE_RELEASE_DC,NVL (OVERRIDER_AMT_DC, 0) OVERRIDER_AMT_DC,NVL(M_DPREMIUM_DC,0) M_DPREMIUM_DC FROM RSK_PREMIUM_DETAILS RPD FULL OUTER JOIN TTRN_CLAIM_DETAILS CD ON CD.CONTRACT_NO = RPD.CONTRACT_NO AND CD.LAYER_NO = RPD.LAYER_NO AND CD.CURRENCY = RPD.CURRENCY_ID LEFT OUTER JOIN TTRN_CLAIM_PAYMENT CP ON CD.CLAIM_NO = CP.CLAIM_NO) PD JOIN TTRN_RISK_DETAILS RD ON RD.RSK_CONTRACT_NO = PD.CONTRACT_NO AND NVL (RD.RSK_LAYER_NO, 0) = PD.LAYER_NO JOIN POSITION_MASTER PM ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER JOIN TMAS_SPFC_MASTER SP ON SP.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SP.TMAS_SPFC_ID = RD.RSK_SPFCID LEFT OUTER JOIN CLAIM_UPDATION_SUBSET CU ON PD.CONTRACT_NO = CU.CONTRACT_NO AND PD.CLAIM_NO = CU.CLAIM_NO LEFT OUTER JOIN CLAIM_PAYMENT_SUBSET CP ON CP.CLAIM_NO = CU.CLAIM_NO AND CP.RESERVE_ID = CU.SL_NO WHERE SP.TMAS_STATUS = 'Y' AND SP.BRANCH_CODE = PM.BRANCH_CODE AND PM.BRANCH_CODE = ? AND RD.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS  WHERE   RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER) AND PM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO = PM.PROPOSAL_NO)  GROUP BY   RD.RSK_SPFCID, RD.RSK_UWYEAR,TMAS_SPFC_NAME, PM.BRANCH_CODE) Rpt
#Claim Movement Report
report.select.clMoveMentInit=SELECT DISTINCT MOVEMENT_ID, TO_CHAR(MOVEMENT_DATE,'DD/MM/YYYY') MOVEMENT_DT,REPORT_TYPE  FROM TRANSITION_CLAIM_MOVEMENT WHERE BRANCH_CODE=? ORDER BY MOVEMENT_ID DESC
report.select.clMoveMentDtls=SELECT * FROM (SELECT UWYEAR,SPC_NAME, CURRENCY_NAME,TYPE,'FAC/XOL' PRODUCT,CONTRACT_NO,DECODE(TYPE,'PR',TRANSACTION_NO,'CL',CLAIM_NO)||''  TRAN_NO,OUTSTANDING_AMOUNT_OC, OUTSTANDING_AMOUNT_DC  FROM TRANSITION_CLAIM_MOVEMENT WHERE MOVEMENT_ID=? AND BRANCH_CODE=? AND PRODUCT_ID<>2 UNION ALL SELECT UWYEAR,SPC_NAME, CURRENCY_NAME,TYPE,'Treaty' PRODUCT,CONTRACT_NO,'' TRAN_NO,SUM(OUTSTANDING_AMOUNT_OC) OUTSTANDING_AMOUNT_OC, SUM(OUTSTANDING_AMOUNT_DC) OUTSTANDING_AMOUNT_DC  FROM TRANSITION_CLAIM_MOVEMENT WHERE MOVEMENT_ID=? AND BRANCH_CODE=? AND PRODUCT_ID='2'  GROUP BY UWYEAR,SPC_NAME, CURRENCY_NAME,TYPE,CONTRACT_NO)
report.sp.clMovementRep={CALL CLAIM_MOVEMENT_DATA(?,?,?)}

##CountryBussinessImpl Query
countrybussiness.select.countryName=SELECT COUNTRY_NAME FROM COUNTRY_MASTER WHERE LOWER(COUNTRY_NAME) = LOWER(?)
countrybussiness.insert.getInsertCountryMaster=INSERT INTO COUNTRY_MASTER( SNO__,COUNTRY_ID,COUNTRY_NAME,STATUS,AMEND_ID,BRANCH_CODE) VALUES ( COUNTRY_MASTER_SNO_SEQ.NEXTVAL,COUNTRY_MASTER_COUNTRYID_SEQ.NEXTVAL,?,?,?,?)
countrybussiness.update.getUpdateQuery=UPDATE COUNTRY_MASTER SET COUNTRY_NAME = ?, STATUS = ? WHERE SNO__ =? AND COUNTRY_ID = ?
countrybussiness.select.countryNameSno=SELECT COUNTRY_NAME FROM COUNTRY_MASTER WHERE SNO__ =? AND COUNTRY_ID =?
countrybussiness.select.getListCountryMaster=SELECT DECODE(STATUS,'Y','ACTIVE','DEACTIVE')ACTIVE_STATUS,SNO__,COUNTRY_ID,COUNTRY_NAME,STATUS,AMEND_ID,EFFECTIVE_DATE FROM COUNTRY_MASTER WHERE BRANCH_CODE=?
countrybussiness.select.getEditQuery=SELECT SNO__,COUNTRY_ID,COUNTRY_NAME,STATUS FROM COUNTRY_MASTER WHERE SNO__ = ? AND COUNTRY_ID = ?
countrybussiness.select.checkAvailability=SELECT COUNT(*) FROM COUNTRY_MASTER WHERE COUNTRY_ID=? AND BRANCH_CODE=?

##DepartmentBusinessImpl Query
##departmentbusiness.select.tmasDeptName=SELECT TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_DEPARTMENT_ID= ? AND  BRANCH_CODE= ?
departmentbusiness.select.tmasDeptName=SELECT TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_PRODUCT_ID=? AND  BRANCH_CODE= ? and TMAS_DEPARTMENT_NAME=?
#departmentbusiness.insert.getInsertQuery=INSERT INTO TMAS_DEPARTMENT_MASTER ( TMAS_DEPARTMENT_ID,TMAS_PRODUCT_ID,TMAS_DEPARTMENT_NAME,TMAS_STATUS,CORE_COMPANY_CODE,BRANCH_CODE ) VALUES ( ?,?,?,?,?,?)
departmentbusiness.insert.getInsertQuery=INSERT INTO TMAS_DEPARTMENT_MASTER ( TMAS_DEPARTMENT_ID,TMAS_PRODUCT_ID,TMAS_DEPARTMENT_NAME,TMAS_STATUS,CORE_COMPANY_CODE,BRANCH_CODE ) VALUES ( (SELECT MAX(TMAS_DEPARTMENT_ID)+1 FROM TMAS_DEPARTMENT_MASTER where TMAS_PRODUCT_ID=? and BRANCH_CODE=?),?,?,?,?,?)
#departmentbusiness.update.tmasDeptName=UPDATE TMAS_DEPARTMENT_MASTER SET TMAS_DEPARTMENT_NAME = ? ,TMAS_STATUS = ? ,CORE_COMPANY_CODE = ? WHERE TMAS_DEPARTMENT_ID = ? AND TMAS_PRODUCT_ID=?
departmentbusiness.update.tmasDeptName=UPDATE TMAS_DEPARTMENT_MASTER SET TMAS_DEPARTMENT_NAME = ? ,TMAS_STATUS = ? ,CORE_COMPANY_CODE = ? WHERE TMAS_DEPARTMENT_ID = ? and branch_code=? AND TMAS_PRODUCT_ID=?
departmentbusiness.select.tmasDeptName2=SELECT TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_DEPARTMENT_ID = ? AND TMAS_PRODUCT_ID= ?
##departmentbusiness.select.tmasDeptId=SELECT TMAS_DEPARTMENT_ID FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_DEPARTMENT_ID = ? AND BRANCH_CODE= ?
departmentbusiness.select.tmasDeptId=SELECT TMAS_DEPARTMENT_ID FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_PRODUCT_ID = ? and TMAS_STATUS='Y' AND BRANCH_CODE=? and TMAS_DEPARTMENT_NAME=?
departmentbusiness.select.deptIdCount=SELECT COUNT(*) FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_DEPARTMENT_ID = ? AND BRANCH_CODE= ?
#departmentbusiness.select.deptIdPid=SELECT DECODE(TMAS_STATUS,'Y','ACTIVE','DEACTIVE') STATUS,TMAS_DEPARTMENT_ID,TMAS_PRODUCT_ID,TMAS_DEPARTMENT_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE= ?
departmentbusiness.select.deptIdPid=SELECT DECODE(TMAS_STATUS,'Y','ACTIVE','DEACTIVE') STATUS,TMAS_DEPARTMENT_ID,TMAS_PRODUCT_ID,TMAS_DEPARTMENT_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE\= ? AND TMAS_STATUS<>'H' 
departmentbusiness.select.getEditDepartmentQuery=SELECT TMAS_DEPARTMENT_ID,TMAS_PRODUCT_ID,TMAS_DEPARTMENT_NAME,TMAS_STATUS,nvl(CORE_COMPANY_CODE,0) CORE_COMPANY_CODE  FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_DEPARTMENT_ID = ? AND TMAS_PRODUCT_ID=? AND BRANCH_CODE=? AND TMAS_STATUS<>'H'
departmentbusiness.select.maxDid=SELECT MAX(TMAS_DEPARTMENT_ID) FROM TMAS_DEPARTMENT_MASTER where TMAS_PRODUCT_ID=? and BRANCH_CODE=?
departmentbusiness.select.coreCheckInsert=SELECT COUNT(*) FROM TMAS_DEPARTMENT_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=?
departmentbusiness.select.coreCheckUpdate=SELECT COUNT(*) FROM TMAS_DEPARTMENT_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=? AND TMAS_DEPARTMENT_ID!=?
departmentbusiness.insert.validation=select count(*) from TMAS_DEPARTMENT_MASTER where lower(TMAS_DEPARTMENT_NAME)=lower(?) and TMAS_PRODUCT_ID=? and branch_code=?
departmentbusiness.edit.validation=select count(*) from TMAS_DEPARTMENT_MASTER where lower(TMAS_DEPARTMENT_NAME)=lower(?) and TMAS_PRODUCT_ID=? and TMAS_DEPARTMENT_ID!=? and branch_code=?
##MenuDaoImpl Query
menudao.select.userRights=SELECT SMR.SUB_MENU_RIGHTS FROM TMAS_SUB_MENU_RIGHTS SMR,TMAS_LOGIN_DETAILS LD WHERE SMR.MENU_ID=? AND SMR.LOGIN_NAME=? AND SMR.ACTIVE='1' AND SMR.LOGIN_DETAILS_ID=LD.LOGIN_DETAIL_ID AND LD.PRODUCT_ID=? AND LD.LOGIN_ID=SMR.LOGIN_NAME AND LD.ACTIVE='1'
menudao.select.tmasMenuTmasLogin=SELECT A.MENU_ID,A.MENU_NAME,A.MENU_URL FROM TMAS_MENU_MASTER A, TMAS_LOGIN_DETAILS B WHERE B.MENU_IDS LIKE ('%,'||A.MENU_ID||',%') AND B.LOGIN_ID=? AND B.PRODUCT_ID=? AND B.ACTIVE='1' ORDER BY A.ORDER_NO
menudao.select.tmasMenuTmasLogin2=SELECT A.MENU_ID,A.MENU_NAME,A.MENU_URL FROM TMAS_MENU_MASTER A, TMAS_LOGIN_DETAILS B WHERE A.MASTER_MENU_ID = ? AND B.MENU_IDS LIKE ('%,'||A.MENU_ID||',%') AND B.LOGIN_ID=? AND B.ACTIVE='1' ORDER BY A.ORDER_NO
menudao.select.menuQuery=SELECT TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER WHERE TMAS_PRODUCT_ID=? AND BRANCH_CODE=? AND TMAS_STATUS='1'
menudao.select.deptIdDeptName=SELECT TMAS_DEPARTMENT_ID,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_PRODUCT_ID=? AND BRANCH_CODE=? AND TMAS_STATUS='Y' ORDER BY TMAS_DEPARTMENT_ID
menudao.select.getPendingOffMenuId=SELECT MENU_ID FROM TMAS_MENU_MASTER WHERE PRODUCT_ID=? AND UPPER(MENU_NAME)=UPPER(?)  AND UPPER(TYPE)=UPPER(?) AND ACTIVE=?
#menudao.select.getRigthsOfProcessId=SELECT SMM.SUB_MENU_CODE ,SMM.SUB_MENU_NAME FROM TMAS_SUB_MENU_MASTER SMM ,(SELECT REGEXP_SUBSTR(SUB_MENU_CODES,'[^,]+',1,LEVEL) AS SUB_MENU_CODES FROM (SELECT SUB_MENU_CODES FROM TMAS_MENU_MASTER WHERE  MENU_ID = ? AND PROCESS_ID = ? AND ACTIVE = '1') CONNECT BY LEVEL <= LENGTH(SUB_MENU_CODES)-LENGTH(REPLACE(SUB_MENU_CODES,',',''))+1) MM , (SELECT REGEXP_SUBSTR(SUB_MENU_CODES,'[^,]+',1,LEVEL) AS SUB_MENU_CODES FROM (SELECT SUB_MENU_CODES FROM TMAS_SUB_MENU_RIGHTS WHERE  MENU_ID = ? AND PROCESS_ID = ? AND LOGIN_ID = ? AND ACTIVE = '1' ) CONNECT BY LEVEL <= LENGTH(SUB_MENU_CODES)-LENGTH(REPLACE(SUB_MENU_CODES,',',''))+1) SMR WHERE SMM.STATUS = 'Y' AND SMM.SUB_MENU_CODE = MM.SUB_MENU_CODES AND SMM.SUB_MENU_CODE = SMR.SUB_MENU_CODES
menudao.select.getRigthsOfProcessId=SELECT SMM.SUB_MENU_CODE ,SMM.SUB_MENU_NAME FROM TMAS_SUB_MENU_MASTER SMM ,(SELECT REGEXP_SUBSTR(SUB_MENU_CODES,'[^,]+',1,LEVEL) AS SUB_MENU_CODES FROM (SELECT SUB_MENU_CODES FROM MENU_MASTER WHERE  MENU_ID = ? AND PROCESS_ID = ? AND ACTIVE = '1') CONNECT BY LEVEL <= LENGTH(SUB_MENU_CODES)-LENGTH(REPLACE(SUB_MENU_CODES,',',''))+1) MM , (SELECT REGEXP_SUBSTR(SUB_MENU_CODES,'[^,]+',1,LEVEL) AS SUB_MENU_CODES FROM (SELECT SUB_MENU_CODES FROM TMAS_SUB_MENU_RIGHTS WHERE  MENU_ID = ? AND PROCESS_ID = ? AND LOGIN_ID = ? AND ACTIVE = '1' ) CONNECT BY LEVEL <= LENGTH(SUB_MENU_CODES)-LENGTH(REPLACE(SUB_MENU_CODES,',',''))+1) SMR WHERE SMM.STATUS = 'Y' AND SMM.SUB_MENU_CODE = MM.SUB_MENU_CODES AND SMM.SUB_MENU_CODE = SMR.SUB_MENU_CODES
menudao.select.adminuserMenus=SELECT MM.MENU_ID, MM.MENU_NAME, MM.MENU_URL FROM ( SELECT REGEXP_SUBSTR (MENU_IDS, '[^,]+', 1, LEVEL) AS MENU_ID FROM (SELECT MENU_IDS FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID = ? AND ACTIVE = '1') CONNECT BY LEVEL <= LENGTH (MENU_IDS) - LENGTH (REPLACE (MENU_IDS, ',', '')) + 1) LD, TMAS_MENU_MASTER MM WHERE MM.MENU_ID = LD.MENU_ID AND MM.ACTIVE = '1' ORDER BY MM.ORDER_NO

##Payment Query
payment.update.rskPremDtls1=UPDATE RSK_PREMIUM_DETAILS SET SETTLEMENT_STATUS=?,ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)-( ? )),LOGIN_ID=?,BRANCH_CODE=?,ENTRY_DATE=sysdate WHERE CONTRACT_NO = ? AND TRANSACTION_NO = ?
payment.update.claimPymtDtls1=UPDATE TTRN_CLAIM_PAYMENT SET SETTLEMENT_STATUS=?,ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)-( ? )),LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=sysdate WHERE CONTRACT_NO = ? AND CLAIM_PAYMENT_NO = ?
payment.update.pymtRetDtls1=UPDATE TTRN_PAYMENT_RECEIPT_DETAILS R SET SETTLEMENT_STATUS=?, ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)-( ? )) WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ?  AND R.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=R.RECEIPT_NO AND RECEIPT_SL_NO = R.RECEIPT_SL_NO)
##payment.update.paymentNo=UPDATE POLICY_NO_GENERATION SET PAYMENT_NO=(SELECT MAX(PAYMENT_NO)+1 FROM POLICY_NO_GENERATION WHERE PRODUCT_ID = ? ) WHERE PRODUCT_ID = ?
##payment.update.receiptNo=UPDATE POLICY_NO_GENERATION SET RECEIPT_NO=(SELECT MAX(RECEIPT_NO)+1 FROM POLICY_NO_GENERATION WHERE PRODUCT_ID = ? ) WHERE PRODUCT_ID = ?
payment.update.diffAmt=UPDATE TTRN_PAYMENT_RECEIPT R SET DIFF_AMT = ?,CONVERTED_DIFF_AMT=?,LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=SYSDATE WHERE PAYMENT_RECEIPT_NO = ? AND BRANCH_CODE=? and R.AMEND_ID=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO = R.PAYMENT_RECEIPT_NO AND BRANCH_CODE = R.BRANCH_CODE)
#payment.update.payRetDtls=UPDATE TTRN_PAYMENT_RECEIPT_DETAILS SET CURRENCY_ID \= ?,AMOUNT \= ?,EXCHANGE_RATE \= ?,TRANS_DATE\=TO_DATE(?,'DD/MM/YYYY'),STATUS \= ?,TOT_AMT \= ?,SETTLED_EXCRATE \= ?,CONVERTED_RECCUR \= ? WHERE RECEIPT_NO \= ? AND RECEIPT_SL_NO \= ?
payment.update.payRetDtls=INSERT INTO TTRN_PAYMENT_RECEIPT_DETAILS (CURRENCY_ID,AMOUNT,EXCHANGE_RATE,TRANS_DATE,STATUS,TOT_AMT,SETTLED_EXCRATE,CONVERTED_RECCUR,RECEIPT_NO,RECEIPT_SL_NO,AMEND_ID,LOGIN_ID,BRANCH_CODE,SYS_DATE)VALUES(?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,(SELECT MAX(AMEND_ID)+1 FROM TTRN_PAYMENT_RECEIPT_DETAILS WHERE RECEIPT_NO\=? AND RECEIPT_SL_NO\=?),?,?,SYSDATE) 
payment.update.allocatedDtls=UPDATE TTRN_ALLOCATED_TRANSACTION SET STATUS=?,REVERSAL_DATE=TO_DATE(?,'DD/MM/YYYY'),REVERSAL_AMOUNT=?,PAID_AMOUNT=?,LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=SYSDATE WHERE TRANSACTION_NO=? AND SNO= ?
payment.update.allocatedtls1=UPDATE TTRN_ALLOCATED_TRANSACTION SET STATUS=?,REVERSAL_DATE=TO_DATE(?,'DD/MM/YYYY'),REVERSAL_AMOUNT=?,PAID_AMOUNT=? ,LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=SYSDATE WHERE RECEIPT_NO=? AND SNO= ?
#payment.update.rskPremDtls=UPDATE RSK_PREMIUM_DETAILS SET ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)-( ? )) WHERE CONTRACT_NO = ? AND TRANSACTION_NO = ?
payment.update.rskPremDtls=UPDATE RSK_PREMIUM_DETAILS SET ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)-( ? )),SETTLEMENT_STATUS='Pending',LOGIN_ID=?,BRANCH_CODE=?,ENTRY_DATE=sysdate WHERE CONTRACT_NO = ? AND TRANSACTION_NO = ?
payment.update.rskPremAlloDtls=UPDATE RSK_PREMIUM_DETAILS SET ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)+( ? )),LOGIN_ID=?,BRANCH_CODE=?,ENTRY_DATE=sysdate WHERE CONTRACT_NO = ? AND TRANSACTION_NO = ?
payment.update.preSetStatus=UPDATE RSK_PREMIUM_DETAILS SET SETTLEMENT_STATUS=? WHERE  (NVL(NETDUE_OC,'0')-NVL(ALLOCATED_TILL_DATE,'0'))='0' and LOGIN_ID=? and BRANCH_CODE=? AND CONTRACT_NO=? AND TRANSACTION_NO=?
payment.update.claimPymtDtls=UPDATE TTRN_CLAIM_PAYMENT SET  SETTLEMENT_STATUS=?,ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)-( ? )),SYS_DATE=SYSDATE,BRANCH_CODE=?,LOGIN_ID=? WHERE CONTRACT_NO = ? AND CLAIM_PAYMENT_NO = ?
payment.update.claimPymtAlloDtls=UPDATE TTRN_CLAIM_PAYMENT SET ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)+( ? )),SYS_DATE=SYSDATE,BRANCH_CODE=?,LOGIN_ID=? WHERE CONTRACT_NO = ? AND CLAIM_PAYMENT_NO = ?
payment.update.claimSetStatus=UPDATE TTRN_CLAIM_PAYMENT SET SETTLEMENT_STATUS=?,SYS_DATE=SYSDATE,BRANCH_CODE=?,LOGIN_ID=?  WHERE (NVL(PAID_AMOUNT_OC,'0')-NVL(ALLOCATED_TILL_DATE,'0'))='0' AND CONTRACT_NO = ? AND CLAIM_PAYMENT_NO = ?
#payment.update.pymtRetDtls=UPDATE TTRN_PAYMENT_RECEIPT_DETAILS SET ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)-( ? )) WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ?
payment.update.pymtRetDtls=UPDATE TTRN_PAYMENT_RECEIPT_DETAILS R SET ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)-( ? )),LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=SYSDATE WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ?  AND R.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=R.RECEIPT_NO AND RECEIPT_SL_NO = R.RECEIPT_SL_NO)
#payment.update.pymtRetData=UPDATE TTRN_PAYMENT_RECEIPT SET PAYMENT_RECEIPT_NO \=?,BROKER_ID\=?,CEDING_ID\=?,CURRENCY_ID\=?,PAID_AMT\=?, EXCHANGE_RATE\=?,RECEIPT_BANK\=?,PRODUCT_ID\=?,DEPT_ID\=?,STATUS\=?,TRANS_DATE \= TO_DATE(?,'DD/MM/YYYY'),TRANS_TYPE\=?,TRANSCATIONTYPE\=?,BANK_CHARGES\=?,NET_AMT\=? WHERE PAYMENT_RECEIPT_NO \= ? AND BRANCH_CODE\=?
#payment.update.pymtRetData=UPDATE TTRN_PAYMENT_RECEIPT SET PAYMENT_RECEIPT_NO \=?,BROKER_ID\=?,CEDING_ID\=?,CURRENCY_ID\=?,PAID_AMT\=?, EXCHANGE_RATE\=?,RECEIPT_BANK\=?,PRODUCT_ID\=?,DEPT_ID\=?,STATUS\=?,TRANS_DATE \= TO_DATE(?,'DD/MM/YYYY'),TRANS_TYPE\=?,TRANSCATIONTYPE\=?,BANK_CHARGES\=?,NET_AMT\=?,AMENDMENT_DATE\=TO_DATE(?,'DD/MM/YYYY'),REMARKS\=?,WH_TAX\=? WHERE PAYMENT_RECEIPT_NO \= ? AND BRANCH_CODE\=?
payment.update.pymtRetData=INSERT INTO TTRN_PAYMENT_RECEIPT (PAYMENT_RECEIPT_NO,BROKER_ID,CEDING_ID,CURRENCY_ID,PAID_AMT,EXCHANGE_RATE,RECEIPT_BANK,PRODUCT_ID,DEPT_ID,STATUS,TRANS_DATE,TRANS_TYPE,TRANSCATIONTYPE,BRANCH_CODE,BANK_CHARGES,NET_AMT,REMARKS,WH_TAX,AMEND_ID,AMENDMENT_DATE,LOGIN_ID,SYS_DATE,PREMIUM_LAVY) VALUES(?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,(SELECT NVL(MAX(AMEND_ID)+1,0) FROM TTRN_PAYMENT_RECEIPT WHERE PAYMENT_RECEIPT_NO = ? AND BRANCH_CODE=?),TO_DATE(?,'DD/MM/YYYY'),?,SYSDATE,?)
payment.update.procedure= CALL Payment_Arch(?,?,?,?)
payment.update.rskPremChkyn=UPDATE RSK_PREMIUM_DETAILS SET CHECKYN\='',ACC_PREMIUM\='' 
payment.update.claimPymtChkyn=UPDATE TTRN_CLAIM_PAYMENT SET CHECKYN\='',ACC_CLAIM\='' 
payment.update.AlloTranDtls=UPDATE TTRN_PAYMENT_RECEIPT_DETAILS R SET ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)+( ? )),LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=SYSDATE WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ?  AND R.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=R.RECEIPT_NO AND RECEIPT_SL_NO = R.RECEIPT_SL_NO)
payment.update.rskPrem=UPDATE RSK_PREMIUM_DETAILS SET ACC_PREMIUM\=? WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=? 
payment.update.checkynRskPrem=UPDATE RSK_PREMIUM_DETAILS SET CHECKYN\=?, ACC_PREMIUM\=? WHERE CONTRACT_NO\=? AND TRANSACTION_NO\=? 
payment.update.ClaimPymt=UPDATE TTRN_CLAIM_PAYMENT SET ACC_CLAIM\=? WHERE CONTRACT_NO\=? AND CLAIM_PAYMENT_NO\=? 
payment.update.checkynClaimPymt=UPDATE TTRN_CLAIM_PAYMENT SET CHECKYN\=?, ACC_CLAIM\=? WHERE CONTRACT_NO\=? AND CLAIM_PAYMENT_NO\=? 
#payment.insert.receipt=INSERT INTO TTRN_PAYMENT_RECEIPT (PAYMENT_RECEIPT_NO,BROKER_ID,CEDING_ID,CURRENCY_ID,PAID_AMT,EXCHANGE_RATE,RECEIPT_BANK,PRODUCT_ID,DEPT_ID,STATUS,TRANS_DATE,TRANS_TYPE,TRANSCATIONTYPE,BRANCH_CODE,BANK_CHARGES,NET_AMT,REMARKS,WH_TAX) VALUES(?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?)
payment.insert.receipt=INSERT INTO TTRN_PAYMENT_RECEIPT (PAYMENT_RECEIPT_NO,BROKER_ID,CEDING_ID,CURRENCY_ID,PAID_AMT,EXCHANGE_RATE,RECEIPT_BANK,PRODUCT_ID,DEPT_ID,STATUS,TRANS_DATE,TRANS_TYPE,TRANSCATIONTYPE,BRANCH_CODE,BANK_CHARGES,NET_AMT,REMARKS,WH_TAX,AMEND_ID,LOGIN_ID,SYS_DATE,PREMIUM_LAVY) VALUES(?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,'0',?,SYSDATE,?)
#payment.insert.payRetDtls=INSERT INTO TTRN_PAYMENT_RECEIPT_DETAILS (RECEIPT_NO,RECEIPT_SL_NO,CURRENCY_ID,AMOUNT,EXCHANGE_RATE,TRANS_DATE,STATUS,TOT_AMT,SETTLED_EXCRATE,CONVERTED_RECCUR) VALUES(?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?)
payment.insert.payRetDtls=INSERT INTO TTRN_PAYMENT_RECEIPT_DETAILS (RECEIPT_NO,RECEIPT_SL_NO,CURRENCY_ID,AMOUNT,EXCHANGE_RATE,TRANS_DATE,STATUS,TOT_AMT,SETTLED_EXCRATE,CONVERTED_RECCUR,AMEND_ID,LOGIN_ID,BRANCH_CODE,SYS_DATE) VALUES(?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,(SELECT nvl(MAX(AMEND_ID),0) FROM TTRN_PAYMENT_RECEIPT_DETAILS WHERE  RECEIPT_SL_NO=?),?,?,SYSDATE)
payment.insert.alloTran=INSERT INTO TTRN_ALLOCATED_TRANSACTION(SNO,CONTRACT_NO,LAYER_NO,PRODUCT_NAME,TRANSACTION_NO,INCEPTION_DATE,PAID_AMOUNT,TYPE,STATUS,AMEND_ID,RECEIPT_NO,CURRENCY_ID,process_type,SUB_CLASS,LOGIN_ID,BRANCH_CODE,SYS_DATE,PROPOSAL_NO) VALUES (?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,? ,?,?,?,?,SYSDATE,?)
##payment.select.getMaxPaymentNo=SELECT MAX(PAYMENT_NO) FROM POLICY_NO_GENERATION WHERE PRODUCT_ID = ? AND BRANCH_CODE = ?
##payment.select.getMaxReceiptNo=SELECT MAX(RECEIPT_NO) FROM POLICY_NO_GENERATION WHERE PRODUCT_ID = ? AND BRANCH_CODE = ?
##payment.select.getNextPaymentNo=SELECT MAX(PAYMENT_NO)+1 FROM POLICY_NO_GENERATION WHERE PRODUCT_ID = ? AND BRANCH_CODE = ?
##payment.select.getNextReceiptNo=SELECT MAX(RECEIPT_NO)+1 FROM POLICY_NO_GENERATION WHERE PRODUCT_ID = ? AND BRANCH_CODE = ?
payment.select.getNextRetDtlsNo=SELECT NVL(MAX(RECEIPT_NO),0)+1 AS RECEIPT FROM TTRN_PAYMENT_RECEIPT_DETAILS
##payment.select.getDirBroDtls=SELECT   A.COMPANY_NAME,B.FIRST_NAME || B.LAST_NAME AS BROKER,C.CURRENCY_NAME,R.PAID_AMT, TO_CHAR (TRANS_DATE, 'DD/MM/YYYY') AS TRANSDATE,PAYMENT_RECEIPT_NO,R.EXCHANGE_RATE,ROUND((R.PAID_AMT / R.EXCHANGE_RATE),3) TOT_EXC_AMT, R.BROKER_ID,R.DIFF_AMT,R.TRANSCATIONTYPE,R.CURRENCY_ID,R.REVERSALTRANSNO,R.BANK_CHARGES,R.NET_AMT,BM.BANK_NAME FROM TTRN_PAYMENT_RECEIPT R INNER JOIN PERSONAL_INFO A ON R.CEDING_ID \= A.CUSTOMER_ID AND A.BRANCH_CODE\=? AND A.CUSTOMER_TYPE\='C' AND A.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=A.CUSTOMER_ID AND BRANCH_CODE\=A.BRANCH_CODE) INNER JOIN PERSONAL_INFO B ON B.CUSTOMER_ID \= R.BROKER_ID AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='B' AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\=B.BRANCH_CODE) INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID \= R.CURRENCY_ID AND C.BRANCH_CODE\=? AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID\=C.CURRENCY_ID AND BRANCH_CODE\=C.BRANCH_CODE) INNER JOIN BANK_MASTER BM ON BM.BANK_ID\=R.RECEIPT_BANK AND BM.BRANCH_CODE\=R.BRANCH_CODE AND BM.STATUS\='Y' WHERE   R.PAYMENT_RECEIPT_NO \=? AND R.BRANCH_CODE\=?
##payment.select.getBroDtls=SELECT   '' COMPANY_NAME,B.FIRST_NAME || B.LAST_NAME AS BROKER,C.CURRENCY_NAME,R.PAID_AMT,  TO_CHAR (TRANS_DATE, 'DD/MM/YYYY') AS TRANSDATE,PAYMENT_RECEIPT_NO,R.EXCHANGE_RATE,ROUND((R.PAID_AMT / R.EXCHANGE_RATE),3) TOT_EXC_AMT, R.BROKER_ID,R.DIFF_AMT,R.TRANSCATIONTYPE,R.CURRENCY_ID,R.REVERSALTRANSNO,R.BANK_CHARGES,R.NET_AMT,BM.BANK_NAME FROM TTRN_PAYMENT_RECEIPT R INNER JOIN PERSONAL_INFO B ON B.CUSTOMER_ID \= R.BROKER_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='B' AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\=B.BRANCH_CODE) INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID \= R.CURRENCY_ID AND C.BRANCH_CODE\=? AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID\=C.CURRENCY_ID AND BRANCH_CODE\=C.BRANCH_CODE) INNER JOIN BANK_MASTER BM ON BM.BANK_ID\=R.RECEIPT_BANK AND BM.BRANCH_CODE\=R.BRANCH_CODE AND BM.STATUS\='Y' WHERE   R.PAYMENT_RECEIPT_NO \=? AND R.BRANCH_CODE\=?
#payment.select.getDirBroDtls=SELECT   A.COMPANY_NAME,B.FIRST_NAME || B.LAST_NAME AS BROKER,C.CURRENCY_NAME,R.PAID_AMT, TO_CHAR (TRANS_DATE, 'DD/MM/YYYY') AS TRANSDATE,PAYMENT_RECEIPT_NO,R.EXCHANGE_RATE,ROUND((R.PAID_AMT / R.EXCHANGE_RATE),2) TOT_EXC_AMT, R.BROKER_ID,R.DIFF_AMT,R.TRANSCATIONTYPE,R.CURRENCY_ID,R.REVERSALTRANSNO,R.BANK_CHARGES,R.NET_AMT,BM.BANK_NAME,WH_TAX FROM TTRN_PAYMENT_RECEIPT R INNER JOIN PERSONAL_INFO A ON R.CEDING_ID \= A.CUSTOMER_ID AND A.BRANCH_CODE\=? AND A.CUSTOMER_TYPE\='C' AND A.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=A.CUSTOMER_ID AND BRANCH_CODE\=A.BRANCH_CODE) INNER JOIN PERSONAL_INFO B ON B.CUSTOMER_ID \= R.BROKER_ID AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='B' AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\=B.BRANCH_CODE) INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID \= R.CURRENCY_ID AND C.BRANCH_CODE\=? AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID\=C.CURRENCY_ID AND BRANCH_CODE\=C.BRANCH_CODE) INNER JOIN BANK_MASTER BM ON BM.BANK_ID\=R.RECEIPT_BANK AND BM.BRANCH_CODE\=R.BRANCH_CODE AND BM.STATUS\='Y' WHERE   R.PAYMENT_RECEIPT_NO \=? AND R.BRANCH_CODE\=?
payment.select.getDirBroDtls=SELECT   A.COMPANY_NAME,B.FIRST_NAME || B.LAST_NAME AS BROKER,C.CURRENCY_NAME,R.PAID_AMT, TO_CHAR (TRANS_DATE, 'DD/MM/YYYY') AS TRANSDATE,PAYMENT_RECEIPT_NO,R.EXCHANGE_RATE,ROUND((R.PAID_AMT / R.EXCHANGE_RATE),2) TOT_EXC_AMT, R.BROKER_ID,R.DIFF_AMT,R.TRANSCATIONTYPE,R.CURRENCY_ID,R.REVERSALTRANSNO,R.BANK_CHARGES,R.NET_AMT,R.CONVERTED_DIFF_AMT,BM.BANK_NAME,WH_TAX,R.REMARKS,R.PREMIUM_LAVY FROM TTRN_PAYMENT_RECEIPT R INNER JOIN PERSONAL_INFO A ON R.CEDING_ID \= A.CUSTOMER_ID AND A.BRANCH_CODE\=? AND A.CUSTOMER_TYPE\='C' AND R.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= R.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= R.BRANCH_CODE) AND A.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=A.CUSTOMER_ID AND BRANCH_CODE\=A.BRANCH_CODE) INNER JOIN PERSONAL_INFO B ON B.CUSTOMER_ID \= R.BROKER_ID AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='B' AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\=B.BRANCH_CODE) INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID \= R.CURRENCY_ID AND C.BRANCH_CODE\=? AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID\=C.CURRENCY_ID AND BRANCH_CODE\=C.BRANCH_CODE) INNER JOIN BANK_MASTER BM ON BM.BANK_ID\=R.RECEIPT_BANK AND BM.BRANCH_CODE\=R.BRANCH_CODE AND BM.STATUS\='Y' WHERE   R.PAYMENT_RECEIPT_NO \=? AND R.BRANCH_CODE\=?
#payment.select.getBroDtls=SELECT   '' COMPANY_NAME,B.FIRST_NAME || B.LAST_NAME AS BROKER,C.CURRENCY_NAME,R.PAID_AMT,  TO_CHAR (TRANS_DATE, 'DD/MM/YYYY') AS TRANSDATE,PAYMENT_RECEIPT_NO,R.EXCHANGE_RATE,ROUND((R.PAID_AMT / R.EXCHANGE_RATE),2) TOT_EXC_AMT, R.BROKER_ID,R.DIFF_AMT,R.TRANSCATIONTYPE,R.CURRENCY_ID,R.REVERSALTRANSNO,R.BANK_CHARGES,R.NET_AMT,BM.BANK_NAME,WH_TAX FROM TTRN_PAYMENT_RECEIPT R INNER JOIN PERSONAL_INFO B ON B.CUSTOMER_ID \= R.BROKER_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='B' AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\=B.BRANCH_CODE) INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID \= R.CURRENCY_ID AND C.BRANCH_CODE\=? AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID\=C.CURRENCY_ID AND BRANCH_CODE\=C.BRANCH_CODE) INNER JOIN BANK_MASTER BM ON BM.BANK_ID\=R.RECEIPT_BANK AND BM.BRANCH_CODE\=R.BRANCH_CODE AND BM.STATUS\='Y' WHERE   R.PAYMENT_RECEIPT_NO \=? AND R.BRANCH_CODE\=?
payment.select.getBroDtls=SELECT   '' COMPANY_NAME,B.FIRST_NAME || B.LAST_NAME AS BROKER,C.SHORT_NAME CURRENCY_NAME,R.PAID_AMT,  TO_CHAR (TRANS_DATE, 'DD/MM/YYYY') AS TRANSDATE,PAYMENT_RECEIPT_NO,R.EXCHANGE_RATE,ROUND((R.PAID_AMT / R.EXCHANGE_RATE),2) TOT_EXC_AMT, R.BROKER_ID,R.DIFF_AMT,R.TRANSCATIONTYPE,R.CURRENCY_ID,R.REVERSALTRANSNO,R.BANK_CHARGES,R.NET_AMT,R.CONVERTED_DIFF_AMT,BM.BANK_NAME,WH_TAX,R.REMARKS,R.PREMIUM_LAVY FROM TTRN_PAYMENT_RECEIPT R INNER JOIN PERSONAL_INFO B ON B.CUSTOMER_ID \= R.BROKER_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='B' AND R.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= R.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= R.BRANCH_CODE) AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\=B.BRANCH_CODE) INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID \= R.CURRENCY_ID AND C.BRANCH_CODE\=? AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID\=C.CURRENCY_ID AND BRANCH_CODE\=C.BRANCH_CODE) INNER JOIN BANK_MASTER BM ON BM.BANK_ID\=R.RECEIPT_BANK AND BM.BRANCH_CODE\=R.BRANCH_CODE AND BM.STATUS\='Y' WHERE   R.PAYMENT_RECEIPT_NO \=? AND R.BRANCH_CODE\=?
payment.select.getSelCurrency=SELECT C.SHORT_NAME CURRENCY_NAME FROM CURRENCY_MASTER C WHERE C.BRANCH_CODE\=? AND C.CURRENCY_ID \= ? AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID\=C.CURRENCY_ID AND BRANCH_CODE\=C.BRANCH_CODE) 
payment.select.getSelCompany=SELECT COMPANY_NAME FROM PERSONAL_INFO WHERE CUSTOMER_ID = ? AND CUSTOMER_TYPE='C'
payment.select.getSelBroker=SELECT FIRST_NAME||LAST_NAME NAME FROM PERSONAL_INFO WHERE CUSTOMER_ID \= ? AND CUSTOMER_TYPE\='B' 
#payment.select.getAllocateDtls=SELECT DISTINCT SNO, TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,CURRENCY_ID FROM TTRN_ALLOCATED_TRANSACTION WHERE RECEIPT_NO = ? AND STATUS='Y' ORDER BY SNO DESC
#payment.select.getAllocateDtls=SELECT DISTINCT SNO, TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,CURRENCY_ID,RECEIPT_NO FROM TTRN_ALLOCATED_TRANSACTION WHERE RECEIPT_NO = ? AND STATUS='Y' ORDER BY SNO DESC
#payment.select.getAllocateDtls=SELECT DISTINCT SNO, TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,CURRENCY_ID,ADJUSTMENT_TYPE FROM TTRN_ALLOCATED_TRANSACTION WHERE RECEIPT_NO = ? AND STATUS='Y' ORDER BY SNO DESC
payment.select.getAllocateDtls=SELECT DISTINCT SNO, TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,CURRENCY_ID,ADJUSTMENT_TYPE,TYPE FROM TTRN_ALLOCATED_TRANSACTION WHERE RECEIPT_NO = ? AND STATUS='Y' ORDER BY SNO DESC
payment.select.getRskPremDtls=SELECT (NVL (NETDUE_OC, 0) - NVL (ALLOCATED_TILL_DATE, 0)) NETDUE FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO = ? AND TRANSACTION_NO = ?
payment.select.getClaimPymtDtls=SELECT (NVL (PAID_AMOUNT_OC, 0)- NVL (ALLOCATED_TILL_DATE, 0)) PAID_AMOUNT FROM TTRN_CLAIM_PAYMENT WHERE CONTRACT_NO = ? AND CLAIM_PAYMENT_NO = ?
#payment.select.getPymtRetDtls=SELECT (NVL(AMOUNT,0) - NVL (ALLOCATED_TILL_DATE, 0)) AMOUNT FROM TTRN_PAYMENT_RECEIPT_DETAILS WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ?
payment.select.getPymtRetDtls=SELECT (NVL(AMOUNT,0) - NVL (ALLOCATED_TILL_DATE, 0)) AMOUNT FROM TTRN_PAYMENT_RECEIPT_DETAILS R WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ? AND R.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=R.RECEIPT_NO AND RECEIPT_SL_NO = R.RECEIPT_SL_NO)
#payment.select.getAllTranDtls=SELECT SNO, TO_CHAR(INCEPTION_DATE, 'DD/MM/YYYY') ALLOCATION_DATE, TO_CHAR(REVERSAL_DATE, 'DD/MM/YYYY') REVERSAL_DATE1,CONTRACT_NO,PRODUCT_NAME,RECEIPT_NO,TRANSACTION_NO,CURRENCY_ID,REVERSAL_AMOUNT,TYPE FROM TTRN_ALLOCATED_TRANSACTION WHERE RECEIPT_NO =? AND STATUS='R' ORDER BY SNO DESC
payment.select.getAllTranDtls=SELECT SNO, TO_CHAR(INCEPTION_DATE, 'DD/MM/YYYY') ALLOCATION_DATE, TO_CHAR(REVERSAL_DATE, 'DD/MM/YYYY') REVERSAL_DATE1,CONTRACT_NO,PRODUCT_NAME,RECEIPT_NO,TRANSACTION_NO,CURRENCY_ID,REVERSAL_AMOUNT,TYPE,Decode(STATUS,'Y','Allocated','R','Reverted')STATUS FROM TTRN_ALLOCATED_TRANSACTION WHERE RECEIPT_NO =?  ORDER BY SNO DESC
#payment.select.getPymtRetStatus=SELECT B.CURRENCY_NAME,A.AMOUNT ALLOCATED,NVL(A.ALLOCATED_TILL_DATE,0) UTILIZED,(A.AMOUNT-NVL(A.ALLOCATED_TILL_DATE,0)) NOTUTILIZED,CASE WHEN (A.AMOUNT-NVL(A.ALLOCATED_TILL_DATE,0) ='0') THEN 'Completed' WHEN (NVL(A.ALLOCATED_TILL_DATE,0)>'0') THEN 'Partially Completed' WHEN(NVL(A.ALLOCATED_TILL_DATE,0)='0') THEN 'Pending' END STATUS FROM TTRN_PAYMENT_RECEIPT_DETAILS A, CURRENCY_MASTER B WHERE B.CURRENCY_ID = A.CURRENCY_ID AND B.BRANCH_CODE=? AND B.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE  CURRENCY_ID=B.CURRENCY_ID AND BRANCH_CODE=B.BRANCH_CODE) AND A.RECEIPT_SL_NO = ?
#payment.select.getPymtRetStatus=SELECT   distinct B.CURRENCY_NAME, A.AMOUNT ALLOCATED, NVL (A.ALLOCATED_TILL_DATE, 0) UTILIZED, (A.AMOUNT - NVL (A.ALLOCATED_TILL_DATE, 0)) NOTUTILIZED, CASE WHEN (A.AMOUNT - NVL (A.ALLOCATED_TILL_DATE, 0) = '0') THEN 'Completed' WHEN (NVL (A.ALLOCATED_TILL_DATE, 0) > '0') THEN 'Partially Completed' WHEN (NVL (A.ALLOCATED_TILL_DATE, 0) = '0') THEN 'Pending' END STATUS, TO_CHAR (TAT.TRANS_DATE, 'DD/MM/YYYY') PAYMANT_DATE, (Select COMPANY_NAME from personal_info pi where pi.customer_id=TAT.CEDING_ID and  PI.branch_code=tat.BRANCH_CODE) Ceding_company, (Select BANK_NAME from bank_master bm where bm.bank_id=tat.RECEIPT_BANK and bm.Branch_code=tat.BRANCH_CODE) Bank_name, (Select COMPANY_NAME from personal_info pi where pi.customer_id=TAT.broker_ID and  PI.branch_code=tat.BRANCH_CODE) broker_name FROM   TTRN_PAYMENT_RECEIPT_DETAILS A, CURRENCY_MASTER B,TTRN_PAYMENT_RECEIPT TAT WHERE   B.CURRENCY_ID = A.CURRENCY_ID AND B.BRANCH_CODE = ? and A.RECEIPT_SL_NO=tat.PAYMENT_RECEIPT_NO AND B.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = B.CURRENCY_ID AND BRANCH_CODE = B.BRANCH_CODE) AND A.RECEIPT_SL_NO =?
#payment.select.getPymtRetStatus=SELECT   distinct B.CURRENCY_NAME, A.AMOUNT ALLOCATED, NVL (A.ALLOCATED_TILL_DATE, 0) UTILIZED, (A.AMOUNT - NVL (A.ALLOCATED_TILL_DATE, 0)) NOTUTILIZED, CASE WHEN (A.AMOUNT - NVL (A.ALLOCATED_TILL_DATE, 0) = '0') THEN 'Completed' WHEN (NVL (A.ALLOCATED_TILL_DATE, 0) > '0') THEN 'Partially Completed' WHEN (NVL (A.ALLOCATED_TILL_DATE, 0) = '0') THEN 'Pending' END STATUS, TO_CHAR (TAT.TRANS_DATE, 'DD/MM/YYYY') PAYMANT_DATE, (Select COMPANY_NAME from personal_info pi where pi.customer_id=TAT.CEDING_ID and  PI.branch_code=tat.BRANCH_CODE) Ceding_company, (Select BANK_NAME from bank_master bm where bm.bank_id=tat.RECEIPT_BANK and bm.Branch_code=tat.BRANCH_CODE) Bank_name, (Select COMPANY_NAME from personal_info pi where pi.customer_id=TAT.broker_ID and  PI.branch_code=tat.BRANCH_CODE) broker_name FROM   TTRN_PAYMENT_RECEIPT_DETAILS A, CURRENCY_MASTER B,TTRN_PAYMENT_RECEIPT TAT WHERE   B.CURRENCY_ID = A.CURRENCY_ID AND B.BRANCH_CODE = ? and A.RECEIPT_SL_NO=tat.PAYMENT_RECEIPT_NO  AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=A.RECEIPT_NO AND RECEIPT_SL_NO = A.RECEIPT_SL_NO) AND B.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = B.CURRENCY_ID AND BRANCH_CODE = B.BRANCH_CODE) AND A.RECEIPT_SL_NO =?
#payment.select.getPymtRetStatus=SELECT   distinct B.CURRENCY_NAME, A.AMOUNT ALLOCATED, NVL (A.ALLOCATED_TILL_DATE, 0) UTILIZED, (A.AMOUNT - NVL (A.ALLOCATED_TILL_DATE, 0)) NOTUTILIZED, CASE WHEN (A.AMOUNT - NVL (A.ALLOCATED_TILL_DATE, 0) = '0') THEN 'Fully Allocated' WHEN (NVL (A.ALLOCATED_TILL_DATE, 0) > '0') THEN 'Partially Allocated' WHEN (NVL (A.ALLOCATED_TILL_DATE, 0) = '0') THEN 'Pending' END STATUS, TO_CHAR (TAT.TRANS_DATE, 'DD/MM/YYYY') PAYMANT_DATE, (Select COMPANY_NAME from personal_info pi where pi.customer_id=TAT.CEDING_ID and  PI.branch_code=tat.BRANCH_CODE) Ceding_company, (Select BANK_NAME from bank_master bm where bm.bank_id=tat.RECEIPT_BANK and bm.Branch_code=tat.BRANCH_CODE) Bank_name, (Select COMPANY_NAME from personal_info pi where pi.customer_id=TAT.broker_ID and  PI.branch_code=tat.BRANCH_CODE) broker_name FROM   TTRN_PAYMENT_RECEIPT_DETAILS A, CURRENCY_MASTER B,TTRN_PAYMENT_RECEIPT TAT WHERE   B.CURRENCY_ID = A.CURRENCY_ID AND B.BRANCH_CODE = ? and A.RECEIPT_SL_NO=tat.PAYMENT_RECEIPT_NO  AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=A.RECEIPT_NO AND RECEIPT_SL_NO = A.RECEIPT_SL_NO) AND B.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = B.CURRENCY_ID AND BRANCH_CODE = B.BRANCH_CODE) AND A.RECEIPT_SL_NO =?
payment.select.getPymtRetStatus=SELECT   distinct B.SHORT_NAME CURRENCY_NAME, A.AMOUNT ALLOCATED, NVL (A.ALLOCATED_TILL_DATE, 0) UTILIZED, (A.AMOUNT - NVL (A.ALLOCATED_TILL_DATE, 0)) NOTUTILIZED, CASE WHEN (A.AMOUNT - NVL (A.ALLOCATED_TILL_DATE, 0) = '0') THEN 'Fully Allocated' WHEN (NVL (A.ALLOCATED_TILL_DATE, 0) > '0') THEN 'Partially Allocated' WHEN (NVL (A.ALLOCATED_TILL_DATE, 0) = '0') THEN 'Pending' END STATUS, TO_CHAR (TAT.TRANS_DATE, 'DD/MM/YYYY') PAYMANT_DATE, (Select COMPANY_NAME from personal_info pi where pi.customer_id=TAT.CEDING_ID and  PI.branch_code=tat.BRANCH_CODE) Ceding_company, (Select BANK_NAME from bank_master bm where bm.bank_id=tat.RECEIPT_BANK and bm.Branch_code=tat.BRANCH_CODE) Bank_name, (Select FIRST_NAME from personal_info pi where pi.customer_id=TAT.broker_ID and  PI.branch_code=tat.BRANCH_CODE) broker_name FROM   TTRN_PAYMENT_RECEIPT_DETAILS A, CURRENCY_MASTER B,TTRN_PAYMENT_RECEIPT TAT WHERE   B.CURRENCY_ID = A.CURRENCY_ID AND B.BRANCH_CODE = ? and A.RECEIPT_SL_NO=tat.PAYMENT_RECEIPT_NO  AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=A.RECEIPT_NO AND RECEIPT_SL_NO = A.RECEIPT_SL_NO) AND B.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   CURRENCY_ID = B.CURRENCY_ID AND BRANCH_CODE = B.BRANCH_CODE)  And TAT.AMEND_ID=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO = A.RECEIPT_SL_NO) AND A.RECEIPT_SL_NO =?
payment.select.getCedingCompDtls=SELECT DISTINCT A.RSK_CEDINGID,B.COMPANY_NAME FROM TTRN_RISK_DETAILS A, PERSONAL_INFO B WHERE A.RSK_CONTRACT_NO IS NOT NULL AND A.RSK_CONTRACT_NO!=0 AND A.RSK_STATUS='A' AND B.CUSTOMER_ID=A.RSK_CEDINGID AND A.RSK_BROKERID=?
#payment.select.getPymtAmtDtls=SELECT (((SELECT NVL(SUM(PAID_AMOUNT),'0') FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO = ? AND TYPE='P')*(-1))-(SELECT NVL(SUM(PAID_AMOUNT),'0') FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO = ? AND TYPE='C')*(-1)) AMT FROM DUAL
#payment.select.getRetAmtDtls=SELECT (SELECT NVL(SUM(PAID_AMOUNT),'0') FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO = ? AND TYPE='P')-(SELECT NVL(SUM(PAID_AMOUNT),'0') FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO = ? AND TYPE='C') AMT FROM DUAL
payment.select.getPymtAmtDtls=SELECT (((SELECT NVL(SUM(PAID_AMOUNT),'0') FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO = ? AND (TYPE='P' OR TYPE = 'PT'))*(-1))-(SELECT NVL(SUM(PAID_AMOUNT),'0') FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO = ? AND( TYPE='C'  OR TYPE = 'RT')*(-1)) AMT FROM DUAL
payment.select.getRetAmtDtls=SELECT (SELECT NVL(SUM(PAID_AMOUNT),'0') FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO = ? AND (TYPE='P' OR TYPE = 'PT'))-(SELECT NVL(SUM(PAID_AMOUNT),'0') FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO = ? AND (TYPE='C'  OR TYPE = 'RT')) AMT FROM DUAL
GET_ALOCATION_TYPE = SELECT TYPE FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO=? AND STATUS = 'Y'
TREASURY_PAYMENT_SELECT_GETALLOCATEDTLS = SELECT   DISTINCT SNO,CURRENCY_ID,TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,ADJUSTMENT_TYPE  FROM   TTRN_ALLOCATED_TRANSACTION WHERE   RECEIPT_NO = ? AND STATUS = 'Y' ORDER BY   SNO DESC
#payment.select.getAlloTransDtls=SELECT SNO,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR(REVERSAL_DATE,'DD/MM/YYYY') REVERSAL_DATE,REVERSAL_AMOUNT,TRANSACTION_NO,CONTRACT_NO, PRODUCT_NAME,TYPE,PAID_AMOUNT,CURRENCY_ID,STATUS,RECEIPT_NO,DECODE(ADJUSTMENT_TYPE,'W','Write Off','R','Round Off')ADJUSTMENT_TYPE FROM TTRN_ALLOCATED_TRANSACTION WHERE RECEIPT_NO = ? abs(PAID_AMOUNT)
payment.select.getAlloTransDtls=SELECT SNO,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR(REVERSAL_DATE,'DD/MM/YYYY') REVERSAL_DATE,case sign(REVERSAL_AMOUNT) when -1 then 'C' else 'P' end REVERSAL_AMOUNT_SIGN,abs(REVERSAL_AMOUNT)REVERSAL_AMOUNT,TRANSACTION_NO,CONTRACT_NO, PRODUCT_NAME,TYPE,case sign(PAID_AMOUNT) when -1 then 'C' else 'P' end PAID_AMOUNT_SIGN,PAID_AMOUNT PAID_AMOUNT,PAID_AMOUNT RETRO_PAID_AMOUNT,CURRENCY_ID,STATUS,RECEIPT_NO,DECODE(ADJUSTMENT_TYPE,'W','Write Off','R','Round Off')ADJUSTMENT_TYPE FROM TTRN_ALLOCATED_TRANSACTION WHERE RECEIPT_NO = ?
#payment.select.getAlloTransaction=SELECT SNO,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,TRANSACTION_NO,CONTRACT_NO, PRODUCT_NAME,TYPE,PAID_AMOUNT,CURRENCY_ID,STATUS,RECEIPT_NO FROM TTRN_ALLOCATED_TRANSACTION WHERE CONTRACT_NO = ? AND TRANSACTION_NO = ? AND TYPE='P' AND STATUS='Y'
#payment.select.getAlloTransaction = SELECT   SNO, TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TRANSACTION_NO, PRODUCT_NAME, TYPE, PAID_AMOUNT,TAT.CURRENCY_ID, TAT.STATUS, RECEIPT_NO, Decode(TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT') TRANS_TYPE FROM   TTRN_ALLOCATED_TRANSACTION TAT, TTRN_PAYMENT_RECEIPT TPR  WHERE    TAT.RECEIPT_NO=TPR.PAYMENT_RECEIPT_NO and  CONTRACT_NO = ? AND TAT.TRANSACTION_NO = ? AND TAT.TYPE = 'P' AND TAT.STATUS = 'Y'
#payment.select.getAlloTransaction = SELECT   SNO, TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TRANSACTION_NO, PRODUCT_NAME, TYPE, PAID_AMOUNT,TAT.CURRENCY_ID, TAT.STATUS, RECEIPT_NO, Decode(TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT') TRANS_TYPE FROM   TTRN_ALLOCATED_TRANSACTION TAT, TTRN_PAYMENT_RECEIPT TPR  WHERE    TAT.RECEIPT_NO=TPR.PAYMENT_RECEIPT_NO and  CONTRACT_NO = ? AND TAT.TRANSACTION_NO = ? AND TAT.TYPE = 'P' AND TAT.STATUS = 'Y' and tpr.amend_id=(select max(amend_id) from Ttrn_Payment_Receipt where  PAYMENT_RECEIPT_NO=tpr.PAYMENT_RECEIPT_NO and branch_code=tpr.branch_code)
payment.select.getAlloTransaction =select * from  ((SELECT   SNO,TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TRANSACTION_NO,PRODUCT_NAME,TYPE,PAID_AMOUNT,TAT.CURRENCY_ID,decode(TAT.STATUS,'R','Reverted','Y','Allocated') STATUS,RECEIPT_NO,DECODE (TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT') TRANS_TYPE ,TRANS_TYPE ALLOCATE_TYPE FROM   TTRN_ALLOCATED_TRANSACTION TAT, TTRN_PAYMENT_RECEIPT TPR WHERE       TAT.RECEIPT_NO = TPR.PAYMENT_RECEIPT_NO AND CONTRACT_NO = ? AND TAT.TRANSACTION_NO = ? AND TAT.TYPE = 'P'  AND TAT.STATUS = 'Y' AND tpr.amend_id = (SELECT   MAX (amend_id)  FROM   Ttrn_Payment_Receipt WHERE   PAYMENT_RECEIPT_NO = tpr.PAYMENT_RECEIPT_NO AND branch_code = tpr.branch_code)) union all (SELECT   SNO, TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TRANSACTION_NO, PRODUCT_NAME,TYPE, PAID_AMOUNT,TAT.CURRENCY_ID,'Adjusted' STATUS,RECEIPT_NO, DECODE(ADJUSTMENT_TYPE,'W','Write Off','R','Round Off') TRANS_TYPE,'' ALLOCATE_TYPE FROM   TTRN_ALLOCATED_TRANSACTION TAT Where  CONTRACT_NO = ? AND TAT.TRANSACTION_NO = ? AND TAT.TYPE = 'P' AND TAT.STATUS = 'Y' and TAT.RECEIPT_NO not in (Select TPR.PAYMENT_RECEIPT_NO from   TTRN_PAYMENT_RECEIPT TPR where TAT.RECEIPT_NO = TPR.PAYMENT_RECEIPT_NO)))
#payment.select.getExchRate=SELECT EXCHANGE_RATE FROM TTRN_PAYMENT_RECEIPT_DETAILS WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ?
payment.select.getExchRate=SELECT EXCHANGE_RATE FROM TTRN_PAYMENT_RECEIPT_DETAILS R WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ? AND R.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=R.RECEIPT_NO AND RECEIPT_SL_NO = R.RECEIPT_SL_NO)
#payment.select.getSecondPageDtls=SELECT CURRENCY_ID,EXCHANGE_RATE,AMOUNT,TOT_AMT,RECEIPT_NO,SETTLED_EXCRATE,CONVERTED_RECCUR FROM TTRN_PAYMENT_RECEIPT_DETAILS WHERE RECEIPT_SL_NO=? ORDER BY RECEIPT_NO
payment.select.getSecondPageDtls=SELECT CURRENCY_ID,EXCHANGE_RATE,AMOUNT,TOT_AMT,RECEIPT_NO,SETTLED_EXCRATE,CONVERTED_RECCUR FROM TTRN_PAYMENT_RECEIPT_DETAILS A WHERE RECEIPT_SL_NO=? AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS WHERE RECEIPT_NO=A.RECEIPT_NO AND RECEIPT_SL_NO = A.RECEIPT_SL_NO) ORDER BY RECEIPT_NO
#payment.select.getDiffAmt=SELECT NVL(DIFF_AMT,'0') FROM TTRN_PAYMENT_RECEIPT WHERE PAYMENT_RECEIPT_NO = ? AND BRANCH_CODE=?
payment.select.getDiffAmt=SELECT NVL(DIFF_AMT,'0') FROM TTRN_PAYMENT_RECEIPT TPR WHERE PAYMENT_RECEIPT_NO = ? AND BRANCH_CODE=? and amend_id=(select max(amend_id) from TTRN_PAYMENT_RECEIPT where PAYMENT_RECEIPT_NO = TPR.PAYMENT_RECEIPT_NO AND BRANCH_CODE=TPR.BRANCH_CODE)
#payment.select.getAlloAmt=SELECT (AMOUNT - NVL (ALLOCATED_TILL_DATE, 0)) AMOUNT FROM TTRN_PAYMENT_RECEIPT_DETAILS WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ?
payment.select.getAlloAmt=SELECT (AMOUNT - NVL (ALLOCATED_TILL_DATE, 0)) AMOUNT FROM TTRN_PAYMENT_RECEIPT_DETAILS R WHERE RECEIPT_SL_NO = ? AND CURRENCY_ID = ? AND R.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=R.RECEIPT_NO AND RECEIPT_SL_NO = R.RECEIPT_SL_NO)
payment.select.getNextSNO=SELECT NVL(MAX(SNO)+1,0) FROM TTRN_ALLOCATED_TRANSACTION
payment.select.getAlloTranDtls=SELECT A.CEDING_COMPANY_ID,A.BROKER_ID,A.CONTRACT_NO,A.LAYER_NO,FN_GET_NAME ('P', A.PRODUCT_ID,A.BRANCH_CODE) PRODUCT_NAME, B.TRANSACTION_NO,TO_CHAR(B.ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE_TIME,CASE WHEN A.CONTRACT_NO||B.TRANSACTION_NO IN (SELECT CONTRACT_NO||RECEIPT_CLAIM_NO FROM TTRN_ALLOCATED_TRANSACTION) THEN B.NETDUE -(SELECT SUM(PAID_AMOUNT) FROM TTRN_ALLOCATED_TRANSACTION WHERE CONTRACT_NO=A.CONTRACT_NO AND RECEIPT_CLAIM_NO=B.TRANSACTION_NO) ELSE B.NETDUE END NETDUE,NULL PAID_AMOUNT_OC FROM POSITION_MASTER A, RSK_PREMIUM_DETAILS B WHERE B.RECEIPT_NO IS NULL AND B.CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (B.LAYER_NO, 0) AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = A.CONTRACT_NO) AND A.CEDING_COMPANY_ID = ? AND A.CONTRACT_NO IS NOT NULL AND A.CONTRACT_NO != 0 AND A.BROKER_ID = ? AND A.CONTRACT_NO=? AND B.TRANSACTION_NO=?
#payment.select.getRetAlloDtls=SELECT * FROM (SELECT DISTINCT A.PAYMENT_RECEIPT_NO,A.PAID_AMT,B.CURRENCY_NAME, C.COMPANY_NAME,D.FIRST_NAME || D.LAST_NAME AS BROKER,C.CUSTOMER_ID AS CEDDINGID, D.CUSTOMER_ID AS BROKERID,A.REMARKS FROM TTRN_PAYMENT_RECEIPT A,CURRENCY_MASTER B, PERSONAL_INFO C,PERSONAL_INFO D WHERE A.CURRENCY_ID \= B.CURRENCY_ID AND A.CEDING_ID \= C.CUSTOMER_ID AND A.BROKER_ID \= D.CUSTOMER_ID AND A.BROKER_ID \= '63' AND A.BRANCH_CODE\=? AND A.BRANCH_CODE \= B.BRANCH_CODE AND A.BRANCH_CODE \= C.BRANCH_CODE  AND A.BRANCH_CODE \= D.BRANCH_CODE AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE\=C.BRANCH_CODE AND CUSTOMER_ID\=C.CUSTOMER_ID ) AND D.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE\=D.BRANCH_CODE AND CUSTOMER_ID\=D.CUSTOMER_ID ) AND A.STATUS\='Y' AND A.TRANS_TYPE\=? UNION ALL SELECT DISTINCT A.PAYMENT_RECEIPT_NO, A.PAID_AMT,B.CURRENCY_NAME,'' COMPANY_NAME,D.FIRST_NAME || D.LAST_NAME AS BROKER, 0 AS CEDDINGID,D.CUSTOMER_ID AS BROKERID,A.REMARKS FROM TTRN_PAYMENT_RECEIPT A, CURRENCY_MASTER B, PERSONAL_INFO D WHERE A.CURRENCY_ID \= B.CURRENCY_ID AND A.BROKER_ID \= D.CUSTOMER_ID AND A.BROKER_ID <>'63' AND A.BRANCH_CODE\=?   AND A.BRANCH_CODE \= B.BRANCH_CODE AND A.BRANCH_CODE \= D.BRANCH_CODE AND D.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE\=D.BRANCH_CODE AND CUSTOMER_ID\=D.CUSTOMER_ID) AND A.STATUS\='Y' AND A.TRANS_TYPE\=?)
payment.select.getRetAlloDtls=SELECT * FROM (SELECT DISTINCT A.PAYMENT_RECEIPT_NO,A.PAID_AMT,B.SHORT_NAME CURRENCY_NAME, C.COMPANY_NAME,D.FIRST_NAME || D.LAST_NAME AS BROKER,C.CUSTOMER_ID AS CEDDINGID, D.CUSTOMER_ID AS BROKERID,A.REMARKS,A.BRANCH_CODE FROM TTRN_PAYMENT_RECEIPT A,CURRENCY_MASTER B, PERSONAL_INFO C,PERSONAL_INFO D WHERE A.CURRENCY_ID \= B.CURRENCY_ID AND A.CEDING_ID \= C.CUSTOMER_ID AND A.BROKER_ID \= D.CUSTOMER_ID AND A.BROKER_ID \= '63' AND A.BRANCH_CODE\=? AND A.BRANCH_CODE \= B.BRANCH_CODE AND A.BRANCH_CODE \= C.BRANCH_CODE  AND A.BRANCH_CODE \= D.BRANCH_CODE AND A.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= A.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= A.BRANCH_CODE) AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE\=C.BRANCH_CODE AND CUSTOMER_ID\=C.CUSTOMER_ID ) AND D.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE\=D.BRANCH_CODE AND CUSTOMER_ID\=D.CUSTOMER_ID ) AND A.STATUS\='Y' AND A.TRANS_TYPE\=? UNION ALL SELECT DISTINCT A.PAYMENT_RECEIPT_NO, A.PAID_AMT,B.SHORT_NAME CURRENCY_NAME,'' COMPANY_NAME,D.FIRST_NAME || D.LAST_NAME AS BROKER, 0 AS CEDDINGID,D.CUSTOMER_ID AS BROKERID,A.REMARKS,A.BRANCH_CODE FROM TTRN_PAYMENT_RECEIPT A, CURRENCY_MASTER B, PERSONAL_INFO D WHERE A.CURRENCY_ID \= B.CURRENCY_ID AND A.BROKER_ID \= D.CUSTOMER_ID AND A.BROKER_ID <>'63' AND A.BRANCH_CODE\=?   AND A.BRANCH_CODE \= B.BRANCH_CODE AND A.BRANCH_CODE \= D.BRANCH_CODE AND A.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= A.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= A.BRANCH_CODE) AND D.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE\=D.BRANCH_CODE AND CUSTOMER_ID\=D.CUSTOMER_ID) AND A.STATUS\='Y' AND A.TRANS_TYPE\=?)  
#payment.select.getPymtRetCurrDtls=SELECT B.CURRENCY_ID,B.CURRENCY_NAME,(A.AMOUNT-NVL(A.ALLOCATED_TILL_DATE,0)) AMOUNT FROM TTRN_PAYMENT_RECEIPT_DETAILS A,CURRENCY_MASTER B WHERE B.CURRENCY_ID=A.CURRENCY_ID AND B.BRANCH_CODE=? AND B.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE  CURRENCY_ID=B.CURRENCY_ID AND BRANCH_CODE=B.BRANCH_CODE) AND A.RECEIPT_SL_NO = ?
payment.select.getPymtRetCurrDtls=SELECT B.CURRENCY_ID,B.SHORT_NAME CURRENCY_NAME,(A.AMOUNT-NVL(A.ALLOCATED_TILL_DATE,0)) AMOUNT FROM TTRN_PAYMENT_RECEIPT_DETAILS A,CURRENCY_MASTER B WHERE B.CURRENCY_ID=A.CURRENCY_ID AND B.BRANCH_CODE=?  AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=A.RECEIPT_NO AND RECEIPT_SL_NO = A.RECEIPT_SL_NO) AND B.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE  CURRENCY_ID=B.CURRENCY_ID AND BRANCH_CODE=B.BRANCH_CODE) AND A.RECEIPT_SL_NO = ?
payment.select.getRetContDtls=SELECT DISTINCT PM.CONTRACT_NO,PI.COMPANY_NAME,TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE, TPM.TMAS_PRODUCT_NAME FROM POSITION_MASTER PM, PERSONAL_INFO PI, TMAS_PRODUCT_MASTER TPM,(SELECT CONTRACT_NO FROM TTRN_CLAIM_DETAILS WHERE (NVL(TOTAL_AMT_PAID_TILL_DATE,0)-NVL(ALLOCATED_TILL_DATE,0))!=0) TCD, (SELECT CONTRACT_NO FROM RSK_PREMIUM_DETAILS WHERE (NVL(NETDUE_OC,0)-NVL(ALLOCATED_TILL_DATE,0))!=0) RPD WHERE PM.BROKER_ID = ? AND PM.CEDING_COMPANY_ID = ? AND (PM.CONTRACT_NO=TCD.CONTRACT_NO OR PM.CONTRACT_NO=RPD.CONTRACT_NO) AND PM.PRODUCT_ID = TPM.TMAS_PRODUCT_ID AND PM.CEDING_COMPANY_ID = PI.CUSTOMER_ID AND PM.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = PM.CONTRACT_NO)
payment_amount_details=SELECT (A.AMOUNT-NVL(A.ALLOCATED_TILL_DATE,0)) AMOUNT FROM TTRN_PAYMENT_RECEIPT_DETAILS A,CURRENCY_MASTER B WHERE B.CURRENCY_ID=A.CURRENCY_ID AND B.BRANCH_CODE=?  AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=A.RECEIPT_NO AND RECEIPT_SL_NO = A.RECEIPT_SL_NO) AND B.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE  CURRENCY_ID=B.CURRENCY_ID AND BRANCH_CODE=B.BRANCH_CODE) AND A.RECEIPT_SL_NO = ?
payment.update.allocation2=UPDATE TTRN_ALLOCATED_TRANSACTION SET STATUS=?,REVERSAL_DATE=TO_DATE(?,'DD/MM/YYYY'),REVERSAL_AMOUNT=?,PAID_AMOUNT=? ,LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE =sysdate WHERE CONTRACT_NO=? AND SNO= ?

#payment.select.getTranContDtls=SELECT * FROM (SELECT A.CONTRACT_NO, A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID) PRODUCT_NAME, B.TRANSACTION_NO, TO_CHAR (B.ENTRY_DATE_TIME, 'DD/MM/YYYY') AS ADATE,(NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) NETDUE, NULL PAID_AMOUNT_OC,B.ACC_PREMIUM,NULL ACC_CLAIM,NVL (B.CHECKYN, 'N') CHECKYN,'P' BUSINESS_TYPE,(Select COMPANY_NAME from  personal_info pi where pi.customer_id=A.CEDING_COMPANY_ID and pi.branch_code=A.BRANCH_CODE) CEDING_COMPANY_name,A.DEPT_ID FROM POSITION_MASTER A,RSK_PREMIUM_DETAILS B WHERE B.RECEIPT_NO IS NULL AND B.CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (B.LAYER_NO, 0) AND A.DEPT_ID=B.SUB_CLASS AND A.BRANCH_CODE=? AND (NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) !=0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER PM WHERE CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (PM.LAYER_NO, 0) AND A.DEPT_ID=PM.DEPT_ID AND B.CURRENCY_ID = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ? AND A.CONTRACT_NO LIKE ? AND A.PRODUCT_ID LIKE ?) UNION ALL SELECT A.CONTRACT_NO, A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID) PRODUCT_NAME,CP.CLAIM_PAYMENT_NO,TO_CHAR (CP.INCEPTION_DATE, 'DD/MM/YYYY') AS ADATE, NULL NETDUE_OC,(NVL (CP.PAID_AMOUNT_OC, 0)- NVL (CP.ALLOCATED_TILL_DATE, 0)) PAID_AMOUNT, NULL ACC_PREMIUM, CP.ACC_CLAIM,NVL (CP.CHECKYN, 'N'),'C' BUSINESS_TYPE,(Select COMPANY_NAME from  personal_info pi where pi.customer_id=A.CEDING_COMPANY_ID and pi.branch_code=A.BRANCH_CODE) CEDING_COMPANY_name ,A.DEPT_ID FROM POSITION_MASTER A, TTRN_CLAIM_DETAILS C,TTRN_CLAIM_PAYMENT CP WHERE A.CONTRACT_NO = C.CONTRACT_NO AND C.CONTRACT_NO=CP.CONTRACT_NO AND C.CLAIM_NO=CP.CLAIM_NO AND NVL (A.LAYER_NO, 0) = NVL (C.LAYER_NO, 0) AND A.DEPT_ID=C.SUB_CLASS  AND A.BRANCH_CODE=? AND (NVL (CP.PAID_AMOUNT_OC, 0) - NVL (CP.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (LAYER_NO, 0)) AND A.DEPT_ID=DEPT_ID AND C.CURRENCY = ? AND CASE WHEN '63' =? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ? AND A.CONTRACT_NO LIKE ? AND A.PRODUCT_ID LIKE ?) WHERE BUSINESS_TYPE LIKE ? ORDER BY CONTRACT_NO, TRANSACTION_NO,NETDUE NULLS LAST
payment.select.getTranContDtls=SELECT * FROM (SELECT distinct B.TRANSACTION_NO,A.CONTRACT_NO, A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID,A.BRANCH_CODE) PRODUCT_NAME,  TO_CHAR (B.ENTRY_DATE_TIME, 'DD/MM/YYYY') AS ADATE,(NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) NETDUE, NULL PAID_AMOUNT_OC,B.ACC_PREMIUM,NULL ACC_CLAIM,NVL (B.CHECKYN, 'N') CHECKYN,'P' BUSINESS_TYPE,(Select COMPANY_NAME from  personal_info pi where pi.customer_id=A.CEDING_COMPANY_ID and pi.branch_code=A.BRANCH_CODE and AMEND_ID = (select max(AMEND_ID) from personal_info per where per.customer_id = A.CEDING_COMPANY_ID AND per.branch_code = A.BRANCH_CODE)) CEDING_COMPANY_name,A.DEPT_ID,A.PROPOSAL_NO FROM POSITION_MASTER A,RSK_PREMIUM_DETAILS B WHERE B.RECEIPT_NO IS NULL AND B.CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (B.LAYER_NO, 0) AND A.DEPT_ID=B.SUB_CLASS AND A.BRANCH_CODE=? AND (NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) !=0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER PM WHERE CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (PM.LAYER_NO, 0) AND A.DEPT_ID=PM.DEPT_ID AND B.CURRENCY_ID = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ? AND A.CONTRACT_NO LIKE ? AND A.PRODUCT_ID LIKE ?) UNION ALL SELECT distinct CP.CLAIM_PAYMENT_NO,A.CONTRACT_NO, A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID,A.BRANCH_CODE) PRODUCT_NAME,TO_CHAR (CP.INCEPTION_DATE, 'DD/MM/YYYY') AS ADATE, NULL NETDUE_OC,(NVL (CP.PAID_AMOUNT_OC, 0)- NVL (CP.ALLOCATED_TILL_DATE, 0)) PAID_AMOUNT, NULL ACC_PREMIUM, CP.ACC_CLAIM,NVL (CP.CHECKYN, 'N'),'C' BUSINESS_TYPE,(Select COMPANY_NAME from  personal_info pi where pi.customer_id=A.CEDING_COMPANY_ID and pi.branch_code=A.BRANCH_CODE and AMEND_ID = (select max(AMEND_ID) from personal_info per where per.customer_id = A.CEDING_COMPANY_ID AND per.branch_code = A.BRANCH_CODE)) CEDING_COMPANY_name ,A.DEPT_ID,A.PROPOSAL_NO FROM POSITION_MASTER A, TTRN_CLAIM_DETAILS C,TTRN_CLAIM_PAYMENT CP WHERE A.CONTRACT_NO = C.CONTRACT_NO AND C.CONTRACT_NO=CP.CONTRACT_NO AND C.CLAIM_NO=CP.CLAIM_NO AND NVL (A.LAYER_NO, 0) = NVL (C.LAYER_NO, 0) AND A.DEPT_ID=C.SUB_CLASS  AND A.BRANCH_CODE=? AND (NVL (CP.PAID_AMOUNT_OC, 0) - NVL (CP.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (LAYER_NO, 0)) AND A.DEPT_ID=DEPT_ID AND C.CURRENCY = ? AND CASE WHEN '63' =? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ? AND A.CONTRACT_NO LIKE ? AND A.PRODUCT_ID LIKE ?) WHERE BUSINESS_TYPE LIKE ? ORDER BY CONTRACT_NO, TRANSACTION_NO,NETDUE NULLS LAST
payment.select.getTranContDtlsDirect=SELECT * FROM (SELECT A.CONTRACT_NO, A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID,A.BRANCH_CODE) PRODUCT_NAME, B.TRANSACTION_NO, TO_CHAR (B.ENTRY_DATE_TIME, 'DD/MM/YYYY') AS ADATE,(NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) NETDUE, NULL PAID_AMOUNT_OC,B.ACC_PREMIUM,NULL ACC_CLAIM,NVL (B.CHECKYN, 'N') CHECKYN,'P' BUSINESS_TYPE,(Select COMPANY_NAME from  personal_info pi where pi.customer_id=A.CEDING_COMPANY_ID and pi.branch_code=A.BRANCH_CODE  and AMEND_ID = (select max(AMEND_ID) from personal_info per where per.customer_id = A.CEDING_COMPANY_ID AND per.branch_code = A.BRANCH_CODE)) CEDING_COMPANY_name FROM POSITION_MASTER A,RSK_PREMIUM_DETAILS B WHERE B.RECEIPT_NO IS NULL AND B.CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (B.LAYER_NO, 0) AND A.BRANCH_CODE=? AND (NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) !=0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER PM WHERE CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (PM.LAYER_NO, 0) AND B.CURRENCY_ID = ? AND ? <> '63' AND A.BROKER_ID = ? AND A.CONTRACT_NO LIKE ? AND A.PRODUCT_ID LIKE ?) UNION ALL SELECT A.CONTRACT_NO, A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID,A.BRANCH_CODE) PRODUCT_NAME,CP.CLAIM_PAYMENT_NO,TO_CHAR (CP.INCEPTION_DATE, 'DD/MM/YYYY') AS ADATE, NULL NETDUE_OC,(NVL (CP.PAID_AMOUNT_OC, 0)- NVL (CP.ALLOCATED_TILL_DATE, 0)) PAID_AMOUNT, NULL ACC_PREMIUM, CP.ACC_CLAIM,NVL (CP.CHECKYN, 'N'),'C' BUSINESS_TYPE,(Select COMPANY_NAME from  personal_info pi where pi.customer_id=A.CEDING_COMPANY_ID and pi.branch_code=A.BRANCH_CODE) CEDING_COMPANY_name FROM POSITION_MASTER A, TTRN_CLAIM_DETAILS C,TTRN_CLAIM_PAYMENT CP WHERE ? <> '63' AND A.CONTRACT_NO = C.CONTRACT_NO AND C.CONTRACT_NO=CP.CONTRACT_NO AND C.CLAIM_NO=CP.CLAIM_NO AND NVL (A.LAYER_NO, 0) = NVL (C.LAYER_NO, 0)  AND A.BRANCH_CODE=? AND (NVL (CP.PAID_AMOUNT_OC, 0) - NVL (CP.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (LAYER_NO, 0)) AND C.CURRENCY = ? AND A.BROKER_ID = ? AND A.CONTRACT_NO LIKE ? AND A.PRODUCT_ID LIKE ?) WHERE BUSINESS_TYPE LIKE ? ORDER BY CONTRACT_NO, TRANSACTION_NO,NETDUE NULLS LAST


#payment.select.getRetLists=SELECT * FROM (SELECT A.PAYMENT_RECEIPT_NO,B.COMPANY_NAME,C.FIRST_NAME || C.LAST_NAME AS BROKER, A.PAYMENT_RESPONSE,A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO B, PERSONAL_INFO C WHERE B.CUSTOMER_ID \= A.CEDING_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='C' AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\= B.BRANCH_CODE AND CUSTOMER_TYPE\= B.CUSTOMER_TYPE) AND C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID \= '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? AND A.STATUS\=? UNION ALL SELECT A.PAYMENT_RECEIPT_NO,'' COMPANY_NAME, C.FIRST_NAME || C.LAST_NAME AS BROKER,A.PAYMENT_RESPONSE, A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO C WHERE C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID <> '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? AND A.STATUS\=? ) ORDER BY PAYMENT_RECEIPT_NO DESC
#getReversaltLists=SELECT * FROM (SELECT A.PAYMENT_RECEIPT_NO,B.COMPANY_NAME,C.FIRST_NAME || C.LAST_NAME AS BROKER, A.PAYMENT_RESPONSE,A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO B, PERSONAL_INFO C WHERE B.CUSTOMER_ID \= A.CEDING_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='C' AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\= B.BRANCH_CODE AND CUSTOMER_TYPE\= B.CUSTOMER_TYPE) AND C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID \= '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? AND A.STATUS\=? UNION ALL SELECT A.PAYMENT_RECEIPT_NO,'' COMPANY_NAME, C.FIRST_NAME || C.LAST_NAME AS BROKER,A.PAYMENT_RESPONSE, A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO C WHERE C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID <> '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? AND A.STATUS\=? )
getReversaltLists=SELECT * FROM (SELECT A.PAYMENT_RECEIPT_NO,B.COMPANY_NAME,C.FIRST_NAME || C.LAST_NAME AS BROKER, A.PAYMENT_RESPONSE,A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.BRANCH_CODE FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO B, PERSONAL_INFO C WHERE B.CUSTOMER_ID \= A.CEDING_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='C' AND A.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= A.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= A.BRANCH_CODE) AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\= B.BRANCH_CODE AND CUSTOMER_TYPE\= B.CUSTOMER_TYPE) AND C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID \= '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? AND A.STATUS\=? UNION ALL SELECT A.PAYMENT_RECEIPT_NO,'' COMPANY_NAME, C.FIRST_NAME || C.LAST_NAME AS BROKER,A.PAYMENT_RESPONSE, A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.BRANCH_CODE FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO C WHERE C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND A.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= A.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= A.BRANCH_CODE) AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID <> '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? AND A.STATUS\=? )
#payment.select.getRetLists=SELECT * FROM (SELECT A.PAYMENT_RECEIPT_NO,B.COMPANY_NAME,C.FIRST_NAME || C.LAST_NAME AS BROKER, A.PAYMENT_RESPONSE,A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.REMARKS FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO B, PERSONAL_INFO C WHERE B.CUSTOMER_ID \= A.CEDING_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='C' AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\= B.BRANCH_CODE AND CUSTOMER_TYPE\= B.CUSTOMER_TYPE) AND C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID \= '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? UNION ALL SELECT A.PAYMENT_RECEIPT_NO,'' COMPANY_NAME, C.FIRST_NAME || C.LAST_NAME AS BROKER,A.PAYMENT_RESPONSE, A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.REMARKS FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO C WHERE C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID <> '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=?)
#payment.select.getRetLists=SELECT * FROM (SELECT A.PAYMENT_RECEIPT_NO,B.COMPANY_NAME,C.FIRST_NAME || C.LAST_NAME AS BROKER, A.PAYMENT_RESPONSE,A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.REMARKS FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO B, PERSONAL_INFO C WHERE B.CUSTOMER_ID \= A.CEDING_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='C' AND A.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= A.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= A.BRANCH_CODE) AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\= B.BRANCH_CODE AND CUSTOMER_TYPE\= B.CUSTOMER_TYPE) AND C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID \= '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? UNION ALL SELECT A.PAYMENT_RECEIPT_NO,'' COMPANY_NAME, C.FIRST_NAME || C.LAST_NAME AS BROKER,A.PAYMENT_RESPONSE, A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.REMARKS FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO C WHERE C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B'  AND A.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= A.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= A.BRANCH_CODE) AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID <> '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=?)
payment.select.getRetLists=SELECT * FROM (SELECT A.PAYMENT_RECEIPT_NO,B.COMPANY_NAME,C.FIRST_NAME || C.LAST_NAME AS BROKER, A.PAYMENT_RESPONSE,A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.REMARKS, A.TRANSCATIONTYPE,TO_CHAR(A.TRANS_DATE,'DD/MM/YYYY')TRANS_DATE,A.BRANCH_CODE FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO B, PERSONAL_INFO C WHERE B.CUSTOMER_ID \= A.CEDING_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='C' AND A.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= A.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= A.BRANCH_CODE) AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\= B.BRANCH_CODE AND CUSTOMER_TYPE\= B.CUSTOMER_TYPE) AND C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID \= '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? UNION ALL SELECT A.PAYMENT_RECEIPT_NO,'' COMPANY_NAME, C.FIRST_NAME || C.LAST_NAME AS BROKER,A.PAYMENT_RESPONSE, A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.REMARKS, A.TRANSCATIONTYPE,TO_CHAR(A.TRANS_DATE,'DD/MM/YYYY')TRANS_DATE,A.BRANCH_CODE FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO C WHERE C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B'  AND A.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= A.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= A.BRANCH_CODE) AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID <> '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=?)
payment.select.getTotCount=SELECT COUNT(*) FROM TTRN_ALLOCATED_TRANSACTION WHERE RECEIPT_NO=? AND STATUS=?
payment.select.getRskPremCheckyn=SELECT NVL(CHECKYN,'N') FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=? AND TRANSACTION_NO=?
payment.select.getClaimPymtCheckyn=SELECT NVL(CHECKYN,'N') FROM TTRN_CLAIM_PAYMENT WHERE CONTRACT_NO=? AND CLAIM_PAYMENT_NO=?
##payment.select.getTotAmt=SELECT ((SELECT NVL((AMOUNT-NVL(ALLOCATED_TILL_DATE,0)),0) AMOUNT FROM TTRN_PAYMENT_RECEIPT_DETAILS R INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID=R.CURRENCY_ID AND C.BRANCH_CODE=? AND C.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID =C.CURRENCY_ID AND BRANCH_CODE=C.BRANCH_CODE) WHERE RECEIPT_SL_NO = ? AND R.CURRENCY_ID= ? )+ ((SELECT NVL(SUM(B.ACC_PREMIUM),'0') FROM POSITION_MASTER A, RSK_PREMIUM_DETAILS B WHERE B.RECEIPT_NO IS NULL AND B.CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (B.LAYER_NO, 0) AND (NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = A.CONTRACT_NO AND B.CURRENCY_ID = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ? ) AND B.CHECKYN='Y')*( ? ) )- ((SELECT NVL(SUM(CP.ACC_CLAIM),'0') FROM POSITION_MASTER A, TTRN_CLAIM_DETAILS C, TTRN_CLAIM_PAYMENT CP WHERE A.CONTRACT_NO = C.CONTRACT_NO AND C.CONTRACT_NO = CP.CONTRACT_NO AND C.CLAIM_NO = CP.CLAIM_NO AND NVL (A.LAYER_NO, 0) = NVL (C.LAYER_NO, 0) AND (NVL (CP.PAID_AMOUNT_OC, 0) - NVL (CP.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = A.CONTRACT_NO) AND C.CURRENCY = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ? AND CP.CHECKYN='Y')*( ? ))) DIFFERENCE FROM DUAL
payment.select.getTotAmt=SELECT TO_CHAR(((SELECT NVL((AMOUNT-NVL(ALLOCATED_TILL_DATE,0)),0) AMOUNT FROM TTRN_PAYMENT_RECEIPT_DETAILS R INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID=R.CURRENCY_ID AND C.BRANCH_CODE=? AND C.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID =C.CURRENCY_ID AND BRANCH_CODE=C.BRANCH_CODE) WHERE RECEIPT_SL_NO = ? AND R.CURRENCY_ID= ? )+ ((SELECT NVL(SUM(B.ACC_PREMIUM),'0') FROM POSITION_MASTER A, RSK_PREMIUM_DETAILS B WHERE B.RECEIPT_NO IS NULL AND B.CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (B.LAYER_NO, 0) AND (NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = A.CONTRACT_NO AND B.CURRENCY_ID = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ? ) AND B.CHECKYN='Y')*( ? ) )- ((SELECT NVL(SUM(CP.ACC_CLAIM),'0') FROM POSITION_MASTER A, TTRN_CLAIM_DETAILS C, TTRN_CLAIM_PAYMENT CP WHERE A.CONTRACT_NO = C.CONTRACT_NO AND C.CONTRACT_NO = CP.CONTRACT_NO AND C.CLAIM_NO = CP.CLAIM_NO AND NVL (A.LAYER_NO, 0) = NVL (C.LAYER_NO, 0) AND (NVL (CP.PAID_AMOUNT_OC, 0) - NVL (CP.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = A.CONTRACT_NO) AND C.CURRENCY = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ? AND CP.CHECKYN='Y')*( ? ))),'9G999G999G990D99')DIFFERENCE FROM DUAL
#payment.select.getBroCedingIds=SELECT BROKER_ID,CEDING_ID FROM TTRN_PAYMENT_RECEIPT WHERE PAYMENT_RECEIPT_NO=? AND BRANCH_CODE=?
payment.select.getBroCedingIds=SELECT BROKER_ID,CEDING_ID FROM TTRN_PAYMENT_RECEIPT A WHERE PAYMENT_RECEIPT_NO=? AND BRANCH_CODE=? AND A.AMEND_ID=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO = A.PAYMENT_RECEIPT_NO AND BRANCH_CODE = A.BRANCH_CODE)
#payment.select.getRetDtls=SELECT PAYMENT_RECEIPT_NO,CEDING_ID,BROKER_ID,RECEIPT_BANK,TO_CHAR(TRANS_DATE,'MM/DD/YYYY') TRANS_DATE,PAID_AMT,CURRENCY_ID,EXCHANGE_RATE,TRANSCATIONTYPE,BANK_CHARGES,NET_AMT FROM TTRN_PAYMENT_RECEIPT WHERE PAYMENT_RECEIPT_NO\=? AND BRANCH_CODE\=?
#payment.select.getRetDtls=SELECT PAYMENT_RECEIPT_NO,CEDING_ID,BROKER_ID,RECEIPT_BANK,TO_CHAR(TRANS_DATE,'MM/DD/YYYY') TRANS_DATE,PAID_AMT,CURRENCY_ID,EXCHANGE_RATE,TRANSCATIONTYPE,BANK_CHARGES,NET_AMT,TO_CHAR(AMENDMENT_DATE,'MM/DD/YYYY')AMENDMENT_DATE,REMARKS,PAID_AMT / EXCHANGE_RATE PAID_AMOUNTDC,BANK_CHARGES/EXCHANGE_RATE BankDC,NET_AMT/EXCHANGE_RATE NET_AMTDC,WH_TAX FROM TTRN_PAYMENT_RECEIPT WHERE PAYMENT_RECEIPT_NO\=? AND BRANCH_CODE\=?
payment.select.getRetDtls=SELECT PAYMENT_RECEIPT_NO,CEDING_ID,BROKER_ID,RECEIPT_BANK,TO_CHAR(TRANS_DATE,'DD/MM/YYYY') TRANS_DATE,PAID_AMT,CURRENCY_ID,EXCHANGE_RATE,TRANSCATIONTYPE,BANK_CHARGES,NET_AMT,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,REMARKS,PAID_AMT / EXCHANGE_RATE PAID_AMOUNTDC,BANK_CHARGES/EXCHANGE_RATE BankDC,NET_AMT/EXCHANGE_RATE NET_AMTDC,WH_TAX,PREMIUM_LAVY FROM TTRN_PAYMENT_RECEIPT R WHERE PAYMENT_RECEIPT_NO\=? AND BRANCH_CODE\=? AND R.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO \= R.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= R.BRANCH_CODE)
#payment.select.getRetViewDtls=SELECT  A.RECEIPT_NO,A.RECEIPT_SL_NO,A.AMOUNT,A.EXCHANGE_RATE,TO_CHAR(A.TRANS_DATE,'DD/MM/YYYY') AS IDATE,B.CURRENCY_NAME,A.TOT_AMT,A.SETTLED_EXCRATE,A.CONVERTED_RECCUR  FROM TTRN_PAYMENT_RECEIPT_DETAILS A,CURRENCY_MASTER B  WHERE B.CURRENCY_ID=A.CURRENCY_ID  AND  B.BRANCH_CODE=? AND B.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=B.CURRENCY_ID AND BRANCH_CODE=B.BRANCH_CODE)  AND A.RECEIPT_SL_NO=? ORDER BY A.RECEIPT_NO
payment.select.getRetViewDtls=SELECT  A.RECEIPT_NO,A.RECEIPT_SL_NO,A.AMOUNT,A.EXCHANGE_RATE,TO_CHAR(A.TRANS_DATE,'DD/MM/YYYY') AS IDATE,B.SHORT_NAME CURRENCY_NAME,A.TOT_AMT,A.SETTLED_EXCRATE,A.CONVERTED_RECCUR  FROM TTRN_PAYMENT_RECEIPT_DETAILS A,CURRENCY_MASTER B  WHERE B.CURRENCY_ID=A.CURRENCY_ID  AND  B.BRANCH_CODE=? AND B.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=B.CURRENCY_ID AND BRANCH_CODE=B.BRANCH_CODE)  AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS WHERE RECEIPT_NO=A.RECEIPT_NO AND RECEIPT_SL_NO = A.RECEIPT_SL_NO) AND A.RECEIPT_SL_NO=? ORDER BY A.RECEIPT_NO
#payment.select.getReversalInfo=SELECT DECODE (PI.COMPANY_NAME, 'DIRECT', NULL, PI.COMPANY_NAME) COMPANY_NAME,PIB.FIRST_NAME || ' ' || PIB.LAST_NAME broker,A.BROKER_ID,CM.CURRENCY_NAME,A.EXCHANGE_RATE,A.PAYMENT_RECEIPT_NO, A.PAID_AMT  FROM   TTRN_PAYMENT_RECEIPT A left outer join(SELECT   RECEIPT_SL_NO,NVL (SUM (ALLOCATED_TILL_DATE), '0') ALLOCATED_TILL_DATE FROM   TTRN_PAYMENT_RECEIPT_DETAILS GROUP BY   RECEIPT_SL_NO) B on A.PAYMENT_RECEIPT_NO = b.RECEIPT_SL_NO AND B.ALLOCATED_TILL_DATE = 0 JOIN PERSONAL_INFO PI ON  PI.CUSTOMER_ID = CASE WHEN A.BROKER_ID = 63 THEN A.CEDING_ID ELSE 63 END AND  PI.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = A.BROKER_ID AND PIB.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE) JOIN CURRENCY_MASTER CM ON CM.CURRENCY_ID = A.CURRENCY_ID WHERE A.TRANS_TYPE = ? AND A.PAID_AMT = ? AND A.CURRENCY_ID = ? AND A.EXCHANGE_RATE = ? AND A.BRANCH_CODE=? AND PI.BRANCH_CODE = ? AND PIB.BRANCH_CODE = ? AND CM.BRANCH_CODE = ? AND CM.STATUS = 'Y' AND TRUNC (CM.EFFECTIVE_DATE) <= TRUNC (SYSDATE) AND CM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y' AND TRUNC (EFFECTIVE_DATE) <= TRUNC (SYSDATE))
#payment.select.getReversalInfo=SELECT DECODE (PI.COMPANY_NAME, 'DIRECT', NULL, PI.COMPANY_NAME) COMPANY_NAME,PIB.FIRST_NAME || ' ' || PIB.LAST_NAME broker,A.BROKER_ID,CM.CURRENCY_NAME,A.EXCHANGE_RATE,A.PAYMENT_RECEIPT_NO, A.PAID_AMT  FROM   TTRN_PAYMENT_RECEIPT A left outer join(SELECT   RECEIPT_SL_NO,NVL (SUM (ALLOCATED_TILL_DATE), '0') ALLOCATED_TILL_DATE FROM   TTRN_PAYMENT_RECEIPT_DETAILS GROUP BY   RECEIPT_SL_NO) B on A.PAYMENT_RECEIPT_NO = b.RECEIPT_SL_NO AND B.ALLOCATED_TILL_DATE = 0 JOIN PERSONAL_INFO PI ON  PI.CUSTOMER_ID = CASE WHEN A.BROKER_ID = 63 THEN A.CEDING_ID ELSE 63 END AND  PI.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = A.BROKER_ID AND PIB.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE) JOIN CURRENCY_MASTER CM ON CM.CURRENCY_ID = A.CURRENCY_ID WHERE A.TRANS_TYPE = ? AND A.PAID_AMT = ? AND A.CURRENCY_ID = ? AND  A.BRANCH_CODE=? AND PI.BRANCH_CODE = ? AND PIB.BRANCH_CODE = ? AND CM.BRANCH_CODE = ? AND CM.STATUS = 'Y' AND TRUNC (CM.EFFECTIVE_DATE) <= TRUNC (SYSDATE) AND CM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y' AND TRUNC (EFFECTIVE_DATE) <= TRUNC (SYSDATE))
#payment.select.getReversalInfo=SELECT DECODE (PI.COMPANY_NAME, 'DIRECT', NULL, PI.COMPANY_NAME) COMPANY_NAME,PIB.FIRST_NAME || ' ' || PIB.LAST_NAME broker,A.BROKER_ID,CM.CURRENCY_NAME,A.EXCHANGE_RATE,A.PAYMENT_RECEIPT_NO, A.PAID_AMT  FROM   TTRN_PAYMENT_RECEIPT A left outer join(SELECT   RECEIPT_SL_NO,NVL (SUM (ALLOCATED_TILL_DATE), '0') ALLOCATED_TILL_DATE FROM   TTRN_PAYMENT_RECEIPT_DETAILS GROUP BY   RECEIPT_SL_NO) B on A.PAYMENT_RECEIPT_NO = b.RECEIPT_SL_NO AND B.ALLOCATED_TILL_DATE = 0 AND A.AMEND_ID=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO = A.PAYMENT_RECEIPT_NO AND BRANCH_CODE = A.BRANCH_CODE) JOIN PERSONAL_INFO PI ON  PI.CUSTOMER_ID = CASE WHEN A.BROKER_ID = 63 THEN A.CEDING_ID ELSE 63 END AND  PI.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = A.BROKER_ID AND PIB.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE) JOIN CURRENCY_MASTER CM ON CM.CURRENCY_ID = A.CURRENCY_ID WHERE A.TRANS_TYPE = ? AND A.PAID_AMT = ? AND A.CURRENCY_ID = ? AND  A.BRANCH_CODE=? AND PI.BRANCH_CODE = ? AND PIB.BRANCH_CODE = ? AND CM.BRANCH_CODE = ? AND CM.STATUS = 'Y' AND TRUNC (CM.EFFECTIVE_DATE) <= TRUNC (SYSDATE) AND CM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y' AND TRUNC (EFFECTIVE_DATE) <= TRUNC (SYSDATE))
payment.select.getReversalInfo= SELECT   DECODE (PI.COMPANY_NAME, 'DIRECT', NULL, PI.COMPANY_NAME)COMPANY_NAME, PIB.FIRST_NAME || ' ' || PIB.LAST_NAME broker, AB.BROKER_ID, CM.SHORT_NAME CURRENCY_NAME,AB.EXCHANGE_RATE,AB.PAYMENT_RECEIPT_NO, AB.PAID_AMT, Ab.CEDING_ID, AB.STATUS From  (Select A.Amend_id,A.STATUS,A.BRANCH_CODE,A.EXCHANGE_RATE, A.PAYMENT_RECEIPT_NO,A.CEDING_ID,A.BROKER_ID,A.PAID_AMT,A.TRANS_TYPE,A.CURRENCY_ID from TTRN_PAYMENT_RECEIPT A LEFT OUTER JOIN(  SELECT   RECEIPT_SL_NO, NVL (SUM (ALLOCATED_TILL_DATE), '0') ALLOCATED_TILL_DATE FROM   TTRN_PAYMENT_RECEIPT_DETAILS GROUP BY   RECEIPT_SL_NO) B ON A.PAYMENT_RECEIPT_NO = b.RECEIPT_SL_NO AND B.ALLOCATED_TILL_DATE = 0 Where  A.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO = A.PAYMENT_RECEIPT_NO AND BRANCH_CODE = A.BRANCH_CODE)) AB JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = CASE WHEN AB.BROKER_ID = 63 THEN AB.CEDING_ID ELSE 63 END AND PI.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = AB.BROKER_ID AND PIB.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE) JOIN CURRENCY_MASTER CM ON CM.CURRENCY_ID = AB.CURRENCY_ID WHERE AB.TRANS_TYPE = ? AND AB.PAID_AMT = ? AND AB.CURRENCY_ID = ? AND AB.BRANCH_CODE = ? AND PI.BRANCH_CODE = ? AND PIB.BRANCH_CODE = ? AND CM.BRANCH_CODE = ?  AND CM.STATUS = 'Y' AND TRUNC (CM.EFFECTIVE_DATE) <= TRUNC (SYSDATE) AND CM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y' AND TRUNC (EFFECTIVE_DATE) <= TRUNC (SYSDATE))
PAYMENT_SELECT_GETREVERSALINFO_TREASURY =SELECT   DECODE (PI.COMPANY_NAME, 'DIRECT', NULL, PI.COMPANY_NAME)COMPANY_NAME, PIB.FIRST_NAME || ' ' || PIB.LAST_NAME broker, AB.BROKER_ID, CM.SHORT_NAME CURRENCY_NAME,AB.EXCHANGE_RATE,AB.PAYMENT_RECEIPT_NO, AB.PAID_AMT, Ab.CEDING_ID, AB.STATUS From  (Select A.Amend_id,A.STATUS,A.BRANCH_CODE,A.EXCHANGE_RATE, A.PAYMENT_RECEIPT_NO,A.CEDING_ID,A.BROKER_ID,A.PAID_AMT,A.TRANS_TYPE,A.CURRENCY_ID from TTRN_PAYMENT_RECEIPT A LEFT OUTER JOIN(  SELECT   RECEIPT_SL_NO, NVL (SUM (ALLOCATED_TILL_DATE), '0') ALLOCATED_TILL_DATE FROM   TTRN_PAYMENT_RECEIPT_DETAILS GROUP BY   RECEIPT_SL_NO) B ON A.PAYMENT_RECEIPT_NO = b.RECEIPT_SL_NO AND B.ALLOCATED_TILL_DATE = 0 Where  A.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO = A.PAYMENT_RECEIPT_NO AND BRANCH_CODE = A.BRANCH_CODE)) AB JOIN PERSONAL_INFO PI ON PI.CUSTOMER_ID = CASE WHEN AB.BROKER_ID = 63 THEN AB.CEDING_ID ELSE 63 END AND PI.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) JOIN PERSONAL_INFO PIB ON PIB.CUSTOMER_ID = AB.BROKER_ID AND PIB.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PIB.CUSTOMER_ID AND BRANCH_CODE = PIB.BRANCH_CODE) JOIN CURRENCY_MASTER CM ON CM.CURRENCY_ID = AB.CURRENCY_ID WHERE AB.TRANS_TYPE = ? AND AB.PAID_AMT = ? AND AB.CURRENCY_ID = ? AND AB.BRANCH_CODE = ? AND PI.BRANCH_CODE = ? AND PIB.BRANCH_CODE = ? AND CM.BRANCH_CODE = ? AND AB.BROKER_ID = ? And Decode(?,'-1','A', AB.CEDING_ID)=Decode(?,'-1','A',?) AND CM.STATUS = 'Y' AND TRUNC (CM.EFFECTIVE_DATE) <= TRUNC (SYSDATE) AND CM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE CURRENCY_ID = CM.CURRENCY_ID AND BRANCH_CODE = CM.BRANCH_CODE AND STATUS = 'Y' AND TRUNC (EFFECTIVE_DATE) <= TRUNC (SYSDATE))
payment.select.getReversalInfoPayNo=AND AB.PAYMENT_RECEIPT_NO =?
payment.select.getReversalInfoStatus=AND AB.STATUS =?
payment.update.reversalPayment=UPDATE TTRN_PAYMENT_RECEIPT R SET STATUS=?,REVTRANSALTYPE=?,REVERSALTRANSNO=?,REVERSALDATE=SYSDATE,REVERSELLOGINID=?,LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=SYSDATE WHERE PAYMENT_RECEIPT_NO=? AND BRANCH_CODE=? AND R.AMEND_ID=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT WHERE   PAYMENT_RECEIPT_NO = R.PAYMENT_RECEIPT_NO AND BRANCH_CODE = R.BRANCH_CODE)
#payment.update.reversalPaymentDetails=UPDATE TTRN_PAYMENT_RECEIPT_DETAILS SET STATUS='R',ALLOCATED_TILL_DATE=AMOUNT WHERE RECEIPT_SL_NO=?
payment.update.reversalPaymentDetails=UPDATE TTRN_PAYMENT_RECEIPT_DETAILS R SET STATUS='R',ALLOCATED_TILL_DATE=AMOUNT,LOGIN_ID=?,BRANCH_CODE=?,SYS_DATE=SYSDATE WHERE RECEIPT_SL_NO=? AND R.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=R.RECEIPT_NO AND RECEIPT_SL_NO = R.RECEIPT_SL_NO)
#payment.select.currencyAmt=SELECT (AMOUNT-NVL(ALLOCATED_TILL_DATE,0)) AMOUNT,CURRENCY_NAME FROM TTRN_PAYMENT_RECEIPT_DETAILS R INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID=R.CURRENCY_ID AND C.BRANCH_CODE=? AND C.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE  CURRENCY_ID=C.CURRENCY_ID AND BRANCH_CODE=C.BRANCH_CODE) WHERE RECEIPT_SL_NO=? AND R.CURRENCY_ID=?
payment.select.currencyAmt=SELECT (AMOUNT-NVL(ALLOCATED_TILL_DATE,0)) AMOUNT,SHORT_NAME CURRENCY_NAME FROM TTRN_PAYMENT_RECEIPT_DETAILS R INNER JOIN CURRENCY_MASTER C ON C.CURRENCY_ID=R.CURRENCY_ID AND C.BRANCH_CODE=? AND R.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS  WHERE RECEIPT_NO=R.RECEIPT_NO AND RECEIPT_SL_NO = R.RECEIPT_SL_NO) AND C.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE  CURRENCY_ID=C.CURRENCY_ID AND BRANCH_CODE=C.BRANCH_CODE) WHERE RECEIPT_SL_NO=? AND R.CURRENCY_ID=?

##Upload for Document Management
upload.getDocList=SELECT DUD.DOC_ID,DTM.DOC_NAME,DUD.DOC_DESC,DUD.ORG_FILE_NAME,DUD.OUR_FILE_NAME,TO_CHAR(REPLACE(DUD.FILE_LOCATION,'\\','~')) LOCATION,TO_CHAR(DUD.EFF_DATE,'DD/MM/YYYY') EFF_DATE FROM TTRN_DOC_UPLOAD_DETAILS DUD,TMAS_DOC_TYPE_MASTER DTM WHERE DUD.BRANCH_CODE\=? AND DUD.MODULE_TYPE\=? AND DUD.PRODUCT_ID\=? AND DUD.STATUS\=?  
upload.contNo=AND DUD.CONTRACT_NO=? AND DUD.LAYER_NO=? AND DTM.DOC_TYPE=DUD.DOC_TYPE AND DTM.BRANCH_CODE=DUD.BRANCH_CODE AND DTM.PRODUCT_ID=DUD.PRODUCT_ID AND DTM.MODULE_TYPE=DUD.MODULE_TYPE AND DTM.STATUS='Y' AND DTM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TMAS_DOC_TYPE_MASTER WHERE DOC_TYPE=DTM.DOC_TYPE AND BRANCH_CODE=DTM.BRANCH_CODE AND PRODUCT_ID=DTM.PRODUCT_ID AND MODULE_TYPE=DTM.MODULE_TYPE) ORDER BY DUD.DOC_ID
upload.tranNo=AND DUD.TRAN_NO=? AND DTM.DOC_TYPE=DUD.DOC_TYPE AND DTM.BRANCH_CODE=DUD.BRANCH_CODE AND DTM.PRODUCT_ID=DUD.PRODUCT_ID AND DTM.MODULE_TYPE=DUD.MODULE_TYPE AND DTM.STATUS='Y' AND DTM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TMAS_DOC_TYPE_MASTER WHERE DOC_TYPE=DTM.DOC_TYPE AND BRANCH_CODE=DTM.BRANCH_CODE AND PRODUCT_ID=DTM.PRODUCT_ID AND MODULE_TYPE=DTM.MODULE_TYPE) ORDER BY DUD.DOC_ID
upload.getDocTypeList=SELECT DTM.DOC_TYPE,DTM.DOC_NAME FROM TMAS_DOC_TYPE_MASTER DTM WHERE DTM.BRANCH_CODE=? AND DTM.PRODUCT_ID=? AND DTM.MODULE_TYPE=?  AND  DTM.STATUS=? AND DTM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TMAS_DOC_TYPE_MASTER WHERE DOC_TYPE=DTM.DOC_TYPE AND BRANCH_CODE=DTM.BRANCH_CODE AND PRODUCT_ID=DTM.PRODUCT_ID AND MODULE_TYPE=DTM.MODULE_TYPE) ORDER BY DOC_NAME
upload.insertDocDetails=INSERT INTO TTRN_DOC_UPLOAD_DETAILS (DOC_ID,DOC_TYPE,DOC_DESC,ORG_FILE_NAME,OUR_FILE_NAME,FILE_LOCATION,MODULE_TYPE,PROPOSAL_NO,CONTRACT_NO,LAYER_NO,TRAN_NO,PRODUCT_ID,BRANCH_CODE,LOGIN_ID,EFF_DATE,STATUS,ENDORSEMENT_NO) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,'Y','0')
upload.updateDocDetails=UPDATE TTRN_DOC_UPLOAD_DETAILS SET STATUS='D',DEL_LOGIN_ID=? WHERE BRANCH_CODE=? AND MODULE_TYPE=? AND PRODUCT_ID=? AND DOC_ID=? AND OUR_FILE_NAME=?
upload.updateContLayerNo=AND CONTRACT_NO\=? AND LAYER_NO\=? 
upload.updateTranNo=AND TRAN_NO=?
upload.swapDocId=UPDATE TTRN_DOC_UPLOAD_DETAILS SET DOC_ID=DOC_ID-1 WHERE BRANCH_CODE=? AND MODULE_TYPE=? AND PRODUCT_ID=? AND DOC_ID>? AND OUR_FILE_NAME=?
##moduledoc.list=SELECT DUD.MODULE_TYPE,DUD.CONTRACT_NO,DUD.LAYER_NO,DUD.DOC_ID,DUD.DOC_DESC,DUD.ORG_FILE_NAME,DUD.TRAN_NO,DTM.DOC_NAME,DUD.DOC_DESC,DUD.ORG_FILE_NAME,DUD.OUR_FILE_NAME,DUD.PRODUCT_ID FROM TTRN_DOC_UPLOAD_DETAILS DUD,TMAS_DOC_TYPE_MASTER DTM WHERE DUD.BRANCH_CODE=? AND DUD.STATUS=?  AND DTM.BRANCH_CODE=DUD.BRANCH_CODE AND DTM.PRODUCT_ID=DUD.PRODUCT_ID  AND DTM.STATUS='Y' AND DTM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TMAS_DOC_TYPE_MASTER WHERE DOC_TYPE=DTM.DOC_TYPE AND BRANCH_CODE=DTM.BRANCH_CODE AND PRODUCT_ID=DTM.PRODUCT_ID AND MODULE_TYPE=DTM.MODULE_TYPE) ORDER BY DUD.DOC_ID
moduledoc.list=select MODULE_TYPE,CONTRACT_NO,LAYER_NO,DOC_ID,DOC_DESC,ORG_FILE_NAME,TRAN_NO,OUR_FILE_NAME,PRODUCT_ID,DOC_TYPE ,(select DOC_NAME from TMAS_DOC_TYPE_MASTER where DOC_TYPE=TDUD.DOC_TYPE and branch_code=TDUD.branch_code and MODULE_TYPE=TDUD.MODULE_TYPE and PRODUCT_ID=TDUD.PRODUCT_ID)DOC_NAME from  TTRN_DOC_UPLOAD_DETAILS TDUD where BRANCH_CODE = ? AND STATUS=?
upload_module_list=select CATEGORY_DETAIL_ID,DETAIL_NAME from  CONSTANT_DETAIL where CATEGORY_ID=21 and BRANCH_CODE=? order by CATEGORY_DETAIL_ID
##PolicyBusinessImpl Query
policybusines.select.getListPolicyBranch=SELECT DECODE(TMAS_STATUS,'Y','ACTIVE','DEACTIVE') STATUS,TMAS_POL_BRANCH_ID,TMAS_POL_BRANCH_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_POLICY_BRANCH WHERE BRANCH_CODE\= ?

##By Najeeb
##TreatyMaster Query
treaty.select.listQuery=SELECT DECODE(TMAS_STATUS,'Y','ACTIVE','DEACTIVE')STATUS,TMAS_TREATY_ID,TMAS_TREATY_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_TREATY_MASTER WHERE BRANCH_CODE=?
treaty.select.checkAvail=SELECT COUNT(*) FROM TMAS_TREATY_MASTER WHERE TMAS_TREATY_NAME=? AND BRANCH_CODE=?
treaty.select.maxId=SELECT MAX(TMAS_TREATY_ID) FROM TMAS_TREATY_MASTER
treaty.insert.insertData=INSERT INTO TMAS_TREATY_MASTER (TMAS_TREATY_ID,TMAS_TREATY_NAME,TMAS_STATUS,CORE_COMPANY_CODE,BRANCH_CODE) VALUES (?,?,?,?,?)
treaty.select.editData=SELECT TMAS_TREATY_ID,TMAS_TREATY_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_TREATY_MASTER WHERE TMAS_TREATY_ID=? AND BRANCH_CODE=?
treaty.update.updateData=UPDATE TMAS_TREATY_MASTER SET TMAS_TREATY_NAME=?,TMAS_STATUS=?,CORE_COMPANY_CODE=? WHERE TMAS_TREATY_ID=? AND BRANCH_CODE=?

##ProductMaster Query
product.select.listQuery=SELECT DECODE(TMAS_STATUS,'1','ACTIVE','DEACTIVE')STATUS,TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_PRODUCT_MASTER WHERE BRANCH_CODE=?
product.select.checkAvail=SELECT COUNT(*) FROM TMAS_PRODUCT_MASTER WHERE TMAS_PRODUCT_ID=? AND BRANCH_CODE=?
product.select.maxId=SELECT MAX(TMAS_PRODUCT_ID) FROM TMAS_PRODUCT_MASTER
#product.insert.insertQuery=INSERT INTO TMAS_PRODUCT_MASTER (TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME,TMAS_STATUS,CORE_COMPANY_CODE,BRANCH_CODE) VALUES (?,?,?,?,?)
product.insert.insertQuery=INSERT INTO TMAS_PRODUCT_MASTER (TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME,TMAS_STATUS,CORE_COMPANY_CODE,BRANCH_CODE) VALUES ( (SELECT MAX(TMAS_PRODUCT_ID)+1 FROM TMAS_PRODUCT_MASTER where BRANCH_CODE=?),?,?,?,?)
product.select.editQuery=SELECT TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME,TMAS_STATUS,CORE_COMPANY_CODE FROM TMAS_PRODUCT_MASTER WHERE TMAS_PRODUCT_ID=? AND BRANCH_CODE=?
product.update.updateQuery=UPDATE TMAS_PRODUCT_MASTER SET TMAS_PRODUCT_NAME=?,TMAS_STATUS=?,CORE_COMPANY_CODE=? WHERE TMAS_PRODUCT_ID=? AND BRANCH_CODE=?
product.select.coreCheckInsert=SELECT COUNT(*) FROM TMAS_PRODUCT_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=?
product.select.coreCheckUpdate=SELECT COUNT(*) FROM TMAS_PRODUCT_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=? AND TMAS_PRODUCT_ID!=?
product.select.productCheckInsert=SELECT COUNT(*) FROM TMAS_PRODUCT_MASTER WHERE upper(TMAS_PRODUCT_NAME)=upper(?) AND BRANCH_CODE=?
product.select.productCheckUpdate=SELECT COUNT(*) FROM TMAS_PRODUCT_MASTER WHERE upper(TMAS_PRODUCT_NAME)=upper(?) AND TMAS_PRODUCT_ID!=?  AND BRANCH_CODE=?

##UnderWriterMaster Query
uwr.select.listQuery=SELECT DECODE(UWR_STATUS,'Y','ACTIVE','DEACTIVE')STATUS,UWR_CODE,UNDERWRITTER,UWR_STATUS,CORE_COMPANY_CODE FROM UNDERWRITTER_MASTER WHERE BRANCH_CODE=?
uwr.select.checkAvail=SELECT COUNT(*) FROM UNDERWRITTER_MASTER WHERE UWR_CODE=? AND BRANCH_CODE=?
uwr.insert.insertQuery=INSERT INTO UNDERWRITTER_MASTER (UWR_CODE,UNDERWRITTER,UWR_STATUS,CORE_COMPANY_CODE,BRANCH_CODE) VALUES (UPPER (?),?,?,?,?)
uwr.select.editQuery=SELECT UWR_CODE,UNDERWRITTER,UWR_STATUS,CORE_COMPANY_CODE FROM UNDERWRITTER_MASTER WHERE UWR_CODE=? AND BRANCH_CODE=?
uwr.update.updateQuery=UPDATE UNDERWRITTER_MASTER SET UNDERWRITTER=?,UWR_STATUS=?,CORE_COMPANY_CODE=? WHERE UWR_CODE=? AND BRANCH_CODE=?
uwr.select.coreCheckInsert=SELECT COUNT(*) FROM UNDERWRITTER_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=?
uwr.select.coreCheckUpdate=SELECT COUNT(*) FROM UNDERWRITTER_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=? AND UWR_CODE!=?


##TerritoryMaster Query
territory.select.listQuery=SELECT DECODE(TERRITORY_STATUS,'Y','ACTIVE','DEACTIVE')STATUS,TERRITORY_ID,TERRITORY_CODE,TERRITORY_DESC,TERRITORY_STATUS,CORE_COMPANY_CODE FROM TERRITORY_MASTER WHERE BRANCH_CODE=?
territory.select.maxId=SELECT MAX(TERRITORY_ID) FROM TERRITORY_MASTER
territory.select.checkAvail=SELECT COUNT(*) FROM TERRITORY_MASTER WHERE TERRITORY_CODE=? AND BRANCH_CODE=?
#territory.insert.insertQuery=INSERT INTO TERRITORY_MASTER (TERRITORY_ID,TERRITORY_CODE,TERRITORY_DESC,TERRITORY_STATUS,CORE_COMPANY_CODE,BRANCH_CODE) VALUES (?,?,?,?,?,?)
territory.insert.insertQuery=INSERT INTO TERRITORY_MASTER (TERRITORY_ID,TERRITORY_CODE,TERRITORY_DESC,TERRITORY_STATUS,CORE_COMPANY_CODE,BRANCH_CODE) VALUES ((SELECT MAX(TERRITORY_ID)+1 FROM TERRITORY_MASTER where BRANCH_CODE=?) ,?,?,?,?,?)
terretory.select.editQuery=SELECT TERRITORY_ID,TERRITORY_CODE,TERRITORY_DESC,TERRITORY_STATUS,CORE_COMPANY_CODE FROM TERRITORY_MASTER WHERE TERRITORY_CODE=? AND BRANCH_CODE=?
territory.update.updateQuery=UPDATE TERRITORY_MASTER SET TERRITORY_DESC=?,TERRITORY_STATUS=?,CORE_COMPANY_CODE=? WHERE TERRITORY_CODE=? AND BRANCH_CODE=?
terretory.select.coreCheckInsert=SELECT COUNT(*) FROM TERRITORY_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=?
terretory.select.coreCheckUpdate=SELECT COUNT(*) FROM TERRITORY_MASTER WHERE CORE_COMPANY_CODE=? AND BRANCH_CODE=? AND TERRITORY_CODE!=?
terretory.select.territorynameCheckInsert=SELECT COUNT(*) FROM TERRITORY_MASTER WHERE upper(TERRITORY_DESC)=upper(?) AND BRANCH_CODE=?
terretory.select.territorynamecoreCheckUpdate=SELECT COUNT(*) FROM TERRITORY_MASTER WHERE upper(TERRITORY_DESC)=upper(?) AND TERRITORY_ID!=?  AND BRANCH_CODE=?
##RiskGradeMaster Query
riskgrade.select.listQuery=SELECT DECODE(STATUS,'Y','ACTIVE','DEACTIVE')STATUS_NAME,GRADE_ID,GRADE_DESC,STATUS,CORE_APP_CODE FROM TMAS_RISK_GRADE WHERE BRANCH_CODE=?
#riskgrade.select.checkAvail=SELECT COUNT(*) FROM TMAS_RISK_GRADE WHERE GRADE_ID=? AND BRANCH_CODE=?
riskgrade.select.checkAvail=SELECT COUNT(*) FROM TMAS_RISK_GRADE WHERE GRADE_DESC=? AND BRANCH_CODE=?
riskgrade.select.maxId=SELECT MAX(GRADE_ID) FROM TMAS_RISK_GRADE WHERE BRANCH_CODE=?
#riskgrade.select.insertQuery=INSERT INTO TMAS_RISK_GRADE (GRADE_ID,GRADE_DESC,STATUS,CORE_APP_CODE,BRANCH_CODE) VALUES (?,?,?,?,?)
riskgrade.select.insertQuery=INSERT INTO TMAS_RISK_GRADE (GRADE_ID,GRADE_DESC,STATUS,CORE_APP_CODE,BRANCH_CODE) VALUES ((SELECT MAX(GRADE_ID)+1 FROM TMAS_RISK_GRADE WHERE BRANCH_CODE=?),?,?,?,?)
riskgrade.select.editQuery=SELECT GRADE_ID,GRADE_DESC,STATUS,CORE_APP_CODE FROM TMAS_RISK_GRADE WHERE GRADE_ID=? AND BRANCH_CODE=?
riskgrade.update.updateQuery=UPDATE TMAS_RISK_GRADE SET GRADE_DESC=?,STATUS=?,CORE_APP_CODE=? WHERE GRADE_ID=? AND BRANCH_CODE=?
#riskgrade.select.updateCheckAvail=SELECT COUNT(*) FROM TMAS_RISK_GRADE WHERE GRADE_ID=? AND BRANCH_CODE=?
riskgrade.select.updateCheckAvail=SELECT COUNT(*) FROM TMAS_RISK_GRADE WHERE GRADE_ID\!\=? AND GRADE_DESC\=? AND BRANCH_CODE\=? 
riskgrade.select.coreCheckInsert=SELECT COUNT(*) FROM TMAS_RISK_GRADE WHERE CORE_APP_CODE=? AND BRANCH_CODE=?
riskgrade.select.coreCheckUpdate=SELECT COUNT(*) FROM TMAS_RISK_GRADE WHERE CORE_APP_CODE=? AND BRANCH_CODE=? AND GRADE_ID!=?

##CategoryMaster Query
category.select.listQuery=SELECT DECODE(STATUS,'Y','ACTIVE','DEACTIVE')STATUS_NAME,ZONE_ID,ZONE_DESC,STATUS,CORE_APP_CODE FROM TMAS_CATEGORY_ZONE WHERE BRANCH_CODE=?
category.select.checkAvail=SELECT COUNT(*) FROM TMAS_CATEGORY_ZONE WHERE ZONE_ID=? AND BRANCH_CODE=?
category.select.maxId=SELECT MAX(ZONE_ID) FROM TMAS_CATEGORY_ZONE WHERE BRANCH_CODE=?
#category.insert.insertQuery=INSERT INTO TMAS_CATEGORY_ZONE (ZONE_ID,ZONE_DESC,STATUS,CORE_APP_CODE,BRANCH_CODE) VALUES(?,?,?,?,?)
category.insert.insertQuery=INSERT INTO TMAS_CATEGORY_ZONE (ZONE_ID,ZONE_DESC,STATUS,CORE_APP_CODE,BRANCH_CODE) VALUES((SELECT MAX(ZONE_ID)+1 FROM TMAS_CATEGORY_ZONE WHERE BRANCH_CODE=?),?,?,?,?)
category.select.editQuery=SELECT ZONE_ID,ZONE_DESC,STATUS,CORE_APP_CODE FROM TMAS_CATEGORY_ZONE WHERE ZONE_ID=? AND BRANCH_CODE=?
category.update.updateQuery=UPDATE TMAS_CATEGORY_ZONE SET ZONE_DESC=?,STATUS=?,CORE_APP_CODE=? WHERE ZONE_ID=? AND BRANCH_CODE=?
category.select.updateCheckAvail=SELECT COUNT(*) FROM TMAS_CATEGORY_ZONE WHERE ZONE_ID!=? AND ZONE_DESC=? AND BRANCH_CODE=?
category.select.coreCheckInsert=SELECT COUNT(*) FROM TMAS_CATEGORY_ZONE WHERE CORE_APP_CODE=? AND BRANCH_CODE=?
category.select.coreCheckUpdate=SELECT COUNT(*) FROM TMAS_CATEGORY_ZONE WHERE CORE_APP_CODE=? AND BRANCH_CODE=? AND ZONE_ID!=?
country.select.categoryNameCheckInsert=SELECT COUNT(*) FROM TMAS_CATEGORY_ZONE WHERE upper(ZONE_DESC)=upper(?) AND BRANCH_CODE=?
country.select.categoryNameCheckUpdate=SELECT COUNT(*) FROM TMAS_CATEGORY_ZONE WHERE upper(ZONE_DESC)=upper(?) AND ZONE_ID!=?  AND BRANCH_CODE=?

##ContryMaster Query
#counry.select.listQuery=SELECT   DECODE (CM.STATUS,'Y','ACTIVE','DEACTIVE') STATUS_NAME,CM.SNO,CM.COUNTRY_ID,CM.COUNTRY_NAME,CM.COUNTRY_SHORT_NAME,TO_CHAR (CM.EFFECTIVE_DATE,'DD/MM/YYYY') E_DATE FROM COUNTRY_MASTER CM WHERE CM.BRANCH_CODE = ? AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM COUNTRY_MASTER WHERE COUNTRY_ID=CM.COUNTRY_ID)
counry.select.listQuery=SELECT   DECODE (CM.STATUS,'Y','ACTIVE','DEACTIVE') STATUS_NAME,CM.SNO,CM.COUNTRY_ID,CM.COUNTRY_NAME,CM.COUNTRY_SHORT_NAME,TO_CHAR (CM.EFFECTIVE_DATE,'DD/MM/YYYY') E_DATE FROM COUNTRY_MASTER CM WHERE CM.BRANCH_CODE \= ? AND CM.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM COUNTRY_MASTER WHERE COUNTRY_ID\=CM.COUNTRY_ID and  BRANCH_CODE\=CM.BRANCH_CODE) 
country.select.checkAvail=SELECT COUNT(*) FROM COUNTRY_MASTER WHERE COUNTRY_ID=? AND BRANCH_CODE=?
country.select.maxSno=SELECT MAX(SNO) FROM COUNTRY_MASTER
country.select.maxCid=SELECT MAX(COUNTRY_ID) FROM COUNTRY_MASTER WHERE BRANCH_CODE=?
#country.insert.insertQuery=INSERT INTO COUNTRY_MASTER (SNO,COUNTRY_ID,COUNTRY_NAME,COUNTRY_SHORT_NAME,STATUS,CORE_APP_CODE,AMEND_ID,EFFECTIVE_DATE,REMARKS,BRANCH_CODE) VALUES (?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?)
country.insert.insertQuery=INSERT INTO COUNTRY_MASTER (SNO,COUNTRY_ID,COUNTRY_NAME,COUNTRY_SHORT_NAME,STATUS,CORE_APP_CODE,AMEND_ID,EFFECTIVE_DATE,REMARKS,BRANCH_CODE) VALUES ((SELECT MAX(SNO)+1 FROM COUNTRY_MASTER),(SELECT MAX(COUNTRY_ID)+1 FROM COUNTRY_MASTER WHERE BRANCH_CODE=?),?,?,?,?,'0',TO_DATE(?,'DD/MM/YYYY'),?,?)
#country.select.editQuery=SELECT SNO,COUNTRY_ID,COUNTRY_NAME,COUNTRY_SHORT_NAME,STATUS,CORE_APP_CODE,NATIONALITY_NAME,AMEND_ID,TO_CHAR(EFFECTIVE_DATE,'DD/MM/YYYY')E_DATE,REMARKS FROM COUNTRY_MASTER WHERE COUNTRY_ID=? AND BRANCH_CODE=?
country.select.editQuery=SELECT SNO,COUNTRY_ID,COUNTRY_NAME,COUNTRY_SHORT_NAME,STATUS,CORE_APP_CODE,NATIONALITY_NAME,AMEND_ID,TO_CHAR(EFFECTIVE_DATE,'DD/MM/YYYY')E_DATE,REMARKS FROM COUNTRY_MASTER CM WHERE COUNTRY_ID=? AND BRANCH_CODE=? AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM COUNTRY_MASTER WHERE COUNTRY_ID=CM.COUNTRY_ID and  BRANCH_CODE=CM.BRANCH_CODE)
country.select.updateCheckAvail=SELECT COUNT(*) FROM COUNTRY_MASTER WHERE COUNTRY_ID!=? AND COUNTRY_NAME=? AND BRANCH_CODE=?
country.select.maxAmendId=SELECT MAX(AMEND_ID) FROM COUNTRY_MASTER WHERE COUNTRY_NAME=? AND BRANCH_CODE=?
country.select.coreCheckInsert=SELECT COUNT(*) FROM COUNTRY_MASTER WHERE CORE_APP_CODE=? AND BRANCH_CODE=?
country.select.coreCheckUpdate=SELECT COUNT(*) FROM COUNTRY_MASTER WHERE CORE_APP_CODE=? AND BRANCH_CODE=? AND COUNTRY_ID!=?
country.update.query=INSERT INTO COUNTRY_MASTER (SNO,COUNTRY_ID,COUNTRY_NAME,COUNTRY_SHORT_NAME,STATUS,CORE_APP_CODE,AMEND_ID,EFFECTIVE_DATE,REMARKS,BRANCH_CODE) VALUES (?,?,?,?,?,?,(SELECT MAX(AMEND_ID)+1 FROM COUNTRY_MASTER WHERE COUNTRY_ID=? AND BRANCH_CODE=?),TO_DATE(?,'DD/MM/YYYY'),?,?)
##CurrencyMaster Query
#currency.select.listQuery=SELECT CURRENCY_ID,CURRENCY_NAME,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY')IN_DATE,TO_CHAR(EXPIRY_DATE,'DD/MM/YYYY')EXP_DATE,TO_CHAR(EFFECTIVE_DATE,'DD/MM/YYYY')EFF_DATE,TO_CHAR(ENTRY_DATE,'DD/MM/YYYY')ENT_DATE,DECODE(STATUS,'Y','ACTIVE','DEACTIVE')STATUS_NAME,SHORT_NAME,SNO FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE = ? AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CMA  WHERE CURRENCY_ID=CM.CURRENCY_ID and CMA.BRANCH_CODE=CM.BRANCH_CODE) order by CURRENCY_NAME
currency.select.listQuery=SELECT CURRENCY_ID,CURRENCY_NAME,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY')IN_DATE,TO_CHAR(EXPIRY_DATE,'DD/MM/YYYY')EXP_DATE,TO_CHAR(EFFECTIVE_DATE,'DD/MM/YYYY')EFF_DATE,TO_CHAR(ENTRY_DATE,'DD/MM/YYYY')ENT_DATE,DECODE(STATUS,'Y','ACTIVE','DEACTIVE')STATUS_NAME,SHORT_NAME,SNO FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE = ? AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CMA  WHERE CURRENCY_ID=CM.CURRENCY_ID and CMA.BRANCH_CODE=CM.BRANCH_CODE)
#currency.select.listQuery=SELECT CURRENCY_ID,CURRENCY_NAME,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY')IN_DATE,TO_CHAR(EXPIRY_DATE,'DD/MM/YYYY')EXP_DATE,TO_CHAR(EFFECTIVE_DATE,'DD/MM/YYYY')EFF_DATE,TO_CHAR(ENTRY_DATE,'DD/MM/YYYY')ENT_DATE,DECODE(STATUS,'Y','ACTIVE','DEACTIVE')STATUS_NAME,SHORT_NAME,SNO FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE = ? AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CM.CURRENCY_ID)
##currency.select.checkAvail=SELECT COUNT(*) FROM CURRENCY_MASTER WHERE CURRENCY_NAME=? AND BRANCH_CODE=?
currency.select.checkAvail=SELECT COUNT(*) FROM CURRENCY_MASTER WHERE CURRENCY_ID=? AND BRANCH_CODE=?
currency.select.maxsno=SELECT NVL(MAX(SNO),'0') FROM CURRENCY_MASTER
currency.select.maxCurrencyId=SELECT MAX(CURRENCY_ID) FROM CURRENCY_MASTER WHERE BRANCH_CODE=?
#currency.insert.insertQuery=INSERT INTO CURRENCY_MASTER (CURRENCY_ID,CURRENCY_NAME,AMEND_ID,INCEPTION_DATE,EXPIRY_DATE,EFFECTIVE_DATE,ENTRY_DATE,REMARKS,STATUS,CORE_APP_CODE,COUNTRY_ID,SHORT_NAME,BRANCH_CODE,SNO) VALUES (?,?,?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?)
currency.insert.insertQuery=INSERT INTO CURRENCY_MASTER (CURRENCY_ID,CURRENCY_NAME,AMEND_ID,INCEPTION_DATE,EFFECTIVE_DATE,ENTRY_DATE,REMARKS,STATUS,CORE_APP_CODE,COUNTRY_ID,SHORT_NAME,BRANCH_CODE,SNO) VALUES ((SELECT MAX(CURRENCY_ID)+1 FROM CURRENCY_MASTER WHERE BRANCH_CODE=?),?,'0',TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(sysdate,'DD/MM/RRRR'),?,?,?,?,?,?,(SELECT NVL(MAX(SNO),'0')+1 FROM CURRENCY_MASTER WHERE BRANCH_CODE=? ))
#currency.select.editQuery=SELECT CURRENCY_ID,CURRENCY_NAME,AMEND_ID,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTIONDATE,TO_CHAR(EXPIRY_DATE,'DD/MM/YYYY') EXPIRYDATE,TO_CHAR(EFFECTIVE_DATE,'DD/MM/YYYY') EFFECTIVEDATE,TO_CHAR(ENTRY_DATE,'DD/MM/YYYY') ENTRYDATE,REMARKS,STATUS,CORE_APP_CODE,COUNTRY_ID,SHORT_NAME,BRANCH_CODE,SNO FROM CURRENCY_MASTER CM WHERE CURRENCY_ID=? AND BRANCH_CODE=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CM.CURRENCY_ID)
currency.select.editQuery=SELECT CURRENCY_ID,CURRENCY_NAME,AMEND_ID,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTIONDATE,TO_CHAR(EXPIRY_DATE,'MM/DD/YYYY') EXPIRYDATE,TO_CHAR(EFFECTIVE_DATE,'MM/DD/YYYY') EFFECTIVEDATE,TO_CHAR(ENTRY_DATE,'MM/DD/YYYY') ENTRYDATE,REMARKS,STATUS,CORE_APP_CODE,COUNTRY_ID,SHORT_NAME,BRANCH_CODE,SNO FROM CURRENCY_MASTER CM WHERE CURRENCY_ID=? AND BRANCH_CODE=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CM.CURRENCY_ID and BRANCH_CODE=CM.BRANCH_CODE)
currency.select.updateCheckAvail=SELECT COUNT(*) FROM CURRENCY_MASTER WHERE CURRENCY_ID!=? AND CURRENCY_NAME=? AND BRANCH_CODE=?
##currency.select.maxAmendId=SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_NAME=? AND BRANCH_CODE=?
currency.select.maxAmendId=SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=? AND BRANCH_CODE=?
currency.select.countryId=SELECT COUNTRY_ID FROM TMAS_BRANCH_MASTER WHERE BRANCH_CODE=?
currency.select.inceptionDate=SELECT TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') FROM CURRENCY_MASTER CM WHERE CM.CURRENCY_NAME=? AND BRANCH_CODE=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_NAME=CM.CURRENCY_NAME AND BRANCH_CODE=CM.BRANCH_CODE)
##currency.update.expiryDate=UPDATE CURRENCY_MASTER SET EXPIRY_DATE=TO_DATE(?,'DD/MM/YYYY') WHERE CURRENCY_NAME=? AND AMEND_ID=? AND BRANCH_CODE=?
currency.update.expiryDate=UPDATE CURRENCY_MASTER SET EXPIRY_DATE=TO_DATE(?,'DD/MM/YYYY') WHERE CURRENCY_ID=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=? AND BRANCH_CODE=?) AND BRANCH_CODE=?
currency.select.coreCheckInsert=SELECT COUNT(*) FROM CURRENCY_MASTER WHERE CORE_APP_CODE=? AND BRANCH_CODE=?
currency.select.coreCheckUpdate=SELECT COUNT(*) FROM CURRENCY_MASTER WHERE CORE_APP_CODE=? AND BRANCH_CODE=? AND CURRENCY_ID!=?
currency.update.updatequery=INSERT INTO CURRENCY_MASTER (CURRENCY_ID,CURRENCY_NAME,AMEND_ID,INCEPTION_DATE,EFFECTIVE_DATE,ENTRY_DATE,REMARKS,STATUS,CORE_APP_CODE,COUNTRY_ID, SHORT_NAME,BRANCH_CODE,SNO) VALUES (?,?,(SELECT MAX(AMEND_ID)+1 FROM CURRENCY_MASTER WHERE CURRENCY_ID=? AND BRANCH_CODE=?),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(sysdate,'DD/MM/RRRR'),?,?,?,?,?,?,?)
currency.select.currencyNameCheckInsert=SELECT COUNT(*) FROM CURRENCY_MASTER WHERE upper(CURRENCY_NAME)=upper(?) AND BRANCH_CODE=?
currency.select.currencyNameCheckUpdate=SELECT COUNT(*) FROM CURRENCY_MASTER WHERE upper(CURRENCY_NAME)=upper(?) AND CURRENCY_ID!=?  AND BRANCH_CODE=?
##ExchangeMaster Query
#exchange.select.listQuery=SELECT   EM.EXCHANGE_ID, EM.EXCHANGE_RATE, TO_CHAR (EM.INCEPTION_DATE, 'DD/MM/YYYY') IN_DATE, TO_CHAR (EM.EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE, TO_CHAR (EM.EFFECTIVE_DATE, 'DD/MM/YYYY') EFF_DATE, TO_CHAR (EM.ENTRY_DATE, 'DD/MM/YYYY') ENT_DATE, DECODE (EM.STATUS, 'Y', 'ACTIVE', 'DEACTIVE') STATUS_NAME,CM.CURRENCY_NAME  FROM   EXCHANGE_MASTER EM,CURRENCY_MASTER CM WHERE   EM.BRANCH_CODE = ? AND EM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM EXCHANGE_MASTER  WHERE EXCHANGE_ID = EM.EXCHANGE_ID AND BRANCH_CODE=EM.BRANCH_CODE) AND CM.CURRENCY_ID=EM.CURRENCY_ID AND CM.BRANCH_CODE=? AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CM.CURRENCY_ID AND BRANCH_CODE=CM.BRANCH_CODE)
exchange.select.listQuery=SELECT   DISTINCT AMEND_ID, TO_CHAR (EM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (EM.EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE, TO_CHAR (EM.ENTRY_DATE, 'DD/MM/YYYY') ENTRY_DATE,(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER WHERE BRANCH_CODE =EM.BRANCH_CODE )MAX_AMEND_ID FROM   EXCHANGE_MASTER EM WHERE   BRANCH_CODE = ?
exchange.select.checkAvail=SELECT COUNT(*) FROM EXCHANGE_MASTER WHERE CURRENCY_ID\=? AND BRANCH_CODE\=? 
exchange.select.maxsno=SELECT NVL(MAX(SNO),'0') FROM EXCHANGE_MASTER
exchange.select.maxExchangeId=SELECT MAX(EXCHANGE_ID) FROM EXCHANGE_MASTER WHERE BRANCH_CODE=?
#exchange.insert.insertQuery=INSERT INTO EXCHANGE_MASTER (EXCHANGE_ID,EXCHANGE_RATE,CURRENCY_ID,AMEND_ID,INCEPTION_DATE,EXPIRY_DATE,EFFECTIVE_DATE,ENTRY_DATE,REMARKS,STATUS,CORE_APP_CODE,SNO,COUNTRY_ID,BRANCH_CODE) VALUES (?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?)
#exchange.insert.insertQuery=INSERT INTO EXCHANGE_MASTER (EXCHANGE_ID,EXCHANGE_RATE,CURRENCY_ID,AMEND_ID,INCEPTION_DATE,EFFECTIVE_DATE,ENTRY_DATE,REMARKS,STATUS,CORE_APP_CODE,COUNTRY_ID,BRANCH_CODE)VALUES ((SELECT MAX(EXCHANGE_ID)+1 FROM EXCHANGE_MASTER WHERE BRANCH_CODE=?),?,?,'0',TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(sysdate,'DD/MM/RRRR'),?,?,?,?,?)
exchange.insert.insertQuery=INSERT INTO EXCHANGE_MASTER (EXCHANGE_ID,EXCHANGE_RATE,CURRENCY_ID,AMEND_ID,INCEPTION_DATE,EXPIRY_DATE,EFFECTIVE_DATE,ENTRY_DATE,STATUS,COUNTRY_ID,BRANCH_CODE)VALUES (?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),last_day(to_date(?,'DD/MM/RRRR')),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(sysdate,'DD/MM/RRRR'),'Y',?,?)
exchange.update.updateQuery=INSERT INTO EXCHANGE_MASTER (EXCHANGE_ID,EXCHANGE_RATE,CURRENCY_ID,AMEND_ID,INCEPTION_DATE,EFFECTIVE_DATE,ENTRY_DATE,REMARKS,STATUS,CORE_APP_CODE,COUNTRY_ID,BRANCH_CODE)VALUES (?,?,?,(SELECT MAX(AMEND_ID)+1 FROM EXCHANGE_MASTER WHERE EXCHANGE_ID=? AND BRANCH_CODE=?),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(sysdate,'DD/MM/RRRR'),?,?,?,?,?)
#exchange.select.editQuery=SELECT EXCHANGE_ID,EXCHANGE_RATE,CURRENCY_ID,AMEND_ID,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTIONDATE,TO_CHAR(EXPIRY_DATE,'DD/MM/YYYY') EXPIRYDATE,TO_CHAR(EFFECTIVE_DATE,'DD/MM/YYYY') EFFECTIVEDATE,TO_CHAR(ENTRY_DATE,'DD/MM/YYYY') ENTRYDATE,REMARKS,STATUS,CORE_APP_CODE,COUNTRY_ID,BRANCH_CODE,SNO FROM EXCHANGE_MASTER EM WHERE EXCHANGE_ID=? AND BRANCH_CODE=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER WHERE EXCHANGE_ID=EM.EXCHANGE_ID)
#exchange.select.editQuery=SELECT EXCHANGE_ID,EXCHANGE_RATE,CURRENCY_ID,AMEND_ID,TO_CHAR(INCEPTION_DATE,'MM/DD/YYYY') INCEPTIONDATE,TO_CHAR(EXPIRY_DATE,'DD/MM/YYYY') EXPIRYDATE,TO_CHAR(EFFECTIVE_DATE,'DD/MM/YYYY') EFFECTIVEDATE,TO_CHAR(ENTRY_DATE,'DD/MM/YYYY') ENTRYDATE,REMARKS,STATUS,CORE_APP_CODE,COUNTRY_ID,BRANCH_CODE,SNO FROM EXCHANGE_MASTER EM WHERE EXCHANGE_ID=? AND BRANCH_CODE=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER WHERE EXCHANGE_ID=EM.EXCHANGE_ID and BRANCH_CODE=EM.BRANCH_CODE)
exchange.select.editQuery=SELECT   CURRENCY_ID,amend_id,EXCHANGE_RATE,TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (ENTRY_DATE, 'DD/MM/YYYY') ENTRY_DATE,( SELECT   DISTINCT  CM.CURRENCY_NAME  FROM   CURRENCY_MASTER CM WHERE   CM.BRANCH_CODE = EM.BRANCH_CODE AND CM.COUNTRY_ID = EM.COUNTRY_ID AND CM.STATUS = EM.Status and CM.CURRENCY_ID=EM.CURRENCY_ID AND CM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER WHERE   BRANCH_CODE = CM.BRANCH_CODE AND COUNTRY_ID = CM.COUNTRY_ID AND STATUS = CM.STATUS AND CURRENCY_ID = CM.CURRENCY_ID)) CURRENCY_Name FROM   EXCHANGE_MASTER EM WHERE   branch_code = ? AND amend_id =? order by CURRENCY_ID
#exchange.select.updateCheckAvail=SELECT COUNT(*) FROM EXCHANGE_MASTER WHERE EXCHANGE_ID=? AND COUNTRY_ID=? AND BRANCH_CODE=?
exchange.select.updateCheckAvail=SELECT COUNT(*) FROM EXCHANGE_MASTER WHERE EXCHANGE_ID=? AND CURRENCY_ID!=? AND BRANCH_CODE=?
exchange.select.maxAmendId=SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER WHERE EXCHANGE_ID=? AND BRANCH_CODE=?
#exchange.select.inceptionDate=SELECT TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY')INCEPTIONDATE FROM EXCHANGE_MASTER EM WHERE EM.CURRENCY_ID=? AND EM.BRANCH_CODE=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER WHERE CURRENCY_ID=EM.CURRENCY_ID AND BRANCH_CODE=EM.BRANCH_CODE)
exchange.select.inceptionDate=SELECT DISTINCT TO_CHAR(EXPIRY_DATE,'DD/MM/YYYY') FROM EXCHANGE_MASTER EM WHERE BRANCH_CODE\=? AND AMEND_ID\=(SELECT MAX(AMEND_ID ) FROM EXCHANGE_MASTER WHERE BRANCH_CODE\=EM.BRANCH_CODE) 
#exchange.update.expiryDate=UPDATE EXCHANGE_MASTER SET EXPIRY_DATE=TO_DATE(?,'DD/MM/YYYY') WHERE CURRENCY_ID=? AND AMEND_ID=? AND BRANCH_CODE=?
exchange.update.expiryDate=UPDATE EXCHANGE_MASTER SET EXPIRY_DATE=TO_DATE(?,'DD/MM/YYYY') WHERE EXCHANGE_ID=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM EXCHANGE_MASTER WHERE EXCHANGE_ID=? AND BRANCH_CODE=?) AND BRANCH_CODE=?
exchange.select.coreCheckInsert=SELECT COUNT(*) FROM EXCHANGE_MASTER WHERE CORE_APP_CODE=? AND BRANCH_CODE=?
exchange.select.coreCheckUpdate=SELECT COUNT(*) FROM EXCHANGE_MASTER WHERE CORE_APP_CODE=? AND BRANCH_CODE=? AND EXCHANGE_ID!=?

##CedingMaster Query
ceding.select.listQuery=SELECT COMPANY_NAME,FIRST_NAME,TELEPHONE,MOBILE,EMAIL,CUSTOMER_ID,PAN_NUMBER,INDIVIDUALYN,NON_RESIDENTYN,SPECIAL_RATE FROM PERSONAL_INFO PI WHERE PI.CUSTOMER_TYPE=? AND PI.BRANCH_CODE=? AND AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND CUSTOMER_TYPE = PI.CUSTOMER_TYPE AND BRANCH_CODE = PI.BRANCH_CODE)
ceding.select.checkAvail=SELECT COUNT(*) FROM PERSONAL_INFO WHERE COMPANY_NAME=? AND BRANCH_CODE=?
ceding.select.maxId=SELECT MAX(CUSTOMER_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE=?
ceding.select.countryId=SELECT COUNTRY_ID FROM TMAS_BRANCH_MASTER WHERE BRANCH_CODE=?
ceding.select.direct=select p.CUSTOMER_ID as ID, CASE WHEN P.CUSTOMER_TYPE = 'C' THEN P.COMPANY_NAME ELSE P.FIRST_NAME || ' ' || P.LAST_NAME END as NAME from PERSONAL_INFO p where p.BRANCH_CODE = ? AND p.CUSTOMER_ID <> '63' AND P.CUSTOMER_TYPE = 'C' ORDER BY NAME
#ceding.insert.insertQuery=INSERT INTO PERSONAL_INFO (CUSTOMER_ID, TITLE,FIRST_NAME,TELEPHONE, MOBILE, FAX, EMAIL,ADDRESS1, ADDRESS2, OCCUPATION,COUNTRY, AMEND_ID, INCEPTION_DATE, EFFECTIVE_DATE, REMARKS, STATUS, LOGIN_ID, COMPANY_NAME, CUSTOMER_TYPE, CED_COMPANY_PHONE, CITY, COMPANY_CODE, BRANCH_CODE, ENTRY_DATE,POBOX,LAST_NAME,APPLICATION_ID) VALUES ((SELECT MAX(CUSTOMER_ID)+1 FROM PERSONAL_INFO WHERE BRANCH_CODE=?),?,?,?,?,?,?,?,?,?,?,'0',TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,TO_DATE(sysdate,'DD/MM/RRRR'),?,?,?)
ceding.insert.insertQuery=INSERT INTO PERSONAL_INFO (CUSTOMER_ID, TITLE,FIRST_NAME,TELEPHONE, MOBILE, FAX, EMAIL,ADDRESS1, ADDRESS2, OCCUPATION,COUNTRY, AMEND_ID, INCEPTION_DATE, EFFECTIVE_DATE, REMARKS, STATUS, LOGIN_ID, COMPANY_NAME, CUSTOMER_TYPE, CED_COMPANY_PHONE, CITY, COMPANY_CODE, BRANCH_CODE, ENTRY_DATE,POBOX,LAST_NAME,APPLICATION_ID,PAN_NUMBER,INDIVIDUALYN,NON_RESIDENTYN,SPECIAL_RATE) VALUES ((SELECT MAX(CUSTOMER_ID)+1 FROM PERSONAL_INFO WHERE BRANCH_CODE=?),?,?,?,?,?,?,?,?,?,?,'0',TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,TO_DATE(sysdate,'DD/MM/RRRR'),?,?,?,?,?,?,?)
##ceding.select.editQuery=SELECT CUSTOMER_ID,TITLE,TO_CHAR(EFFECTIVE_DATE,'DD/MM/YYYY')EFFECTIVEDATE,FIRST_NAME,TELEPHONE, MOBILE, FAX, EMAIL,ADDRESS1, ADDRESS2, OCCUPATION,COUNTRY, TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY')INCEPTIONDATE, REMARKS, STATUS, COMPANY_NAME, CED_COMPANY_PHONE, CITY, COMPANY_CODE, POBOX FROM PERSONAL_INFO PI WHERE PI.CUSTOMER_ID=? AND PI.BRANCH_CODE=? AND PI.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND BRANCH_CODE=PI.BRANCH_CODE)
ceding.select.editQuery=SELECT CUSTOMER_ID,TITLE,TO_CHAR(EFFECTIVE_DATE,'MM/DD/YYYY')EFFECTIVEDATE,FIRST_NAME,TELEPHONE, MOBILE, FAX, EMAIL,ADDRESS1, ADDRESS2, OCCUPATION, COUNTRY, TO_CHAR(INCEPTION_DATE,'MM/DD/YYYY')INCEPTIONDATE, REMARKS, STATUS, COMPANY_NAME, CED_COMPANY_PHONE, CITY, COMPANY_CODE, POBOX,APPLICATION_ID,LAST_NAME,CUSTOMER_TYPE,PAN_NUMBER,INDIVIDUALYN,NON_RESIDENTYN,SPECIAL_RATE FROM PERSONAL_INFO PI WHERE PI.CUSTOMER_ID=? AND PI.BRANCH_CODE=? AND PI.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND BRANCH_CODE=PI.BRANCH_CODE)
ceding.select.updateCheckAvail=SELECT COUNT(*) FROM PERSONAL_INFO WHERE CUSTOMER_ID!=? AND COMPANY_NAME=? AND BRANCH_CODE=?  AND STATUS='Y'
ceding.select.maxAmendId=SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=? AND BRANCH_CODE=?
ceding.select.inceptiondate=SELECT TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY')INCEPTIONDATE FROM PERSONAL_INFO PI WHERE PI.CUSTOMER_ID=? AND BRANCH_CODE=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND BRANCH_CODE=PI.BRANCH_CODE)
#ceding.update.expiryDate=UPDATE PERSONAL_INFO SET EXPIRY_DATE=TO_DATE(?,'DD/MM/YYYY') WHERE CUSTOMER_ID=? AND AMEND_ID=? AND BRANCH_CODE=?
ceding.update.expiryDate=UPDATE PERSONAL_INFO SET EXPIRY_DATE=TO_DATE(?,'DD/MM/YYYY') WHERE CUSTOMER_ID=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=? AND BRANCH_CODE=?) AND BRANCH_CODE=?
ceding.select.coreCheckInsert=SELECT COUNT(*) FROM PERSONAL_INFO WHERE APPLICATION_ID=? AND BRANCH_CODE=?
ceding.select.coreCheckUpdate=SELECT COUNT(*) FROM PERSONAL_INFO WHERE APPLICATION_ID=? AND BRANCH_CODE=? AND CUSTOMER_ID!=?
ceding.update.query=INSERT INTO PERSONAL_INFO (CUSTOMER_ID, TITLE,FIRST_NAME,TELEPHONE, MOBILE, FAX, EMAIL,ADDRESS1, ADDRESS2, OCCUPATION,COUNTRY, AMEND_ID, INCEPTION_DATE, EFFECTIVE_DATE, REMARKS, STATUS, LOGIN_ID, COMPANY_NAME, CUSTOMER_TYPE, CED_COMPANY_PHONE, CITY, COMPANY_CODE, BRANCH_CODE, ENTRY_DATE,POBOX,LAST_NAME,APPLICATION_ID,PAN_NUMBER,INDIVIDUALYN,NON_RESIDENTYN,SPECIAL_RATE) VALUES (?,?,?,?,?,?,?,?,?,?,?,(SELECT MAX(AMEND_ID)+1 FROM PERSONAL_INFO WHERE CUSTOMER_ID=? AND BRANCH_CODE=?),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,TO_DATE(sysdate,'DD/MM/RRRR'),?,?,?,?,?,?,?)
##UserMaster
#user.select.listQuery=SELECT DECODE(STATUS, '1', 'ACTIVE', 'DEACTIVE') STATUS_ACTIVE,LOGIN_ID,USERTYPE,USERNAME,STATUS FROM TMAS_LOGIN_MASTER WHERE BRANCH_CODE=?
user.select.listQuery=SELECT DECODE(STATUS, 'Y', 'ACTIVE', 'DEACTIVE') STATUS_ACTIVE,LOGIN_ID,USERTYPE,USERNAME,STATUS FROM LOGIN_MASTER WHERE BRANCH_CODE=?
user.select.rightsList=SELECT MM.MENU_ID,MM.MENU_NAME,CASE WHEN USM.MENU_IDS LIKE '%,'||MM.MENU_ID||',%' THEN 'Y' ELSE 'N' END MENU_STATUS ,SMM.SUB_MENU_NAME,CASE WHEN SMM.SUB_MENU_CODE IS NULL  OR UM.SUB_MENU_RIGHTS IS NULL THEN 'N' WHEN UM.SUB_MENU_RIGHTS LIKE '%,'||SMM.SUB_MENU_CODE||',%' THEN 'Y' ELSE 'N' END SUBMENU_STATUS FROM TMAS_SUB_MENU_MASTER SMM JOIN TMAS_SUB_MENU_CONFIG SMC ON SMM.SUB_MENU_ID=SMC.SUB_MENU_ID AND SMM.STATUS='Y' AND SMC.PRODUCT_ID=? AND SMC.STATUS='Y' RIGHT OUTER JOIN TMAS_MENU_MASTER MM ON MM.MENU_ID=SMC.MENU_ID AND CASE WHEN MM.PRODUCT_ID='0' THEN ? ELSE MM.PRODUCT_ID END=SMC.PRODUCT_ID LEFT OUTER JOIN (select PRODUCT_ID ,RTRIM(XMLAGG(XMLELEMENT(E,MENU_IDS || ',')).EXTRACT('//text()'),',')||',' MENU_IDS from  TMAS_LOGIN_DETAILS  where login_id=? and PRODUCT_ID=? GROUP BY PRODUCT_ID ) USM ON USM.PRODUCT_ID=DECODE(MM.PRODUCT_ID,'0',?,MM.PRODUCT_ID) LEFT OUTER JOIN  (select MENU_ID ,RTRIM(XMLAGG(XMLELEMENT(E,sub_menu_rights || ',')).EXTRACT('//text()'),',')||',' sub_menu_rights from  tmas_sub_menu_rights mr,TMAS_LOGIN_DETAILS ld  where ld.login_id=? and LD.PRODUCT_ID=? and LD.LOGIN_DETAIL_ID=MR.LOGIN_DETAILS_ID GROUP BY MENU_ID) UM ON  UM.MENU_ID=MM.MENU_ID WHERE MM.PRODUCT_ID IN ('0',?) AND MM.TYPE='User' AND MM.ACTIVE='1' AND TRUNC(MM.START_DATE)<=TRUNC(SYSDATE) ORDER BY MM.MENU_ID,SMM.SUB_MENU_ID
user.update.subMenuRights=UPDATE TMAS_SUB_MENU_RIGHTS SET SUB_MENU_RIGHTS =? WHERE LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?) AND MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME=?  AND PRODUCT_ID IN ('0',?))
user.select.checkforinsert=SELECT COUNT(*) FROM TMAS_SUB_MENU_RIGHTS WHERE LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?) AND MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME=? AND PRODUCT_ID IN('0',?))
user.insert.emptyUserRights=INSERT INTO TMAS_SUB_MENU_RIGHTS (LOGIN_DETAILS_ID,MENU_ID,LOGIN_NAME,ACTIVE,SUB_MENU_RIGHTS) VALUES((SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?),(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)),?,'1',?)
user.select.MainMenuList=SELECT MENU_NAME,MENU_ID FROM menu_master WHERE  PRODUCT_ID IN('0',?) AND TYPE=(SELECT USERTYPE FROM TMAS_LOGIN_MASTER WHERE LOGIN_ID=?) AND TRUNC(START_DATE)<=TRUNC(SYSDATE) AND ACTIVE='1'
user.select.selectedMainMenu=SELECT MENU_IDS FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?
user.select.chkUpdateMainMenuList=SELECT COUNT(*) FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?
user.insert.updateMainMenu=INSERT INTO TMAS_LOGIN_DETAILS (LOGIN_DETAIL_ID,LOGIN_ID,PRODUCT_ID,MENU_IDS,ACTIVE) VALUES((SELECT MAX(LOGIN_DETAIL_ID)+1 FROM TMAS_LOGIN_DETAILS),?,?,?,'1')
user.update.updateMainMenu2=UPDATE TMAS_LOGIN_DETAILS SET MENU_IDS=? WHERE LOGIN_ID=? AND PRODUCT_ID=?
user.insert.insertMainMenu=INSERT INTO TMAS_LOGIN_DETAILS (LOGIN_DETAIL_ID, LOGIN_ID, PROCESS_ID, MENU_IDS, REMARKS, ACTIVE, DEPT_ID, PRODUCT_ID) VALUES ((SELECT MAX(LOGIN_DETAIL_ID) + 1 FROM TMAS_LOGIN_DETAILS), ?, ?, ?, ?, ?, (SELECT DEPT_ID FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID = ? AND PROCESS_ID = ? AND ROWNUM=1), ?)
user.delete.deleteMainMenu=DELETE FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID =?
user.insert.insertSubMenuButtons=INSERT INTO TMAS_SUB_MENU_RIGHTS (PROCESS_ID, LOGIN_ID, MENU_ID, SUB_MENU_CODES, ACTIVE, REMARKS) VALUES(?,?,?,?,?,?)
user.delete.deleteSubMenuButtons=DELETE FROM TMAS_SUB_MENU_RIGHTS WHERE LOGIN_ID =?
#user.select.dispalyUser=SELECT LOGIN_ID,USERTYPE,USERNAME,STATUS FROM TMAS_LOGIN_MASTER WHERE LOGIN_ID=?
user.select.dispalyUser=SELECT LOGIN_ID,USERTYPE,USERNAME,STATUS,USER_MAIL,ATTACHED_UW FROM LOGIN_MASTER WHERE LOGIN_ID=? and BRANCH_CODE=?
#user.update.updateUser=UPDATE TMAS_LOGIN_MASTER SET USERNAME=?,USERTYPE=?,STATUS=? WHERE LOGIN_ID=?
user.update.updateUser=UPDATE LOGIN_MASTER SET USERNAME=?,USERTYPE=?,STATUS=?, USER_MAIL=?,ATTACHED_UW=? WHERE LOGIN_ID=? and BRANCH_CODE=?
user.select.loginAvail=SELECT COUNT(*) FROM TMAS_LOGIN_MASTER WHERE LOGIN_ID=?
##user.insert.insertUser=INSERT INTO TMAS_LOGIN_MASTER (LOGIN_ID,PASSWORD,USERTYPE,USERNAME,STATUS,BRANCH_CODE,LOGIN_DETAIL_ID) VALUES(?,?,?,?,?,?,(SELECT MAX(LOGIN_DETAIL_ID)+1 FROM TMAS_LOGIN_MASTER))
user.insert.insertUser=INSERT INTO LOGIN_MASTER (LOGIN_ID,PASSWORD,USERTYPE, USER_MAIL, USERNAME,STATUS,BRANCH_CODE,LOGIN_DETAIL_ID,PASSDATE,STARTDATE,APP_ID,PWD_COUNT,ATTACHED_UW) VALUES(?,?,?,?,?,?,?,(SELECT MAX(LOGIN_DETAIL_ID)+1 FROM LOGIN_MASTER),SYSDATE,SYSDATE,'51','0',?)
user.select.login=SELECT MAX(LOGIN_DETAIL_ID)+1 FROM TMAS_LOGIN_MASTER
#user.update.passwordUpdate=UPDATE TMAS_LOGIN_MASTER SET PASSWORD=? WHERE LOGIN_ID=?
user.update.passwordUpdate=UPDATE LOGIN_MASTER SET PASSWORD=? WHERE LOGIN_ID=? and BRANCH_CODE=?
user.update.loginMaster1=UPDATE TMAS_LOGIN_MASTER SET LPASS5= LPASS4,LPASS4= LPASS3,LPASS3= LPASS2, LPASS2= LPASS1, LPASS1 = PASSWORD,PASSWORD = ? ,PASSDATE=NULL WHERE LOGIN_DETAIL_ID=?
user.update.loginMaster2=UPDATE TMAS_LOGIN_MASTER SET LPASS5= LPASS4,LPASS4= LPASS3,LPASS3= LPASS2, LPASS2= LPASS1, LPASS1 = PASSWORD,PASSWORD = ? ,PASSDATE=SYSDATE WHERE LOGIN_DETAIL_ID=?
user.select.loginDtsId=SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_MASTER WHERE LOGIN_ID=?
user.select.loginDts=SELECT MENU_IDS,ACTIVE FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID =? AND MFR_ID=?
userlist.select.menuList=SELECT MM.MENU_ID,MM.MENU_NAME,CASE WHEN MM.PRODUCT_ID=0 THEN 'Y' WHEN MM.PRODUCT_ID!=0 AND USM.MENU_IDS LIKE '%'||MM.MENU_ID||'%' THEN 'Y' ELSE 'N' END MENU_STATUS ,SMM.SUB_MENU_NAME,CASE WHEN SMM.SUB_MENU_CODE IS NULL  OR UM.SUB_MENU_RIGHTS IS NULL THEN 'N' WHEN UM.SUB_MENU_RIGHTS LIKE '%'||SMM.SUB_MENU_CODE||'%' THEN 'Y' ELSE 'N' END SUBMENU_STATUS FROM TMAS_SUB_MENU_MASTER SMM JOIN TMAS_SUB_MENU_CONFIG SMC ON SMM.SUB_MENU_ID=SMC.SUB_MENU_ID AND SMM.STATUS='Y' AND SMC.PRODUCT_ID='1' AND SMC.STATUS='Y' RIGHT OUTER JOIN menu_master MM ON MM.MENU_ID=SMC.MENU_ID AND CASE WHEN MM.PRODUCT_ID='0' THEN '1' ELSE MM.PRODUCT_ID END=SMC.PRODUCT_ID LEFT OUTER JOIN (select PRODUCT_ID ,RTRIM(XMLAGG(XMLELEMENT(E,MENU_IDS || ',')).EXTRACT('//text()'),',') MENU_IDS from  TMAS_LOGIN_DETAILS where login_id=? and PRODUCT_ID=? GROUP BY PRODUCT_ID ) USM ON USM.PRODUCT_ID=MM.PRODUCT_ID LEFT OUTER JOIN (select MENU_ID ,RTRIM(XMLAGG(XMLELEMENT(E,sub_menu_rights || ',')).EXTRACT('//text()'),',') sub_menu_rights from tmas_sub_menu_rights mr,TMAS_LOGIN_DETAILS ld where ld.login_id=? and LD.PRODUCT_ID=? and LD.LOGIN_DETAIL_ID=MR.LOGIN_DETAILS_ID GROUP BY MENU_ID) UM ON UM.MENU_ID=MM.MENU_ID WHERE MM.PRODUCT_ID IN ('0','1') AND MM.TYPE='User' AND MM.ACTIVE='1' AND TRUNC(MM.START_DATE)<=TRUNC(SYSDATE) ORDER BY MM.MENU_ID,SMM.SUB_MENU_ID
user.select.loginMrfCheck=SELECT COUNT(*) FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?
user.select.previousSubMenus=SELECT SUB_MENU_RIGHTS FROM TMAS_SUB_MENU_RIGHTS WHERE LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?) AND MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)) AND LOGIN_NAME=?
user.insert.limits=INSERT INTO TMAS_UNDERWRITTER_LIMIT (LOGIN_DETAILS_ID,MENU_ID,PRODUCT_ID,LOGIN_NAME,SUB_MENU_RIGHTS,UW_LIMIT,ACTIVE) VALUES((SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?),(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)),?,?,?,?,'1')
user.select.checkUpdateLimit=SELECT COUNT(*) FROM TMAS_UNDERWRITTER_LIMIT WHERE MENU_ID\=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME \= ? AND PRODUCT_ID IN('0', ?)) AND LOGIN_NAME\=? AND PRODUCT_ID\=? AND SUB_MENU_RIGHTS\=? AND LOGIN_DETAILS_ID\=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID\=? AND PRODUCT_ID\=?) 
user.update.limitUpdate=UPDATE TMAS_UNDERWRITTER_LIMIT SET UW_LIMIT=? WHERE MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)) AND LOGIN_NAME=? AND PRODUCT_ID=? AND SUB_MENU_RIGHTS=? AND LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?)
user.delete.limitDelete=DELETE FROM TMAS_UNDERWRITTER_LIMIT WHERE MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)) AND PRODUCT_ID=? AND LOGIN_NAME=? AND SUB_MENU_RIGHTS=? AND LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?)
user.select.sbcode=SELECT SUB_MENU_NAME FROM TMAS_SUB_MENU_MASTER WHERE SUB_MENU_CODE=?
user.select.previousSM=SELECT SUB_MENU_RIGHTS FROM TMAS_SUB_MENU_RIGHTS WHERE MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)) AND LOGIN_NAME=? AND LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?)
user.select.uwrLimit=SELECT SUB_MENU_RIGHTS,UW_LIMIT FROM TMAS_UNDERWRITTER_LIMIT WHERE LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?) AND PRODUCT_ID=? AND MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)) AND LOGIN_NAME=?
user.select.sinleLimitCheck=SELECT COUNT(*) FROM TMAS_UNDERWRITTER_LIMIT WHERE LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?) AND MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)) AND LOGIN_NAME=? AND PRODUCT_ID=?
user.insert.singleLimit=INSERT INTO TMAS_UNDERWRITTER_LIMIT (LOGIN_DETAILS_ID,MENU_ID,PRODUCT_ID,LOGIN_NAME,UW_LIMIT,ACTIVE,SUB_MENU_RIGHTS) VALUES((SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?),(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)),?,?,?,'1',?)
user.update.singleLimit=UPDATE TMAS_UNDERWRITTER_LIMIT SET UW_LIMIT=? WHERE LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?) AND MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)) AND LOGIN_NAME=? AND PRODUCT_ID=?
user.select.singleLimit=SELECT UW_LIMIT FROM TMAS_UNDERWRITTER_LIMIT WHERE LOGIN_DETAILS_ID=(SELECT LOGIN_DETAIL_ID FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=? AND PRODUCT_ID=?) AND MENU_ID=(SELECT MENU_ID FROM menu_master WHERE MENU_NAME = ? AND PRODUCT_ID IN('0', ?)) AND LOGIN_NAME=? AND PRODUCT_ID=?
user.select.menuAllocationList=SELECT MM.MENU_ID ,MM.MENU_NAME ,DECODE(LD.MENU_IDS,NULL,'N','Y') STATUS FROM menu_master MM LEFT OUTER JOIN (SELECT REGEXP_SUBSTR(MENU_IDS,'[^,]+',1,LEVEL) AS MENU_IDS FROM (SELECT MENU_IDS FROM TMAS_LOGIN_DETAILS WHERE  PROCESS_ID =? AND LOGIN_ID =? AND ACTIVE = '1' ) CONNECT BY LEVEL <= LENGTH(MENU_IDS)-LENGTH(REPLACE(MENU_IDS,',',''))+1) LD ON  MM.MENU_ID = MENU_IDS WHERE MM.PRODUCT_ID =? AND MM.PROCESS_ID =? AND MM.ACTIVE = 1 AND MM.TYPE =? ORDER BY MM.ORDER_NO
user.select.menuAllocationInfo=SELECT HM.PRODUCT_ID ,PM.TMAS_PRODUCT_NAME ,HM.DEPT_ID ,DECODE(DM.TMAS_DEPARTMENT_NAME,NULL,'NONE',DM.TMAS_DEPARTMENT_NAME) TMAS_DEPARTMENT_NAME ,HM.PROCESS_ID ,HM.PROCESS_NAME ,HM.UW_LIMIT_YN ,LD.UNDERWRITTIMG_LIMIT,DECODE(LD.PROCESS_ID,NULL,'N','Y') ALLOCATED_YN FROM TMAS_PRODUCT_MASTER PM JOIN TMAS_HOMEPAGE_MASTER HM ON HM.PRODUCT_ID = PM.TMAS_PRODUCT_ID LEFT OUTER JOIN TMAS_LOGIN_DETAILS LD ON LD.PROCESS_ID = HM.PROCESS_ID AND LD.PRODUCT_ID = HM.PRODUCT_ID AND LD.LOGIN_ID=? AND LD.ACTIVE=1 LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON HM.PRODUCT_ID = DM.TMAS_PRODUCT_ID AND HM.DEPT_ID = DM.TMAS_DEPARTMENT_ID AND DM.TMAS_STATUS = 'H' AND DM.BRANCH_CODE = ? WHERE HM.BRANCH_CODE = ? AND HM.STATUS = 'Y' AND PM.TMAS_STATUS ='1' AND PM.BRANCH_CODE = ? ORDER BY HM.PRODUCT_ID,HM.DEPT_ID,HM.PROCESS_ID

user.select.checkMenuAllocated=SELECT COUNT(*) FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID\=? AND PROCESS_ID\=? 
user.select.getAllocatedMenus=SELECT MM.MENU_ID ,MM.MENU_NAME ,DECODE(LD.MENU_IDS,NULL,'N','Y') STATUS FROM menu_master MM LEFT OUTER JOIN (SELECT REGEXP_SUBSTR(MENU_IDS,'[^,]+',1,LEVEL) AS MENU_IDS FROM (SELECT MENU_IDS FROM TMAS_LOGIN_DETAILS WHERE  PROCESS_ID =? AND LOGIN_ID =? AND ACTIVE = '1' ) CONNECT BY LEVEL <= LENGTH(MENU_IDS)-LENGTH(REPLACE(MENU_IDS,',',''))+1) LD ON  MM.MENU_ID = MENU_IDS  WHERE MM.PRODUCT_ID =? AND MM.PROCESS_ID =? AND MM.ACTIVE = 1 ORDER BY MM.ORDER_NO
user.update.updateMenuids=UPDATE TMAS_LOGIN_DETAILS  SET MENU_IDS=? WHERE PRODUCT_ID=? AND PROCESS_ID=? AND LOGIN_ID=?
user.insert.insertMenuids=INSERT INTO TMAS_LOGIN_DETAILS (LOGIN_DETAIL_ID,LOGIN_ID,PROCESS_ID,MENU_IDS,PRODUCT_ID,ACTIVE) VALUES ((SELECT MAX(LOGIN_DETAIL_ID)+1 FROM TMAS_LOGIN_DETAILS),?,?,?,?,'1')
user.select.submenuAllocationInfo=SELECT HM.PRODUCT_ID ,PM.TMAS_PRODUCT_NAME ,HM.DEPT_ID ,DECODE(DM.TMAS_DEPARTMENT_NAME,NULL,'NONE',DM.TMAS_DEPARTMENT_NAME) TMAS_DEPARTMENT_NAME ,HM.PROCESS_ID ,HM.PROCESS_NAME ,MM.MENU_ID ,MM.MENU_NAME ,DECODE(SMM.MENU_ID,NULL,'N','Y') ALLOCATED_YN,LD.UNDERWRITTIMG_LIMIT FROM TMAS_PRODUCT_MASTER PM JOIN TMAS_HOMEPAGE_MASTER HM ON HM.PRODUCT_ID = PM.TMAS_PRODUCT_ID JOIN menu_master MM ON MM.PRODUCT_ID = HM.PRODUCT_ID AND MM.PROCESS_ID = HM.PROCESS_ID AND MM.SUB_MENU_CODES IS NOT NULL JOIN TMAS_LOGIN_DETAILS LD ON LD.PROCESS_ID = HM.PROCESS_ID AND LD.PRODUCT_ID = HM.PRODUCT_ID AND LD.ACTIVE = '1' AND LD.LOGIN_ID = ? LEFT OUTER JOIN TMAS_SUB_MENU_RIGHTS SMM ON SMM.PROCESS_ID = LD.PROCESS_ID AND SMM.MENU_ID = MM.MENU_ID AND SMM.LOGIN_ID = ? AND SMM.ACTIVE = '1' LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON  HM.PRODUCT_ID = DM.TMAS_PRODUCT_ID AND HM.DEPT_ID = DM.TMAS_DEPARTMENT_ID AND DM.TMAS_STATUS = 'H' AND DM.BRANCH_CODE = ? WHERE HM.BRANCH_CODE = ? AND HM.STATUS = 'Y' AND PM.TMAS_STATUS ='1' AND PM.BRANCH_CODE = ? AND MM.ACTIVE = '1' ORDER BY HM.PRODUCT_ID,HM.DEPT_ID,HM.PROCESS_ID
user.select.menuAllocationPath=SELECT   PM.TMAS_PRODUCT_NAME||'>>'|| NVL (DM.TMAS_DEPARTMENT_NAME, 'NONE')||'>>'||HM.PROCESS_NAME Process_name FROM TMAS_PRODUCT_MASTER pm JOIN TMAS_HOMEPAGE_MASTER hm ON HM.PRODUCT_ID = PM.TMAS_PRODUCT_ID LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER dm ON HM.PRODUCT_ID = DM.TMAS_PRODUCT_ID AND HM.DEPT_ID = DM.TMAS_DEPARTMENT_ID AND DM.TMAS_STATUS = 'H' AND DM.BRANCH_CODE = ? WHERE HM.BRANCH_CODE = ? AND HM.STATUS = 'Y' AND PM.TMAS_STATUS = '1' AND PM.BRANCH_CODE = ? and hm.process_id=? ORDER BY   HM.PRODUCT_ID, HM.DEPT_ID, HM.PROCESS_ID
user.select.getAllocatedSubMenus=SELECT MM.PROCESS_ID ,MM.MENU_ID ,MM.MENU_NAME ,SMM.SUB_MENU_CODE,SMM.SUB_MENU_NAME,DECODE(SMR.SUB_MENU_CODES,NULL,'N','Y') STATUS FROM (SELECT PROCESS_ID,MENU_ID,MENU_NAME,REGEXP_SUBSTR(SUB_MENU_CODES,'[^,]+',1,LEVEL) AS SUB_MENU_CODES FROM (SELECT PROCESS_ID,MENU_ID,MENU_NAME,SUB_MENU_CODES FROM menu_master  WHERE  PROCESS_ID = ? AND MENU_ID = ? AND ACTIVE = '1' ) CONNECT BY LEVEL <= LENGTH(SUB_MENU_CODES)-LENGTH(REPLACE(SUB_MENU_CODES,',',''))+1 ) MM LEFT OUTER JOIN TMAS_SUB_MENU_MASTER SMM ON SMM.SUB_MENU_CODE = MM.SUB_MENU_CODES AND SMM.STATUS = 'Y' LEFT OUTER JOIN (SELECT MENU_ID,REGEXP_SUBSTR(SUB_MENU_CODES,'[^,]+',1,LEVEL) AS SUB_MENU_CODES FROM (SELECT MENU_ID,SUB_MENU_CODES FROM TMAS_SUB_MENU_RIGHTS WHERE  PROCESS_ID = ? AND LOGIN_ID = ? AND MENU_ID = ? AND ACTIVE = '1' ) CONNECT BY LEVEL <= LENGTH(SUB_MENU_CODES)-LENGTH(REPLACE(SUB_MENU_CODES,',',''))+1) SMR ON MM.MENU_ID = SMR.MENU_ID  AND MM.SUB_MENU_CODES = SMR.SUB_MENU_CODES ORDER BY SMM.SUB_MENU_NAME
##user.select.getAllocatedSubMenus=SELECT MM.PROCESS_ID ,MM.MENU_ID ,MM.MENU_NAME ,SMM.SUB_MENU_CODE,SMM.SUB_MENU_NAME,DECODE(SMR.SUB_MENU_CODES,NULL,'N','Y') STATUS FROM (SELECT PROCESS_ID,MENU_ID,MENU_NAME,REGEXP_SUBSTR(SUB_MENU_CODES,'[^,]+',1,LEVEL) AS SUB_MENU_CODES FROM (SELECT PROCESS_ID,MENU_ID,MENU_NAME,SUB_MENU_CODES FROM TMAS_MENU_MASTER  WHERE  PROCESS_ID = ? AND ACTIVE = '1' ) CONNECT BY LEVEL <= LENGTH(SUB_MENU_CODES)-LENGTH(REPLACE(SUB_MENU_CODES,',',''))+1 ) MM LEFT OUTER JOIN TMAS_SUB_MENU_MASTER SMM ON SMM.SUB_MENU_CODE = MM.SUB_MENU_CODES AND SMM.STATUS = 'Y' LEFT OUTER JOIN (SELECT MENU_ID,REGEXP_SUBSTR(SUB_MENU_CODES,'[^,]+',1,LEVEL) AS SUB_MENU_CODES FROM (SELECT MENU_ID,SUB_MENU_CODES FROM TMAS_SUB_MENU_RIGHTS WHERE  PROCESS_ID = ? AND LOGIN_ID = ?  AND ACTIVE = '1' ) CONNECT BY LEVEL <= LENGTH(SUB_MENU_CODES)-LENGTH(REPLACE(SUB_MENU_CODES,',',''))+1) SMR ON MM.MENU_ID = SMR.MENU_ID  AND MM.SUB_MENU_CODES = SMR.SUB_MENU_CODES ORDER BY SMM.SUB_MENU_NAME
user.select.checkSubMenuAllocation=SELECT COUNT(*) FROM TMAS_SUB_MENU_RIGHTS WHERE LOGIN_ID=? AND PROCESS_ID=? AND MENU_ID=?
#user.insert.insertsubMenuids=INSERT INTO TMAS_SUB_MENU_RIGHTS (PROCESS_ID,LOGIN_ID,MENU_ID,SUB_MENU_CODES,ACTIVE) VALUES (?,?,?,?,'Y')
user.insert.insertsubMenuids=INSERT INTO TMAS_SUB_MENU_RIGHTS (PROCESS_ID,LOGIN_ID,MENU_ID,SUB_MENU_CODES,ACTIVE) VALUES (?,?,?,?,'1')
user.update.updateSubMneuids=UPDATE TMAS_SUB_MENU_RIGHTS SET SUB_MENU_CODES=? WHERE PROCESS_ID=? AND LOGIN_ID=? AND MENU_ID=?
user.select.checkDeptAllocated=SELECT COUNT(*) FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=?
user.select.checkDeptAllocatedSubMenu=SELECT COUNT(*) FROM TMAS_SUB_MENU_RIGHTS WHERE LOGIN_ID=?
user.insert.insertMenuGlobalSubmit=INSERT INTO TMAS_LOGIN_DETAILS (LOGIN_DETAIL_ID, LOGIN_ID, PROCESS_ID,MENU_IDS, REMARKS, ACTIVE, DEPT_ID, PRODUCT_ID, UNDERWRITTIMG_LIMIT ) SELECT (SELECT MAX(LOGIN_DETAIL_ID) FROM TMAS_LOGIN_DETAILS)+ROWNUM LOGIN_DETAIL_ID ,? ,PROCESS_ID, MENU_IDS ,NULL , 1 ,DEPT_ID ,PRODUCT_ID,NULL FROM (select RTRIM(XMLAGG(XMLELEMENT(E,MENU_ID || ',')).EXTRACT('//text()'),',') MENU_IDS ,PRODUCT_ID,PROCESS_ID,DEPT_ID FROM menu_master WHERE TYPE='User' AND ACTIVE=1 GROUP BY PROCESS_ID,PRODUCT_ID,DEPT_ID)
user.update.uwlimit=UPDATE TMAS_LOGIN_DETAILS SET UNDERWRITTIMG_LIMIT=? WHERE PROCESS_ID=? AND LOGIN_ID=?
user.update.menuGlobalSubmit=UPDATE TMAS_LOGIN_DETAILS SET ACTIVE \= ? WHERE LOGIN_ID \= ? AND ( PRODUCT_ID,DEPT_ID ) \= (SELECT PM.TMAS_PRODUCT_ID,NVL(DM.TMAS_DEPARTMENT_ID,0) FROM TMAS_PRODUCT_MASTER PM LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON PM.TMAS_PRODUCT_ID \= DM.TMAS_PRODUCT_ID AND DM.TMAS_DEPARTMENT_NAME \= ? AND DM.TMAS_STATUS \= 'H' AND DM.BRANCH_CODE \= ? WHERE  PM.TMAS_PRODUCT_NAME \= ? AND PM.TMAS_STATUS \= 1 AND PM.BRANCH_CODE\=?) 
user.select.previousDeptDetails=SELECT HM.PRODUCT_ID ,PM.TMAS_PRODUCT_NAME ,HM.DEPT_ID ,DECODE(DM.TMAS_DEPARTMENT_NAME,NULL,'NONE',DM.TMAS_DEPARTMENT_NAME) TMAS_DEPARTMENT_NAME ,HM.PROCESS_ID,DECODE(LD.PROCESS_ID,NULL,'N','Y') ALLOCATED_YN FROM TMAS_PRODUCT_MASTER PM JOIN TMAS_HOMEPAGE_MASTER HM ON HM.PRODUCT_ID = PM.TMAS_PRODUCT_ID JOIN menu_master MM ON MM.PRODUCT_ID = HM.PRODUCT_ID AND MM.PROCESS_ID = HM.PROCESS_ID LEFT OUTER JOIN TMAS_LOGIN_DETAILS LD  ON LD.PROCESS_ID = HM.PROCESS_ID AND LD.PRODUCT_ID = HM.PRODUCT_ID and LD.ACTIVE = '1' and LD.LOGIN_ID = ? LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON  HM.PRODUCT_ID = DM.TMAS_PRODUCT_ID  AND HM.DEPT_ID = DM.TMAS_DEPARTMENT_ID AND DM.TMAS_STATUS = 'H' AND DM.BRANCH_CODE = ? WHERE  HM.BRANCH_CODE = ? AND HM.STATUS = 'Y' AND PM.TMAS_STATUS ='1' AND PM.BRANCH_CODE = ? AND MM.ACTIVE = '1' ORDER BY HM.PRODUCT_ID,HM.DEPT_ID,HM.PROCESS_ID
user.insert.subMenuGlobalSubmit=INSERT INTO TMAS_SUB_MENU_RIGHTS (PROCESS_ID, LOGIN_ID, MENU_ID, SUB_MENU_CODES, ACTIVE, REMARKS )SELECT PROCESS_ID,? ,MENU_ID ,SUB_MENU_CODES , 0 ,NULL FROM menu_master WHERE TYPE='User' AND ACTIVE=1 AND SUB_MENU_CODES IS NOT NULL
user.update.updateSubMenuGlobalSubmit=UPDATE TMAS_SUB_MENU_RIGHTS SMM SET SMM.ACTIVE =? WHERE SMM.LOGIN_ID =? AND SMM.PROCESS_ID = (SELECT HM.PROCESS_ID FROM TMAS_PRODUCT_MASTER PM JOIN TMAS_HOMEPAGE_MASTER HM ON HM.PRODUCT_ID = PM.TMAS_PRODUCT_ID LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON PM.TMAS_PRODUCT_ID = DM.TMAS_PRODUCT_ID AND HM.DEPT_ID = DM.TMAS_DEPARTMENT_ID AND DM.TMAS_DEPARTMENT_NAME =? AND DM.TMAS_STATUS = 'H' AND DM.BRANCH_CODE =? WHERE PM.TMAS_PRODUCT_NAME =? AND PM.TMAS_STATUS = 1 AND PM.BRANCH_CODE=? AND HM.BRANCH_CODE=? AND HM.DEPT_ID =DECODE (DM.TMAS_DEPARTMENT_ID,NULL, 0,DM.TMAS_DEPARTMENT_ID) AND HM.PROCESS_ID = SMM.PROCESS_ID)
user.select.adminMenuList=SELECT MENU_ID,MENU_NAME FROM menu_master WHERE TYPE='Admin' AND ACTIVE='1' ORDER BY ORDER_NO
user.select.adminmenuids=SELECT NVL(MENU_IDS,'') MENU_IDS FROM TMAS_LOGIN_DETAILS WHERE LOGIN_ID=?
user.insert.adminmenus=INSERT INTO TMAS_LOGIN_DETAILS (LOGIN_DETAIL_ID,LOGIN_ID,MENU_IDS,ACTIVE,PROCESS_ID,PRODUCT_ID,DEPT_ID) VALUES((SELECT MAX(LOGIN_DETAIL_ID)+1 FROM TMAS_LOGIN_DETAILS),?,?,'1','0','0','0')
user.update.adminmenus=UPDATE TMAS_LOGIN_DETAILS SET MENU_IDS=? WHERE LOGIN_ID=?

##MenuMaster
##menumaster.insert.menuInsert=INSERT INTO TMAS_MENU_MASTER (MENU_ID,MENU_NAME,MENU_URL,MASTER_MENU_ID,ORDER_NO,REMARKS,START_DATE,END_DATE,TYPE,ACTIVE,PRODUCT_ID) VALUES (?,?,?,?,?,?,?,?,?,?,?)
##menumaster.update.updateMenu=UPDATE TMAS_MENU_MASTER SET MENU_NAME = ?, MENU_URL = ?, MASTER_MENU_ID = ?,ORDER_NO = ?, REMARKS = ?, START_DATE = ?, END_DATE = ?, TYPE = ?,ACTIVE = ?,PRODUCT_ID = ? WHERE MENU_ID = ?
##menumaster.select.selectMenu=SELECT MENU_ID,MENU_NAME FROM TMAS_MENU_MASTER WHERE TYPE \=? AND MASTER_MENU_ID\='0' AND PRODUCT_ID\=?
#menumaster.select.maxMenuId=SELECT MAX(MENU_ID)+1 FROM TMAS_MENU_MASTER

##menumaster.select.checkMenuInsert=SELECT COUNT(*) FROM TMAS_MENU_MASTER WHERE UPPER(MENU_NAME)=UPPER(?) AND TYPE=? AND PRODUCT_ID IN (0,?)
#menumaster.select.checkMenuInsert=SELECT COUNT(*) FROM TMAS_MENU_MASTER WHERE UPPER(MENU_NAME)=UPPER(?) AND TYPE=? AND PROCESS_ID=?
#menumaster.insert.insertMenu=INSERT INTO TMAS_MENU_MASTER (MENU_ID,MENU_NAME,MENU_URL,ORDER_NO,ACTIVE,REMARKS,START_DATE,END_DATE,TYPE,PROCESS_ID,PRODUCT_ID,DEPT_ID) VALUES (?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?)
#menumaster.select.menuList=SELECT MENU_ID,MENU_NAME FROM TMAS_MENU_MASTER WHERE PROCESS_ID=?
#menumaster.select.editMenu=SELECT MENU_ID,MENU_NAME,MENU_URL,ORDER_NO,REMARKS,TO_CHAR(START_DATE, 'DD/MM/YYYY') AS START_DATE,TO_CHAR(END_DATE, 'DD/MM/YYYY') AS END_DATE,TYPE,ACTIVE,PROCESS_ID FROM TMAS_MENU_MASTER WHERE MENU_ID \= ?

#menumaster.select.updateCheck = SELECT COUNT(*) FROM TMAS_MENU_MASTER WHERE MENU_NAME=? AND TYPE=? AND PROCESS_ID=? AND MENU_ID!=?
#menumaster.update.updateMenu=UPDATE TMAS_MENU_MASTER SET MENU_NAME = ?, MENU_URL = ?, ORDER_NO = ?, REMARKS = ?, START_DATE = TO_DATE(?,'DD/MM/YYYY'), END_DATE = TO_DATE(?,'DD/MM/YYYY'), TYPE = ?,ACTIVE = ?,PROCESS_ID = ?,PRODUCT_ID=?,DEPT_ID=? WHERE MENU_ID = ?
menumaster.select.deptDropDown=SELECT TMAS_DEPARTMENT_ID,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_PRODUCT_ID=? AND BRANCH_CODE=? AND TMAS_STATUS='H'
menumaster.select.processDropDown=SELECT PROCESS_ID,PROCESS_NAME FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID=? AND DEPT_ID=? AND BRANCH_CODE=? AND STATUS='Y'
menumaster.select.getproductAndDeptid=SELECT PRODUCT_ID,DEPT_ID FROM TMAS_HOMEPAGE_MASTER WHERE PROCESS_ID=?


menumaster.select.menuList=SELECT MENU_ID,MENU_NAME FROM MENU_MASTER WHERE PROCESS_ID=?
menumaster.select.maxMenuId=SELECT MAX(MENU_ID)+1 FROM MENU_MASTER
menumaster.insert.insertMenu=INSERT INTO MENU_MASTER (MENU_ID,MENU_NAME,MENU_URL,ORDER_NO,ACTIVE,REMARKS,START_DATE,END_DATE,TYPE,PROCESS_ID,PRODUCT_ID,DEPT_ID) VALUES (?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?)
menumaster.select.editMenu=SELECT MENU_ID,MENU_NAME,MENU_URL,ORDER_NO,REMARKS,TO_CHAR(START_DATE, 'DD/MM/YYYY') AS START_DATE,TO_CHAR(END_DATE, 'DD/MM/YYYY') AS END_DATE,TYPE,ACTIVE,PROCESS_ID,PRODUCT_ID,DEPT_ID FROM MENU_MASTER WHERE MENU_ID \= ?
menumaster.update.updateMenu=UPDATE MENU_MASTER SET MENU_NAME = ?, MENU_URL = ?, ORDER_NO = ?, REMARKS = ?, START_DATE = TO_DATE(?,'DD/MM/YYYY'), END_DATE = TO_DATE(?,'DD/MM/YYYY'), TYPE = ?,ACTIVE = ?,PROCESS_ID = ?,PRODUCT_ID=?,DEPT_ID=? WHERE MENU_ID = ?
menumaster.select.checkMenuInsert=SELECT COUNT(*) FROM MENU_MASTER WHERE UPPER(MENU_NAME)=UPPER(?) AND TYPE=? AND PROCESS_ID=?
menumaster.select.updateCheck = SELECT COUNT(*) FROM MENU_MASTER WHERE MENU_NAME=? AND TYPE=? AND PROCESS_ID=? AND MENU_ID!=?
##BranchMaster Query
##branch.select.listQuery=SELECT BRANCH_CODE,BRANCH_NAME,BASE_CURRENCY_ID,DESC_CURRENCY_ID,DECODE(STATUS,'Y','ACTIVE','DEACTIVE')STATUS_NAME,COUNTRY_ID FROM TMAS_BRANCH_MASTER
branch.select.currencyList=SELECT CM.CURRENCY_ID,CM.CURRENCY_NAME FROM CURRENCY_MASTER CM WHERE CM.COUNTRY_ID=? AND CM.BRANCH_CODE=? AND CM.STATUS='Y' AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE COUNTRY_ID=CM.COUNTRY_ID AND BRANCH_CODE=CM.BRANCH_CODE AND CURRENCY_ID=CM.CURRENCY_ID) ORDER BY CURRENCY_NAME ASC
#branch.select.currencyList=SELECT CM.CURRENCY_ID,CM.CURRENCY_NAME FROM CURRENCY_MASTER CM WHERE CM.COUNTRY_ID=? AND CM.BRANCH_CODE=?  AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE COUNTRY_ID=CM.COUNTRY_ID AND BRANCH_CODE=CM.BRANCH_CODE AND CURRENCY_ID=CM.CURRENCY_ID) ORDER BY CURRENCY_NAME ASC
branch.select.countryList=SELECT CM.COUNTRY_ID,CM.COUNTRY_NAME FROM COUNTRY_MASTER CM WHERE CM.BRANCH_CODE=? AND CM.STATUS='Y' AND CM.AMEND_ID=(SELECT MAX(AMEND_ID)FROM COUNTRY_MASTER WHERE BRANCH_CODE=CM.BRANCH_CODE AND COUNTRY_ID=CM.COUNTRY_ID) ORDER BY COUNTRY_NAME ASC
#branch.select.countryList=SELECT CM.COUNTRY_ID,CM.COUNTRY_NAME FROM COUNTRY_MASTER CM WHERE CM.BRANCH_CODE=? AND CM.AMEND_ID=(SELECT MAX(AMEND_ID)FROM COUNTRY_MASTER WHERE BRANCH_CODE=CM.BRANCH_CODE AND COUNTRY_ID=CM.COUNTRY_ID) ORDER BY COUNTRY_NAME ASC
##branch.select.listQuery=SELECT BM.BRANCH_CODE, BM.BRANCH_NAME, CM.CURRENCY_NAME, CMD.CURRENCY_NAME, DECODE(BM.STATUS,'Y','ACTIVE','DEACTIVE')STATUS_NAME, CTM.COUNTRY_NAME, BM.CORE_APP_CODE FROM TMAS_BRANCH_MASTER BM ,CURRENCY_MASTER CM, COUNTRY_MASTER CTM , CURRENCY_MASTER CMD WHERE BM.BRANCH_CODE = CM.BRANCH_CODE AND BM.BASE_CURRENCY_ID = CM.CURRENCY_ID AND BM.COUNTRY_ID = CM.COUNTRY_ID AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CM.CURRENCY_ID AND BRANCH_CODE=CM.BRANCH_CODE AND COUNTRY_ID = CM.COUNTRY_ID ) AND BM.BRANCH_CODE = CMD.BRANCH_CODE AND BM.DESC_CURRENCY_ID = CMD.CURRENCY_ID AND BM.COUNTRY_ID = CMD.COUNTRY_ID  AND CMD.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CMD.CURRENCY_ID AND BRANCH_CODE=CMD.BRANCH_CODE AND COUNTRY_ID = CMD.COUNTRY_ID ) AND BM.BRANCH_CODE = CTM.BRANCH_CODE AND CTM.COUNTRY_ID=BM.COUNTRY_ID AND CTM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM COUNTRY_MASTER WHERE BRANCH_CODE=CTM.BRANCH_CODE AND COUNTRY_ID=CTM.COUNTRY_ID )
#branch.select.listQuery=SELECT BM.BRANCH_CODE, BM.BRANCH_NAME, CM.CURRENCY_NAME, CMD.CURRENCY_NAME, DECODE (BM.STATUS, 'Y', 'ACTIVE', 'DEACTIVE') STATUS_NAME, CTM.COUNTRY_NAME,BM.CORE_APP_CODE FROM TMAS_BRANCH_MASTER BM ,CURRENCY_MASTER CM, COUNTRY_MASTER CTM , CURRENCY_MASTER CMD WHERE BM.BASE_CURRENCY_ID = CM.CURRENCY_ID AND CM.BRANCH_CODE = ? AND CM.COUNTRY_ID = 1 AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CM.CURRENCY_ID AND BRANCH_CODE=CM.BRANCH_CODE AND COUNTRY_ID = CM.COUNTRY_ID ) AND CM.BRANCH_CODE = CMD.BRANCH_CODE AND BM.DESC_CURRENCY_ID = CMD.CURRENCY_ID AND CMD.COUNTRY_ID = 1 AND CMD.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CURRENCY_ID=CMD.CURRENCY_ID AND BRANCH_CODE=CMD.BRANCH_CODE AND COUNTRY_ID = CMD.COUNTRY_ID ) AND CM.BRANCH_CODE = CTM.BRANCH_CODE AND CTM.COUNTRY_ID=BM.COUNTRY_ID AND CTM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM COUNTRY_MASTER WHERE BRANCH_CODE=CTM.BRANCH_CODE AND COUNTRY_ID=CTM.COUNTRY_ID )
branch.select.listQuery=select BRANCH_CODE,BRANCH_NAME,(select CURRENCY_NAME from CURRENCY_MASTER CM where CURRENCY_ID=BASE_CURRENCY_ID and branch_code=TBM.BRANCH_CODE and amend_id=(select max(amend_id) from CURRENCY_MASTER  where CURRENCY_ID=CM.CURRENCY_ID and branch_code=CM.branch_code))BASE_CURRENCY_NAME,(select CURRENCY_NAME from CURRENCY_MASTER CM where CURRENCY_ID=DESC_CURRENCY_ID and branch_code=TBM.BRANCH_CODE and amend_id=(select max(amend_id) from CURRENCY_MASTER  where CURRENCY_ID=CM.CURRENCY_ID and branch_code=CM.branch_code))DESC_CURRENCY_NAME ,DECODE (STATUS, 'Y', 'ACTIVE', 'DEACTIVE') STATUS_NAME from TMAS_BRANCH_MASTER TBM
branch.select.nextBranchCode=SELECT LPAD(MAX(BRANCH_CODE)+1,2,0)BRANCH_CODE FROM TMAS_BRANCH_MASTER
branch.select.checkInsert=SELECT COUNT(*) FROM TMAS_BRANCH_MASTER WHERE BRANCH_NAME=?
branch.insert.branchInsert=INSERT INTO TMAS_BRANCH_MASTER (BRANCH_CODE,BRANCH_NAME,BASE_CURRENCY_ID,DESC_CURRENCY_ID,STATUS,COUNTRY_ID,CORE_APP_CODE) VALUES(?,?,?,?,?,?,?)
branch.select.branchSelect=SELECT BRANCH_CODE,BRANCH_NAME,BASE_CURRENCY_ID,DESC_CURRENCY_ID,STATUS,COUNTRY_ID,CORE_APP_CODE FROM TMAS_BRANCH_MASTER WHERE BRANCH_CODE=?
branch.select.checkUpdate=SELECT COUNT(*) FROM TMAS_BRANCH_MASTER WHERE BRANCH_NAME=? AND BRANCH_CODE!=?
branch.update.branchUpdate=UPDATE TMAS_BRANCH_MASTER SET BRANCH_NAME=?,BASE_CURRENCY_ID=?,DESC_CURRENCY_ID=?,STATUS=?,COUNTRY_ID=?,CORE_APP_CODE=? WHERE BRANCH_CODE=?
branch.select.checkCoreAppCode=SELECT COUNT(*) FROM TMAS_BRANCH_MASTER WHERE CORE_APP_CODE=?
branch.select.checkCoreAppCodeUpdate=SELECT COUNT(*) FROM TMAS_BRANCH_MASTER WHERE CORE_APP_CODE=? AND BRANCH_CODE!=?

##SubMenuMaster Query
submenu.select.subMenuList=SELECT DECODE(STATUS,'Y','ACTIVE','DEACTIVE')STATUS_NAME,SUB_MENU_ID,SUB_MENU_CODE,SUB_MENU_NAME,STATUS FROM TMAS_SUB_MENU_MASTER
submenu.select.subMenuSelect=SELECT SUB_MENU_CODE,SUB_MENU_NAME,STATUS,REMARKS,SUB_MENU_ID FROM TMAS_SUB_MENU_MASTER WHERE SUB_MENU_CODE=?
submenu.select.insertCheck=SELECT COUNT(*) FROM TMAS_SUB_MENU_MASTER WHERE SUB_MENU_CODE=?
submenu.select.insertCheck2=SELECT COUNT(*) FROM TMAS_SUB_MENU_MASTER WHERE SUB_MENU_NAME=?
submenu.insert.submenuInsert=INSERT INTO TMAS_SUB_MENU_MASTER (SUB_MENU_ID,SUB_MENU_CODE,SUB_MENU_NAME,STATUS,REMARKS) VALUES ((SELECT MAX(SUB_MENU_ID)+1 FROM TMAS_SUB_MENU_MASTER),?,?,?,?)
submenu.select.updateCheck=SELECT COUNT(*) FROM TMAS_SUB_MENU_MASTER WHERE SUB_MENU_CODE=? AND SUB_MENU_ID!=?
submenu.select.updateCheck2=SELECT COUNT(*) FROM TMAS_SUB_MENU_MASTER WHERE SUB_MENU_NAME=? AND SUB_MENU_ID!=?
submenu.update.updateSubMenu=UPDATE TMAS_SUB_MENU_MASTER SET SUB_MENU_CODE=?,SUB_MENU_NAME=?,STATUS=?,REMARKS=? WHERE SUB_MENU_ID=?
submenu.select.menuList=SELECT MENU_ID,MENU_NAME FROM TMAS_MENU_MASTER WHERE PRODUCT_ID IN('0',?) AND TYPE\='User' AND ACTIVE\='1' AND TRUNC(START_DATE)<\=TRUNC(SYSDATE) ORDER BY MENU_NAME
submenu.select.subMenuListSelect=SELECT SUB_MENU_ID,SUB_MENU_NAME FROM TMAS_SUB_MENU_MASTER WHERE STATUS='Y'
submenu.select.SelectedSubMenus=SELECT SUB_MENU_ID FROM TMAS_SUB_MENU_CONFIG WHERE MENU_ID=? AND PRODUCT_ID=?
submenu.insert.subMenuConfig=INSERT INTO TMAS_SUB_MENU_CONFIG (SNO,MENU_ID,MENU_NAME,SUB_MENU_ID,PRODUCT_ID,STATUS) VALUES ((SELECT MAX(SNO)+1 FROM TMAS_SUB_MENU_CONFIG),?,(SELECT MENU_NAME FROM menu_master WHERE MENU_ID=?),?,?,'Y')
submenu.delete.subMenuConfig=DELETE FROM TMAS_SUB_MENU_CONFIG WHERE MENU_ID=? AND SUB_MENU_ID=? AND PRODUCT_ID=?
submenu.select.subMenuInfo=SELECT PM.TMAS_PRODUCT_NAME ,DECODE(DM.TMAS_DEPARTMENT_NAME,NULL,'NONE',DM.TMAS_DEPARTMENT_NAME) TMAS_DEPARTMENT_NAME ,HM.PROCESS_NAME ,MM.MENU_NAME,MM.PROCESS_ID,MM.MENU_ID FROM TMAS_PRODUCT_MASTER PM JOIN TMAS_HOMEPAGE_MASTER HM ON PM.TMAS_PRODUCT_ID = HM.PRODUCT_ID JOIN menu_master MM ON HM.PROCESS_ID = MM.PROCESS_ID  AND HM.PRODUCT_ID = MM.PRODUCT_ID LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON HM.PRODUCT_ID = DM.TMAS_PRODUCT_ID AND HM.DEPT_ID = DM.TMAS_DEPARTMENT_ID AND DM.TMAS_STATUS = 'H' AND DM.BRANCH_CODE = ? WHERE PM.BRANCH_CODE = ? AND PM.TMAS_STATUS = '1' AND HM.BRANCH_CODE = ? AND HM.STATUS = 'Y' AND MM.ACTIVE = 1 ORDER BY HM.PRODUCT_ID,HM.DEPT_ID,HM.PROCESS_ID
submenu.select.subMenuAllocationList=SELECT SMM.SUB_MENU_CODE ,SMM.SUB_MENU_NAME ,DECODE(MM.SUB_MENU_CODES,NULL,'N','Y') ALLOCATED_YN FROM TMAS_SUB_MENU_MASTER SMM LEFT OUTER JOIN menu_master MM ON MM.PROCESS_ID = ? AND MM.MENU_ID = ? AND MM.ACTIVE = '1' AND ','||MM.SUB_MENU_CODES||',' LIKE '%,'||SMM.SUB_MENU_CODE||',%' WHERE SMM.STATUS = 'Y'
submenu.update.updateMenu=UPDATE MENU_MASTER SET SUB_MENU_CODES=? WHERE PROCESS_ID=? AND MENU_ID=?
##submenu.select.checksubmenuallocated=SELECT COUNT(*) FROM TMAS_MENU_MASTER WHERE PROCESS_ID=? AND MENU_ID=?


##Home Page List Query's
#portfolio.select.contractList1=SELECT A.PROPOSAL_NO,A.CONTRACT_NO,B.TMAS_DEPARTMENT_NAME,A.CEDING_COMPANY_ID,TO_CHAR (A.ACCOUNT_DATE, 'dd/mm/yyyy') AS ACCOUNT_DATE,C.COMPANY_NAME, C1.FIRST_NAME || ' '||C1.LAST_NAME BROKER_NAME,TO_CHAR (A.INCEPTION_DATE, 'dd/mm/yyyy') AS INCEPTION_DATE, TO_CHAR (A.EXPIRY_DATE, 'dd/mm/yyyy') AS EXPIRY_DATE,A.LAYER_NO,A.BASE_LAYER,A.OLD_CONTRACTNO AS OLD_CONTRACTNO, A.RENEWAL_STATUS AS RENEWAL_STATUS,(A.EXPIRY_DATE - SYSDATE) AS RENWALDATE,(CASE WHEN A.UW_YEAR != 0 THEN A.UW_YEAR ELSE NULL END) UW_YEAR, TO_CHAR (A.UW_MONTH, 'dd/mm/yyyy') UW_MONTH,E.UNDERWRITTER,DECODE(CD.CONTRACT_NO,NULL,'N','Y') HAS_CLAIM,A.AMEND_ID FROM   POSITION_MASTER A JOIN TMAS_DEPARTMENT_MASTER B ON A.DEPT_ID = B.TMAS_DEPARTMENT_ID JOIN PERSONAL_INFO C ON  C.CUSTOMER_ID = A.CEDING_COMPANY_ID JOIN TTRN_RISK_DETAILS D ON A.PRODUCT_ID = D.RSK_PRODUCTID AND A.CONTRACT_NO = D.RSK_CONTRACT_NO
#portfolio.select.contractList1=SELECT distinct A.PROPOSAL_NO,A.CONTRACT_NO,B.TMAS_DEPARTMENT_NAME,A.CEDING_COMPANY_ID,TO_CHAR (A.ACCOUNT_DATE, 'dd/mm/yyyy') AS ACCOUNT_DATE,C.COMPANY_NAME, C1.FIRST_NAME || ' '||C1.LAST_NAME BROKER_NAME,TO_CHAR (A.INCEPTION_DATE, 'dd/mm/yyyy') AS INCEPTION_DATE, TO_CHAR (A.EXPIRY_DATE, 'dd/mm/yyyy') AS EXPIRY_DATE,A.LAYER_NO,A.BASE_LAYER,A.OLD_CONTRACTNO AS OLD_CONTRACTNO, A.RENEWAL_STATUS AS RENEWAL_STATUS,(A.EXPIRY_DATE - SYSDATE) AS RENWALDATE,(CASE WHEN A.UW_YEAR != 0 THEN A.UW_YEAR ELSE NULL END) UW_YEAR, TO_CHAR (A.UW_MONTH, 'dd/mm/yyyy') UW_MONTH,E.UNDERWRITTER,DECODE(CD.CONTRACT_NO,NULL,'N','Y') HAS_CLAIM,A.AMEND_ID FROM   POSITION_MASTER A JOIN TMAS_DEPARTMENT_MASTER B ON A.DEPT_ID = B.TMAS_DEPARTMENT_ID JOIN PERSONAL_INFO C ON  C.CUSTOMER_ID = A.CEDING_COMPANY_ID JOIN TTRN_RISK_DETAILS D ON A.PRODUCT_ID = D.RSK_PRODUCTID AND A.CONTRACT_NO = D.RSK_CONTRACT_NO
#portfolio.select.contractList1=SELECT distinct A.PROPOSAL_NO,A.CONTRACT_NO,(case  when   length(A.PROPOSAL_NO)>\= 10 then to_number(SUBSTR (A.PROPOSAL_NO, 4, 11)) else A.PROPOSAL_NO end) prop,(case  when   length(A.CONTRACT_NO)>\= 10 then to_number(SUBSTR (A.CONTRACT_NO, 4, 11)) else A.CONTRACT_NO end ) cont,B.TMAS_DEPARTMENT_NAME,B.TMAS_DEPARTMENT_ID,A.CEDING_COMPANY_ID,TO_CHAR (A.ACCOUNT_DATE, 'dd/mm/yyyy') AS ACCOUNT_DATE,C.COMPANY_NAME, C1.FIRST_NAME || ' '||C1.LAST_NAME BROKER_NAME,TO_CHAR (A.INCEPTION_DATE, 'dd/mm/yyyy') AS INCEPTION_DATE, TO_CHAR (A.EXPIRY_DATE, 'dd/mm/yyyy') AS EXPIRY_DATE,A.LAYER_NO,A.BASE_LAYER,A.OLD_CONTRACTNO AS OLD_CONTRACTNO, A.RENEWAL_STATUS AS RENEWAL_STATUS,(A.EXPIRY_DATE - SYSDATE) AS RENWALDATE,(CASE WHEN A.UW_YEAR \!\= 0 THEN A.UW_YEAR ELSE NULL END) UW_YEAR, TO_CHAR (A.UW_MONTH, 'dd/mm/yyyy') UW_MONTH,E.UNDERWRITTER,DECODE(CD.CONTRACT_NO,NULL,'N','Y') HAS_CLAIM,A.AMEND_ID, A.CEASE_STATUS,D.RS_ENDORSEMENT_TYPE,D.RSK_INSURED_NAME,A.PROPOSAL_STATUS,A.CONTRACT_STATUS,(SELECT RENEWAL_STATUS FROM POSITION_MASTER  PM WHERE PM.PROPOSAL_NO \= A.BASE_LAYER AND PM.AMEND_ID IN (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER MM WHERE      MM.PROPOSAL_NO \= PM.PROPOSAL_NO ))OLD_STATUS FROM   POSITION_MASTER A JOIN TMAS_DEPARTMENT_MASTER B ON A.DEPT_ID \= B.TMAS_DEPARTMENT_ID JOIN PERSONAL_INFO C ON  C.CUSTOMER_ID \= A.CEDING_COMPANY_ID JOIN TTRN_RISK_DETAILS D ON A.PRODUCT_ID \= D.RSK_PRODUCTID AND A.CONTRACT_NO \= D.RSK_CONTRACT_NO 
portfolio.select.contractList1=SELECT distinct A.PRODUCT_ID,A.PROPOSAL_NO,SUBSTR(A.PROPOSAL_NO,-5) proposal,A.CONTRACT_NO,A.EDIT_MODE,(case  WHEN LENGTH (A.PROPOSAL_NO) \= 10 THEN TO_NUMBER (SUBSTR (A.PROPOSAL_NO, 4, 11)) WHEN LENGTH (A.PROPOSAL_NO) >\= 11 THEN TO_NUMBER (SUBSTR (A.PROPOSAL_NO, 5, 11)) else A.PROPOSAL_NO end) prop,(case  WHEN LENGTH (A.CONTRACT_NO) \= 11 THEN TO_NUMBER (SUBSTR (A.CONTRACT_NO, 4, 11)) WHEN LENGTH (A.CONTRACT_NO) >\= 12 THEN TO_NUMBER (SUBSTR (A.CONTRACT_NO, 5, 11)) else A.CONTRACT_NO end ) cont,B.TMAS_DEPARTMENT_NAME,B.TMAS_DEPARTMENT_ID,A.CEDING_COMPANY_ID,TO_CHAR (A.ACCOUNT_DATE, 'dd/mm/yyyy') AS ACCOUNT_DATE,C.COMPANY_NAME, C1.FIRST_NAME || ' '||C1.LAST_NAME BROKER_NAME,TO_CHAR (A.INCEPTION_DATE, 'dd/mm/yyyy') AS INCEPTION_DATE,TO_CHAR (A.EXPIRY_DATE, 'dd/mm/yyyy') AS EXPIRY_DATE,A.LAYER_NO,A.BASE_LAYER,A.OLD_CONTRACTNO AS OLD_CONTRACTNO, A.RENEWAL_STATUS AS RENEWAL_STATUS,(A.EXPIRY_DATE - SYSDATE) AS RENWALDATE,(CASE WHEN A.UW_YEAR \!\= 0 THEN A.UW_YEAR ELSE NULL END) UW_YEAR, TO_CHAR (A.UW_MONTH, 'dd/mm/yyyy') UW_MONTH,E.UNDERWRITTER,DECODE(CD.CONTRACT_NO,NULL,'N','Y') HAS_CLAIM,A.AMEND_ID, A.CEASE_STATUS,D.RSK_INSURED_NAME,A.PROPOSAL_STATUS,A.CONTRACT_STATUS,D.RS_ENDORSEMENT_TYPE,(SELECT RENEWAL_STATUS FROM POSITION_MASTER  PM WHERE PM.PROPOSAL_NO \= A.BASE_LAYER AND PM.AMEND_ID IN (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER MM WHERE      MM.PROPOSAL_NO \= PM.PROPOSAL_NO ))OLD_STATUS FROM   POSITION_MASTER A JOIN TMAS_DEPARTMENT_MASTER B ON A.DEPT_ID \= B.TMAS_DEPARTMENT_ID JOIN PERSONAL_INFO C ON  C.CUSTOMER_ID \= A.CEDING_COMPANY_ID JOIN TTRN_RISK_DETAILS D ON A.PRODUCT_ID \= D.RSK_PRODUCTID AND A.CONTRACT_NO \= D.RSK_CONTRACT_NO and CONTRACT_STATUS \!\='C' 
portfolio.select.contractList2=AND A.AMEND_ID \= D.RSK_ENDORSEMENT_NO AND A.DEPT_ID \= D.RSK_DEPTID JOIN UNDERWRITTER_MASTER E ON D.RSK_UNDERWRITTER \= E.UWR_CODE JOIN PERSONAL_INFO C1 ON  C1.CUSTOMER_ID \= A.BROKER_ID LEFT OUTER JOIN ( SELECT DISTINCT CONTRACT_NO,LAYER_NO FROM TTRN_CLAIM_DETAILS ) CD ON A.CONTRACT_NO \= CD.CONTRACT_NO 
portfolio.select.contractList3=WHERE  A.PRODUCT_ID \= ?   AND A.CONTRACT_NO > 0 AND B.TMAS_PRODUCT_ID \= ? AND B.BRANCH_CODE \= ?   AND B.TMAS_STATUS\='Y' AND C.BRANCH_CODE \= ? AND C.CUSTOMER_TYPE \= 'C' AND C.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID \= C.CUSTOMER_ID AND BRANCH_CODE \= C.BRANCH_CODE AND CUSTOMER_TYPE \= C.CUSTOMER_TYPE) AND E.BRANCH_CODE \= ? AND A.BRANCH_CODE \= ? AND A.AMEND_ID IN (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE  PRODUCT_ID \= ? AND A.CONTRACT_NO \= CONTRACT_NO and PROPOSAL_NO\=A.PROPOSAL_NO
#AND A.DEPT_ID=DEPT_ID
portfolio.select.contractList3History=WHERE  A.PRODUCT_ID \= ?  AND A.CONTRACT_STATUS \= 'A' AND A.CONTRACT_NO > 0 AND B.TMAS_PRODUCT_ID \= ? AND B.BRANCH_CODE \= ?   AND B.TMAS_STATUS\='Y' AND C.BRANCH_CODE \= ? AND C.CUSTOMER_TYPE \= 'C' AND C.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID \= C.CUSTOMER_ID AND BRANCH_CODE \= C.BRANCH_CODE AND CUSTOMER_TYPE \= C.CUSTOMER_TYPE) AND E.BRANCH_CODE \= ? AND A.BRANCH_CODE \= ? AND C1.BRANCH_CODE \= ? AND C1.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID \= C1.CUSTOMER_ID AND BRANCH_CODE \= C1.BRANCH_CODE AND CUSTOMER_TYPE \= C1.CUSTOMER_TYPE) 
#portfolio.select.contractList4=AND A.BRANCH_CODE = BRANCH_CODE) AND C1.BRANCH_CODE = ? AND C1.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = C1.CUSTOMER_ID AND BRANCH_CODE = C1.BRANCH_CODE AND CUSTOMER_TYPE = C1.CUSTOMER_TYPE)
portfolio.select.contractList4=AND A.BRANCH_CODE = BRANCH_CODE ) AND C1.BRANCH_CODE = ? AND C1.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = C1.CUSTOMER_ID AND BRANCH_CODE = C1.BRANCH_CODE AND CUSTOMER_TYPE = C1.CUSTOMER_TYPE)
portfolio.select.contractListDeptID=AND B.TMAS_DEPARTMENT_ID = ?
portfolio.select.loginid=AND a.LOGIN_ID IN(?)
portfolio.select.contractListLayerNo1=AND A.LAYER_NO=D.RSK_LAYER_NO
portfolio.select.contractListLayerNo2=AND A.LAYER_NO\=CD.LAYER_NO 
portfolio.select.contractListLayerNo3=AND A.LAYER_NO=LAYER_NO
portfolio.select.conno=   AND A.CONTRACT_NO LIKE ?
portfolio.select.perno=   AND A.PROPOSAL_NO LIKE ?
portfolio.select.comname= AND UPPER(C.COMPANY_NAME) LIKE UPPER(?)  
portfolio.select.broname= AND UPPER(C1.FIRST_NAME) LIKE UPPER(?)  
portfolio.select.uyear=  AND a.UW_YEAR LIKE ?
##portfolio.select.orderbyconno=   ORDER BY A.CONTRACT_NO DESC,A.PROPOSAL_NO ASC
portfolio.select.orderbyconno= ORDER BY  cont DESC,prop ASC
ORDER_BY_PROPOSAL = ORDER BY  proposal DESC
#portfolio.select.orderbyConNoAmendId=AND A.PROPOSAL_NO=? ORDER BY  A.CONTRACT_NO,A.AMEND_ID DESC
portfolio.select.orderbyConNoAmendId=AND A.PROPOSAL_NO=? AND nvl(A.Endt_status,'Y')='Y' ORDER BY  A.CONTRACT_NO,A.AMEND_ID DESC
portfolio.select.orderbyprono= ORDER BY BOUQUET_NO DESC,BASE_LAYER_DESC DESC,PROPOSAL_NO  
#portfolio.select.ntu=SELECT   a.PROPOSAL_NO,b.TMAS_DEPARTMENT_NAME,a.CEDING_COMPANY_ID, TO_CHAR (a.ACCOUNT_DATE, 'dd/mm/yyyy') AS ACCOUNT_DATE, c.COMPANY_NAME,C1.FIRST_NAME||' '||C1.LAST_NAME BROKER_NAME,TO_CHAR (a.INCEPTION_DATE, 'dd/mm/yyyy') AS INCEPTION_DATE,  TO_CHAR (a.EXPIRY_DATE, 'dd/mm/yyyy') AS EXPIRY_DATE, BASE_LAYER,(case when a.uw_year!=0 then a.uw_year else null end) uw_year,to_char(a.uw_month,'dd/mm/yyyy') UW_MONTH,D.UNDERWRITTER,A.LAYER_NO,A.OLD_CONTRACTNO,A.AMEND_ID  FROM   PERSONAL_INFO c,PERSONAL_INFO c1, position_master A,TTRN_RISK_DETAILS E  LEFT OUTER JOIN  TMAS_DEPARTMENT_MASTER b   ON E.RSK_DEPTId = b.TMAS_DEPARTMENT_ID AND b.TMAS_PRODUCT_ID = ? AND B.BRANCH_CODE=?   AND B.TMAS_STATUS='Y' LEFT OUTER JOIN UNDERWRITTER_MASTER D ON  D.UWR_CODE=E.RSK_UNDERWRITTER AND D.BRANCH_CODE=? WHERE       A.product_id = ? AND (
portfolio.select.ntu=SELECT   a.PROPOSAL_NO,substr(a.PROPOSAL_NO,4,8) prop,SUBSTR(A.PROPOSAL_NO,-5) proposal,b.TMAS_DEPARTMENT_ID,b.TMAS_DEPARTMENT_NAME,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(E.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= E.RSK_PRODUCTID AND SPFC.BRANCH_CODE \= E.BRANCH_CODE) TMAS_SPFC_NAME,a.CEDING_COMPANY_ID, TO_CHAR (a.ACCOUNT_DATE, 'dd/mm/yyyy') AS ACCOUNT_DATE, c.COMPANY_NAME,C1.FIRST_NAME||' '||C1.LAST_NAME BROKER_NAME,TO_CHAR (a.INCEPTION_DATE, 'dd/mm/yyyy') AS INCEPTION_DATE,  TO_CHAR (a.EXPIRY_DATE, 'dd/mm/yyyy') AS EXPIRY_DATE, NVL(A.BASE_LAYER,A.PROPOSAL_NO)BASE_LAYER,(select distinct(contract_no) from position_master pm where pm.proposal_no=a.base_layer) contract_no,(case when a.uw_year!=0 then a.uw_year else null end) uw_year,to_char(a.uw_month,'dd/mm/yyyy') UW_MONTH,D.UNDERWRITTER,A.LAYER_NO,A.OLD_CONTRACTNO,A.AMEND_ID ,E.RSK_INSURED_NAME,A.Bouquet_No,NVL(A.BASE_LAYER,A.PROPOSAL_NO)BASE_LAYER_DESC FROM   PERSONAL_INFO c,PERSONAL_INFO c1, position_master A,TTRN_RISK_DETAILS E  LEFT OUTER JOIN  TMAS_DEPARTMENT_MASTER b   ON E.RSK_DEPTId = b.TMAS_DEPARTMENT_ID AND b.TMAS_PRODUCT_ID = ? AND B.BRANCH_CODE=?   AND B.TMAS_STATUS='Y' LEFT OUTER JOIN UNDERWRITTER_MASTER D ON  D.UWR_CODE=E.RSK_UNDERWRITTER AND D.BRANCH_CODE=? WHERE       A.product_id = ? AND (
portfolio.select.flagn=a.CONTRACT_STATUS = 'N'
portfolio.select.flagnull= a.CONTRACT_STATUS = 'P' OR a.CONTRACT_STATUS IS NULL
portfolio.select.ntudept= ) AND c.CUSTOMER_ID = A.CEDING_COMPANY_ID  AND C.BRANCH_CODE=? AND C.CUSTOMER_TYPE='C' AND C.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=C.CUSTOMER_ID AND BRANCH_CODE=C.BRANCH_CODE AND CUSTOMER_TYPE=C.CUSTOMER_TYPE) AND A.PROPOSAL_NO=E.RSK_PROPOSAL_NUMBER AND A.AMEND_ID = E.RSK_ENDORSEMENT_NO   AND A.PRODUCT_ID = E.RSK_PRODUCTID AND A.BRANCH_CODE=?  AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO=A.PROPOSAL_NO AND A.BRANCH_CODE=BRANCH_CODE )  AND A.DEPT_Id=? AND c1.CUSTOMER_ID = A.BROKER_ID AND C1.BRANCH_CODE = ? AND C1.AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID = C1.CUSTOMER_ID AND BRANCH_CODE = C1.BRANCH_CODE AND CUSTOMER_TYPE = C1.CUSTOMER_TYPE)
portfolio.select.ntuend= ) AND c.CUSTOMER_ID = A.CEDING_COMPANY_ID  AND C.BRANCH_CODE=? AND C.CUSTOMER_TYPE='C' AND C.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=C.CUSTOMER_ID AND BRANCH_CODE=C.BRANCH_CODE AND CUSTOMER_TYPE=C.CUSTOMER_TYPE) AND A.PROPOSAL_NO=E.RSK_PROPOSAL_NUMBER AND A.AMEND_ID = E.RSK_ENDORSEMENT_NO   AND A.PRODUCT_ID = E.RSK_PRODUCTID AND A.BRANCH_CODE=?  AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO=A.PROPOSAL_NO AND A.BRANCH_CODE=BRANCH_CODE ) AND c1.CUSTOMER_ID = A.BROKER_ID AND C1.BRANCH_CODE = ? AND C1.AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID = C1.CUSTOMER_ID AND BRANCH_CODE = C1.BRANCH_CODE AND CUSTOMER_TYPE = C1.CUSTOMER_TYPE)
portfolio.select.rejected=select  a.PROPOSAL_NO,substr(a.PROPOSAL_NO,4,8) prop,b.TMAS_DEPARTMENT_NAME,a.CEDING_COMPANY_ID, to_char(a.ACCOUNT_DATE,'dd/mm/yyyy') as ACCOUNT_DATE, c.COMPANY_NAME,C1.FIRST_NAME||' '||C1.LAST_NAME BROKER_NAME,TO_CHAR(a.INCEPTION_DATE,'dd/mm/yyyy') as INCEPTION_DATE ,TO_CHAR(a.EXPIRY_DATE,'dd/mm/yyyy') as EXPIRY_DATE,BASE_LAYER,a.UW_YEAR,to_char(a.UW_MONTH,'dd/mm/yyyy') UW_MONTH,UW.UNDERWRITTER,A.AMEND_ID,RD.RSK_INSURED_NAME from PERSONAL_INFO c,PERSONAL_INFO c1,TTRN_RISK_DETAILS RD,  UNDERWRITTER_MASTER UW,position_master a left outer join TMAS_DEPARTMENT_MASTER b on a.DEPT_Id=b.TMAS_DEPARTMENT_ID and b.TMAS_PRODUCT_ID =? AND B.BRANCH_CODE=? AND B.TMAS_STATUS='Y' WHERE PRODUCT_ID=?  AND CONTRACT_STATUS IN ('R')   AND A.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER  AND A.PRODUCT_ID=RD.RSK_PRODUCTID  AND A.AMEND_ID = RD.RSK_ENDORSEMENT_NO AND RD.RSK_UNDERWRITTER = UW.UWR_CODE AND UW.BRANCH_CODE=? AND A.BRANCH_CODE=? AND A.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO=A.PROPOSAL_NO AND PRODUCT_ID=? AND A.BRANCH_CODE=BRANCH_CODE)  and c.CUSTOMER_ID=A.CEDING_COMPANY_ID  AND C.BRANCH_CODE=? AND  C.CUSTOMER_TYPE='C' AND C.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=C.CUSTOMER_ID AND BRANCH_CODE=C.BRANCH_CODE AND CUSTOMER_TYPE=C.CUSTOMER_TYPE) AND c1.CUSTOMER_ID = A.BROKER_ID AND C1.BRANCH_CODE = ? AND C1.AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID = C1.CUSTOMER_ID AND BRANCH_CODE = C1.BRANCH_CODE AND CUSTOMER_TYPE = C1.CUSTOMER_TYPE)
portfolio.select.rejecteddept=AND a.DEPT_Id=?
portfolio.select.renewalDue=AND (A.EXPIRY_DATE - SYSDATE)<365 AND A.RENEWAL_STATUS='1'
portfolio.select.claimYN=AND DECODE(CD.CONTRACT_NO,null,'NC','EC')=?
portfolio.select.pending=AND (E.OLD_CONTRACTNO IS NULL OR E.OLD_CONTRACTNO \='0')\t
portfolio.select.renewalPending=AND E.OLD_CONTRACTNO IS NOT NULL AND E.OLD_CONTRACTNO !='0'
portfolio.select.autoPending=SELECT p.ACCOUNT_PERIOD_QTR,p.TRANSACTION_NO, p.SETTLEMENT_STATUS ,a.PROPOSAL_NO, b.TMAS_DEPARTMENT_NAME, a.CEDING_COMPANY_ID, TO_CHAR (a.ACCOUNT_DATE, 'dd/mm/yyyy') AS ACCOUNT_DATE, c.COMPANY_NAME, C1.FIRST_NAME ||' ' ||C1.LAST_NAME BROKER_NAME,  TO_CHAR (a.INCEPTION_DATE, 'dd/mm/yyyy') AS INCEPTION_DATE, TO_CHAR (a.EXPIRY_DATE, 'dd/mm/yyyy') AS EXPIRY_DATE, BASE_LAYER, a.CONTRACT_NO,  ( CASE WHEN a.uw_year!=0 THEN a.uw_year ELSE NULL END) uw_year, TO_CHAR(a.uw_month,'dd/mm/yyyy') UW_MONTH, D.UNDERWRITTER, A.LAYER_NO, A.OLD_CONTRACTNO, A.AMEND_ID FROM PERSONAL_INFO c,  PERSONAL_INFO c1, position_master A, TTRN_RISK_DETAILS E  LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER b ON E.RSK_DEPTId = b.TMAS_DEPARTMENT_ID AND b.TMAS_PRODUCT_ID = :pid AND B.BRANCH_CODE = :bc AND B.TMAS_STATUS ='Y'  LEFT OUTER JOIN UNDERWRITTER_MASTER D ON D.UWR_CODE =E.RSK_UNDERWRITTER AND D.BRANCH_CODE = :bc  LEFT JOIN RSK_PREMIUM_DETAILS p ON p.CONTRACT_NO = e.RSK_CONTRACT_NO WHERE A.product_id = :pid AND c.CUSTOMER_ID = A.CEDING_COMPANY_ID AND C.BRANCH_CODE = A.BRANCH_CODE AND C.CUSTOMER_TYPE='C'  AND C.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=C.CUSTOMER_ID AND BRANCH_CODE =C.BRANCH_CODE AND CUSTOMER_TYPE=C.CUSTOMER_TYPE )  AND A.PROPOSAL_NO=E.RSK_PROPOSAL_NUMBER AND A.AMEND_ID = E.RSK_ENDORSEMENT_NO AND A.DEPT_ID = E.RSK_DEPTID AND A.PRODUCT_ID = E.RSK_PRODUCTID  AND A.BRANCH_CODE= c1.BRANCH_CODE AND A.AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO=A.PROPOSAL_NO AND A.BRANCH_CODE=BRANCH_CODE )  AND c1.CUSTOMER_ID = A.BROKER_ID AND C1.BRANCH_CODE = :bc AND p.ACCOUNT_PERIOD_QTR like :due AND p.SETTLEMENT_STATUS like '%Pending%' AND C1.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID = C1.CUSTOMER_ID AND BRANCH_CODE = C1.BRANCH_CODE AND CUSTOMER_TYPE = C1.CUSTOMER_TYPE)
#portfolio.select.autoPending1=SELECT RD.RSK_PROPOSAL_NUMBER, I.INSTALLMENT_NO, RD.RSK_ORIGINAL_CURR, RD.RSK_UWYEAR UW_YEAR, PI.CUSTOMER_ID CEDING_ID, PIB.CUSTOMER_ID BROKER_ID, DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE, RD.RSK_PREMIUM_RATE, RD.RSK_ENDORSEMENT_NO, RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME, DM.TMAS_DEPARTMENT_ID, DM.TMAS_DEPARTMENT_NAME, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PI.COMPANY_NAME COMPANY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE, TO_CHAR(RD.RSK_ACCOUNT_DATE,'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME, RD.RSK_LOCATION, RD.RSK_CITY, RP.NR, RP.RSK_CEDANT_RETENTION, RP.MAXIMUM_LIMIT_OC, RP.DEDUCTIBLE_OC, RP.SP_RETRO, RP.PML, RP.SI_PML_OC, RP.CU, RP.CU_RSN, RP.SUM_INSURED_OC, RP.GWPI_OC, RP.PML_OC, RP.TPL_OC, RP.SHARE_WRITTEN, RP.SHARE_SIGNED, RD.RSK_PROPOSAL_TYPE, RP.RSK_INTEREST, RP.SUM_INSURED_DC, RP.GWPI_DC, RP.PML_DC, RP.TPL_DC, RP.SUM_INSURED_OUR_SHARE_DC, GWPI_OUR_SHARE_DC, PML_OUR_SHARE_DC, TPL_OUR_SHARE_DC, RP.NO_OF_INSURERS, PB.TMAS_POL_BRANCH_NAME, RP.SCOPE, RP.SUM_INSURED_OUR_SHARE_OC, RP.GWPI_OUR_SHARE_OC, RP.PML_OUR_SHARE_OC, RP.TPL_OUR_SHARE_OC, MOT.TRANSPORT_DESCRIPTION , RP.VESSEL_NAME, RP.VESSEL_AGE, RP.LIMIT_PER_VESSEL_OC, RP.LIMIT_PER_VESSEL_DC, RP.LIMIT_PER_LOCATION_OC, RP.LIMIT_PER_LOCATION_DC, RP.MND_INSTALLMENTS, RP.DEDUCTIBLE_FACXOL_OC, RP.DEDUCTIBLE_FACXOL_DC, RP.DEDUCTIBLE_DC, RP.XOL_OC, RP.XOL_DC, RP.XOL_OURSHARE_OC, RP.XOL_OURSHARE_DC, RP.DEDUCTIBLE_OURSHARE_OC, RP.DEDUCTIBLE_OURSHARE_DC, RP.DEDUCTIBLE_FACXOL_OURSHARE_OC, RP.DEDUCTIBLE_FACXOL_OURSHARE_DC, CD.DETAIL_NAME TYPE_NAME, TO_CHAR(I.INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE , I.MND_PREMIUM_OC, RM.RSK_COMM, RM.RSK_BROKERAGE, RM.RSK_TAX, RSK_OTHER_COST, RM.RSK_ACQUISTION_COST_OC FROM POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND PM.CONTRACT_NO = RD.RSK_CONTRACT_NO JOIN TTRN_MND_INSTALLMENTS I ON I.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_CONTRACT_NO = I.CONTRACT_NO AND RD.RSK_LAYER_NO = I.LAYER_NO AND I.ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_LAYER_NO = LAYER_NO) LEFT JOIN TTRN_FAC_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER LEFT OUTER JOIN TTRN_RISK_COMMISSION RM ON RM.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RM.RSK_ENDORSEMENT_NO =RD.RSK_ENDORSEMENT_NO LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = :bc AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = :bc LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = :bc LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = :bc LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = :bc AND DM.TMAS_STATUS = 'H' LEFT OUTER JOIN TMAS_MODE_OF_TRANSPORT MOT ON MOT.MODE_TRANSPORT_ID=RP.MODE_TRANSPORT_ID AND MOT.BRANCH_CODE =:bc AND MOT.STATUS ='Y' LEFT OUTER JOIN CONSTANT_DETAIL CD ON CD.CATEGORY_ID ='13' AND CD.TYPE =RP.TYPE AND CD.STATUS ='Y' WHERE PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE ) AND TO_CHAR(I.INSTALLMENT_NO) NOT IN (SELECT INSTALMENT_NUMBER FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO = RD.RSK_CONTRACT_NO AND INSTALMENT_NUMBER IS NOT NULL ) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE ) AND RP.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RP.RSK_ENDORSEMENT_NO ) AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID AND CM.BRANCH_CODE = BRANCH_CODE ) AND RD.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RP.RSK_ENDORSEMENT_NO ) AND I.INSTALLMENT_DATE < to_date(:insDate,'dd/mm/yyyy') AND PM.BRANCH_CODE = :bc AND RD.RSK_PRODUCTID = :pid AND PM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND BRANCH_CODE = :bc)
#portfolio.select.autoPending1=SELECT RD.RSK_PROPOSAL_NUMBER, I.INSTALLMENT_NO, RD.RSK_ORIGINAL_CURR, RD.RSK_UWYEAR UW_YEAR, PI.CUSTOMER_ID CEDING_ID, PIB.CUSTOMER_ID BROKER_ID, DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE, RD.RSK_PREMIUM_RATE, RD.RSK_ENDORSEMENT_NO, RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME, DM.TMAS_DEPARTMENT_ID, DM.TMAS_DEPARTMENT_NAME, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PI.COMPANY_NAME COMPANY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE, TO_CHAR(RD.RSK_ACCOUNT_DATE,'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME, RD.RSK_LOCATION, RD.RSK_CITY, RP.NR, RP.RSK_CEDANT_RETENTION, RP.MAXIMUM_LIMIT_OC, RP.DEDUCTIBLE_OC, RP.SP_RETRO, RP.PML, RP.SI_PML_OC, RP.CU, RP.CU_RSN, RP.SUM_INSURED_OC, RP.GWPI_OC, RP.PML_OC, RP.TPL_OC, RP.SHARE_WRITTEN, RP.SHARE_SIGNED, RD.RSK_PROPOSAL_TYPE, RP.RSK_INTEREST, RP.SUM_INSURED_DC, RP.GWPI_DC, RP.PML_DC, RP.TPL_DC, RP.SUM_INSURED_OUR_SHARE_DC, GWPI_OUR_SHARE_DC, PML_OUR_SHARE_DC, TPL_OUR_SHARE_DC, RP.NO_OF_INSURERS, PB.TMAS_POL_BRANCH_NAME, RP.SCOPE, RP.SUM_INSURED_OUR_SHARE_OC, RP.GWPI_OUR_SHARE_OC, RP.PML_OUR_SHARE_OC, RP.TPL_OUR_SHARE_OC, MOT.TRANSPORT_DESCRIPTION , RP.VESSEL_NAME, RP.VESSEL_AGE, RP.LIMIT_PER_VESSEL_OC, RP.LIMIT_PER_VESSEL_DC, RP.LIMIT_PER_LOCATION_OC, RP.LIMIT_PER_LOCATION_DC, RP.MND_INSTALLMENTS, RP.DEDUCTIBLE_FACXOL_OC, RP.DEDUCTIBLE_FACXOL_DC, RP.DEDUCTIBLE_DC, RP.XOL_OC, RP.XOL_DC, RP.XOL_OURSHARE_OC, RP.XOL_OURSHARE_DC, RP.DEDUCTIBLE_OURSHARE_OC, RP.DEDUCTIBLE_OURSHARE_DC, RP.DEDUCTIBLE_FACXOL_OURSHARE_OC, RP.DEDUCTIBLE_FACXOL_OURSHARE_DC, CD.DETAIL_NAME TYPE_NAME, TO_CHAR(I.INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE , I.MND_PREMIUM_OC, RM.RSK_COMM, RM.RSK_BROKERAGE, RM.RSK_TAX, RSK_OTHER_COST, RM.RSK_ACQUISTION_COST_OC FROM POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND PM.CONTRACT_NO = RD.RSK_CONTRACT_NO JOIN TTRN_MND_INSTALLMENTS I ON I.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_CONTRACT_NO = I.CONTRACT_NO AND RD.RSK_LAYER_NO = I.LAYER_NO AND I.ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_LAYER_NO = LAYER_NO) LEFT JOIN TTRN_FAC_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER LEFT OUTER JOIN TTRN_RISK_COMMISSION RM ON RM.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RM.RSK_ENDORSEMENT_NO =RD.RSK_ENDORSEMENT_NO LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = :bc AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = :bc LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = :bc LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = :bc LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = :bc AND DM.TMAS_STATUS = 'H' LEFT OUTER JOIN TMAS_MODE_OF_TRANSPORT MOT ON MOT.MODE_TRANSPORT_ID=RP.MODE_TRANSPORT_ID AND MOT.BRANCH_CODE =:bc AND MOT.STATUS ='Y' LEFT OUTER JOIN CONSTANT_DETAIL CD ON CD.CATEGORY_ID ='13' AND CD.TYPE =RP.TYPE AND CD.STATUS ='Y' WHERE PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE ) AND TO_CHAR(I.INSTALLMENT_NO) NOT IN (SELECT INSTALMENT_NUMBER FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO = RD.RSK_CONTRACT_NO AND INSTALMENT_NUMBER IS NOT NULL ) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE ) AND RP.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RP.RSK_ENDORSEMENT_NO ) AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID AND CM.BRANCH_CODE = BRANCH_CODE ) AND RD.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RP.RSK_ENDORSEMENT_NO ) AND I.INSTALLMENT_DATE < to_date(:insDate,'dd/mm/yyyy') AND PM.BRANCH_CODE = :bc AND RD.RSK_PRODUCTID = :pid and MND_PREMIUM_OC!=0 AND PM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND BRANCH_CODE = :bc)
#portfolio.select.autoPending1=SELECT RD.RSK_PROPOSAL_NUMBER, I.INSTALLMENT_NO, RD.RSK_ORIGINAL_CURR, RD.RSK_UWYEAR UW_YEAR, PI.CUSTOMER_ID CEDING_ID, PIB.CUSTOMER_ID BROKER_ID, DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE, RD.RSK_PREMIUM_RATE, RD.RSK_ENDORSEMENT_NO, RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME, DM.TMAS_DEPARTMENT_ID, DM.TMAS_DEPARTMENT_NAME, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PI.COMPANY_NAME COMPANY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE, TO_CHAR(RD.RSK_ACCOUNT_DATE,'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME, RD.RSK_LOCATION, RD.RSK_CITY, RP.NR, RP.RSK_CEDANT_RETENTION, RP.MAXIMUM_LIMIT_OC, RP.DEDUCTIBLE_OC, RP.SP_RETRO, RP.PML, RP.SI_PML_OC, RP.CU, RP.CU_RSN, RP.SUM_INSURED_OC, RP.GWPI_OC, RP.PML_OC, RP.TPL_OC, RP.SHARE_WRITTEN, RP.SHARE_SIGNED, RD.RSK_PROPOSAL_TYPE, RP.RSK_INTEREST, RP.SUM_INSURED_DC, RP.GWPI_DC, RP.PML_DC, RP.TPL_DC, RP.SUM_INSURED_OUR_SHARE_DC, GWPI_OUR_SHARE_DC, PML_OUR_SHARE_DC, TPL_OUR_SHARE_DC, RP.NO_OF_INSURERS, PB.TMAS_POL_BRANCH_NAME, RP.SCOPE, RP.SUM_INSURED_OUR_SHARE_OC, RP.GWPI_OUR_SHARE_OC, RP.PML_OUR_SHARE_OC, RP.TPL_OUR_SHARE_OC, MOT.TRANSPORT_DESCRIPTION , RP.VESSEL_NAME, RP.VESSEL_AGE, RP.LIMIT_PER_VESSEL_OC, RP.LIMIT_PER_VESSEL_DC, RP.LIMIT_PER_LOCATION_OC, RP.LIMIT_PER_LOCATION_DC, RP.MND_INSTALLMENTS, RP.DEDUCTIBLE_FACXOL_OC, RP.DEDUCTIBLE_FACXOL_DC, RP.DEDUCTIBLE_DC, RP.XOL_OC, RP.XOL_DC, RP.XOL_OURSHARE_OC, RP.XOL_OURSHARE_DC, RP.DEDUCTIBLE_OURSHARE_OC, RP.DEDUCTIBLE_OURSHARE_DC, RP.DEDUCTIBLE_FACXOL_OURSHARE_OC, RP.DEDUCTIBLE_FACXOL_OURSHARE_DC, CD.DETAIL_NAME TYPE_NAME, TO_CHAR(I.INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE , I.MND_PREMIUM_OC, RM.RSK_COMM, RM.RSK_BROKERAGE, RM.RSK_TAX, RSK_OTHER_COST, RM.RSK_ACQUISTION_COST_OC FROM POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND PM.CONTRACT_NO = RD.RSK_CONTRACT_NO JOIN TTRN_MND_INSTALLMENTS I ON I.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_CONTRACT_NO = I.CONTRACT_NO AND RD.RSK_LAYER_NO = I.LAYER_NO AND I.ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_LAYER_NO = LAYER_NO) LEFT JOIN TTRN_FAC_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER LEFT OUTER JOIN TTRN_RISK_COMMISSION RM ON RM.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RM.RSK_ENDORSEMENT_NO =RD.RSK_ENDORSEMENT_NO LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = :bc AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = :bc LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = :bc LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = :bc LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = :bc AND DM.TMAS_STATUS = 'H' LEFT OUTER JOIN TMAS_MODE_OF_TRANSPORT MOT ON MOT.MODE_TRANSPORT_ID=RP.MODE_TRANSPORT_ID AND MOT.BRANCH_CODE =:bc AND MOT.STATUS ='Y' LEFT OUTER JOIN CONSTANT_DETAIL CD ON CD.CATEGORY_ID ='13' AND CD.TYPE =RP.TYPE AND CD.STATUS ='Y' WHERE PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE ) AND TO_CHAR(I.INSTALLMENT_NO) NOT IN (SELECT INSTALMENT_NUMBER FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO = RD.RSK_CONTRACT_NO AND INSTALMENT_NUMBER IS NOT NULL ) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE ) AND RP.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER ) AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID AND CM.BRANCH_CODE = BRANCH_CODE ) AND RD.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER ) AND I.INSTALLMENT_DATE < to_date(:insDate,'dd/mm/yyyy') AND PM.BRANCH_CODE = :bc AND RD.RSK_PRODUCTID = :pid and MND_PREMIUM_OC!=0 AND PM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND BRANCH_CODE = :bc)
portfolio.select.autoPending1=SELECT RD.RSK_PROPOSAL_NUMBER,PM.EDIT_MODE, I.INSTALLMENT_NO, RD.RSK_ORIGINAL_CURR, RD.RSK_UWYEAR UW_YEAR, PI.CUSTOMER_ID CEDING_ID, PIB.CUSTOMER_ID BROKER_ID, DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE, RD.RSK_PREMIUM_RATE, RD.RSK_ENDORSEMENT_NO, RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME, DM.TMAS_DEPARTMENT_ID, DM.TMAS_DEPARTMENT_NAME, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PI.COMPANY_NAME COMPANY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE, TO_CHAR(RD.RSK_ACCOUNT_DATE,'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME, RD.RSK_LOCATION, RD.RSK_CITY, RP.NR, RP.RSK_CEDANT_RETENTION, RP.MAXIMUM_LIMIT_OC, RP.DEDUCTIBLE_OC, RP.SP_RETRO, RP.PML, RP.SI_PML_OC, RP.CU, RP.CU_RSN, RP.SUM_INSURED_OC, RP.GWPI_OC, RP.PML_OC, RP.TPL_OC, RP.SHARE_WRITTEN, RP.SHARE_SIGNED, RD.RSK_PROPOSAL_TYPE, RP.RSK_INTEREST, RP.SUM_INSURED_DC, RP.GWPI_DC, RP.PML_DC, RP.TPL_DC, RP.SUM_INSURED_OUR_SHARE_DC, GWPI_OUR_SHARE_DC, PML_OUR_SHARE_DC, TPL_OUR_SHARE_DC, RP.NO_OF_INSURERS, PB.TMAS_POL_BRANCH_NAME, RP.SCOPE, RP.SUM_INSURED_OUR_SHARE_OC, RP.GWPI_OUR_SHARE_OC, RP.PML_OUR_SHARE_OC, RP.TPL_OUR_SHARE_OC, MOT.TRANSPORT_DESCRIPTION , RP.VESSEL_NAME, RP.VESSEL_AGE, RP.LIMIT_PER_VESSEL_OC, RP.LIMIT_PER_VESSEL_DC, RP.LIMIT_PER_LOCATION_OC, RP.LIMIT_PER_LOCATION_DC, RP.MND_INSTALLMENTS, RP.DEDUCTIBLE_FACXOL_OC, RP.DEDUCTIBLE_FACXOL_DC, RP.DEDUCTIBLE_DC, RP.XOL_OC, RP.XOL_DC, RP.XOL_OURSHARE_OC, RP.XOL_OURSHARE_DC, RP.DEDUCTIBLE_OURSHARE_OC, RP.DEDUCTIBLE_OURSHARE_DC, RP.DEDUCTIBLE_FACXOL_OURSHARE_OC, RP.DEDUCTIBLE_FACXOL_OURSHARE_DC, CD.DETAIL_NAME TYPE_NAME, TO_CHAR(I.INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE , I.MND_PREMIUM_OC, RM.RSK_COMM, RM.RSK_BROKERAGE, RM.RSK_TAX, RSK_OTHER_COST, RM.RSK_ACQUISTION_COST_OC,RD.RSK_DEPTID,RD.RSK_SPFCID FROM POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND PM.CONTRACT_NO = RD.RSK_CONTRACT_NO JOIN TTRN_MND_INSTALLMENTS I ON I.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_CONTRACT_NO = I.CONTRACT_NO AND RD.RSK_LAYER_NO = I.LAYER_NO AND I.ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_LAYER_NO = LAYER_NO) LEFT JOIN TTRN_FAC_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER LEFT OUTER JOIN TTRN_RISK_COMMISSION RM ON RM.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RM.RSK_ENDORSEMENT_NO =RD.RSK_ENDORSEMENT_NO LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = :bc AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = :bc LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = :bc LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = :bc LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = :bc AND DM.TMAS_STATUS = 'Y' LEFT OUTER JOIN TMAS_MODE_OF_TRANSPORT MOT ON MOT.MODE_TRANSPORT_ID=RP.MODE_TRANSPORT_ID AND MOT.BRANCH_CODE =:bc AND MOT.STATUS ='Y' LEFT OUTER JOIN CONSTANT_DETAIL CD ON CD.CATEGORY_ID ='13' AND CD.TYPE =RP.TYPE AND CD.STATUS ='Y' WHERE PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE ) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE ) AND RP.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER ) AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID AND CM.BRANCH_CODE = BRANCH_CODE ) AND RD.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER ) AND I.INSTALLMENT_DATE < to_date(:insDate,'dd/mm/yyyy') AND I.TRANSACTION_NO IS NULL  AND PM.BRANCH_CODE = :bc AND RD.RSK_PRODUCTID = :pid and MND_PREMIUM_OC!=0 AND NVL(PM.CEASE_STATUS,'N')!='Y' AND PM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND BRANCH_CODE = :bc)
#portfolio.select.autoPendingNPT=SELECT RD.RSK_PROPOSAL_NUMBER, I.INSTALLMENT_NO, RD.RSK_ORIGINAL_CURR, RD.RSK_UWYEAR UW_YEAR, PI.CUSTOMER_ID CEDING_ID, PIB.CUSTOMER_ID BROKER_ID, DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE, RD.RSK_PREMIUM_RATE, RD.RSK_ENDORSEMENT_NO, RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME, DM.TMAS_DEPARTMENT_ID, DM.TMAS_DEPARTMENT_NAME, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PI.COMPANY_NAME COMPANY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE, TO_CHAR(RD.RSK_ACCOUNT_DATE,'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME, RP.RSK_SHARE_SIGNED SHARE_SIGNED, PB.TMAS_POL_BRANCH_NAME, TO_CHAR(I.INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE , I.MND_PREMIUM_OC, RM.RSK_COMM, RM.RSK_BROKERAGE, RM.RSK_TAX, RM.RSK_OTHER_COST, RM.RSK_ACQUISTION_COST_OC, RD.RSK_LAYER_NO LAYER_NO, RD.RSK_TREATYID TREATY FROM POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND PM.CONTRACT_NO = RD.RSK_CONTRACT_NO JOIN TTRN_MND_INSTALLMENTS I ON I.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_CONTRACT_NO = I.CONTRACT_NO AND RD.RSK_LAYER_NO = I.LAYER_NO AND I.ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_LAYER_NO = LAYER_NO) LEFT JOIN TTRN_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER AND RP.RSK_LAYER_NO = RD.RSK_LAYER_NO LEFT OUTER JOIN TTRN_RISK_COMMISSION RM ON RM.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RM.RSK_ENDORSEMENT_NO =RD.RSK_ENDORSEMENT_NO LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = :bc AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = :bc LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = :bc LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = :bc LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = :bc AND DM.TMAS_STATUS = 'H' WHERE PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE ) AND TO_CHAR(I.INSTALLMENT_NO) NOT IN (SELECT INSTALMENT_NUMBER FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO = RD.RSK_CONTRACT_NO AND INSTALMENT_NUMBER IS NOT NULL ) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE ) AND RP.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RP.RSK_ENDORSEMENT_NO ) AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID AND CM.BRANCH_CODE = BRANCH_CODE ) AND RD.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RP.RSK_ENDORSEMENT_NO ) AND I.INSTALLMENT_DATE < to_date(:insDate,'dd/mm/yyyy') AND PM.BRANCH_CODE = :bc AND RD.RSK_PRODUCTID = :pid AND PM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND BRANCH_CODE = :bc)
#portfolio.select.autoPendingNPT=SELECT RD.RSK_PROPOSAL_NUMBER, I.INSTALLMENT_NO, RD.RSK_ORIGINAL_CURR, RD.RSK_UWYEAR UW_YEAR, PI.CUSTOMER_ID CEDING_ID, PIB.CUSTOMER_ID BROKER_ID, DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE, RD.RSK_PREMIUM_RATE, RD.RSK_ENDORSEMENT_NO, RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME, DM.TMAS_DEPARTMENT_ID, DM.TMAS_DEPARTMENT_NAME, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PI.COMPANY_NAME COMPANY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE, TO_CHAR(RD.RSK_ACCOUNT_DATE,'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME, RP.RSK_SHARE_SIGNED SHARE_SIGNED, PB.TMAS_POL_BRANCH_NAME, TO_CHAR(I.INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE , I.MND_PREMIUM_OC, RM.RSK_COMM, RM.RSK_BROKERAGE, RM.RSK_TAX, RM.RSK_OTHER_COST, RM.RSK_ACQUISTION_COST_OC, RD.RSK_LAYER_NO LAYER_NO, RD.RSK_TREATYID TREATY FROM POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND PM.CONTRACT_NO = RD.RSK_CONTRACT_NO JOIN TTRN_MND_INSTALLMENTS I ON I.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_CONTRACT_NO = I.CONTRACT_NO AND RD.RSK_LAYER_NO = I.LAYER_NO AND I.ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_LAYER_NO = LAYER_NO) LEFT JOIN TTRN_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER AND RP.RSK_LAYER_NO = RD.RSK_LAYER_NO LEFT OUTER JOIN TTRN_RISK_COMMISSION RM ON RM.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RM.RSK_ENDORSEMENT_NO =RD.RSK_ENDORSEMENT_NO LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = :bc AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = :bc LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = :bc LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = :bc LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = :bc AND DM.TMAS_STATUS = 'H' WHERE PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE ) AND TO_CHAR(I.INSTALLMENT_NO) NOT IN (SELECT INSTALMENT_NUMBER FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO = RD.RSK_CONTRACT_NO AND INSTALMENT_NUMBER IS NOT NULL ) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE ) AND RP.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RP.RSK_ENDORSEMENT_NO ) AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID AND CM.BRANCH_CODE = BRANCH_CODE ) AND RD.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=RP.RSK_ENDORSEMENT_NO ) AND I.INSTALLMENT_DATE < to_date(:insDate,'dd/mm/yyyy') AND PM.BRANCH_CODE = :bc AND RD.RSK_PRODUCTID = :pid and MND_PREMIUM_OC!=0 AND PM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND BRANCH_CODE = :bc)
#portfolio.select.autoPendingNPT=SELECT RD.RSK_PROPOSAL_NUMBER, I.INSTALLMENT_NO, RD.RSK_ORIGINAL_CURR, RD.RSK_UWYEAR UW_YEAR, PI.CUSTOMER_ID CEDING_ID, PIB.CUSTOMER_ID BROKER_ID, DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE, RD.RSK_PREMIUM_RATE, RD.RSK_ENDORSEMENT_NO, RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME, DM.TMAS_DEPARTMENT_ID, DM.TMAS_DEPARTMENT_NAME, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PI.COMPANY_NAME COMPANY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE, TO_CHAR(RD.RSK_ACCOUNT_DATE,'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME, RP.RSK_SHARE_SIGNED SHARE_SIGNED, PB.TMAS_POL_BRANCH_NAME, TO_CHAR(I.INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE , I.MND_PREMIUM_OC, RM.RSK_COMM, RM.RSK_BROKERAGE, RM.RSK_TAX, RM.RSK_OTHER_COST, RM.RSK_ACQUISTION_COST_OC, RD.RSK_LAYER_NO LAYER_NO, RD.RSK_TREATYID TREATY FROM POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND PM.CONTRACT_NO = RD.RSK_CONTRACT_NO JOIN TTRN_MND_INSTALLMENTS I ON I.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_CONTRACT_NO = I.CONTRACT_NO AND RD.RSK_LAYER_NO = I.LAYER_NO AND I.ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_LAYER_NO = LAYER_NO) LEFT JOIN TTRN_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER AND RP.RSK_LAYER_NO = RD.RSK_LAYER_NO LEFT OUTER JOIN TTRN_RISK_COMMISSION RM ON RM.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RM.RSK_ENDORSEMENT_NO =RD.RSK_ENDORSEMENT_NO LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = :bc AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = :bc LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = :bc LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = :bc LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = :bc AND DM.TMAS_STATUS = 'H' WHERE PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE ) AND TO_CHAR(I.INSTALLMENT_NO) NOT IN (SELECT INSTALMENT_NUMBER FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO = RD.RSK_CONTRACT_NO AND INSTALMENT_NUMBER IS NOT NULL ) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE ) AND RP.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER) AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID AND CM.BRANCH_CODE = BRANCH_CODE ) AND RD.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER ) AND I.INSTALLMENT_DATE < to_date(:insDate,'dd/mm/yyyy') AND PM.BRANCH_CODE = :bc AND RD.RSK_PRODUCTID = :pid and MND_PREMIUM_OC!=0 AND PM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND BRANCH_CODE = :bc)
portfolio.select.autoPendingNPT=SELECT RD.RSK_PROPOSAL_NUMBER,PM.EDIT_MODE, I.INSTALLMENT_NO, RD.RSK_ORIGINAL_CURR, RD.RSK_UWYEAR UW_YEAR, PI.CUSTOMER_ID CEDING_ID, PIB.CUSTOMER_ID BROKER_ID, DECODE(RP.RSK_CEDRET_TYPE, 'P', 'Percentage', 'Amount') RSK_CEDRET_TYPE, RD.RSK_PREMIUM_RATE, RD.RSK_ENDORSEMENT_NO, RD.RSK_CONTRACT_NO, TPM.TMAS_PRODUCT_NAME, DM.TMAS_DEPARTMENT_ID, DM.TMAS_DEPARTMENT_NAME, PFC.TMAS_PFC_NAME, SPFC.TMAS_SPFC_NAME, PI.COMPANY_NAME COMPANY, PIB.FIRST_NAME || PIB.LAST_NAME BROKER, RD.RSK_UWYEAR, UM.UNDERWRITTER, TO_CHAR(RD.RSK_INCEPTION_DATE, 'dd/mm/yyyy') INSDATE, TO_CHAR(RD.RSK_EXPIRY_DATE, 'dd/mm/yyyy') EXPDATE, TO_CHAR(RD.RSK_ACCOUNT_DATE,'dd/mm/yyyy') ACDATE, CM.SHORT_NAME, RD.RSK_EXCHANGE_RATE, TM.TERRITORY_DESC, RD.RSK_INSURED_NAME, RP.RSK_SHARE_SIGNED SHARE_SIGNED, PB.TMAS_POL_BRANCH_NAME, TO_CHAR(I.INSTALLMENT_DATE,'DD/MM/YYYY') INSTALLMENT_DATE , I.MND_PREMIUM_OC, RM.RSK_COMM, RM.RSK_BROKERAGE, RM.RSK_TAX, RM.RSK_OTHER_COST, RM.RSK_ACQUISTION_COST_OC, RD.RSK_LAYER_NO LAYER_NO, RD.RSK_TREATYID TREATY ,RD.RSK_DEPTID,RD.RSK_SPFCID   FROM POSITION_MASTER PM JOIN TTRN_RISK_DETAILS RD ON PM.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND PM.CONTRACT_NO = RD.RSK_CONTRACT_NO JOIN TTRN_MND_INSTALLMENTS I ON I.PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_CONTRACT_NO = I.CONTRACT_NO AND RD.RSK_LAYER_NO = I.LAYER_NO AND I.ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_MND_INSTALLMENTS WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_LAYER_NO = LAYER_NO) LEFT JOIN TTRN_RISK_PROPOSAL RP ON RD.RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER AND RP.RSK_LAYER_NO = RD.RSK_LAYER_NO LEFT OUTER JOIN TTRN_RISK_COMMISSION RM ON RM.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RM.RSK_ENDORSEMENT_NO =RD.RSK_ENDORSEMENT_NO LEFT OUTER JOIN TMAS_PRODUCT_MASTER TPM ON TPM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND TPM.BRANCH_CODE = :bc AND TPM.TMAS_STATUS = '1' LEFT OUTER JOIN TMAS_PFC_MASTER PFC ON PFC.TMAS_PFC_ID = RD.RSK_PFCID AND PFC.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_SPFC_MASTER SPFC ON SPFC.TMAS_SPFC_ID = RD.RSK_SPFCID AND SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PIB ON RD.RSK_BROKERID = PIB.CUSTOMER_ID AND PIB.BRANCH_CODE = :bc LEFT OUTER JOIN PERSONAL_INFO PI ON RD.RSK_CEDINGID = PI.CUSTOMER_ID AND PI.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_POLICY_BRANCH PB ON RD.RSK_POLBRANCH = PB.TMAS_POL_BRANCH_ID AND PB.BRANCH_CODE = :bc LEFT OUTER JOIN CURRENCY_MASTER CM ON RD.RSK_ORIGINAL_CURR = CM.CURRENCY_ID AND CM.BRANCH_CODE = :bc LEFT OUTER JOIN TERRITORY_MASTER TM ON RD.RSK_TERRITORY = TM.TERRITORY_CODE AND TM.BRANCH_CODE = :bc LEFT OUTER JOIN UNDERWRITTER_MASTER UM ON RD.RSK_UNDERWRITTER = UM.UWR_CODE AND UM.BRANCH_CODE = :bc LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON DM.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND DM.TMAS_DEPARTMENT_ID = RD.RSK_DEPTID AND DM.BRANCH_CODE = :bc AND DM.TMAS_STATUS = 'Y' WHERE PIB.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO1 WHERE PIB.CUSTOMER_ID = CUSTOMER_ID AND PIB.BRANCH_CODE = BRANCH_CODE ) AND PI.AMEND_ID = (SELECT MAX(AMEND_ID) FROM PERSONAL_INFO PERSONAL_INFO2 WHERE PI.CUSTOMER_ID = CUSTOMER_ID AND PI.BRANCH_CODE = BRANCH_CODE ) AND RP.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER) AND CM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE CM.CURRENCY_ID = CURRENCY_ID AND CM.BRANCH_CODE = BRANCH_CODE ) AND RD.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER = RP.RSK_PROPOSAL_NUMBER ) AND I.INSTALLMENT_DATE < to_date(:insDate,'dd/mm/yyyy')  AND I.TRANSACTION_NO IS NULL  AND PM.BRANCH_CODE = :bc AND RD.RSK_PRODUCTID = :pid and MND_PREMIUM_OC!=0 AND NVL(PM.CEASE_STATUS,'N')!='Y' AND PM.AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = RD.RSK_PROPOSAL_NUMBER AND BRANCH_CODE = :bc)

##HomeMaster Query
homemaster.select.homeList=SELECT DECODE(T.HP_STATUS,'Y','ACTIVE','DEACTIVE') STATUS_NAME,T.HP_ID, T.HP_NAME, T.HP_STATUS, T.HP_CORE_APP_ID, T.HP_ORDER_NO, T.HP_USER_TYPE FROM TMAS_HOMEPAGE_MASTER T WHERE T.HP_BRANCH_CODE=?

##First Step
user.select.productMap=SELECT TMAS_PRODUCT_ID, TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER WHERE BRANCH_CODE=? AND TMAS_STATUS='1' ORDER BY TMAS_PRODUCT_ID
user.select.departmentMap=SELECT TMAS_DEPARTMENT_ID,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_STATUS\='H' AND TMAS_PRODUCT_ID\=? AND BRANCH_CODE\=? order by TMAS_DEPARTMENT_NAME 
user.select.processMap=SELECT PROCESS_ID,PROCESS_NAME FROM TMAS_HOMEPAGE_MASTER WHERE STATUS='Y' AND PRODUCT_ID=? AND DEPT_ID=? AND BRANCH_CODE=? order by ORDER_NO
user.select.finalMenuList=SELECT   MM.MENU_ID, MM.MENU_NAME, MM.MENU_URL FROM   (    SELECT   REGEXP_SUBSTR (MENU_IDS,'[^,]+',1,LEVEL) AS MENU_ID FROM   (SELECT   MENU_IDS FROM   TMAS_LOGIN_DETAILS WHERE LOGIN_ID = ? AND PROCESS_ID = ? AND ACTIVE = '1') CONNECT BY   LEVEL <= LENGTH (MENU_IDS)- LENGTH (REPLACE (MENU_IDS, ',', ''))+ 1) LD, MENU_MASTER MM WHERE   MM.MENU_ID = LD.MENU_ID AND MM.PROCESS_ID = ? AND MM.ACTIVE = '1' ORDER BY   MM.ORDER_NO
user.select.getOldProductId=SELECT old_product_id FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID=? AND DEPT_ID=? AND PROCESS_ID=? AND BRANCH_CODE=? AND STATUS=?


##ProcessMaster Query
#processmaster.select.processList=SELECT PM.TMAS_PRODUCT_NAME ,DECODE(DM.TMAS_DEPARTMENT_NAME,NULL,'NONE',DM.TMAS_DEPARTMENT_NAME) TMAS_DEPARTMENT_NAME ,HM.PROCESS_NAME,HM.PROCESS_ID,DECODE(HM.STATUS,'N','DEACTIVE','ACTIVE')STATUS FROM TMAS_PRODUCT_MASTER PM JOIN TMAS_HOMEPAGE_MASTER HM ON PM.TMAS_PRODUCT_ID = HM.PRODUCT_ID LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON HM.PRODUCT_ID = DM.TMAS_PRODUCT_ID AND HM.DEPT_ID = DM.TMAS_DEPARTMENT_ID AND DM.TMAS_STATUS = 'H' AND DM.BRANCH_CODE = ? WHERE PM.BRANCH_CODE = ? AND PM.TMAS_STATUS = '1' AND HM.BRANCH_CODE = ? ORDER BY HM.PRODUCT_ID,HM.DEPT_ID,HM.PROCESS_ID
processmaster.select.processList=SELECT PM.TMAS_PRODUCT_NAME ,DECODE(DM.TMAS_DEPARTMENT_NAME,NULL,'NONE',DM.TMAS_DEPARTMENT_NAME) TMAS_DEPARTMENT_NAME ,HM.PROCESS_NAME,HM.PROCESS_ID,DECODE(HM.STATUS,'N','DEACTIVE','ACTIVE')STATUS FROM TMAS_PRODUCT_MASTER PM JOIN TMAS_HOMEPAGE_MASTER HM ON PM.TMAS_PRODUCT_ID \= HM.PRODUCT_ID LEFT OUTER JOIN TMAS_DEPARTMENT_MASTER DM ON HM.PRODUCT_ID \= DM.TMAS_PRODUCT_ID AND HM.DEPT_ID \= DM.TMAS_DEPARTMENT_ID AND DM.TMAS_STATUS \= 'H' AND DM.BRANCH_CODE \= ? WHERE PM.BRANCH_CODE \= ? AND PM.TMAS_STATUS \= '1' AND HM.BRANCH_CODE \= ? 
processmaster.select.insertCheck=SELECT COUNT(*) FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID=? AND DEPT_ID=? AND PROCESS_NAME=? and branch_code=?
processmaster.insert.insertProcess=INSERT INTO TMAS_HOMEPAGE_MASTER (PROCESS_ID,SNO,PRODUCT_ID,DEPT_ID,PROCESS_NAME,STATUS,BRANCH_CODE,ORDER_NO,UW_LIMIT_YN) VALUES ((SELECT MAX(PROCESS_ID)+1 FROM TMAS_HOMEPAGE_MASTER where branch_code=?), (SELECT MAX(SNO)+1 FROM TMAS_HOMEPAGE_MASTER),?,?,?,?,?,?,?)
processmaster.select.processdetails=SELECT PRODUCT_ID, DEPT_ID, PROCESS_ID, PROCESS_NAME, STATUS, ORDER_NO, UW_LIMIT_YN FROM TMAS_HOMEPAGE_MASTER WHERE PROCESS_ID=?
processmaster.select.updateCheck=SELECT COUNT(*) FROM TMAS_HOMEPAGE_MASTER WHERE PROCESS_NAME=? AND PRODUCT_ID=? AND DEPT_ID=? AND PROCESS_ID!=? and branch_code=?
processmaster.update.processdetails=UPDATE TMAS_HOMEPAGE_MASTER SET PRODUCT_ID=?,DEPT_ID=?,PROCESS_NAME=?,STATUS=?,ORDER_NO=?,UW_LIMIT_YN=? WHERE PROCESS_ID=? and branch_code=?
##processmaster.select.menuList=SELECT MM.MENU_ID ,MM.MENU_NAME ,DECODE(HM.MENU_IDS,NULL,'N','Y') STATUS FROM (SELECT REGEXP_SUBSTR(MENU_IDS,'[^,]+',1,LEVEL) AS MENU_IDS FROM (SELECT MENU_IDS FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID \= ? AND DEPT_ID \= ? AND PROCESS_ID \= ? AND BRANCH_CODE \= ? ) CONNECT BY LEVEL <\= LENGTH(MENU_IDS)-LENGTH(REPLACE(MENU_IDS,',',''))+1) HM  RIGHT OUTER JOIN TMAS_MENU_MASTER MM ON MM.MENU_ID \= HM.MENU_IDS WHERE MM.PRODUCT_ID IN ( ? ,0 ) AND TRUNC(MM.START_DATE) <\= TRUNC(SYSDATE) AND MM.ACTIVE \= '1' AND MM.TYPE \= 'User' ORDER BY MM.MENU_ID
##processmaster.select.submenuList=SELECT MM.MENU_ID ,MM.MENU_NAME ,DECODE(HM.MENU_IDS,NULL,'N','Y') MENU_STATUS,SMM.SUB_MENU_CODE ,SMM.SUB_MENU_NAME ,DECODE(HSM.SUB_MENU,NULL,'N','Y') SUB_MENU_STATUS FROM TMAS_MENU_MASTER MM LEFT OUTER JOIN (SELECT REGEXP_SUBSTR(MENU_IDS,'[^,]+',1,LEVEL) AS MENU_IDS FROM (SELECT MENU_IDS FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID \= ? AND DEPT_ID \= ? AND PROCESS_ID \= ? AND BRANCH_CODE \= ? ) CONNECT BY LEVEL <\= LENGTH(MENU_IDS)-LENGTH(REPLACE(MENU_IDS,',',''))+1) HM  ON MM.MENU_ID \= HM.MENU_IDS LEFT OUTER JOIN TMAS_SUB_MENU_CONFIG SMC ON SMC.MENU_ID \= MM.MENU_ID AND SMC.PROCESS_ID \= ? AND SMC.STATUS \= 'Y' LEFT OUTER JOIN TMAS_SUB_MENU_MASTER SMM ON SMC.SUB_MENU_ID \= SMM.SUB_MENU_ID AND SMM.STATUS \= 'Y' left outer JOIN (SELECT REGEXP_SUBSTR(SUB_MENU_IDS,'[^~]+',1,1) MENU_ID,REGEXP_SUBSTR(SUB_MENU_IDS,'[^~]+',1,2) SUB_MENU FROM (SELECT REGEXP_SUBSTR(SUB_MENU_IDS,'[^\#]+',1,LEVEL) AS SUB_MENU_IDS FROM (SELECT SUB_MENU_IDS FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID \= ? AND DEPT_ID \= ? AND PROCESS_ID \= ? ) CONNECT BY LEVEL <\= LENGTH(SUB_MENU_IDS)-LENGTH(REPLACE(SUB_MENU_IDS,'\#',''))+1) ) HSM ON SMC.MENU_ID \= HSM.MENU_ID AND SMM.SUB_MENU_CODE \= HSM.SUB_MENU WHERE MM.PRODUCT_ID IN ( ? ,0 ) AND TRUNC(MM.START_DATE) <\= TRUNC(SYSDATE) AND MM.ACTIVE \= '1' AND MM.TYPE \= 'User' AND HM.MENU_IDS IS NOT NULL AND SMM.SUB_MENU_CODE IS NOT NULL ORDER BY MM.MENU_ID ,SMM.SUB_MENU_ID
##processmaster.select.menuList=SELECT MM.MENU_ID ,MM.MENU_NAME ,DECODE(HM.MENU_IDS,NULL,'N','Y') STATUS FROM (SELECT REGEXP_SUBSTR(MENU_IDS,'[^,]+',1,LEVEL) AS MENU_IDS FROM (SELECT MENU_IDS FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID \= ? AND DEPT_ID \= ? AND PROCESS_ID \= ? AND BRANCH_CODE \= ? ) CONNECT BY LEVEL <\= LENGTH(MENU_IDS)-LENGTH(REPLACE(MENU_IDS,',',''))+1) HM  RIGHT OUTER JOIN TMAS_MENU_MASTER MM ON MM.MENU_ID \= HM.MENU_IDS WHERE MM.PRODUCT_ID IN ( ? ,0 ) AND TRUNC(MM.START_DATE) <\= TRUNC(SYSDATE) AND MM.ACTIVE \= '1' AND MM.TYPE \= 'User' ORDER BY MM.MENU_ID
##processmaster.select.submenuList=SELECT MM.MENU_ID ,MM.MENU_NAME ,DECODE(HM.MENU_IDS,NULL,'N','Y') MENU_STATUS,SMM.SUB_MENU_CODE ,SMM.SUB_MENU_NAME ,DECODE(HSM.SUB_MENU,NULL,'N','Y') SUB_MENU_STATUS FROM TMAS_MENU_MASTER MM LEFT OUTER JOIN (SELECT REGEXP_SUBSTR(MENU_IDS,'[^,]+',1,LEVEL) AS MENU_IDS FROM (SELECT MENU_IDS FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID \= ? AND DEPT_ID \= ? AND PROCESS_ID \= ? AND BRANCH_CODE \= ? ) CONNECT BY LEVEL <\= LENGTH(MENU_IDS)-LENGTH(REPLACE(MENU_IDS,',',''))+1) HM  ON MM.MENU_ID \= HM.MENU_IDS LEFT OUTER JOIN TMAS_SUB_MENU_CONFIG SMC ON SMC.MENU_ID \= MM.MENU_ID AND SMC.PROCESS_ID \= ? AND SMC.STATUS \= 'Y' LEFT OUTER JOIN TMAS_SUB_MENU_MASTER SMM ON SMC.SUB_MENU_ID \= SMM.SUB_MENU_ID AND SMM.STATUS \= 'Y' left outer JOIN (SELECT REGEXP_SUBSTR(SUB_MENU_IDS,'[^~]+',1,1) MENU_ID,REGEXP_SUBSTR(SUB_MENU_IDS,'[^~]+',1,2) SUB_MENU FROM (SELECT REGEXP_SUBSTR(SUB_MENU_IDS,'[^\#]+',1,LEVEL) AS SUB_MENU_IDS FROM (SELECT SUB_MENU_IDS FROM TMAS_HOMEPAGE_MASTER WHERE PRODUCT_ID \= ? AND DEPT_ID \= ? AND PROCESS_ID \= ? ) CONNECT BY LEVEL <\= LENGTH(SUB_MENU_IDS)-LENGTH(REPLACE(SUB_MENU_IDS,'\#',''))+1) ) HSM ON SMC.MENU_ID \= HSM.MENU_ID AND SMM.SUB_MENU_CODE \= HSM.SUB_MENU WHERE MM.PRODUCT_ID IN ( ? ,0 ) AND TRUNC(MM.START_DATE) <\= TRUNC(SYSDATE) AND MM.ACTIVE \= '1' AND MM.TYPE \= 'User' AND HM.MENU_IDS IS NOT NULL AND SMM.SUB_MENU_CODE IS NOT NULL ORDER BY MM.MENU_ID ,SMM.SUB_MENU_ID
##report.select.claimReportPRMXOL=SELECT CONTRACT_NO,PROPOSAL_NO,CLAIM_NO,COMPANY_NAME,BROKER,RSK_INSURED_NAME,INCEPTION_DATE,EXPIRY_DATE,RSK_CEDANT_RETENTION,RSK_SHARE_SIGNED,RSK_LIMIT_OS_OC,RSK_CASHLOSS_LMT_OC,TOTAL_AMT_PAID_TILL_DATE,RESERVE_ID,RESERVE_AMOUNT,PAID_AMOUNT_OC,OS_AMOUNT,RESERVE_DATE,RISK_CODE,ACCUMULATION_CODE,EVENT_CODE,STATUS_OF_CLAIM,DATE_OF_LOSS,REPORT_DATE,LOSS_DETAILS,CAUSE_OF_LOSS,LOCATION,SHORT_NAME,LOSS_ESTIMATE_OC,LOSS_ESTIMATE_OS_OC,EXCHANGE_RATE,ADVICE_UW,ADVICE_UW_EMAILID,ADVICE_MANAGEMENT,ADVICE_MGT_EMAILID,RI_RECOVERY,CREATED_DATE,CREATED_BY,REMARKS,LOGIN_ID,ALLOCATED_TILL_DATE,RSK_TREATYID,RSK_PF_COVERED FROM PT_XOL_CLAIM_REG WHERE PRODUCT_ID=? AND CREATED_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY')
processmaster.select.processNameinsertCheck=SELECT COUNT(*) FROM TMAS_HOMEPAGE_MASTER WHERE upper(PROCESS_NAME)=upper(?) AND BRANCH_CODE=?
processmaster.select.processNameupdateCheck=SELECT COUNT(*) FROM TMAS_HOMEPAGE_MASTER WHERE upper(PROCESS_NAME)=upper(?) AND PRODUCT_ID!=?  AND BRANCH_CODE=?
###Reports
report.select.clJournalInit=SELECT A.* FROM (SELECT DISTINCT MD.MOVMENT_TRANID,CD.DETAIL_NAME,MD.ACCOUNT_PERIOD_QTR, MD.ACCOUNT_PERIOD_DATE ACCOUNT_PERIOD, MD.REPORT_TYPE FROM   TRANSACTION_MOVEMENT_DETAILS MD, CONSTANT_DETAIL CD WHERE MD.BRANCH_CODE \= ? AND CD.CATEGORY_ID \= '12' AND CD.TYPE \= MD.ACCOUNT_PERIOD_QTR AND MD.TYPE \= 'Q' AND MD.PR_CL_TYPE\='CL' ORDER BY   1 DESC) A
report.select.journel=SELECT  ROWNUM SNO,MD.MOVMENT_TRANID,MD.ACCOUNT_PERIOD_QTR,MD.ACCOUNT_PERIOD_DATE,UW_YEAR,SPC_NAME,CURRENCY_NAME,CM.EXCHANGE_RATE, LOSS_ESTIMATE_REVISED_OC,(LOSS_ESTIMATE_REVISED_OC / CM.EXCHANGE_RATE)  LOSS_ESTIMATE_REVISED_DC,(SELECT   TMAS_PRODUCT_NAME FROM   TMAS_PRODUCT_MASTER TPM  WHERE   TPM.TMAS_PRODUCT_ID = MD.PRODUCT_ID AND TPM.BRANCH_CODE = ? AND TPM.TMAS_STATUS= 'Y' )PRODUCT_NAME,(SELECT   TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER TDM WHERE TDM.TMAS_DEPARTMENT_ID = MD.DEPT_ID  AND TDM.TMAS_PRODUCT_ID = MD.PRODUCT_ID  AND TDM.BRANCH_CODE =? AND TDM.TMAS_STATUS= 'Y')  DEPT_NAME  FROM   TRANSACTION_MOVEMENT_DETAILS MD, EXCHANGE_MASTER CM WHERE   MOVMENT_TRANID =? AND MD.CURRENCY_ID = CM.CURRENCY_ID AND CM.AMEND_ID = (SELECT MAX (AMEND_ID)  FROM CURRENCY_MASTER C WHERE C.CURRENCY_ID = CM.CURRENCY_ID  AND C.BRANCH_CODE = ?) AND MD.BRANCH_CODE = ? AND CM.BRANCH_CODE = ? AND MD.TYPE='Q' ORDER BY 1,2
report.select.viewJurnalall1=SELECT ROWNUM SNO,MD.MOVMENT_TRANID,MD.ACCOUNT_PERIOD_QTR,MD.ACCOUNT_PERIOD_DATE,UW_YEAR,SPC_NAME,MD.CURRENCY_NAME,OS_LOSS_MOVEMENT_PL, (NVL (OS_LOSS_MOVEMENT_PL, 0) / CM.EXCHANGE_RATE) OS_LOSS_MOVEMENT_PL_USD,BS_MOVEMENT,(NVL (BS_MOVEMENT, 0) / CM.EXCHANGE_RATE) BS_MOVEMENT_USD,CLAIMS_PAID,(NVL (CLAIMS_PAID, 0) / CM.EXCHANGE_RATE) CLAIMS_PAID_USD,DEBTORS_CREDIT_CONTROL_AC,(NVL (DEBTORS_CREDIT_CONTROL_AC, 0) /CM.EXCHANGE_RATE) DEBTORS_CREDIT_CONTROL_AC_USD,OS_LOSS_MOVEMENT_BS,(NVL (OS_LOSS_MOVEMENT_BS, 0) / CM.EXCHANGE_RATE) OS_LOSS_MOVEMENT_BS_USD, NVL(OS_LOSS_PL_CR,0) OS_LOSS_PL_CR,(NVL (OS_LOSS_PL_CR, 0) / CM.EXCHANGE_RATE) OS_LOSS_PL_CR_USD,(SELECT   TMAS_PRODUCT_NAME FROM   TMAS_PRODUCT_MASTER TPM WHERE   TPM.TMAS_PRODUCT_ID = MD.PRODUCT_ID  AND TPM.BRANCH_CODE = ? AND TPM.TMAS_STATUS= 'Y') PRODUCT_NAME,(SELECT   TMAS_DEPARTMENT_NAME FROM   TMAS_DEPARTMENT_MASTER TDM  WHERE TDM.TMAS_DEPARTMENT_ID = MD.DEPT_ID AND TDM.TMAS_PRODUCT_ID = MD.PRODUCT_ID AND TDM.BRANCH_CODE = ? AND TDM.TMAS_STATUS= 'Y') DEPT_NAME  FROM   TRANSACTION_MOVEMENT_DETAILS MD, EXCHANGE_MASTER CM WHERE   MOVMENT_TRANID = ? AND MD.CURRENCY_ID = CM.CURRENCY_ID AND CM.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM CURRENCY_MASTER C WHERE C.CURRENCY_ID = CM.CURRENCY_ID AND C.BRANCH_CODE = ?) AND MD.BRANCH_CODE =? AND CM.BRANCH_CODE =?
report.select.viewJurnalall=SELECT   *  FROM   (SELECT   ROWNUM SNO, MD.MOVMENT_TRANID, MD.ACCOUNT_PERIOD_QTR, MD.ACCOUNT_PERIOD_DATE, UW_YEAR, SPC_NAME, MD.CURRENCY_NAME,  OS_LOSS_MOVEMENT_PL,  (NVL (OS_LOSS_MOVEMENT_PL, 0) / CM.EXCHANGE_RATE)  OS_LOSS_MOVEMENT_PL_USD,   BS_MOVEMENT, (NVL (BS_MOVEMENT, 0) /CM.EXCHANGE_RATE) BS_MOVEMENT_USD,  CLAIMS_PAID,   (NVL (CLAIMS_PAID, 0) / CM.EXCHANGE_RATE) CLAIMS_PAID_USD,   DEBTORS_CREDIT_CONTROL_AC,  (NVL (DEBTORS_CREDIT_CONTROL_AC, 0) / CM.EXCHANGE_RATE)     DEBTORS_CREDIT_CONTROL_AC_USD,  OS_LOSS_MOVEMENT_BS, (NVL (OS_LOSS_MOVEMENT_BS, 0) / CM.EXCHANGE_RATE)  OS_LOSS_MOVEMENT_BS_USD, NVL(OS_LOSS_PL_CR,0) OS_LOSS_PL_CR, (NVL (OS_LOSS_PL_CR, 0) / CM.EXCHANGE_RATE)   OS_LOSS_PL_CR_USD, (SELECT   TMAS_PRODUCT_NAME   FROM   TMAS_PRODUCT_MASTER TPM   WHERE   TPM.TMAS_PRODUCT_ID \= MD.PRODUCT_ID   AND TPM.BRANCH_CODE \= ? AND TPM.TMAS_STATUS\= 'Y')   PRODUCT_NAME, (SELECT   TMAS_DEPARTMENT_NAME   FROM   TMAS_DEPARTMENT_MASTER TDM  WHERE    TDM.TMAS_DEPARTMENT_ID \= MD.DEPT_ID   AND TDM.TMAS_PRODUCT_ID \= MD.PRODUCT_ID  AND TDM.BRANCH_CODE \= ? AND TDM.TMAS_STATUS\= 'Y')  DEPT_NAME  FROM   TRANSACTION_MOVEMENT_DETAILS MD, EXCHANGE_MASTER CM  WHERE   MOVMENT_TRANID \= ? AND MD.CURRENCY_ID \= CM.CURRENCY_ID   AND CM.AMEND_ID \=  (SELECT   MAX (AMEND_ID)   FROM   CURRENCY_MASTER C  WHERE   C.CURRENCY_ID \= CM.CURRENCY_ID   AND C.BRANCH_CODE \= ?)  AND MD.BRANCH_CODE \= ? AND MD.TYPE\='Q'  AND CM.BRANCH_CODE \= ?)  WHERE   SNO \= ?
journelreport.sp.clMovementRep={CALL MOVEMENT_DATA(?,?,?,?,'CL')}
journelreport.select.moveMentInit=SELECT   A.*  FROM  (SELECT DISTINCT MD.MOVMENT_TRANID,CD.DETAIL_NAME,MD.ACCOUNT_PERIOD_QTR,MD.ACCOUNT_PERIOD_DATE,MD.ACCOUNT_PERIOD_DATE ACCOUNT_PERIOD,MD.REPORT_TYPE,(SELECT   TMAS_PRODUCT_NAME FROM   TMAS_PRODUCT_MASTER TPM  WHERE   TPM.TMAS_PRODUCT_ID \= MD.PRODUCT_ID  AND TPM.BRANCH_CODE \= ? AND TPM.TMAS_STATUS\= 'Y') PRODUCT_NAME,(SELECT   TMAS_DEPARTMENT_NAME  FROM   TMAS_DEPARTMENT_MASTER TDM  WHERE  TDM.TMAS_DEPARTMENT_ID \= MD.DEPT_ID AND TDM.TMAS_PRODUCT_ID \= MD.PRODUCT_ID  AND TDM.BRANCH_CODE \= ? AND TDM.TMAS_STATUS\= 'Y') DEPT_NAME  FROM   TRANSACTION_MOVEMENT_DETAILS MD, CONSTANT_DETAIL CD WHERE MD.BRANCH_CODE \= ?  AND CD.CATEGORY_ID \= '12' AND CD.TYPE \= MD.ACCOUNT_PERIOD_QTR AND MD.TYPE \= 'Q' ORDER BY   1 DESC) A

GET_DISABLE_STATUS1=select case when (select count(*) from ttrn_claim_details where contract_no=? and nvl(layer_no,'0')=nvl(?,'0')) > 0 then 'Y'  when (select count(*) from RSK_PREMIUM_DETAILS where contract_no=? and nvl(layer_no,'0')= nvl(?,'0'))>0 then 'Y'   else 'N' end Status from dual
GET_DISABLE_STATUS=SELECT   CASE WHEN (SELECT   COUNT ( * ) FROM   TTRN_ALLOCATED_TRANSACTION WHERE   CONTRACT_NO = ? AND NVL (layer_no, '0') = NVL (?, '0') and STATUS='Y') > 0 THEN 'Y'  ELSE 'N' END Status  FROM   DUAL
GET_ALLOCATION_DISABLE_STATUS=select case  when count(*) > 0   then 'Y'  else 'N' end Status from TTRN_ALLOCATED_TRANSACTION where  contract_no=?  and nvl(layer_no,'0')=nvl(?,'0')
###Journal Reports

PINELINE_MOVEMENT_JV_CRNT_DETAILS = SELECT SPFCID, TSM.TMAS_SPFC_NAME, PRODUCT_ID, TPM.TMAS_PRODUCT_NAME, CM.CURRENCY_NAME, CM.CURRENCY_ID, UW_YEAR, TO_CHAR(REPORT_DATE, 'DD/MM/YYYY') REPORT_DATE, TO_CHAR (MOVEMENT_START_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR (REPORT_DATE, 'DD/MM/YYYY') EXPIRY_DATE, NVL(INWARDPIPEUNEARN_DEBIT,0) INWARDPIPEUNEARN_DEBIT, NVL(INWARDPIPEUNEARNACQCOST_CREDIT,0) INWARDPIPEUNEARNACQCOST_CREDIT, NVL(INWARDPIPEUPRB_S_CREDIT,0) INWARDPIPEUPRB_S_CREDIT, NVL(INWARDPIPEUPRB_S_DEBIT,0) INWARDPIPEUPRB_S_DEBIT FROM  (SELECT   PRODUCT_ID, SPFCID, CURRENCY_ID, UW_YEAR,REPORT_DATE, SUM (PIPELINEPREMIUM_DC) INWARDPIPEUNEARN_DEBIT, SUM (DIFF_ACQUISTION_COST_DC) INWARDPIPEUNEARNACQCOST_CREDIT, SUM (PIPELINEPREMIUM_DC) INWARDPIPEUPRB_S_CREDIT, SUM (DIFF_ACQUISTION_COST_DC) INWARDPIPEUPRB_S_DEBIT, BRANCH_CODE, MOVEMENT_START_DATE FROM BOOKED_UPR WHERE MOVEMENT_ID=? AND BRANCH_CODE = ? AND PRODUCT_ID = ? AND SPFCID = ? AND CURRENCY_ID = ? AND UW_YEAR = ? GROUP BY   PRODUCT_ID, SPFCID, CURRENCY_ID, UW_YEAR,REPORT_DATE,BRANCH_CODE,MOVEMENT_START_DATE) A, TMAS_SPFC_MASTER TSM, TMAS_PRODUCT_MASTER TPM, CURRENCY_MASTER CM WHERE A.SPFCID = TSM.TMAS_SPFC_ID AND TSM.BRANCH_CODE = ? AND TSM.TMAS_PRODUCT_ID = A.PRODUCT_ID AND TPM.BRANCH_CODE = ? AND TSM.BRANCH_CODE = A.BRANCH_CODE AND TSM.TMAS_PRODUCT_ID = TPM.TMAS_PRODUCT_ID AND CM.CURRENCY_ID = A.CURRENCY_ID AND CM.BRANCH_CODE = A.BRANCH_CODE

BOOKED_PREMIUM_INIT = SELECT DISTINCT MOVEMENT_ID,UW_YEAR,TO_CHAR(REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,DECODE(MOVEMENT_TYPE,'F','Final','Intreim') MOVEMENT_TYPE FROM BOOKED_PREMIUM WHERE BRANCH_CODE=? ORDER BY MOVEMENT_ID

BOOKED_PREMIUM_CRNT = SELECT   SPFCID, TSM.TMAS_SPFC_NAME, PRODUCT_ID, TPM.TMAS_PRODUCT_NAME, CM.CURRENCY_NAME, CM.CURRENCY_ID, UW_YEAR FROM   (  SELECT   PRODUCT_ID, SPFCID, CURRENCY_ID, UW_YEAR, BRANCH_CODE, REPORT_DATE FROM BOOKED_PREMIUM WHERE   BRANCH_CODE = ? and UW_YEAR=? and MOVEMENT_ID=? AND TRUNC (REPORT_DATE) = TO_DATE (?, 'DD/MM/YYYY') GROUP BY   PRODUCT_ID, SPFCID, CURRENCY_ID, UW_YEAR, BRANCH_CODE, REPORT_DATE) A, TMAS_SPFC_MASTER TSM, TMAS_PRODUCT_MASTER TPM, CURRENCY_MASTER CM WHERE A.SPFCID = TSM.TMAS_SPFC_ID AND TSM.BRANCH_CODE = ? AND TSM.TMAS_PRODUCT_ID = A.PRODUCT_ID  AND TPM.BRANCH_CODE = ? AND TSM.BRANCH_CODE = A.BRANCH_CODE AND TSM.TMAS_PRODUCT_ID = TPM.TMAS_PRODUCT_ID AND CM.CURRENCY_ID = A.CURRENCY_ID AND CM.BRANCH_CODE = A.BRANCH_CODE

##BOOKED_PREMIUM_DETAILS = SELECT   SPFCID, TSM.TMAS_SPFC_NAME, PRODUCT_ID, TPM.TMAS_PRODUCT_NAME, CM.CURRENCY_NAME, CM.CURRENCY_ID, UW_YEAR, TO_CHAR (REPORT_DATE, 'DD/MM/YYYY') REPORT_DATE, GWPI_DC, PREMIUM_DC, GROSS_ACQUISTION_COST_DC, GROSS_PIPELINE_ACQUTION_COST, PREMIUM_DEPOSIT_RETAINED_DC, PREMIUM_DEPOSIT_RELEASED_DC, INTEREST_ON_DEPOSIT_DC, GROSS_CLAIMS_PAID_DC,BUSINESS_PARTNER,PIPELINED_NET_AC FROM ( SELECT PRODUCT_ID, UW_YEAR, SPFCID, CURRENCY_ID, REPORT_DATE, BRANCH_CODE, SUM (PREMIUM_DC) GWPI_DC, SUM (PREMIUM_DC) PREMIUM_DC, SUM (GROSS_ACQUISTION_COST_DC) GROSS_ACQUISTION_COST_DC, SUM (GROSS_ACQUISTION_COST_DC) GROSS_PIPELINE_ACQUTION_COST, SUM (PREMIUM_DEPOSIT_RETAINED_DC) PREMIUM_DEPOSIT_RETAINED_DC, SUM (PREMIUM_DEPOSIT_RELEASED_DC) PREMIUM_DEPOSIT_RELEASED_DC, SUM (CLAIM_DEPOSIT_RETAINED_DC) CLAIM_DEPOSIT_RETAINED_DC, SUM(CLAIM_DEPOSIT_RELEASED_DC) CLAIM_DEPOSIT_RELEASED_DC, SUM (INTEREST_ON_DEPOSIT_DC) INTEREST_ON_DEPOSIT_DC, SUM (GROSS_CLAIMS_PAID_DC) GROSS_CLAIMS_PAID_DC,(SUM(NVL(PREMIUM_DC,0))+SUM(NVL(GROSS_ACQUISTION_COST_DC,0))+SUM(NVL(PREMIUM_DEPOSIT_RETAINED_DC,0))+SUM(NVL(CLAIM_DEPOSIT_RETAINED_DC,0))+SUM(NVL(GROSS_CLAIMS_PAID_DC,0)))-(SUM(NVL(PREMIUM_DC,0))+SUM(NVL(GROSS_ACQUISTION_COST_DC,0))+SUM(NVL(PREMIUM_DEPOSIT_RELEASED_DC,0))+SUM(NVL(CLAIM_DEPOSIT_RELEASED_DC,0))+SUM(NVL(INTEREST_ON_DEPOSIT_DC,0))) BUSINESS_PARTNER,(SUM(PREMIUM_DC)-SUM (GROSS_ACQUISTION_COST_DC)) PIPELINED_NET_AC FROM BOOKED_PREMIUM WHERE PRODUCT_ID = ? AND SPFCID = ? AND CURRENCY_ID = ? AND UW_YEAR = ? GROUP BY   PRODUCT_ID, UW_YEAR, SPFCID, CURRENCY_ID, REPORT_DATE, BRANCH_CODE) A, TMAS_SPFC_MASTER TSM, TMAS_PRODUCT_MASTER TPM, CURRENCY_MASTER CM WHERE A.SPFCID = TSM.TMAS_SPFC_ID AND TSM.BRANCH_CODE = ? AND TSM.TMAS_PRODUCT_ID = A.PRODUCT_ID AND TPM.BRANCH_CODE = ? AND TSM.BRANCH_CODE = A.BRANCH_CODE AND TSM.TMAS_PRODUCT_ID = TPM.TMAS_PRODUCT_ID AND CM.CURRENCY_ID = A.CURRENCY_ID AND CM.BRANCH_CODE = A.BRANCH_CODE

BOOKED_PREMIUM_DETAILS = SELECT   SPFCID, TSM.TMAS_SPFC_NAME, PRODUCT_ID, TPM.TMAS_PRODUCT_NAME, CM.CURRENCY_NAME, CM.CURRENCY_ID, UW_YEAR, TO_CHAR (REPORT_DATE, 'DD/MM/YYYY') REPORT_DATE, TO_CHAR (MOVEMENT_START_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR (REPORT_DATE, 'DD/MM/YYYY') EXPIRY_DATE, GWPI_DC, PREMIUM_DC, GROSS_ACQUISTION_COST_DC, GROSS_PIPELINE_ACQUTION_COST, PREMIUM_DEPOSIT_RETAINED_DC, PREMIUM_DEPOSIT_RELEASED_DC, INTEREST_ON_DEPOSIT_DC, GROSS_CLAIMS_PAID_DC,BUSINESS_PARTNER,PIPELINED_NET_AC FROM ( SELECT PRODUCT_ID, UW_YEAR, SPFCID, CURRENCY_ID, REPORT_DATE, BRANCH_CODE, SUM (PREMIUM_DC) GWPI_DC, SUM (GROSS_PIPELINED_PREMIUM_DC) PREMIUM_DC, SUM (GROSS_ACQUISTION_COST_DC) GROSS_ACQUISTION_COST_DC, SUM (GROSS_PIPELINED_ACQUISITION_DC) GROSS_PIPELINE_ACQUTION_COST, SUM (PREMIUM_DEPOSIT_RETAINED_DC) PREMIUM_DEPOSIT_RETAINED_DC, SUM (PREMIUM_DEPOSIT_RELEASED_DC) PREMIUM_DEPOSIT_RELEASED_DC, SUM (CLAIM_DEPOSIT_RETAINED_DC) CLAIM_DEPOSIT_RETAINED_DC, SUM(CLAIM_DEPOSIT_RELEASED_DC) CLAIM_DEPOSIT_RELEASED_DC, SUM (INTEREST_ON_DEPOSIT_DC) INTEREST_ON_DEPOSIT_DC, SUM (GROSS_CLAIMS_PAID_DC) GROSS_CLAIMS_PAID_DC,(SUM(NVL(PREMIUM_DC,0))+SUM(NVL(GROSS_ACQUISTION_COST_DC,0))+SUM(NVL(PREMIUM_DEPOSIT_RETAINED_DC,0))+SUM(NVL(CLAIM_DEPOSIT_RETAINED_DC,0))+SUM(NVL(GROSS_CLAIMS_PAID_DC,0)))-(SUM(NVL(PREMIUM_DC,0))+SUM(NVL(GROSS_ACQUISTION_COST_DC,0))+SUM(NVL(PREMIUM_DEPOSIT_RELEASED_DC,0))+SUM(NVL(CLAIM_DEPOSIT_RELEASED_DC,0))+SUM(NVL(INTEREST_ON_DEPOSIT_DC,0))) BUSINESS_PARTNER,(SUM(PREMIUM_DC)-SUM (GROSS_ACQUISTION_COST_DC)) PIPELINED_NET_AC,MOVEMENT_START_DATE FROM BOOKED_PREMIUM WHERE MOVEMENT_ID=? and PRODUCT_ID = ? AND SPFCID = ? AND CURRENCY_ID = ? AND UW_YEAR = ? GROUP BY   PRODUCT_ID, UW_YEAR, SPFCID, CURRENCY_ID, REPORT_DATE, BRANCH_CODE, MOVEMENT_START_DATE) A, TMAS_SPFC_MASTER TSM, TMAS_PRODUCT_MASTER TPM, CURRENCY_MASTER CM WHERE A.SPFCID = TSM.TMAS_SPFC_ID AND TSM.BRANCH_CODE = ? AND TSM.TMAS_PRODUCT_ID = A.PRODUCT_ID AND TPM.BRANCH_CODE = ? AND TSM.BRANCH_CODE = A.BRANCH_CODE AND TSM.TMAS_PRODUCT_ID = TPM.TMAS_PRODUCT_ID AND CM.CURRENCY_ID = A.CURRENCY_ID AND CM.BRANCH_CODE = A.BRANCH_CODE

BOOKED_PREMIUM_CHECK = SELECT COUNT(*) COUNTS FROM BOOKED_PREMIUM WHERE BRANCH_CODE=? AND TRUNC(REPORT_DATE)=TO_DATE(?,'DD/MM/YYYY') AND MOVEMENT_TYPE=?

JOURNAL_REPORT_PROCEDURE = UPR_PIPELINED

JOURNAL_REPORT_PIPELINE_WRITTEN = PIPELINED_WRITTEN

BOOKED_UPR_INIT = SELECT DISTINCT MOVEMENT_ID,UW_YEAR,TO_CHAR(REPORT_DATE,'DD/MM/YYYY') REPORT_DATE,DECODE(MOVEMENT_TYPE,'F','Final','Intreim') MOVEMENT_TYPE FROM BOOKED_UPR WHERE BRANCH_CODE=? ORDER BY MOVEMENT_ID

BOOKED_UPR_CRNT =  SELECT   SPFCID, TSM.TMAS_SPFC_NAME, PRODUCT_ID, TPM.TMAS_PRODUCT_NAME, CM.CURRENCY_NAME, CM.CURRENCY_ID, UW_YEAR FROM   (  SELECT   PRODUCT_ID, SPFCID, CURRENCY_ID, UW_YEAR, BRANCH_CODE, REPORT_DATE FROM BOOKED_UPR WHERE   BRANCH_CODE = ? and UW_YEAR=? and MOVEMENT_ID=? AND TRUNC (REPORT_DATE) = TO_DATE (?, 'DD/MM/YYYY') GROUP BY   PRODUCT_ID, SPFCID, CURRENCY_ID, UW_YEAR, BRANCH_CODE, REPORT_DATE) A, TMAS_SPFC_MASTER TSM, TMAS_PRODUCT_MASTER TPM, CURRENCY_MASTER CM WHERE A.SPFCID = TSM.TMAS_SPFC_ID AND TSM.BRANCH_CODE = ? AND TSM.TMAS_PRODUCT_ID = A.PRODUCT_ID  AND TPM.BRANCH_CODE = ? AND TSM.BRANCH_CODE = A.BRANCH_CODE AND TSM.TMAS_PRODUCT_ID = TPM.TMAS_PRODUCT_ID AND CM.CURRENCY_ID = A.CURRENCY_ID AND CM.BRANCH_CODE = A.BRANCH_CODE

BOOKED_UPR_DETAILS = SELECT   SPFCID, TSM.TMAS_SPFC_NAME, PRODUCT_ID, TPM.TMAS_PRODUCT_NAME, CM.CURRENCY_NAME, CM.CURRENCY_ID, UW_YEAR, TO_CHAR (REPORT_DATE, 'DD/MM/YYYY') REPORT_DATE, TO_CHAR (MOVEMENT_START_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR (REPORT_DATE, 'DD/MM/YYYY') EXPIRY_DATE, Booked_Upr_Debit, Book_Deffe_Acqui_Cost_Credit, Inward_Booked_Upr_Bs_Credit, Inward_Book_DAcq_Bs_Debit, Pipelined_Upr_Credit, Pipelined_Acq_Cost, Inward_Pipeline_Upr_Bs_Debit, Inward_Pipe_DAcq_Cost_Credit FROM (SELECT Product_Id, Spfcid, Currency_Id, uw_year, BRANCH_CODE, REPORT_DATE, SUM (Premium_Dc) Booked_Upr_Debit, SUM (Pipelined_Acquistion_Cost_Dc) Book_Deffe_Acqui_Cost_Credit, SUM (Premium_Dc) Inward_Booked_Upr_Bs_Credit, SUM (Pipelined_Acquistion_Cost_Dc) Inward_Book_DAcq_Bs_Debit, SUM (Premium_Dc) Pipelined_Upr_Credit, SUM (Pipelined_Acquistion_Cost_Dc) Pipelined_Acq_Cost, SUM (Premium_Dc) Inward_Pipeline_Upr_Bs_Debit, SUM (Pipelined_Acquistion_Cost_Dc) Inward_Pipe_DAcq_Cost_Credit, MOVEMENT_START_DATE FROM Booked_Upr WHERE Movement_id=? AND  Branch_Code = ? AND PRODUCT_ID = ? AND SPFCID = ? AND CURRENCY_ID = ? AND UW_YEAR = ? GROUP BY   Product_Id, Spfcid, Currency_Id, uw_year, REPORT_DATE, BRANCH_CODE,MOVEMENT_START_DATE) A, TMAS_SPFC_MASTER TSM, TMAS_PRODUCT_MASTER TPM, CURRENCY_MASTER CM WHERE A.SPFCID = TSM.TMAS_SPFC_ID AND TSM.BRANCH_CODE = ? AND TSM.TMAS_PRODUCT_ID = A.PRODUCT_ID AND TPM.BRANCH_CODE = ? AND TSM.BRANCH_CODE = A.BRANCH_CODE AND TSM.TMAS_PRODUCT_ID = TPM.TMAS_PRODUCT_ID AND CM.CURRENCY_ID = A.CURRENCY_ID AND CM.BRANCH_CODE = A.BRANCH_CODE

BOOKED_UPR_REPORT_CHECK = SELECT COUNT(*) COUNTS FROM BOOKED_UPR WHERE BRANCH_CODE=? AND TRUNC(REPORT_DATE)=TO_DATE(?,'DD/MM/YYYY') AND MOVEMENT_TYPE=?

PIPELIEN_WRITTEN_CHECK = SELECT COUNT(*) COUNTS FROM UPR_PIPELINED_WRITTEN WHERE BRANCH_CODE=? AND TRUNC(REPORT_DATE)=TO_DATE(?,'DD/MM/YYYY') AND MOVEMENT_TYPE=?

PIPELIEN_WRITTEN_INIT = SELECT DISTINCT MOVEMENT_ID,DECODE(MOVEMENT_TYPE,'F','Final','Intreim') MOVEMENT_TYPE,BRANCH_CODE,UW_YEAR,TO_CHAR(REPORT_DATE,'DD/MM/YYYY') REPORT_DATE FROM UPR_PIPELINED_WRITTEN WHERE BRANCH_CODE=? ORDER BY MOVEMENT_ID ASC

PIPELINE_WRITTEN_CRNT = SELECT SPFCID,TSM.TMAS_SPFC_NAME,PRODUCT_ID,TPM.TMAS_PRODUCT_NAME,CM.CURRENCY_NAME,CM.CURRENCY_ID,UW_YEAR FROM ( SELECT PRODUCT_ID,SPFCID,CURRENCY_ID,UW_YEAR,BRANCH_CODE FROM  UPR_PIPELINED_WRITTEN WHERE BRANCH_CODE=? and UW_YEAR=? and movement_id=? AND TRUNC (REPORT_DATE) = TO_DATE (?, 'DD/MM/YYYY') GROUP BY  PRODUCT_ID,SPFCID,CURRENCY_ID, UW_YEAR,BRANCH_CODE) A,TMAS_SPFC_MASTER TSM,TMAS_PRODUCT_MASTER TPM, CURRENCY_MASTER CM WHERE A.SPFCID=TSM.TMAS_SPFC_ID AND TSM.BRANCH_CODE=? AND TSM.TMAS_PRODUCT_ID=A.PRODUCT_ID AND TPM.BRANCH_CODE=? AND TSM.BRANCH_CODE=A.BRANCH_CODE AND TSM.TMAS_PRODUCT_ID=TPM.TMAS_PRODUCT_ID AND CM.CURRENCY_ID=A.CURRENCY_ID AND CM.BRANCH_CODE=A.BRANCH_CODE

PIPELINE_WRITTEN_DETAILS = SELECT   SPFCID, TSM.TMAS_SPFC_NAME, PRODUCT_ID, TPM.TMAS_PRODUCT_NAME, CM.CURRENCY_NAME, CM.CURRENCY_ID, UW_YEAR, TO_CHAR (REPORT_DATE, 'DD/MM/YYYY') REPORT_DATE, PIPELINED_GWPI_DC, PIPELINED_ACQUISTION_DC, PIPELINED_NETPREMIUM FROM   UPR_PIPELINED_WRITTEN A, TMAS_SPFC_MASTER TSM, TMAS_PRODUCT_MASTER TPM, CURRENCY_MASTER CM WHERE A.MOVEMENT_ID=? AND A.SPFCID = TSM.TMAS_SPFC_ID AND TSM.BRANCH_CODE = ? AND TSM.TMAS_PRODUCT_ID = A.PRODUCT_ID AND TPM.BRANCH_CODE = ? AND TSM.BRANCH_CODE = A.BRANCH_CODE AND TSM.TMAS_PRODUCT_ID = TPM.TMAS_PRODUCT_ID AND CM.CURRENCY_ID = A.CURRENCY_ID AND CM.BRANCH_CODE = A.BRANCH_CODE AND PRODUCT_ID = ? AND A.CURRENCY_ID = ? AND UW_YEAR = ? AND SPFCID = ?


#GET_SHORT_NAME=select COUNTRY_SHORT_NAME from country_master cm where country_id in (select COUNTRY_ID from tmas_branch_master where branch_code=?) and cm.branch_code=?
#GET_SHORT_NAME=select COUNTRY_SHORT_NAME from country_master cm where country_id in (select COUNTRY_ID from tmas_branch_master where branch_code=?) and rownum=1 and cm.branch_code=?
#GET_SHORT_NAME=SELECT COUNTRY_SHORT_NAME FROM TMAS_BRANCH_MASTER WHERE BRANCH_CODE=? AND STATUS='Y'
GET_SHORT_NAME= SELECT (SELECT SHORT_NAME FROM Currency_Master CM WHERE CM.CURRENCY_ID= TBM.BASE_CURRENCY_ID AND CM.BRANCH_CODE = TBM.BRANCH_CODE and cm.amend_id=(select max(NVL(amend_id,0))  from currency_master where currency_id=cm.currency_id and BRANCH_CODE = cm.BRANCH_CODE)) COUNTRY_SHORT_NAME FROM TMAS_BRANCH_MASTER TBM WHERE  TBM.BRANCH_CODE=? AND TBM.STATUS='Y'
GET_CURRENCY=select   CURRENCY FROM   TTRN_CLAIM_DETAILS CD, CURRENCY_MASTER CM WHERE  CD.CLAIM_NO =? AND CD.CONTRACT_NO = ?AND CM.BRANCH_CODE = ? AND CM.CURRENCY_ID = CD.CURRENCY AND CM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER c WHERE   c.BRANCH_CODE = cm.BRANCH_CODE AND c.CURRENCY_ID = CM.CURRENCY_ID)



GET_ACCEPTANCE_DATE=select to_char (ACCOUNT_DATE,'DD/MM/YYYY') from position_master pm where proposal_no\=? and pm.amend_id\=(Select Max(Amend_id) From Position_master p where p.proposal_no\=pm.proposal_no)
GET_AMENDMENT_DATE=select to_char (AMENDMENT_DATE,'DD/MM/YYYY') from TTRN_PAYMENT_RECEIPT R where PAYMENT_RECEIPT_NO=? AND R.AMEND_ID=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT  WHERE   PAYMENT_RECEIPT_NO = R.PAYMENT_RECEIPT_NO AND BRANCH_CODE = R.BRANCH_CODE)
#GET_TRANSACTION_DATE=select to_char (TRANS_DATE,'DD/MM/YYYY') from TTRN_PAYMENT_RECEIPT where PAYMENT_RECEIPT_NO\=?
GET_TRANSACTION_DATE=select to_char (TRANS_DATE,'DD/MM/YYYY') from TTRN_PAYMENT_RECEIPT R where PAYMENT_RECEIPT_NO\=? AND R.AMEND_ID\=(SELECT   MAX (AMEND_ID) FROM   TTRN_PAYMENT_RECEIPT  WHERE   PAYMENT_RECEIPT_NO \= R.PAYMENT_RECEIPT_NO AND BRANCH_CODE \= R.BRANCH_CODE)

#GET_OPEN_PERIOD_DATE=select to_char(start_date,'DD/MM/YYYY')start_date,to_char(end_date,'DD/MM/YYYY')end_date From tmas_open_period where SNO\=(select max(sno) from tmas_open_period where status\='Y' and branch_code\=?) and status\='Y' and branch_code\=?
GET_OPEN_PERIOD_DATE=select to_char(start_date,'DD/MM/YYYY')start_date,to_char(end_date,'DD/MM/YYYY')end_date From tmas_open_period where status\='Y' and branch_code\=?
GET_VALID_OPEN_PERIOD_DATE_BY_BRANCH=select count(*) From tmas_open_period where to_date(\:d,'dd/mm/yyyy') between START_DATE and END_DATE AND SNO\=(select max(sno) from tmas_open_period where status\='Y' and branch_code \= \:bc) and status\='Y' and branch_code \= \:bc
GET_OPEN_PERIOD_DATE_BY_BRANCH=select to_char(start_date,'DD/MM/YYYY')start_date,to_char(end_date,'DD/MM/YYYY')end_date From tmas_open_period where SNO\=(select max(sno) from tmas_open_period where status\='Y' and branch_code \= \:bc) and status\='Y' and branch_code \= \:bc

GET_OPEN_PERIOD_VALIDATE=select count(*) from dual where to_date(?,'dd/mm/yyyy') between to_date(?,'dd/mm/yyyy') and to_date(?,'dd/mm/yyyy')

RECEIPT_LIST = SELECT * FROM (SELECT A.PAYMENT_RECEIPT_NO,B.COMPANY_NAME,C.FIRST_NAME || C.LAST_NAME AS BROKER, A.PAYMENT_RESPONSE,A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.REMARKS FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO B, PERSONAL_INFO C WHERE B.CUSTOMER_ID \= A.CEDING_ID  AND B.BRANCH_CODE\=? AND B.CUSTOMER_TYPE\='C' AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=B.CUSTOMER_ID AND BRANCH_CODE\= B.BRANCH_CODE AND CUSTOMER_TYPE\= B.CUSTOMER_TYPE) AND C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID \= '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? AND A.PAYMENT_RECEIPT_NO LIKE ? UNION ALL SELECT A.PAYMENT_RECEIPT_NO,'' COMPANY_NAME, C.FIRST_NAME || C.LAST_NAME AS BROKER,A.PAYMENT_RESPONSE, A.PAID_AMT,A.BROKER_ID,A.REVERSALTRANSNO,A.REMARKS FROM TTRN_PAYMENT_RECEIPT A, PERSONAL_INFO C WHERE C.CUSTOMER_ID \= A.BROKER_ID AND C.BRANCH_CODE\=? AND C.CUSTOMER_TYPE\='B' AND C.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=C.CUSTOMER_ID AND BRANCH_CODE\= C.BRANCH_CODE AND CUSTOMER_TYPE\= C.CUSTOMER_TYPE) AND A.BROKER_ID <> '63' AND A.TRANS_TYPE \= ? AND A.BRANCH_CODE\=? AND A.PAYMENT_RECEIPT_NO LIKE ?) ORDER BY PAYMENT_RECEIPT_NO DESC

GET_PRE_AMEND_DATE=select to_char (ENDORSEMENT_DATE,'DD/MM/YYYY')ENDORSEMENT_DATE  from position_master pm where CONTRACT_NO=? and AMEND_ID=(select max(AMEND_ID) from position_master where  CONTRACT_NO=pm.CONTRACT_NO)
GET_PRE_REOPEN_DATE=SELECT to_char (REOPENED_DATE ,'DD/MM/YYYY')REOPENED_DATE FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO = ? AND CLAIM_NO = ?
GET_PRE_REPUTED_DATE=SELECT to_char (REPUDATE_DATE ,'DD/MM/YYYY')REPUDATE_DATE FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO = ? AND CLAIM_NO = ?
GET_PRE_REOPEN_DATE_RETRO=SELECT to_char (REOPENED_DATE ,'DD/MM/YYYY')REOPENED_DATE FROM TTRN_RETRO_CLAIM_DETAILS WHERE CONTRACT_NO = ? AND CLAIM_NO = ?
GET_PRE_REPUTED_DATE_RETRO=SELECT to_char (REPUDATE_DATE ,'DD/MM/YYYY')REPUDATE_DATE FROM TTRN_RETRO_CLAIM_DETAILS WHERE CONTRACT_NO = ? AND CLAIM_NO = ?
#Allocation Report
#allocation.report.list = SELECT   DISTINCT C.TRANSACTION_NO AllocationNo, to_char(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') AllocationDate, Decode(A.TRANS_TYPE,'PT','PAYMENT','RECEIPT') TRANS_TYPE, A.PAYMENT_RECEIPT_NO, A.PAID_AMT Receipt_PaymentAmount_OC, ROUND(A.PAID_AMT / A.EXCHANGE_RATE,2) Receipt_PaymentAmount_UGX, C.TRANSACTION_NO, RPD.CONTRACT_NO, C.PRODUCT_NAME, B.CURRENCY_NAME, (Select company_name from personal_info pi where pi.CUSTOMER_ID=PM.CEDING_COMPANY_ID and branch_code='05') CEDING_COMPANY, D.FIRST_NAME || D.LAST_NAME AS BROKER, RPD.ALLOCATED_TILL_DATE ALLOCATED_AMOUNT_OC, ROUND(RPD.ALLOCATED_TILL_DATE/A.EXCHANGE_RATE,2)  ALLOCATED_AMOUNT_UGX FROM   TTRN_PAYMENT_RECEIPT A, CURRENCY_MASTER B, PERSONAL_INFO D, (Select distinct CONTRACT_NO,PRODUCT_NAME,RECEIPT_NO,TRANSACTION_NO  from  TTRN_ALLOCATED_TRANSACTION) C,RSK_PREMIUM_DETAILS RPD, position_master pm WHERE A.CURRENCY_ID = B.CURRENCY_ID AND A.BROKER_ID = D.CUSTOMER_ID AND A.PAYMENT_RECEIPT_NO=C.RECEIPT_NO AND RPD.CONTRACT_NO=C.CONTRACT_NO AND C.TRANSACTION_NO = RPD.TRANSACTION_NO AND A.BRANCH_CODE = '05' AND PM.CONTRACT_NO=RPD.CONTRACT_NO AND pm.AMEND_ID=(Select Max(amend_id) from position_master p where p.CONTRACT_NO=pm.CONTRACT_NO) AND A.BRANCH_CODE = B.BRANCH_CODE AND A.BRANCH_CODE = D.BRANCH_CODE AND D.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   BRANCH_CODE = D.BRANCH_CODE AND CUSTOMER_ID = D.CUSTOMER_ID) AND A.STATUS = 'Y'
#allocation.report.list = Select * from table(Allocation_Reports(?,?,?,?,?,?,?))
#allocation.report.list = Select   Distinct C.Sno Allocationno, To_Char(Transaction_Month_Year,'DD/MM/YYYY') Allocationdate, Decode(A.Trans_Type,'PT','PAYMENT','RECEIPT') Trans_Type, A.Payment_Receipt_No Settletransnumber,To_Char(A.TRANS_DATE,'DD/MM/YYYY') Settlement_Transaction_date,B.Currency_Name Settletranscurrency, A.Paid_Amt Settleamount_Oc, Round(A.Paid_Amt / A.Exchange_Rate,2) Settleamount_Ugx, C.Transaction_No Booktransnumber, Rpd.Contract_No Contractno, C.Product_Name Productname, (Select Company_Name From Personal_Info Pi Where Pi.Customer_Id=Pm.Ceding_Company_Id And Branch_Code=?) Cedingcompany, D.First_Name || D.Last_Name As Broker, (Select  Currency_Name From Currency_Master C Where C.Currency_Id=B.Currency_Id And C.Branch_Code=?) Allocatedcurrency,(Select EXCHANGE_RATE from exchange_master EM where EM.CURRENCY_ID=C.CURRENCY_ID  AND trunc(A.TRANS_DATE) between Trunc(Inception_date) ANd   Trunc(Expiry_date) And BRANCH_CODE=A.branch_code) Exchange_rate, Rpd.Allocated_Till_Date Allocatedamount_Oc, Round(Rpd.Allocated_Till_Date/A.Exchange_Rate,2) Allocatedamount_Ugx, Decode(C.Status,'Y','Allocated','R','Reverted') Allocationstatus From Ttrn_Payment_Receipt A, Currency_Master B, Personal_Info D, Ttrn_Allocated_Transaction C,Rsk_Premium_Details Rpd, Position_Master Pm Where A.Currency_Id = B.Currency_Id And A.Broker_Id = D.Customer_Id And A.Payment_Receipt_No=C.Receipt_No And Rpd.Contract_No=C.Contract_No And C.Transaction_No = Rpd.Transaction_No And A.Branch_Code = ? And Pm.Contract_No=Rpd.Contract_No And Pm.Amend_Id=(Select Max(Amend_Id) From Position_Master P Where P.Contract_No=Pm.Contract_No) And A.Branch_Code = B.Branch_Code And A.Branch_Code = D.Branch_Code And Trunc(Transaction_Month_Year) Between To_Date(?,'DD/MM/YYYY') And To_Date(?,'DD/MM/YYYY') And D.Amend_Id = (Select   Max (Amend_Id) From   Personal_Info Where   Branch_Code = D.Branch_Code And Customer_Id = D.Customer_Id) And Decode(?,'ALL','A',To_Char(Customer_Id))=Decode(?,'ALL','A',?) And Decode(?,'ALL','A',To_Char(Pm.Ceding_Company_Id))=Decode(?,'ALL','A',?) And Decode(?,'ALL','A',To_Char( C.Status))=Decode(?,'ALL','A',?) And Decode(?,'ALL','A',To_Char(A.Trans_Type)) =Decode(?,'ALL','A',?) And A.Status = 'Y'
allocation.report.list = SELECT * FROM TABLE (ALLOCATION_REPORTS(?,?,?,?,?,?,?))
GET_PREMIUM_AMEND_DATE=select to_char (AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE from RSK_PREMIUM_DETAILS where CONTRACT_NO=? and TRANSACTION_NO=?
GET_PREMIUM_AMEND_DATE_RETRO=select to_char (AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE from TTRN_RETRO_PRCL R where CONTRACT_NO=? and TRANSACTION_NO=? AND R.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RETRO_PRCL P WHERE P.CONTRACT_NO=R.CONTRACT_NO AND P.TRANSACTION_NO = R.TRANSACTION_NO AND P.BRANCH_CODE=R.BRANCH_CODE)


#broker.ceding.name =SELECT PI.CUSTOMER_ID,PI.FIRST_NAME || ' ' || PI.LAST_NAME BROKER, PI.ADDRESS1 || ' ' || PI.ADDRESS2 Address FROM TTRN_RISK_DETAILS RK, PERSONAL_INFO PI WHERE RK.RSK_CONTRACT_NO \= ? AND RK.RSK_CEDINGID \= PI.CUSTOMER_ID AND PI.BRANCH_CODE \= ? AND CUSTomer_TYPE\='C' AND PI.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT  MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS TP WHERE   RK.RSK_CONTRACT_NO \= TP.RSK_CONTRACT_NO) union all Select  PERSONAL.CUSTOMER_ID,PERSONAL.FIRST_NAME || ' ' || PERSONAL.LAST_NAME BROKER, PERSONAL.ADDRESS1 || ' ' || PERSONAL.ADDRESS2 Address  From PERSONAL_INFO PERSONAL,TTRN_RISK_DETAILS RK Where  RK.RSK_CONTRACT_NO \= ? AND RK.RSK_BROKERID \= PERSONAL.CUSTOMER_ID AND PERSONAL.BRANCH_CODE \= ? AND CUSTOMER_TYPE\='B' AND PERSONAL.CUSTOMER_ID \!\='63' AND PERSONAL.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PERSONAL.CUSTOMER_ID AND BRANCH_CODE \= PERSONAL.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS TP WHERE   RK.RSK_CONTRACT_NO \= TP.RSK_CONTRACT_NO)
broker.ceding.name =SELECT PI.CUSTOMER_ID,PI.COMPANY_NAME BROKER, PI.ADDRESS1 || ' ' || PI.ADDRESS2 Address FROM TTRN_RISK_DETAILS RK, PERSONAL_INFO PI WHERE RK.RSK_CONTRACT_NO \= ? AND RK.RSK_CEDINGID \= PI.CUSTOMER_ID AND PI.BRANCH_CODE \= ? AND CUSTomer_TYPE\='C' AND PI.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT  MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS TP WHERE   RK.RSK_CONTRACT_NO \= TP.RSK_CONTRACT_NO) union all Select  PERSONAL.CUSTOMER_ID,PERSONAL.FIRST_NAME || ' ' || PERSONAL.LAST_NAME BROKER, PERSONAL.ADDRESS1 || ' ' || PERSONAL.ADDRESS2 Address  From PERSONAL_INFO PERSONAL,TTRN_RISK_DETAILS RK Where  RK.RSK_CONTRACT_NO \= ? AND RK.RSK_BROKERID \= PERSONAL.CUSTOMER_ID AND PERSONAL.BRANCH_CODE \= ? AND CUSTOMER_TYPE\='B' AND PERSONAL.CUSTOMER_ID \!\='63' AND PERSONAL.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PERSONAL.CUSTOMER_ID AND BRANCH_CODE \= PERSONAL.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS TP WHERE   RK.RSK_CONTRACT_NO \= TP.RSK_CONTRACT_NO)
open.period.journal=Select SNO,to_char(START_DATE,'DD/MM/YYYY')||'-'||to_char(END_DATE,'DD/MM/YYYY') openperiodvalue,to_char(START_DATE,'DD/MM/YYYY')||'-'||to_char(END_DATE,'DD/MM/YYYY')||'-'||STATUS||'-'||SNO openperiodkey from TMAS_OPEN_PERIOD where BRANCH_CODE=? order by sno desc
pipe.line.jounal.view=Select  To_Char(Startdate) Startdate , Reference, Ledger, Uwy, Spc, Currency, To_Number(Debitoc) Debitoc, To_Number(Creditoc) Creditoc, To_Number(Debitugx) Debitugx,To_Number(Creditugx) Creditugx, Narration, To_Char(Product_Id),To_Char(End_Date) From Journel_Format Where  SPC=? and CURRENCY=? and UWY=? and JV_ID=? and Trunc(STARTDATE) =to_date(?,'DD/MM/YYYY') and Trunc(END_DATE)=to_date(?,'DD/MM/YYYY') and PRODUCT_ID=? and branch_code=? Union All Select '','','Total',to_number(''),'','',Sum(Debitoc) Debitoc,Sum(Creditoc) Creditoc,Sum(Debitugx) Debitugx,Sum(Creditugx) Creditugx,'','','' From Journel_Format Where  SPC=? and CURRENCY=? and UWY=? and JV_ID=? and Trunc(STARTDATE) = to_date(?,'DD/MM/YYYY') and Trunc(END_DATE)=to_date(?,'DD/MM/YYYY') and PRODUCT_ID=? and branch_code=?
#spc.currency.list=Select distinct UWY,SPC,CURRENCY,to_char(STARTDATE,'DD/MM/YYYY')STARTDATE,NARRATION,REFERENCE from JOURNEL_FORMAT Where jv_id\=? and Trunc(STARTDATE) \= to_date(?,'DD/MM/YYYY') and Trunc(END_DATE)\=to_date(?,'DD/MM/YYYY') group by REFERENCE,LEDGER,STARTDATE,JV_ID,UWY,SPC,CURRENCY,NARRATION order by UWY,SPC,CURRENCY
spc.currency.list=Select distinct UWY,SPC,CURRENCY,to_char(JV_DATE,'DD/MM/YYYY') STARTDATE,NARRATION,REFERENCE,PRODUCT_ID,JOURNAL_ID from JOURNEL_FORMAT Where jv_id=? and Trunc(STARTDATE) = to_date(?,'DD/MM/YYYY') and Trunc(END_DATE)=to_date(?,'DD/MM/YYYY') and branch_code=? group by REFERENCE,LEDGER,JV_DATE,JV_ID,UWY,SPC,CURRENCY,NARRATION,PRODUCT_ID,JOURNAL_ID order by JOURNAL_ID,PRODUCT_ID,UWY,SPC,CURRENCY
treasury.journal.view=Select  To_Char(Startdate) Startdate , Reference, Ledger, Uwy, Spc, Currency, To_Number(Debitoc) Debitoc, To_Number(Creditoc) Creditoc, To_Number(Debitugx) Debitugx,To_Number(Creditugx) Creditugx, Narration, To_Char(Product_Id),To_Char(End_Date) From Journel_Format WHERE   TRANSACTION_NO\=?  Union All Select '','','Total',to_number(''),'','',Sum(Debitoc) Debitoc,Sum(Creditoc) Creditoc,Sum(Debitugx) Debitugx,Sum(Creditugx) Creditugx,'','','' From Journel_Format WHERE   TRANSACTION_NO\=?
#payrec.register.list=Select Payment_Receipt_No,To_Char(Tpr.Trans_Date,'DD/MM/YYYY') Trans_Date,To_Char(Tpr.Amendment_Date,'DD/MM/YYYY') Amendment_Date ,Decode(Trans_Type,'PT','PAYMENT','RECEIPT') Trans_Type,(Select First_Name From Personal_Info Pi Where Pi.Customer_Id\=Tpr.Broker_Id And Tpr.Branch_Code\=Pi.Branch_Code)Broker_Name,(Select First_Name From Personal_Info Pi Where Pi.Customer_Id\=Tpr.Ceding_Id And Tpr.Branch_Code\=Pi.Branch_Code) Ceding_Id,(Select Bank_Name From Bank_Master Bm Where Bm.Bank_Id\=Receipt_Bank And Bm.Branch_Code\=Tpr.Branch_Code) Receipt_Bank,(Select Currency_Name From Currency_Master Cm Where Cm.Currency_Id\=Tpr.Currency_Id And Cm.Branch_Code\=Tpr.Branch_Code And Amend_Id\=(Select Max(Amend_Id) From Currency_Master C Where C.Currency_Id\=Cm.Currency_Id And C.Branch_Code\=Cm.Branch_Code)) Currency_Name,Tpr.Exchange_Rate,Paid_Amt Gross_Amt,Bank_Charges,'' Holdtaxrecover_Oc,Net_Amt,Round((Paid_Amt/Tpr.Exchange_Rate),2) Gross_Amt_Dc,Round((Bank_Charges/Tpr.Exchange_Rate),2)  Bank_Charges_Dc,'' Holdtaxrecover_Ugx,Round((Net_Amt/Tpr.Exchange_Rate),2) Net_Amt_Dc,Decode(Sign(Diff_Amt),'ALL','SUBTRACT','ADD') Diff_Type,Diff_Amt Exchangedifferenceamount,Round(((Diff_Amt/(Paid_Amt/Tpr.Exchange_Rate)) * 100),2) Exchage_Diff_Perc,Transcationtype,Reversaltransno,Tpr.Remarks,'' sTATUS,Rownum Sno,Tprd.Currency_Id,Amount Amount_Oc,Tprd.Exchange_Rate Clientexchangerate,Converted_Reccur Converted_Paid_Amt,Settled_Excrate  Exchangerate,Round(Amount / Tprd.Exchange_Rate,2)TOTAL_AMOUNT_DC ,Allocated_Till_Date,Round(Amount-Nvl(Allocated_Till_Date,0)) Pending_Amount,Round((Allocated_Till_Date/Tprd.Exchange_Rate),2) Allocated_Amount_Ugx,Round((Amount-Nvl(Allocated_Till_Date,0))/Tprd.Exchange_Rate,2)    Pending_Amount_Ugx From Ttrn_Payment_Receipt Tpr,Ttrn_Payment_Receipt_Details Tprd Where Tpr.Payment_Receipt_No\=Tprd.Receipt_Sl_No And Tprd.Currency_Id \!\=0 and branch_code\=? and tpr.TRANS_DATE BETWEEN TO_DATE(?,'DD/MM/YYYY')AND TO_DATE(?,'DD/MM/YYYY') AND upper(DECODE(?,'ALL','A',Ceding_Id))\=upper(Decode(?,'ALL','A',?))  AND upper(DECODE(?,'ALL','A',BROKER_ID))\=upper(Decode(?,'ALL','A',?)) AND upper(DECODE(?,'ALL','A',TRANS_TYPE))\=upper(Decode(?,'ALL','A',?))  AND upper(DECODE(?,'ALL','A',TRANSCATIONTYPE))\=upper(Decode(?,'ALL','A',?)) and tpr.amend_id\=(select max(amend_id) from Ttrn_Payment_Receipt where  PAYMENT_RECEIPT_NO\=tpr.PAYMENT_RECEIPT_NO and branch_code\=tpr.branch_code) and tpr.amend_id\=Tprd.amend_id
payrec.register.list=SELECT * FROM TABLE (PAYMENT_RECEIPT(?,?,?,?,?,?,?,?))
active.open.period.proc=call JOURNAL_REPORTS(?,?,?,?,'I',?)
inactive.open.period.proc=call JOURNAL_REPORTS(?,?,?,?,'F',?)
##insert.open.period=INSERT INTO TMAS_OPEN_PERIOD (SNO,START_DATE,END_DATE,STATUS,BRANCH_CODE) VALUES ((SELECT MAX(SNO)+1 FROM TMAS_OPEN_PERIOD),(select add_months(to_date(?,'DD/MM/YYYY'),1) from dual),(select add_months(to_date(?,'DD/MM/YYYY'),1) from dual),'Y',?)
insert.open.period=INSERT INTO TMAS_OPEN_PERIOD (SNO,START_DATE,END_DATE,STATUS,BRANCH_CODE) VALUES ((SELECT MAX(SNO)+1 FROM TMAS_OPEN_PERIOD),((select to_date(?,'DD/MM/YYYY')+1 from dual)),(select add_months(to_date(?,'DD/MM/YYYY'),1) from dual),'Y',?)

update.open.period.status=UPDATE TMAS_OPEN_PERIOD SET STATUS='N' WHERE START_DATE=TO_DATE(?,'DD/MM/YYYY') AND END_DATE=TO_DATE(?,'DD/MM/YYYY')   AND BRANCH_CODE=?
#spc.currency.list1=Select distinct UWY,SPC,CURRENCY,to_char(STARTDATE,'DD/MM/YYYY')STARTDATE,NARRATION,REFERENCE from Final_Jv_Format Where jv_id\=? and Trunc(STARTDATE) \= to_date(?,'DD/MM/YYYY') and Trunc(END_DATE)\=to_date(?,'DD/MM/YYYY') group by REFERENCE,LEDGER,STARTDATE,JV_ID,UWY,SPC,CURRENCY,NARRATION order by UWY,SPC,CURRENCY
spc.currency.list1=Select distinct UWY,SPC,CURRENCY,to_char(JV_DATE,'DD/MM/YYYY') STARTDATE,NARRATION,REFERENCE,PRODUCT_ID,JOURNAL_ID from Final_Jv_Format Where jv_id=? and Trunc(STARTDATE) = to_date(?,'DD/MM/YYYY') and Trunc(END_DATE)=to_date(?,'DD/MM/YYYY') and branch_code=? group by REFERENCE,LEDGER,JV_DATE,JV_ID,UWY,SPC,CURRENCY,NARRATION,PRODUCT_ID,JOURNAL_ID order by JOURNAL_ID,PRODUCT_ID,UWY,SPC,CURRENCY
pipe.line.jounal.view1=Select  To_Char(Startdate) Startdate , Reference, Ledger, Uwy, Spc, Currency, To_Number(Debitoc) Debitoc, To_Number(Creditoc) Creditoc, To_Number(Debitugx) Debitugx,To_Number(Creditugx) Creditugx, Narration, To_Char(Product_Id),To_Char(End_Date) From Final_Jv_Format Where  SPC=? and CURRENCY=? and UWY=? and JV_ID=? and Trunc(STARTDATE) =to_date(?,'DD/MM/YYYY') and Trunc(END_DATE)=to_date(?,'DD/MM/YYYY')and PRODUCT_ID=? and branch_code=? Union All Select '','','Total',to_number(''),'','',Sum(Debitoc) Debitoc,Sum(Creditoc) Creditoc,Sum(Debitugx) Debitugx,Sum(Creditugx) Creditugx,'','','' From Final_Jv_Format Where  SPC=? and CURRENCY=? and UWY=? and JV_ID=? and Trunc(STARTDATE) = to_date(?,'DD/MM/YYYY') and Trunc(END_DATE)=to_date(?,'DD/MM/YYYY') and PRODUCT_ID=? and branch_code=?

###Open Period Master
open.period.list=select SNO,to_char(START_DATE,'DD/MM/YYYY')START_DATE,to_char(END_DATE,'DD/MM/YYYY')END_DATE ,Decode(STATUS,'Y','ACTIVE','DEACTIVE')STATUS from TMAS_OPEN_PERIOD where branch_code=?
open.period.insert=INSERT INTO TMAS_OPEN_PERIOD (SNO,START_DATE,END_DATE,STATUS,BRANCH_CODE) VALUES ((SELECT MAX(SNO)+1 FROM TMAS_OPEN_PERIOD),TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?)
open.period.edit=select SNO,to_char(START_DATE,'MM/DD/YYYY')START_DATE,to_char(END_DATE,'MM/DD/YYYY')END_DATE ,STATUS from TMAS_OPEN_PERIOD where SNO=? and branch_code=?
open.period.update=UPDATE TMAS_OPEN_PERIOD SET START_DATE=TO_DATE(?,'DD/MM/YYYY'),END_DATE=TO_DATE(?,'DD/MM/YYYY'),STATUS=? WHERE SNO=? AND BRANCH_CODE=?
open.period.staus=UPDATE TMAS_OPEN_PERIOD SET STATUS='N' WHERE SNO!=? AND BRANCH_CODE=?
open.period.staus1=UPDATE TMAS_OPEN_PERIOD SET STATUS\='N' WHERE SNO\!\=(SELECT MAX(SNO) FROM TMAS_OPEN_PERIOD where BRANCH_CODE\=?) AND BRANCH_CODE\=?

#claim.paid.report=Select * from table(claim_paid_reports(?,?))
claim.paid.report=Select * from table(claim_paid_reports(?,?,?,?,?,?,?,?))
#retro.report.list=SELECT DISTINCT A.RETRO_CONTRACT_NUMBER "Retro Contract Number", (SELECT FIRST_NAME FROM PERSONAL_INFO B WHERE A.BRANCH_CODE = B.BRANCH_CODE AND TRIM(A.RETRO_BROKER) = B.CUSTOMER_ID and amend_id=(select max(amend_id) from personal_info p Where customer_id=B.customer_id and branch_code=B.BRANCH_CODE)) "Retro Broker name", (SELECT COMPANY_NAME FROM PERSONAL_INFO B WHERE A.BRANCH_CODE = B.BRANCH_CODE AND A.RETROCESSIONAIRE = B.CUSTOMER_ID and amend_id=(select max(amend_id) from personal_info p Where customer_id=B.customer_id and branch_code=B.BRANCH_CODE)) "Retrocessionaire name", A.RETRO_BROKER "Retro Broker",A.RETROCESSIONAIRE "Retrocessionaire", A.CONTRACT_NO "Inward Contract No",A.LAYER_NO "Layer No", A.UWY "UWY",DECODE(A.PRODUCT_ID,1,'Facultative',2,'Proportional Treaty',3,'Non Proportional Treaty') "Inward Business", A.SPC "Sub Class",A.TRANSACTION_NO "Transaction No",A.TRANSACTION_MONTH_YEAR "Transaction Date", DECODE(A.TRANSACTION_TYPE,'P','Premium','C','Claim') "Transaction Type",A.CURRENCY_ID "Inward Currency",(SELECT SHORT_NAME FROM CURRENCY_MASTER C WHERE A.BRANCH_CODE = C.BRANCH_CODE AND A.CURRENCY_ID = C.CURRENCY_ID) "Inward Currency name", A.EXCHANGE_RATE "Inward Exchange Rate",ROUND((A.RI_PERCENTAGE * A.RETRO_PERCENTAGE / 100),2) "Retrocession %",A.RETRO_CURRENCY_ID "Retro Currency",(SELECT SHORT_NAME FROM CURRENCY_MASTER C WHERE A.BRANCH_CODE = C.BRANCH_CODE AND A.RETRO_CURRENCY_ID = C.CURRENCY_ID) "Retro Currency name", A.RETRO_EXCHANGE_RATE "Retro Exchange Rate",(COALESCE(A.ADJUSTMENT_PREMIUM_OC,0)+COALESCE(A.M_DPREMIUM_OC,0)+COALESCE(A.PREMIUM_QUOTASHARE_OC,0)+COALESCE(A.PREMIUM_SURPLUS_OC,0)+COALESCE(A.REC_PREMIUM_OC,0)-COALESCE(A.XL_COST_OC,0)+COALESCE(A.PREMIUM_PORTFOLIOIN_OC,0)-COALESCE(A.PREMIUM_PORTFOLIOOUT_OC,0)) "Premium - IC", (COALESCE(A.COMMISSION_QUOTASHARE_OC,0)+COALESCE(A.COMMISSION_SURPLUS_OC,0)+COALESCE(A.PROFIT_COMMISSION_OC,0)) "Commission - IC",A.BROKERAGE_AMT_OC "Brokerage - IC",A.INTEREST_OC "Interest - IC",A.TAX_AMT_OC "Tax - IC",A.OVERRIDER_AMT_OC "Inward Overrider - IC",A.OTHER_COST_OC "Other Cost - IC", (COALESCE(A.CASH_LOSSPAID_OC,0)+COALESCE(A.CLAIMS_PAID_OC,0)-COALESCE(A.CASH_LOSS_CREDIT_OC,0)+COALESCE(A.CLAIM_PORTFOLIOIN_OC,0)-COALESCE(A.CLAIM_PORTFOLIO_OUT_OC,0)) "Clams Paid - IC", (COALESCE(A.PREMIUM_RESERVE_RETAINED_OC,0)+COALESCE(A.PREMIUMRESERVE_QUOTASHARE_OC,0)) "Premium Reserve Retained - IC", (COALESCE(A.PREMIUM_RESERVE_REALSED_OC,0)+COALESCE(A.PREMIUM_RESERVE_RELEASE_OC,0)) "Premium Reserve Released - IC", A.LOSS_RESERVERETAINED_OC "Loss Reserve Retained - IC",A.LOSS_RESERVE_RELEASED_OC "Loss Reserve Released - IC",A.OW_OVERRIDER_OC "Outward Overrider - IC",A.NET_DUE_OC "Net Due - IC", (COALESCE(A.ADJUSTMENT_PREMIUM_DC,0)+COALESCE(A.M_DPREMIUM_DC,0)+COALESCE(A.PREMIUM_QUOTASHARE_DC,0)+COALESCE(A.PREMIUM_SURPLUS_DC,0)+COALESCE(A.REC_PREMIUM_DC,0)-COALESCE(A.XL_COST_DC,0)+COALESCE(A.PREMIUM_PORTFOLIOIN_DC,0)-COALESCE(A.PREMIUM_PORTFOLIOOUT_DC,0)) "Premium - INR", (COALESCE(A.COMMISSION_QUOTASHARE_DC,0)+COALESCE(A.COMMISSION_SURPLUS_DC,0)+COALESCE(A.PROFIT_COMMISSION_DC,0)) "Commission - INR", A.BROKERAGE_AMT_DC "Brokerage - INR",A.INTEREST_DC "Interest - INR",A.TAX_AMT_DC "Tax - INR",A.OVERRIDER_AMT_DC "Inward Overrider - INR",A.OTHER_COST_DC "Other Cost - INR", (COALESCE(A.CASH_LOSSPAID_DC,0)+COALESCE(A.CLAIMS_PAID_DC,0)-COALESCE(A.CASH_LOSS_CREDIT_DC,0)+COALESCE(A.CLAIM_PORTFOLIOIN_DC,0)-COALESCE(A.CLAIM_PORTFOLIO_OUT_DC,0)) "Clams Paid - INR", (COALESCE(A.PREMIUM_RESERVE_RETAINED_DC,0)+COALESCE(A.PREMIUMRESERVE_QUOTASHARE_DC,0)) "Premium Reserve Retained - INR", (COALESCE(A.PREMIUM_RESERVE_REALSED_DC,0)+COALESCE(A.PREMIUM_RESERVE_RELEASE_DC,0)) "Premium Reserve Released - INR", A.LOSS_RESERVERETAINED_DC "Loss Reserve Retained - INR", A.LOSS_RESERVE_RELEASED_DC "Loss Reserve Released - INR", A.OW_OVERRIDER_DC "Outward Overrider - INR", A.NET_DUE_DC "Net Due - INR", (COALESCE(A.ADJUSTMENT_PREMIUM_RC,0)+COALESCE(A.M_DPREMIUM_RC,0)+COALESCE(A.PREMIUM_QUOTASHARE_RC,0)+COALESCE(A.PREMIUM_SURPLUS_RC,0)+COALESCE(A.REC_PREMIUM_RC,0)-COALESCE(A.XL_COST_RC,0)+COALESCE(A.PREMIUM_PORTFOLIOIN_RC,0)-COALESCE(A.PREMIUM_PORTFOLIOOUT_RC,0)) "Premium - RC", (COALESCE(A.COMMISSION_QUOTASHARE_RC,0)+COALESCE(A.COMMISSION_SURPLUS_RC,0)+COALESCE(A.PROFIT_COMMISSION_RC,0)) "Commission - RC", A.BROKERAGE_AMT_RC "Brokerage - RC",A.INTEREST_RC "Interest - RC",A.TAX_AMT_RC "Tax - RC",A.OVERRIDER_AMT_RC "Inward Overrider - RC",A.OTHER_COST_RC "Other Cost - RC", (COALESCE(A.CASH_LOSSPAID_RC,0)+COALESCE(A.CLAIMS_PAID_RC,0)-COALESCE(A.CASH_LOSS_CREDIT_RC,0)+COALESCE(A.CLAIM_PORTFOLIOIN_RC,0)-COALESCE(A.CLAIM_PORTFOLIO_OUT_RC,0)) "Clams Paid - RC", (COALESCE(A.PREMIUM_RESERVE_RETAINED_RC,0)+COALESCE(A.PREMIUMRESERVE_QUOTASHARE_RC,0)) "Premium Reserve Retained - RC", (COALESCE(A.PREMIUM_RESERVE_REALSED_RC,0)+COALESCE(A.PREMIUM_RESERVE_RELEASE_RC,0)) "Premium Reserve Released - RC", A.LOSS_RESERVERETAINED_RC "Loss Reserve Retained - RC", A.LOSS_RESERVE_RELEASED_RC "Loss Reserve Released - RC", A.OW_OVERRIDER_RC "Outward Overrider - RC", A.NET_DUE_RC "Net Due - RC", DECODE(A.SOA_FREQUENCY,'Q','Quarterly','H','Half Yearly','A','Annually') "SOA Frequency" FROM TTRN_RETRO_PRCL A, (SELECT MAX(AMEND_ID) MAXAMEND, TRANSACTION_NO FROM TTRN_RETRO_PRCL WHERE TRANSACTION_MONTH_YEAR BETWEEN to_date(?,'DD/MM/YYYY') AND to_date(?,'DD/MM/YYYY')  GROUP BY TRANSACTION_NO) D WHERE A.TRANSACTION_NO = D.TRANSACTION_NO AND A.TRANSACTION_MONTH_YEAR BETWEEN to_date(?,'DD/MM/YYYY') AND to_date(?,'DD/MM/YYYY')  AND A.AMEND_ID = D.MAXAMEND AND A.BRANCH_CODE= ?
retro.report.list=select BRANCH_CODE, TRANSACTION_MONTH_YEAR, RETROCONTRACTNUMBER, RETROBROKERNAME, RETRO_BROKER, RETROCESSIONAIRENAME, RETROCESSIONAIRE, INWARDCONTRACTNO, LAYERNO, UWY, INWARDBUSINESS, SUBCLASS, TRANSACTIONNO, TO_CHAR(TRANSACTIONDATE,'DD/MM/YYYY') TRANSACTIONDATE, TRANSACTIONTYPE, INWARDCURRENCYNAME, INWARDEXCHANGERATE, RETROCESSION_PERCENTAGE, RETROCURRENCYNAME, RETROEXCHANGERATE, PREMIUM_IC, COMMISSION_IC, BROKERAGE_IC, INTEREST_IC, TAX_IC, INWARDOVERRIDER_IC, OTHERCOST_IC, CLAMSPAID_IC, PREMIUMRESERVERETAINED_IC, PREMIUMRESERVERELEASED_IC, LOSSRESERVERETAINED_IC, LOSSRESERVERELEASED_IC, OUTWARDOVERRIDER_IC, NETDUE_IC, PREMIUM_INR, COMMISSION_INR, BROKERAGE_INR, INTEREST_INR, TAX_INR, INWARDOVERRIDER_INR, OTHERCOST_INR, CLAMSPAID_INR, PREMIUMRESERVERETAINED_INR, PREMIUMRESERVERELEASED_INR, LOSSRESERVERETAINED_INR, LOSSRESERVERELEASED_INR, OUTWARDOVERRIDER_INR, NETDUE_INR, PREMIUM_RC, COMMISSION_RC, BROKERAGE_RC, INTEREST_RC, TAX_RC, INWARDOVERRIDER_RC, OTHERCOST_RC, CLAMSPAID_RC, PREMIUMRESERVERETAINED_RC, PREMIUMRESERVERELEASED_RC, LOSSRESERVERETAINED_RC, LOSSRESERVERELEASED_RC, OUTWARDOVERRIDER_RC, NETDUE_RC, SOAFREQUENCY,OSCLAIM_LOSS_INR,OSCLAIM_LOSS_IC,OSCLAIM_LOSS_RC, AMEND_ID,TREATY_INSURED_NAME from VW_RETRO_PRCL_REPORT where  TRANSACTION_MONTH_YEAR BETWEEN to_date(?,'DD/MM/YYYY') AND to_date(?,'DD/MM/YYYY') AND BRANCH_CODE= ?  And Decode(?,'ALL','A',RETRO_BROKER)=Decode(?,'ALL','A',?)  And Decode(?,'ALL','A',RETROCESSIONAIRE)=Decode(?,'ALL','A',?)  And Decode(?,'ALL','A',UWY)=Decode(?,'ALL','A',?)
#adjutment.list=select TRANSACTION_NO,to_char(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY')TRANSACTION_MONTH_YEAR,to_char(CONTRACT_NO)CONTRACT_NO,LAYER_NO,to_char(CURRENCY_ID)currency_name,'' broker_name,'' ceding_name,(nvl(NETDUE_OC,0)-nvl(ALLOCATED_TILL_DATE,0))pending_amount from  rsk_premium_details where  (nvl(NETDUE_OC,0)-nvl(ALLOCATED_TILL_DATE,0))\!\=0 union all select CLAIM_PAYMENT_NO,to_char(INCEPTION_DATE,'DD/MM/YYYY'),CONTRACT_NO,LAYER_NO,''CURRENCY_ID,'' broker_name,'' ceding_name,(nvl(PAID_AMOUNT_OC,0)-nvl(ALLOCATED_TILL_DATE,0))pending_amount from  ttrn_claim_payment where (nvl(PAID_AMOUNT_OC,0)-nvl(ALLOCATED_TILL_DATE,0))\!\=0
#adjutment.list=SELECT   * FROM   (SELECT   A.CONTRACT_NO,A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID) PRODUCT_NAME, B.TRANSACTION_NO,TO_CHAR (B.ENTRY_DATE_TIME, 'DD/MM/YYYY') AS ADATE,(NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0))  pending_amount, B.ACC_PREMIUM,NULL ACC_CLAIM,NVL (B.CHECKYN, 'N') CHECKYN,'Premium' BUSINESS_TYPE,(SELECT   COMPANY_NAME  FROM   personal_info pi WHERE   pi.customer_id = A.CEDING_COMPANY_ID AND pi.branch_code = A.BRANCH_CODE) CEDING_COMPANY_name, (SELECT   FIRST_NAME || LAST_NAME FROM   personal_info pi  WHERE   pi.customer_id = A.BROKER_ID AND pi.branch_code = A.BRANCH_CODE)  broker_name,(SELECT   CURRENCY_NAME FROM   currency_master cm WHERE   cm.CURRENCY_ID = B.CURRENCY_id AND cm.branch_code = A.BRANCH_CODE and cm.amend_id=(select max(amend_id) from currency_master WHERE   CURRENCY_ID = cm.CURRENCY_id AND branch_code = cm.BRANCH_CODE)) currency_name,to_char(B.CURRENCY_ID)CURRENCY_ID FROM   POSITION_MASTER A, RSK_PREMIUM_DETAILS B WHERE  B.RECEIPT_NO IS NULL AND B.CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (B.LAYER_NO, 0) AND A.BRANCH_CODE = ? AND (NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) !=0 AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER PM WHERE   CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (PM.LAYER_NO, 0) AND B.CURRENCY_ID = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ?) UNION ALL SELECT   A.CONTRACT_NO, A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID) PRODUCT_NAME, CP.CLAIM_PAYMENT_NO, TO_CHAR (CP.INCEPTION_DATE, 'DD/MM/YYYY') AS ADATE, (NVL (CP.PAID_AMOUNT_OC, 0) - NVL (CP.ALLOCATED_TILL_DATE, 0)) pending_amount, NULL ACC_PREMIUM, CP.ACC_CLAIM, NVL (CP.CHECKYN, 'N'), 'Claim' BUSINESS_TYPE, (SELECT   COMPANY_NAME FROM   personal_info pi WHERE   pi.customer_id = A.CEDING_COMPANY_ID AND pi.branch_code = A.BRANCH_CODE) CEDING_COMPANY_name,(SELECT   FIRST_NAME || LAST_NAME FROM   personal_info pi  WHERE   pi.customer_id = A.BROKER_ID AND pi.branch_code = A.BRANCH_CODE) broker_name,(SELECT   CURRENCY_NAME FROM   currency_master cm WHERE   cm.CURRENCY_ID = c.CURRENCY AND cm.branch_code = A.BRANCH_CODE and cm.amend_id=(select max(amend_id) from currency_master WHERE   CURRENCY_ID = cm.CURRENCY_ID  AND branch_code = cm.BRANCH_CODE))  currency_name,c.CURRENCY FROM   POSITION_MASTER A, TTRN_CLAIM_DETAILS C, TTRN_CLAIM_PAYMENT CP WHERE  A.CONTRACT_NO = C.CONTRACT_NO AND C.CONTRACT_NO = CP.CONTRACT_NO AND C.CLAIM_NO = CP.CLAIM_NO AND NVL (A.LAYER_NO, 0) = NVL (C.LAYER_NO, 0) AND A.BRANCH_CODE = ? AND (NVL (CP.PAID_AMOUNT_OC, 0)- NVL (CP.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   CONTRACT_NO = A.CONTRACT_NO) AND C.CURRENCY = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ?) ORDER BY   CONTRACT_NO, TRANSACTION_NO
adjutment.list=SELECT   * FROM   (SELECT   distinct B.TRANSACTION_NO,A.CONTRACT_NO,A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID,A.BRANCH_CODE) PRODUCT_NAME, TO_CHAR (B.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY') AS ADATE,(NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0))  pending_amount, B.ACC_PREMIUM,NULL ACC_CLAIM,NVL (B.CHECKYN, 'N') CHECKYN,'Premium' BUSINESS_TYPE,(SELECT   COMPANY_NAME  FROM   personal_info pi WHERE   pi.customer_id = A.CEDING_COMPANY_ID AND pi.branch_code = A.BRANCH_CODE and AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id = A.CEDING_COMPANY_ID AND I.branch_code = A.BRANCH_CODE)) CEDING_COMPANY_name, (SELECT   FIRST_NAME || LAST_NAME FROM   personal_info pi  WHERE   pi.customer_id = A.BROKER_ID AND pi.branch_code = A.BRANCH_CODE and AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id = A.BROKER_ID AND I.branch_code = A.BRANCH_CODE))  broker_name,(SELECT   CURRENCY_NAME FROM   currency_master cm WHERE   cm.CURRENCY_ID = B.CURRENCY_id AND cm.branch_code = A.BRANCH_CODE and cm.amend_id=(select max(amend_id) from currency_master WHERE   CURRENCY_ID = cm.CURRENCY_id AND branch_code = cm.BRANCH_CODE)) currency_name,to_char(B.CURRENCY_ID)CURRENCY_ID,A.PROPOSAL_NO,A.DEPT_ID FROM   POSITION_MASTER A, RSK_PREMIUM_DETAILS B WHERE  B.RECEIPT_NO IS NULL AND B.CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (B.LAYER_NO, 0) AND B.SUB_CLASS=A.DEPT_ID AND A.BRANCH_CODE = ? AND (NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) !=0 AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER PM WHERE   CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (PM.LAYER_NO, 0) AND B.CURRENCY_ID = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ?) UNION ALL SELECT   distinct CP.CLAIM_PAYMENT_NO, A.CONTRACT_NO, A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID,A.BRANCH_CODE) PRODUCT_NAME, TO_CHAR (CP.INCEPTION_DATE, 'DD/MM/YYYY') AS ADATE, (NVL (CP.PAID_AMOUNT_OC, 0) - NVL (CP.ALLOCATED_TILL_DATE, 0)) pending_amount, NULL ACC_PREMIUM, CP.ACC_CLAIM, NVL (CP.CHECKYN, 'N'), 'Claim' BUSINESS_TYPE, (SELECT   COMPANY_NAME FROM   personal_info pi WHERE   pi.customer_id = A.CEDING_COMPANY_ID AND pi.branch_code = A.BRANCH_CODE and AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id = A.CEDING_COMPANY_ID AND I.branch_code = A.BRANCH_CODE)) CEDING_COMPANY_name,(SELECT   FIRST_NAME || LAST_NAME FROM   personal_info pi  WHERE   pi.customer_id = A.BROKER_ID AND pi.branch_code = A.BRANCH_CODE and AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id = A.BROKER_ID AND I.branch_code = A.BRANCH_CODE)) broker_name,(SELECT   CURRENCY_NAME FROM   currency_master cm WHERE   cm.CURRENCY_ID = c.CURRENCY AND cm.branch_code = A.BRANCH_CODE and cm.amend_id=(select max(amend_id) from currency_master WHERE   CURRENCY_ID = cm.CURRENCY_ID  AND branch_code = cm.BRANCH_CODE))  currency_name,c.CURRENCY,A.PROPOSAL_NO,A.DEPT_ID FROM   POSITION_MASTER A, TTRN_CLAIM_DETAILS C, TTRN_CLAIM_PAYMENT CP WHERE  A.CONTRACT_NO = C.CONTRACT_NO AND C.CONTRACT_NO = CP.CONTRACT_NO AND C.CLAIM_NO = CP.CLAIM_NO AND NVL (A.LAYER_NO, 0) = NVL (C.LAYER_NO, 0) AND C.SUB_CLASS=A.DEPT_ID AND A.BRANCH_CODE = ? AND (NVL (CP.PAID_AMOUNT_OC, 0)- NVL (CP.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   CONTRACT_NO = A.CONTRACT_NO) AND C.CURRENCY = ? AND CASE WHEN '63' = ? THEN A.CEDING_COMPANY_ID ELSE A.BROKER_ID END = ?)
adjustment.insert=INSERT INTO TTRN_ALLOCATED_TRANSACTION(SNO,CONTRACT_NO,LAYER_NO,PRODUCT_NAME,TRANSACTION_NO,INCEPTION_DATE,PAID_AMOUNT,TYPE,STATUS,AMEND_ID,RECEIPT_NO,CURRENCY_ID,ADJUSTMENT_TYPE,LOGIN_ID,SYS_DATE,BRANCH_CODE,SUB_CLASS,PROPOSAL_NO) VALUES (?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,SYSDATE,?,?,?)
#adjustment.payrec.list=Select  Distinct    B.Receipt_Sl_No TRANSACTION_NO, To_Char (B.Trans_Date, 'DD/MM/YYYY') As Adate, (Nvl (B.Amount, 0) - Nvl (B.Allocated_Till_Date, 0)) Pending_Amount,(Select   Company_Name From   Personal_Info Pi Where   Pi.Customer_Id \= A.Ceding_Id And Pi.Branch_Code \= A.Branch_Code) Ceding_Company_Name, (Select   First_Name || Last_Name From   Personal_Info Pi Where   Pi.Customer_Id \= A.Broker_Id  And Pi.Branch_Code \= A.Branch_Code)  Broker_Name, (Select   Currency_Name From   Currency_Master Cm Where   Cm.Currency_Id \= B.Currency_Id And Cm.Branch_Code \= A.Branch_Code And Cm.Amend_Id \=(Select   Max (Amend_Id) From   Currency_Master Where   Currency_Id \= Cm.Currency_Id And Branch_Code \= Cm.Branch_Code)) Currency_Name,B.Currency_Id,Decode(A.TRANS_TYPE,'RT','Receipt','Payment')BUSINESS_TYPE From   Ttrn_Payment_Receipt A, Ttrn_Payment_Receipt_Details B Where  A.Payment_Receipt_No\=B.Receipt_Sl_No and A.Branch_Code \= ? And (Nvl (B.Amount, 0) - Nvl (B.Allocated_Till_Date, 0)) \!\=0  And B.Currency_Id \= ? AND CASE WHEN '63' \= ? THEN A.Ceding_Id ELSE A.BROKER_ID END \= ? AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS C WHERE B.RECEIPT_SL_NO\=C.RECEIPT_SL_NO AND B.RECEIPT_NO\=C.RECEIPT_NO  AND B.CURRENCY_ID\=C.CURRENCY_ID) order  by B.Receipt_Sl_No
adjustment.payrec.list=Select  Distinct    B.Receipt_Sl_No TRANSACTION_NO, To_Char (B.Trans_Date, 'DD/MM/YYYY') As Adate, (Nvl (B.Amount, 0) - Nvl (B.Allocated_Till_Date, 0)) Pending_Amount,(Select   Company_Name From   Personal_Info Pi Where   Pi.Customer_Id \= A.Ceding_Id And Pi.Branch_Code \= A.Branch_Code and AMEND_ID \=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id \= A.Ceding_Id AND I.branch_code \= A.BRANCH_CODE)) Ceding_Company_Name, (Select   First_Name || Last_Name From   Personal_Info Pi Where   Pi.Customer_Id \= A.Broker_Id  And Pi.Branch_Code \= A.Branch_Code and AMEND_ID \=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id \= A.Broker_Id AND I.branch_code \= A.BRANCH_CODE))  Broker_Name, (Select   Currency_Name From   Currency_Master Cm Where   Cm.Currency_Id \= B.Currency_Id And Cm.Branch_Code \= A.Branch_Code And Cm.Amend_Id \=(Select   Max (Amend_Id) From   Currency_Master Where   Currency_Id \= Cm.Currency_Id And Branch_Code \= Cm.Branch_Code)) Currency_Name,B.Currency_Id,Decode(A.TRANS_TYPE,'RT','Receipt','Payment')BUSINESS_TYPE From   Ttrn_Payment_Receipt A, Ttrn_Payment_Receipt_Details B Where  A.Payment_Receipt_No\=B.Receipt_Sl_No and A.Branch_Code \= ? And (Nvl (B.Amount, 0) - Nvl (B.Allocated_Till_Date, 0)) \!\=0  And B.Currency_Id \= ? AND CASE WHEN '63' \= ? THEN A.Ceding_Id ELSE A.BROKER_ID END \= ? AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS C WHERE B.RECEIPT_SL_NO\=C.RECEIPT_SL_NO AND B.RECEIPT_NO\=C.RECEIPT_NO  AND B.CURRENCY_ID\=C.CURRENCY_ID)
adjustment.view.list=SELECT SNO,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,TRANSACTION_NO,CONTRACT_NO, PRODUCT_NAME,TYPE,PAID_AMOUNT,CURRENCY_ID,STATUS,decode(ADJUSTMENT_TYPE,'R','Round Off','W','Write Off') ADJUSTMENT_TYPE,RECEIPT_NO FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO \= ?
adjustment.list.ind.transactionCP=SELECT   * FROM   (SELECT   distinct B.TRANSACTION_NO,A.CONTRACT_NO,A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID,A.BRANCH_CODE) PRODUCT_NAME, TO_CHAR (B.ENTRY_DATE_TIME, 'DD/MM/YYYY') AS ADATE,(NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0))  pending_amount, B.ACC_PREMIUM,NULL ACC_CLAIM,NVL (B.CHECKYN, 'N') CHECKYN,'Premium' BUSINESS_TYPE,(SELECT   COMPANY_NAME  FROM   personal_info pi WHERE   pi.customer_id = A.CEDING_COMPANY_ID AND pi.branch_code = A.BRANCH_CODE and AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id = A.CEDING_COMPANY_ID AND I.branch_code = A.BRANCH_CODE)) CEDING_COMPANY_name, (SELECT   FIRST_NAME || LAST_NAME FROM   personal_info pi  WHERE   pi.customer_id = A.BROKER_ID AND pi.branch_code = A.BRANCH_CODE and AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id = A.BROKER_ID AND I.branch_code = A.BRANCH_CODE))  broker_name,(SELECT   CURRENCY_NAME FROM   currency_master cm WHERE   cm.CURRENCY_ID = B.CURRENCY_id AND cm.branch_code = A.BRANCH_CODE and cm.amend_id=(select max(amend_id) from currency_master WHERE   CURRENCY_ID = cm.CURRENCY_id AND branch_code = cm.BRANCH_CODE)) currency_name,to_char(B.CURRENCY_ID)CURRENCY_ID,A.PROPOSAL_NO FROM   POSITION_MASTER A, RSK_PREMIUM_DETAILS B WHERE  B.RECEIPT_NO IS NULL AND B.CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (B.LAYER_NO, 0) AND A.BRANCH_CODE = ? AND (NVL (B.NETDUE_OC, 0) - NVL (B.ALLOCATED_TILL_DATE, 0)) !=0 AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER PM WHERE   CONTRACT_NO = A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) = NVL (PM.LAYER_NO, 0)) and TRANSACTION_NO in (select * from table(SPLIT_TEXT_FN(?))) UNION ALL SELECT  distinct CP.CLAIM_PAYMENT_NO, A.CONTRACT_NO, A.LAYER_NO, FN_GET_NAME ('P', A.PRODUCT_ID,A.BRANCH_CODE) PRODUCT_NAME,  TO_CHAR (CP.INCEPTION_DATE, 'DD/MM/YYYY') AS ADATE, (NVL (CP.PAID_AMOUNT_OC, 0) - NVL (CP.ALLOCATED_TILL_DATE, 0)) pending_amount, NULL ACC_PREMIUM, CP.ACC_CLAIM, NVL (CP.CHECKYN, 'N'), 'Claim' BUSINESS_TYPE, (SELECT   COMPANY_NAME FROM   personal_info pi WHERE   pi.customer_id = A.CEDING_COMPANY_ID AND pi.branch_code = A.BRANCH_CODE and AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id = A.CEDING_COMPANY_ID AND I.branch_code = A.BRANCH_CODE)) CEDING_COMPANY_name,(SELECT   FIRST_NAME || LAST_NAME FROM   personal_info pi  WHERE   pi.customer_id = A.BROKER_ID AND pi.branch_code = A.BRANCH_CODE and AMEND_ID =(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id = A.BROKER_ID AND I.branch_code = A.BRANCH_CODE)) broker_name,(SELECT   CURRENCY_NAME FROM   currency_master cm WHERE   cm.CURRENCY_ID = c.CURRENCY AND cm.branch_code = A.BRANCH_CODE and cm.amend_id=(select max(amend_id) from currency_master WHERE   CURRENCY_ID = cm.CURRENCY_ID  AND branch_code = cm.BRANCH_CODE))  currency_name,c.CURRENCY,A.PROPOSAL_NO FROM   POSITION_MASTER A, TTRN_CLAIM_DETAILS C, TTRN_CLAIM_PAYMENT CP WHERE  A.CONTRACT_NO = C.CONTRACT_NO AND C.CONTRACT_NO = CP.CONTRACT_NO AND C.CLAIM_NO = CP.CLAIM_NO AND NVL (A.LAYER_NO, 0) = NVL (C.LAYER_NO, 0) AND A.BRANCH_CODE = ? AND (NVL (CP.PAID_AMOUNT_OC, 0)- NVL (CP.ALLOCATED_TILL_DATE, 0)) != 0 AND A.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   CONTRACT_NO = A.CONTRACT_NO) And CLAIM_PAYMENT_NO in (select * from table(SPLIT_TEXT_FN(?)))) ORDER BY   CONTRACT_NO, TRANSACTION_NO
adjustment.list.ind.transactionRP=Select  Distinct    B.Receipt_Sl_No TRANSACTION_NO, To_Char (B.Trans_Date, 'DD/MM/YYYY') As Adate, (Nvl (B.Amount, 0) - Nvl (B.Allocated_Till_Date, 0)) Pending_Amount,(Select   Company_Name From   Personal_Info Pi Where   Pi.Customer_Id \= A.Ceding_Id And Pi.Branch_Code \= A.Branch_Code and AMEND_ID \=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id \= A.Ceding_Id AND I.branch_code \= A.BRANCH_CODE)) Ceding_Company_Name, (Select   First_Name || Last_Name From   Personal_Info Pi Where   Pi.Customer_Id \= A.Broker_Id  And Pi.Branch_Code \= A.Branch_Code and AMEND_ID \=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id \= A.Broker_Id AND I.branch_code \= A.BRANCH_CODE))  Broker_Name, (Select   Currency_Name From   Currency_Master Cm Where   Cm.Currency_Id \= B.Currency_Id And Cm.Branch_Code \= A.Branch_Code And Cm.Amend_Id \=(Select   Max (Amend_Id) From   Currency_Master Where   Currency_Id \= Cm.Currency_Id And Branch_Code \= Cm.Branch_Code)) Currency_Name,B.Currency_Id,Decode(A.TRANS_TYPE,'RT','Receipt','Payment')BUSINESS_TYPE From   Ttrn_Payment_Receipt A, Ttrn_Payment_Receipt_Details B Where  A.Payment_Receipt_No\=B.Receipt_Sl_No and A.Branch_Code \= ? And (Nvl (B.Amount, 0) - Nvl (B.Allocated_Till_Date, 0)) \!\=0 AND B.Receipt_Sl_No in (select * from table(SPLIT_TEXT_FN(?))) and B.CURRENCY_ID\!\=0 AND B.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_PAYMENT_RECEIPT_DETAILS C WHERE B.RECEIPT_SL_NO\=C.RECEIPT_SL_NO AND B.RECEIPT_NO\=C.RECEIPT_NO  AND B.CURRENCY_ID\=C.CURRENCY_ID) order  by B.Receipt_Sl_No
#adjustment.list.allocated=select * from (select SNO,Decode(TYPE,'P','Premium','C','Claim','RT','Receipt','PT','Payment')transactionType,(SELECT   COMPANY_NAME FROM   personal_info pi WHERE   pi.customer_id \= A.CEDING_COMPANY_ID AND pi.branch_code \= A.BRANCH_CODE) CEDING_COMPANY_name,(SELECT   FIRST_NAME || LAST_NAME FROM   personal_info pi WHERE   pi.customer_id \= A.BROKER_ID AND pi.branch_code \= A.BRANCH_CODE) broker_name,(SELECT   CURRENCY_NAME FROM   currency_master cm WHERE   cm.CURRENCY_ID \= c.CURRENCY_ID AND cm.branch_code \= A.BRANCH_CODE AND cm.amend_id \=(SELECT   MAX (amend_id) FROM   currency_master WHERE   CURRENCY_ID \= cm.CURRENCY_ID AND branch_code \= cm.BRANCH_CODE)) currency_name,ADJUSTMENT_TYPE,PAID_AMOUNT  from  TTRN_ALLOCATED_TRANSACTION c, POSITION_MASTER A where A.CONTRACT_NO \= C.CONTRACT_NO AND NVL (A.LAYER_NO, 0) \= NVL (C.LAYER_NO, 0) AND A.BRANCH_CODE \= ? and a.amend_id\=(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER PM WHERE   CONTRACT_NO \= A.CONTRACT_NO AND NVL (A.LAYER_NO, 0) \= NVL (PM.LAYER_NO, 0)))
#adjustment.list.allocated=select * from (Select SNO,type,receipt_no,Contract_no,PaidAMount,(Select FIRST_NAME||' '||Last_name from personal_info pi where Branch_code=? and rownum=1 and pi.customer_id=(Select Broker_Id From Position_Master Pm Where Pm.Contract_No=C.Contract_no and Branch_code=?  and amend_id=(Select Max(Amend_id) from position_master p Where pm.contract_no=p.contract_no) and Rownum=1)) Broker_ID,(Select COMPANY_NAME from personal_info pi where Branch_code=? and rownum=1 and pi.customer_id=(Select CEDING_COMPANY_ID From Position_Master Pm Where Pm.Contract_No=C.Contract_no and Branch_code='05'  and amend_id=(Select Max(Amend_id) from position_master p Where pm.contract_no=p.contract_no) and Rownum=1)) Customer_ID,ADJUSTMENT_TYPE,(Select SHORT_NAME from Currency_master cm where C.CURRENCY_ID=Cm.currency_id and branch_Code=?) Currency_name from (Select nvl(A.sno,B.sno) SNO,'Premium and Claim' type,nvl(A.receipt_no,B.receipt_no) receipt_no,nvl(A.contract_no,B.contract_no) Contract_no,nvl(A.Paidamount,0)-nvl(B.Paidamount,0) PaidAMount, nvl(A.ADJUSTMENT_TYPE,B.ADJUSTMENT_TYPE) ADJUSTMENT_TYPE,nvl(A.CURRENCY_ID,B.CURRENCY_ID) CURRENCY_ID From(Select Sno,Type,Receipt_No,Contract_No,To_char(wm_concat(Distinct ADJUSTMENT_TYPE)) ADJUSTMENT_TYPE,Sum(PAID_AMOUNT) Paidamount,CURRENCY_ID From TTRN_ALLOCATED_TRANSACTION Where contract_no in (Select contract_no from position_master Where Branch_code=?) and Type='P' group by sno,receipt_no,contract_no,type,CURRENCY_ID) A full Outer Join(Select Sno,Type,Receipt_No,Contract_No,To_char(wm_concat(Distinct ADJUSTMENT_TYPE)) ADJUSTMENT_TYPE,Sum(PAID_AMOUNT) Paidamount,CURRENCY_ID From TTRN_ALLOCATED_TRANSACTION Where contract_no in (Select contract_no from position_master Where Branch_code=?)and Type='C' group by sno,receipt_no,contract_no,type,CURRENCY_ID) B on A.Sno=B.Sno) C union all Select SNO,type,receipt_no,Contract_no,PaidAMount,(Select FIRST_NAME||' '||Last_name from personal_info pi where Branch_code=? and rownum=1 and pi.customer_id=(Select broker_id From ttrn_payment_receipt Pm Where Pm.PAYMENT_RECEIPT_NO=C.Receipt_No and Branch_code='05'  and amend_id=(Select Max(Amend_id) from ttrn_payment_receipt p Where pm.PAYMENT_RECEIPT_NO=p.PAYMENT_RECEIPT_NO) and Rownum=1)) Broker_ID,(Select COMPANY_NAME from personal_info pi where Branch_code=? and rownum=1 and pi.customer_id=(Select Ceding_id From ttrn_payment_receipt Pm Where Pm.PAYMENT_RECEIPT_NO=C.Receipt_No and Branch_code=?  and amend_id=(Select Max(Amend_id) from ttrn_payment_receipt p Where pm.PAYMENT_RECEIPT_NO=p.PAYMENT_RECEIPT_NO) and Rownum=1)) Customer_ID,ADJUSTMENT_TYPE,(Select SHORT_NAME from Currency_master cm where C.CURRENCY_ID=Cm.currency_id and branch_Code=?) Currency_name from (Select nvl(A.sno,B.sno) SNO,'Payment and Receipt' type,nvl(A.receipt_no,B.receipt_no) receipt_no,nvl(A.contract_no,B.contract_no) Contract_no,nvl(A.Paidamount,0)-nvl(B.Paidamount,0) PaidAMount,nvl(A.ADJUSTMENT_TYPE,B.ADJUSTMENT_TYPE) ADJUSTMENT_TYPE,nvl(A.CURRENCY_ID,B.CURRENCY_ID)  CURRENCY_ID From (Select Sno,Type,Receipt_No,Contract_No,To_char(wm_concat(Distinct ADJUSTMENT_TYPE)) ADJUSTMENT_TYPE,Sum(PAID_AMOUNT) Paidamount,CURRENCY_ID From TTRN_ALLOCATED_TRANSACTION Where Receipt_No in (Select PAYMENT_RECEIPT_NO from ttrn_payment_receipt Where Branch_code=?)and Type='PT' group by sno,receipt_no,contract_no,type,CURRENCY_ID) A full Outer Join(Select Sno,Type,Receipt_No,Contract_No,To_char(wm_concat(Distinct ADJUSTMENT_TYPE)) ADJUSTMENT_TYPE,Sum(PAID_AMOUNT) Paidamount,CURRENCY_ID From TTRN_ALLOCATED_TRANSACTION Where Receipt_No in (Select PAYMENT_RECEIPT_NO from ttrn_payment_receipt Where Branch_code=?) and Type='RT' group by sno,receipt_no,contract_no,type,CURRENCY_ID) B on A.Sno=B.Sno) C)
#adjustment.list.allocated=select * from (Select SNO,type,receipt_no,Contract_no,PaidAMount,(Select FIRST_NAME||' '||Last_name from personal_info pi where Branch_code=? and rownum=1 and pi.customer_id=(Select Broker_Id From Position_Master Pm Where Pm.Contract_No=C.Contract_no and Branch_code=?  and amend_id=(Select Max(Amend_id) from position_master p Where pm.contract_no=p.contract_no) and Rownum=1)) Broker_ID,(Select COMPANY_NAME from personal_info pi where Branch_code=? and rownum=1 and pi.customer_id=(Select CEDING_COMPANY_ID From Position_Master Pm Where Pm.Contract_No=C.Contract_no and Branch_code='05'  and amend_id=(Select Max(Amend_id) from position_master p Where pm.contract_no=p.contract_no) and Rownum=1)) Customer_ID,ADJUSTMENT_TYPE,(Select SHORT_NAME from Currency_master cm where C.CURRENCY_ID=Cm.currency_id and branch_Code=?) Currency_name from (Select nvl(A.sno,B.sno) SNO,'Premium and Claim' type,nvl(A.receipt_no,B.receipt_no) receipt_no,nvl(A.contract_no,B.contract_no) Contract_no,nvl(A.Paidamount,0)-nvl(B.Paidamount,0) PaidAMount, nvl(A.ADJUSTMENT_TYPE,B.ADJUSTMENT_TYPE) ADJUSTMENT_TYPE,nvl(A.CURRENCY_ID,B.CURRENCY_ID) CURRENCY_ID From(Select Sno,Type,Receipt_No,Contract_No,To_char(wm_concat(Distinct ADJUSTMENT_TYPE)) ADJUSTMENT_TYPE,Sum(PAID_AMOUNT) Paidamount,CURRENCY_ID From TTRN_ALLOCATED_TRANSACTION Where contract_no in (Select contract_no from position_master Where Branch_code=?) and Type='P' group by sno,receipt_no,contract_no,type,CURRENCY_ID) A left Outer Join(Select Sno,Type,Receipt_No,Contract_No,To_char(wm_concat(Distinct ADJUSTMENT_TYPE)) ADJUSTMENT_TYPE,Sum(PAID_AMOUNT) Paidamount,CURRENCY_ID From TTRN_ALLOCATED_TRANSACTION Where contract_no in (Select contract_no from position_master Where Branch_code=?)and Type='C' group by sno,receipt_no,contract_no,type,CURRENCY_ID) B on A.Sno=B.Sno) C union all Select SNO,type,receipt_no,Contract_no,PaidAMount,(Select FIRST_NAME||' '||Last_name from personal_info pi where Branch_code=? and rownum=1 and pi.customer_id=(Select broker_id From ttrn_payment_receipt Pm Where Pm.PAYMENT_RECEIPT_NO=C.Receipt_No and Branch_code='05'  and amend_id=(Select Max(Amend_id) from ttrn_payment_receipt p Where pm.PAYMENT_RECEIPT_NO=p.PAYMENT_RECEIPT_NO) and Rownum=1)) Broker_ID,(Select COMPANY_NAME from personal_info pi where Branch_code=? and rownum=1 and pi.customer_id=(Select Ceding_id From ttrn_payment_receipt Pm Where Pm.PAYMENT_RECEIPT_NO=C.Receipt_No and Branch_code=?  and amend_id=(Select Max(Amend_id) from ttrn_payment_receipt p Where pm.PAYMENT_RECEIPT_NO=p.PAYMENT_RECEIPT_NO) and Rownum=1)) Customer_ID,ADJUSTMENT_TYPE,(Select SHORT_NAME from Currency_master cm where C.CURRENCY_ID=Cm.currency_id and branch_Code=?) Currency_name from (Select nvl(A.sno,B.sno) SNO,'Payment and Receipt' type,nvl(A.receipt_no,B.receipt_no) receipt_no,nvl(A.contract_no,B.contract_no) Contract_no,nvl(A.Paidamount,0)-nvl(B.Paidamount,0) PaidAMount,nvl(A.ADJUSTMENT_TYPE,B.ADJUSTMENT_TYPE) ADJUSTMENT_TYPE,nvl(A.CURRENCY_ID,B.CURRENCY_ID)  CURRENCY_ID From (Select Sno,Type,Receipt_No,Contract_No,To_char(wm_concat(Distinct ADJUSTMENT_TYPE)) ADJUSTMENT_TYPE,Sum(PAID_AMOUNT) Paidamount,CURRENCY_ID From TTRN_ALLOCATED_TRANSACTION Where Receipt_No in (Select PAYMENT_RECEIPT_NO from ttrn_payment_receipt Where Branch_code=?)and Type='PT' group by sno,receipt_no,contract_no,type,CURRENCY_ID) A left Outer Join(Select Sno,Type,Receipt_No,Contract_No,To_char(wm_concat(Distinct ADJUSTMENT_TYPE)) ADJUSTMENT_TYPE,Sum(PAID_AMOUNT) Paidamount,CURRENCY_ID From TTRN_ALLOCATED_TRANSACTION Where Receipt_No in (Select PAYMENT_RECEIPT_NO from ttrn_payment_receipt Where Branch_code=?) and Type='RT' group by sno,receipt_no,contract_no,type,CURRENCY_ID) B on A.Sno=B.Sno) C)
#adjustment.list.allocated=select * from table(Fn_Adjustment_type(?))
#adjustment.list.allocated=SELECT sno,type,REPLACE(COLUMN_VALUE,' ',' , ') ADJUSTMENT_TYPE,CURRENCY_NAME,CEDINGCOMPANY,BROKERNAME,PAIDAMOUNT FROM table(fn_adjustment_type(?)) ,xmltable (('xs:string(distinct-values(("' || replace((ADJUSTMENT_TYPE),',','","') || '")))'))
#adjustment.list.allocated=SELECT sno,TYPE,Decode(REPLACE (COLUMN_VALUE, ' ', ' , '),'R','Round Off','W','Write Off','R , W','Round Off / Write Off','W , R','Write Off AND Round Off') ADJUSTMENT_TYPE,CURRENCY_NAME,CEDINGCOMPANY, BROKERNAME, PAIDAMOUNT FROM TABLE (fn_adjustment_type (?)),XMLTABLE ( (   'xs:string(distinct-values(("'|| REPLACE ( (ADJUSTMENT_TYPE), ',', '","')|| '")))'))
adjustment.list.allocated=SELECT sno,TYPE,ADJUSTMENT_TYPE,CURRENCY_NAME,CEDINGCOMPANY,BROKERNAME, PAIDAMOUNT,status FROM TABLE (fn_adjustment_type (?)),XMLTABLE ( ('xs\:string(distinct-values(("'|| REPLACE ( (ADJUSTMENT_TYPE), ',', '","')|| '")))')) 
adjusment.open.period.date=select TO_CHAR(START_DATE,'DD/MM/YYYY') START_DATE,TO_CHAR(END_DATE,'DD/MM/YYYY') END_DATE from tmas_open_period where status=? and BRANCH_CODE=?
allocation.date=SELECT TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO = ?
adjusment.reverse.trans.list=SELECT SNO,TO_CHAR(REVERSAL_DATE,'DD/MM/YYYY') INCEPTION_DATE,TRANSACTION_NO,CONTRACT_NO, PRODUCT_NAME,TYPE,REVERSAL_AMOUNT,CURRENCY_ID,STATUS,decode(ADJUSTMENT_TYPE,'R','Round Off','W','Write Off') ADJUSTMENT_TYPE,RECEIPT_NO FROM TTRN_ALLOCATED_TRANSACTION WHERE SNO =?
##propertion premium
##account.list=select ACCOUNT_ID,BANK_AC_NO from BANK_MASTER where id=?
bankaddress.list= select BANK_ADDRESS,BANK_AC_NO from bank_master where STATUS\='Y' and BRANCH_CODE\=? AND BANK_AC_NO\=? 
##account.list=SELECT BANK_ID,BANK_AC_NO FROM bank_master WHERE BRANCH_CODE=? AND STATUS='Y' AND BANK_CURRENCY=?
account.list=  SELECT BANK_ID,BANK_AC_NO,SHORT_NAME FROM bank_master bm,currency_master cm WHERE bm.BRANCH_CODE=cm.BRANCH_CODE AND bm.STATUS='Y' AND cm.CURRENCY_ID =bm.BANK_CURRENCY and BM.BANK_CURRENCY=? and bm.BRANCH_CODE=?
##currency.list= select CURRENCY_ID,SHORT_NAME from currency_master where BRANCH_CODE=? and CURRENCY_ID in( SELECT DISTINCT BANK_CURRENCY FROM bank_master WHERE BRANCH_CODE=? AND STATUS='Y')
currency.list=select CURRENCY_ID,SHORT_NAME from currency_master where BRANCH_CODE=? and CURRENCY_ID in (SELECT Distinct(REGEXP_SUBSTR(BANK_CURRENCY,'[^,]+',1,LEVEL)) lc_login FROM (SELECT DISTINCT BANK_CURRENCY FROM bank_master WHERE BRANCH_CODE=? AND STATUS='Y') B CONNECT BY LEVEL <= LENGTH(BANK_CURRENCY) - LENGTH(REPLACE(BANK_CURRENCY,',',''))+1 and BANK_CURRENCY is not null)
adjutment.list.maxdate=Select to_char(max(Column_value),'DD/MM/YYYY') maxdate from (select TO_date(Column_value,'DD/MM/YYYY') Column_value from table(SPLIT_TEXT_FN(?)))
uwlimit.list=SELECT PRODUCT_ID,(SELECT TMAS_PRODUCT_NAME FROM  TMAS_PRODUCT_MASTER WHERE BRANCH_CODE=UCM.BRANCH_CODE AND TMAS_STATUS='1' AND TMAS_PRODUCT_ID=PRODUCT_ID) PRODUCT_NAME,DEPARTMENTID,nvl((SELECT   TMAS_DEPARTMENT_NAME FROM   TMAS_DEPARTMENT_MASTER  WHERE       BRANCH_CODE = UCM.BRANCH_CODE AND TMAS_DEPARTMENT_ID = DEPARTMENTID AND TMAS_PRODUCT_ID = PRODUCT_ID AND TMAS_STATUS = 'Y'),'None')DEPARTMENTNAME,UNDERWRITERID,UNDERWRITTER,UNDERWRITTER_LIMIT,Decode(STATUS,'Y','Active','Deactive')STATUS FROM UNDERWRITER_CAPACITY_MASTER UCM WHERE BRANCH_CODE=?
uwlimit.insert=INSERT INTO UNDERWRITER_CAPACITY_MASTER(PRODUCT_ID,DEPARTMENTID,UNDERWRITERID,UNDERWRITTER,UNDERWRITTER_LIMIT,BRANCH_CODE,STATUS)VALUES(?,?,?,(SELECT UNDERWRITTER FROM  UNDERWRITTER_MASTER WHERE BRANCH_CODE=? AND UWR_CODE=? AND UWR_STATUS='Y'),?,?,?)
uwlimit.update=UPDATE UNDERWRITER_CAPACITY_MASTER SET UNDERWRITTER_LIMIT=?,STATUS=? WHERE PRODUCT_ID=? AND DEPARTMENTID=? AND UNDERWRITERID=? AND BRANCH_CODE=?
edit.uwlimit=SELECT PRODUCT_ID,DEPARTMENTID,UNDERWRITERID,UNDERWRITTER_LIMIT ,STATUS FROM UNDERWRITER_CAPACITY_MASTER WHERE PRODUCT_ID\=? AND DEPARTMENTID\=? AND UNDERWRITERID\=?

uwlimit.combination=SELECT COUNT(*) FROM UNDERWRITER_CAPACITY_MASTER WHERE PRODUCT_ID\=? AND DEPARTMENTID\=? AND UNDERWRITERID\=? AND BRANCH_CODE\=?



############premium action page
####premium.list= SELECT   RK.RSK_PRODUCTID,RK.RSK_CONTRACT_NO,PERSONAL.COMPANY_NAME,PI.FIRST_NAME || ' ' || PI.LAST_NAME BROKER_NAME,RK.RSK_PROPOSAL_NUMBER,RK.RSK_LAYER_NO,TRA.TRANSACTION_NO, TRA.INSTALMENT_NUMBER || ' ' || TRA.ACCOUNT_PERIOD_QTR INS_DETAIL,CASE rk.RSK_PRODUCTID WHEN 2 THEN(SELECT   DISTINCT DETAIL_NAME FROM   CONSTANT_DETAIL WHERE       CATEGORY_ID = 7 AND TYPE = TRA.ACCOUNT_PERIOD_QTR AND STATUS = 'Y') || ' '|| TRA.ACCOUNT_PERIOD_YEAR ELSE TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR END ACC_PER,TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE,TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,NVL (TRA.ALLOCATED_TILL_DATE, '0') ALLOC_AMT, TRA.MOVEMENT_YN,TRA.SETTLEMENT_STATUS,TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY') TRANSACTION_DATE FROM   TTRN_RISK_DETAILS RK, PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,RSK_PREMIUM_DETAILS TRA WHERE  RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND RK.RSK_BROKERID = PI.CUSTOMER_ID AND PERSONAL.BRANCH_CODE = ? AND PERSONAL.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PERSONAL.CUSTOMER_ID AND BRANCH_CODE = PERSONAL.BRANCH_CODE) AND PI.BRANCH_CODE = PERSONAL.BRANCH_CODE AND PI.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_CONTRACT_NO = RK.RSK_CONTRACT_NO AND RSK_LAYER_NO = rk.RSK_LAYER_NO) AND TRA.CONTRACT_NO = RK.RSK_CONTRACT_NO AND TRA.LAYER_NO = RK.RSK_LAYER_NO ORDER BY   TRA.TRANSACTION_NO DESC
premium.list=SELECT   * FROM   (  SELECT   DISTINCT RK.RSK_PRODUCTID,  RK.RSK_CONTRACT_NO,RK.RSK_DEPTID, (SELECT   COMPANY_NAME FROM   personal_info Pi WHERE  CUSTOMER_TYPE = 'C' AND pm.CEDING_COMPANY_ID = Pi.CUSTOMER_ID AND pi.branch_code = pm.branch_code AND amend_id = (SELECT   MAX (Amend_id) FROM   personal_info p  WHERE   p.CUSTOMER_TYPE = pi.CUSTOMER_TYPE  AND p.customer_id = pi.customer_id AND p.branch_code = pm.branch_code)) COMPANY_NAME, (SELECT   FIRST_NAME FROM   personal_info Pi WHERE  CUSTOMER_TYPE = 'B'  AND pm.Broker_id = Pi.CUSTOMER_ID  AND pi.branch_code = pm.branch_code  AND amend_id = (SELECT   MAX (Amend_id)  FROM   personal_info p WHERE p.CUSTOMER_TYPE = pi.CUSTOMER_TYPE AND p.customer_id = pi.customer_id AND p.branch_code = pm.branch_code))  Broker_name, RK.RSK_PROPOSAL_NUMBER, RK.RSK_LAYER_NO, TRA.TRANSACTION_NO,  TRA.INSTALMENT_NUMBER || ' ' || TRA.ACCOUNT_PERIOD_QTR  INS_DETAIL, CASE rk.RSK_PRODUCTID WHEN 2 THEN (SELECT   DISTINCT DETAIL_NAME FROM   CONSTANT_DETAIL WHERE       CATEGORY_ID = 49 AND TYPE = TRA.ACCOUNT_PERIOD_QTR  AND STATUS = 'Y') || ' ' || TRA.ACCOUNT_PERIOD_YEAR ELSE TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR END ACC_PER, TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE, NVL (TRA.ALLOCATED_TILL_DATE, '0') ALLOC_AMT, TRA.MOVEMENT_YN, TRA.SETTLEMENT_STATUS,  TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY') TRANSACTION_DATE,TRA.REVERSE_TRANSACTION_NO FROM   TTRN_RISK_DETAILS RK, RSK_PREMIUM_DETAILS TRA, Position_Master Pm WHERE    pm.BRANCH_CODE = ? AND pm.amend_id = (SELECT   MAX (amend_id)  FROM   Position_master p  WHERE   P.contract_no = pm.Contract_no and decode(RK.RSK_PRODUCTID,'2',P.DEPT_ID,'111111')= decode(RK.RSK_PRODUCTID,'2',PM.DEPT_ID ,'111111') ) AND TRA.CONTRACT_NO = pm.contract_no  AND RK.RSK_ENDORSEMENT_NO = (SELECT   MAX (RSK_ENDORSEMENT_NO)  FROM   TTRN_RISK_DETAILS WHERE   RSK_CONTRACT_NO = RK.RSK_CONTRACT_NO AND RSK_LAYER_NO = rk.RSK_LAYER_NO and decode(RK.RSK_PRODUCTID,'2',RSK_DEPTID,'111111')= decode(RK.RSK_PRODUCTID,'2',rk.RSK_DEPTID,'111111')) AND TRA.CONTRACT_NO = RK.RSK_CONTRACT_NO AND TRA.LAYER_NO = RK.RSK_LAYER_NO and   decode(RK.RSK_PRODUCTID,'2',TRA.SUB_CLASS ,'111111')= decode(RK.RSK_PRODUCTID,'2',rk.RSK_DEPTID,'111111') ORDER BY   TRA.TRANSACTION_NO desc)
full.premium.list=SELECT   * FROM   (  SELECT   DISTINCT RK.RSK_PRODUCTID,  RK.RSK_CONTRACT_NO,RK.RSK_DEPTID, (SELECT   COMPANY_NAME FROM   personal_info Pi WHERE  CUSTOMER_TYPE \= 'C' AND pm.CEDING_COMPANY_ID \= Pi.CUSTOMER_ID AND pi.branch_code \= pm.branch_code AND amend_id \= (SELECT   MAX (Amend_id) FROM   personal_info p  WHERE   p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code)) COMPANY_NAME, (SELECT   FIRST_NAME FROM   personal_info Pi WHERE  CUSTOMER_TYPE \= 'B'  AND pm.Broker_id \= Pi.CUSTOMER_ID  AND pi.branch_code \= pm.branch_code  AND amend_id \= (SELECT   MAX (Amend_id)  FROM   personal_info p WHERE p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code))  Broker_name, RK.RSK_PROPOSAL_NUMBER, RK.RSK_LAYER_NO, TRA.TRANSACTION_NO,  TRA.INSTALMENT_NUMBER || ' ' || TRA.ACCOUNT_PERIOD_QTR  INS_DETAIL, CASE rk.RSK_PRODUCTID WHEN 2 THEN (SELECT   DISTINCT DETAIL_NAME FROM   CONSTANT_DETAIL WHERE       CATEGORY_ID \= 49 AND TYPE \= TRA.ACCOUNT_PERIOD_QTR  AND STATUS \= 'Y') || ' ' || TRA.ACCOUNT_PERIOD_YEAR ELSE TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR END ACC_PER, TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE, NVL (TRA.ALLOCATED_TILL_DATE, '0') ALLOC_AMT, TRA.MOVEMENT_YN, TRA.SETTLEMENT_STATUS,  TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY') TRANSACTION_DATE,TRA.REVERSE_TRANSACTION_NO FROM   TTRN_RISK_DETAILS RK, RSK_PREMIUM_DETAILS TRA, Position_Master Pm WHERE    pm.BRANCH_CODE \= ? AND pm.amend_id \= (SELECT   MAX (amend_id)  FROM   Position_master p  WHERE   P.contract_no \= pm.Contract_no and decode(RK.RSK_PRODUCTID,'2',P.DEPT_ID,'111111')\= decode(RK.RSK_PRODUCTID,'2',PM.DEPT_ID ,'111111') ) AND TRA.CONTRACT_NO \= pm.contract_no  AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO)  FROM   TTRN_RISK_DETAILS WHERE   RSK_CONTRACT_NO \= RK.RSK_CONTRACT_NO AND RSK_LAYER_NO \= rk.RSK_LAYER_NO and decode(RK.RSK_PRODUCTID,'2',RSK_DEPTID,'111111')\= decode(RK.RSK_PRODUCTID,'2',rk.RSK_DEPTID,'111111')) AND TRA.CONTRACT_NO \= RK.RSK_CONTRACT_NO AND TRA.LAYER_NO \= RK.RSK_LAYER_NO and   decode(RK.RSK_PRODUCTID,'2',TRA.SUB_CLASS ,'111111')\= decode(RK.RSK_PRODUCTID,'2',rk.RSK_DEPTID,'111111') ORDER BY   TRA.TRANSACTION_NO desc)where  rownum<\=100 
GET_PRODUC_ID_LIST=select TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME from  tmas_product_master WHERE  BRANCH_CODE\=? AND TMAS_PRODUCT_ID IN (1,2,3)
GET_PREM_PRODUC_ID_LIST=select TMAS_PRODUCT_ID,TMAS_PRODUCT_NAME from  tmas_product_master WHERE  BRANCH_CODE\=? AND TMAS_PRODUCT_ID IN (1,2,3)
common.select.departlist.premium=SELECT DISTINCT TMAS_DEPARTMENT_ID ,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE=? AND TMAS_STATUS=? ORDER BY  TMAS_DEPARTMENT_NAME ASC
##contract.identifier.list=SELECT   RK.RSK_PRODUCTID,RK.RSK_CONTRACT_NO,PERSONAL.COMPANY_NAME,PI.FIRST_NAME || ' ' || PI.LAST_NAME BROKER_NAME,RK.RSK_PROPOSAL_NUMBER,RK.RSK_LAYER_NO,TRA.TRANSACTION_NO, TRA.INSTALMENT_NUMBER || ' ' || TRA.ACCOUNT_PERIOD_QTR INS_DETAIL,CASE rk.RSK_PRODUCTID WHEN 2 THEN(SELECT   DISTINCT DETAIL_NAME FROM   CONSTANT_DETAIL WHERE      CATEGORY_ID = 7 AND TYPE = TRA.ACCOUNT_PERIOD_QTR AND STATUS = 'Y') || ' '|| TRA.ACCOUNT_PERIOD_YEAR ELSE TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR END ACC_PER,TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE,TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,NVL (TRA.ALLOCATED_TILL_DATE, '0') ALLOC_AMT, TRA.MOVEMENT_YN,TRA.SETTLEMENT_STATUS,TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY') TRANSACTION_DATE FROM   TTRN_RISK_DETAILS RK, PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,RSK_PREMIUM_DETAILS TRA WHERE RK.RSK_CEDINGID=? and RK.RSK_BROKERID=? and RK.RSK_UWYEAR=? AND RK.RSK_DEPTID=? AND RK.RSK_PRODUCTID=? AND  RK.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND RK.RSK_BROKERID = PI.CUSTOMER_ID AND PERSONAL.BRANCH_CODE = ? AND PERSONAL.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PERSONAL.CUSTOMER_ID AND BRANCH_CODE = PERSONAL.BRANCH_CODE) AND PI.BRANCH_CODE = PERSONAL.BRANCH_CODE AND PI.AMEND_ID =(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO =(SELECT   MAX (RSK_ENDORSEMENT_NO) FROM   TTRN_RISK_DETAILS WHERE   RSK_CONTRACT_NO = RK.RSK_CONTRACT_NO AND RSK_LAYER_NO = rk.RSK_LAYER_NO) AND TRA.CONTRACT_NO = RK.RSK_CONTRACT_NO AND TRA.LAYER_NO = RK.RSK_LAYER_NO ORDER BY   TRA.TRANSACTION_NO DESC
contract.identifier.list=SELECT distinct A.PROPOSAL_NO,A.DEPT_ID,A.CONTRACT_NO,B.TMAS_DEPARTMENT_NAME,A.CEDING_COMPANY_ID,TO_CHAR (A.ACCOUNT_DATE, 'dd/mm/yyyy') AS ACCOUNT_DATE,B.TMAS_DEPARTMENT_NAME,C.COMPANY_NAME, C1.FIRST_NAME || ' '||C1.LAST_NAME BROKER_NAME,TO_CHAR (A.INCEPTION_DATE, 'dd/mm/yyyy') AS INCEPTION_DATE, TO_CHAR (A.EXPIRY_DATE, 'dd/mm/yyyy') AS EXPIRY_DATE,A.LAYER_NO,A.BASE_LAYER,A.OLD_CONTRACTNO AS OLD_CONTRACTNO, A.RENEWAL_STATUS AS RENEWAL_STATUS,(A.EXPIRY_DATE - SYSDATE) AS RENWALDATE,(CASE WHEN A.UW_YEAR != 0 THEN A.UW_YEAR ELSE NULL END) UW_YEAR, TO_CHAR (A.UW_MONTH, 'dd/mm/yyyy') UW_MONTH,E.UNDERWRITTER,DECODE(CD.CONTRACT_NO,NULL,'N','Y') HAS_CLAIM,CD.CLAIM_NO,CD.COUNT,A.AMEND_ID FROM   POSITION_MASTER A JOIN TMAS_DEPARTMENT_MASTER B ON A.DEPT_ID = B.TMAS_DEPARTMENT_ID JOIN PERSONAL_INFO C ON  C.CUSTOMER_ID = A.CEDING_COMPANY_ID JOIN TTRN_RISK_DETAILS D ON A.PRODUCT_ID = D.RSK_PRODUCTID AND A.CONTRACT_NO = D.RSK_CONTRACT_NO AND A.LAYER_NO=D.RSK_LAYER_NO AND A.AMEND_ID = D.RSK_ENDORSEMENT_NO AND A.DEPT_ID = D.RSK_DEPTID JOIN UNDERWRITTER_MASTER E ON D.RSK_UNDERWRITTER = E.UWR_CODE JOIN PERSONAL_INFO C1 ON  C1.CUSTOMER_ID = A.BROKER_ID LEFT OUTER JOIN ( SELECT DISTINCT CONTRACT_NO,LAYER_NO,CLAIM_NO, COUNT(CLAIM_NO) COUNT FROM   TTRN_CLAIM_DETAILS group by CONTRACT_NO, LAYER_NO ,CLAIM_NO) CD ON A.CONTRACT_NO = CD.CONTRACT_NO AND A.LAYER_NO=CD.LAYER_NO  WHERE  A.PRODUCT_ID = ?  AND A.CONTRACT_STATUS = 'A' AND A.CONTRACT_NO > 0 AND B.TMAS_PRODUCT_ID = ? AND B.BRANCH_CODE = ?   AND B.TMAS_STATUS='Y' AND C.BRANCH_CODE = ? AND C.CUSTOMER_TYPE = 'C' AND C.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = C.CUSTOMER_ID AND BRANCH_CODE = C.BRANCH_CODE AND CUSTOMER_TYPE = C.CUSTOMER_TYPE) AND E.BRANCH_CODE = ? AND A.BRANCH_CODE = ? AND A.AMEND_ID IN (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE  PRODUCT_ID = ? AND A.CONTRACT_NO = CONTRACT_NO AND A.LAYER_NO=LAYER_NO AND A.BRANCH_CODE = BRANCH_CODE AND CONTRACT_STATUS = 'A') AND C1.BRANCH_CODE = ? AND C1.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE CUSTOMER_ID = C1.CUSTOMER_ID AND BRANCH_CODE = C1.BRANCH_CODE AND CUSTOMER_TYPE = C1.CUSTOMER_TYPE) and D.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS RD  WHERE RD.BRANCH_CODE=D.BRANCH_CODE AND RD.RSK_PROPOSAL_NUMBER=D.RSK_PROPOSAL_NUMBER)
insert.cash.loss.credit=INSERT INTO TTRN_CASH_LOSS_CREDIT(CLC_NO,CONTRACT_NO,CLAIM_NO,CLAIMPAYMENT_NO,CLCCURRENCY_ID,CREDITAMOUNTCLC,CLDCURRENCY_ID,EXCHANGE_RATE,CREDITAMOUNTCLD,CREDITTRXNNO,CREDITDATE,BRANCH_CODE,TEMP_REQUEST_NO,TABLE_MOVE_STATUS,PROPOSAL_NO,CLD_AMOUNT,STATUS)VALUES((SELECT nvl(MAX(CLC_NO),1001)+1 FROM TTRN_CASH_LOSS_CREDIT WHERE BRANCH_CODE\=?),?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?)
#update.claim.payment=UPDATE TTRN_CLAIM_PAYMENT SET CASH_LOSS_SETTLED_TILLDATE\=nvl(CASH_LOSS_SETTLED_TILLDATE,0)+? WHERE CONTRACT_NO\=? AND  CLAIM_NO\=? AND  CLAIM_PAYMENT_NO\=?
 #update.claim.payment=UPDATE TTRN_CLAIM_PAYMENT SET CASH_LOSS_SETTLED_TILLDATE\=nvl(CASH_LOSS_SETTLED_TILLDATE,0)+NVL(SELECT SUM(NVL(CREDITAMOUNTCLD,0)) FROM TTRN_CASH_LOSS_CREDIT WHERE CONTRACT_NO\=? AND BRANCH_CODE\=? AND TEMP_REQUEST_NO\=? AND TABLE_MOVE_STATUS\=?),0) WHERE CONTRACT_NO\=? AND  CLAIM_NO\=? AND  CLAIM_PAYMENT_NO\=?
update.claim.payment=UPDATE TTRN_CLAIM_PAYMENT SET CASH_LOSS_SETTLED_TILLDATE\=nvl(CASH_LOSS_SETTLED_TILLDATE,0)+(SELECT SUM(NVL(CREDITAMOUNTCLD,0)) FROM TTRN_CASH_LOSS_CREDIT  WHERE CONTRACT_NO\=?  AND BRANCH_CODE\=?  AND TEMP_REQUEST_NO\=? AND TABLE_MOVE_STATUS\=?  AND  CLAIM_NO\=? AND  CLAIMPAYMENT_NO\=?) WHERE CONTRACT_NO\=? AND  CLAIM_NO\=? AND  CLAIM_PAYMENT_NO\=?
INSERT_PREMIUM_RESERVE=INSERT INTO TTRN_DEPOSIT_RELEASE (PROPOSAL_NO,CONTRACT_NO,DEPT_ID,RELEASE_TYPE,RL_NO,RL_TRANSACTION_NO,RL_TRANSACTION_DATE,RT_TRANSACTION_NO,RT_TRANSACTION_DATE,RL_CURRENCY_ID,RT_CURRENCY_ID,RL_AMOUNT_IN_RL_CURR,RL_AMOUNT_IN_RT_CURR,EXCHANGE_RATE,LOGIN_ID,BRANCH_CODE,SYS_DATE,TABLE_MOVE_STATUS,TEMP_REQUEST_NO) VALUES(?,?,?,?,?,?,to_date(?,'DD/MM/YYYY'),?,to_date(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,SYSDATE,?,?)
UPDATE_PREMIUM_RESERVE=UPDATE RSK_PREMIUM_DETAILS SET PRD_ALLOCATED_TILL_DATE=nvl(PRD_ALLOCATED_TILL_DATE,0)+(SELECT NVL(SUM(RL_AMOUNT_IN_RT_CURR),0) FROM TTRN_DEPOSIT_RELEASE where CONTRACT_NO=? and TEMP_REQUEST_NO=?  AND TABLE_MOVE_STATUS=? AND RELEASE_TYPE='PRR') WHERE CONTRACT_NO=? AND TRANSACTION_NO=?
#UPDATE RSK_PREMIUM_DETAILS SET PRD_ALLOCATED_TILL_DATE=nvl(PRD_ALLOCATED_TILL_DATE,0)+? WHERE CONTRACT_NO=? AND TRANSACTION_NO=?
UPDATE_LOSS_RESERVE=UPDATE RSK_PREMIUM_DETAILS SET LRD_ALLOCATED_TILL_DATE=nvl(LRD_ALLOCATED_TILL_DATE,0)+(SELECT NVL(SUM(RL_AMOUNT_IN_RT_CURR),0) FROM  TTRN_DEPOSIT_RELEASE WHERE CONTRACT_NO=? AND TEMP_REQUEST_NO=? AND TABLE_MOVE_STATUS=? AND RELEASE_TYPE='LRR') WHERE CONTRACT_NO=? AND TRANSACTION_NO=?
###claim master
##claim.select.claim.claimmaster= SELECT DISTINCT TCD.CLAIM_NO,TO_CHAR (TCD.DATE_OF_LOSS, 'DD/MM/YYYY') AS DATE_OF_LOSS,TO_CHAR (TCD.CREATED_DATE, 'DD/MM/YYYY') AS CREATED_DATE,TCD.STATUS_OF_CLAIM,TCD.CONTRACT_NO,(TCD.TOTAL_AMT_PAID_TILL_DATE - TCD.LOSS_ESTIMATE_OS_OC) AS EDITVIEW,pm.Product_id,TPM.TMAS_PRODUCT_NAME,TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR (PM.Expiry_date, 'DD/MM/YYYY') Expiry_date,(select FIRST_NAME from personal_info Pi where CUSTOMER_TYPE='C' and pm.CEDING_COMPANY_ID=Pi.CUSTOMER_ID and pi.branch_code=pm.branch_code and amend_id=(Select max(Amend_id) from personal_info p where p.CUSTOMER_TYPE=pi.CUSTOMER_TYPE and p.customer_id=pi.customer_id and p.branch_code=pm.branch_code)) Customer_name , (select FIRST_NAME from personal_info Pi where CUSTOMER_TYPE='B' and pm.Broker_id=Pi.CUSTOMER_ID and pi.branch_code=pm.branch_code and amend_id=(Select max(Amend_id) from personal_info p where p.CUSTOMER_TYPE=pi.CUSTOMER_TYPE and p.customer_id=pi.customer_id and p.branch_code=pm.branch_code)) Broker_name,Pm.Proposal_no,Pm.layer_no FROM TTRN_CLAIM_DETAILS TCD,POSITION_MASTER PM,TMAS_PRODUCT_MASTER TPM WHERE TCD.Contract_No =Pm.Contract_No and TPM.Tmas_Product_id=pm.Product_id AND Pm.Amend_Id=(Select Max(Amend_Id) From Position_Master P Where P.Contract_No||P.LAYER_NO\=Pm.Contract_No||pm.LAYER_NO) ORDER BY CLAIM_NO DESC
claim.select.claim.claimmaster=SELECT DISTINCT TCD.CLAIM_NO,TO_CHAR (TCD.DATE_OF_LOSS, 'DD/MM/YYYY') AS DATE_OF_LOSS,TO_CHAR (TCD.CREATED_DATE, 'DD/MM/YYYY') AS CREATED_DATE,TCD.STATUS_OF_CLAIM,TCD.CONTRACT_NO,(TCD.TOTAL_AMT_PAID_TILL_DATE - TCD.LOSS_ESTIMATE_OS_OC) AS EDITVIEW,pm.Product_id,TPM.TMAS_PRODUCT_NAME,TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.Expiry_date, 'DD/MM/YYYY') Expiry_date,(SELECT COMPANY_NAME  FROM personal_info Pi WHERE     CUSTOMER_TYPE \= 'C' AND pm.CEDING_COMPANY_ID \= Pi.CUSTOMER_ID AND pi.branch_code \= pm.branch_code AND amend_id \=(SELECT MAX (Amend_id) FROM personal_info p WHERE     p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code)) Customer_name,(SELECT FIRST_NAME FROM personal_info Pi  WHERE     CUSTOMER_TYPE \= 'B' AND pm.Broker_id \= Pi.CUSTOMER_ID  AND pi.branch_code \= pm.branch_code AND amend_id \=  (SELECT MAX (Amend_id) FROM personal_info p WHERE     p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE    AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code)) Broker_name, Pm.Proposal_no,Pm.layer_no,PM.DEPT_ID FROM TTRN_CLAIM_DETAILS TCD, POSITION_MASTER PM, TMAS_PRODUCT_MASTER TPM WHERE      TCD.Contract_No \= Pm.Contract_No and nvl(tcd.layer_no,0)\=nvl(pm.layer_no,0) and Pm.branch_code\=? and TPM.BRANCH_CODE\=Pm.branch_code AND TPM.Tmas_Product_id \= pm.Product_id AND Pm.Amend_Id \= (SELECT MAX (Amend_Id) FROM Position_Master P WHERE P.Contract_No \= Pm.Contract_No and nvl(P.layer_no,0)\=nvl(pm.layer_no,0)) ORDER BY CLAIM_NO DESC
partial.claim.select.claim.claimmaster= select * from (SELECT DISTINCT TCD.CLAIM_NO,TO_CHAR (TCD.DATE_OF_LOSS, 'DD/MM/YYYY') AS DATE_OF_LOSS,TO_CHAR (TCD.CREATED_DATE, 'DD/MM/YYYY') AS CREATED_DATE,TCD.STATUS_OF_CLAIM,TCD.CONTRACT_NO,(TCD.TOTAL_AMT_PAID_TILL_DATE - TCD.LOSS_ESTIMATE_OS_OC) AS EDITVIEW,pm.Product_id,TPM.TMAS_PRODUCT_NAME,TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR (PM.Expiry_date, 'DD/MM/YYYY') Expiry_date,(SELECT COMPANY_NAME  FROM personal_info Pi WHERE     CUSTOMER_TYPE \= 'C' AND pm.CEDING_COMPANY_ID \= Pi.CUSTOMER_ID AND pi.branch_code \= pm.branch_code AND amend_id \=(SELECT MAX (Amend_id) FROM personal_info p WHERE     p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code)) Customer_name,(SELECT FIRST_NAME FROM personal_info Pi  WHERE     CUSTOMER_TYPE \= 'B' AND pm.Broker_id \= Pi.CUSTOMER_ID  AND pi.branch_code \= pm.branch_code AND amend_id \=  (SELECT MAX (Amend_id) FROM personal_info p WHERE     p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE    AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code)) Broker_name, Pm.Proposal_no,Pm.layer_no,PM.DEPT_ID FROM TTRN_CLAIM_DETAILS TCD, POSITION_MASTER PM, TMAS_PRODUCT_MASTER TPM WHERE      TCD.Contract_No \= Pm.Contract_No and nvl(tcd.layer_no,0)\=nvl(pm.layer_no,0) and Pm.branch_code\=? and TPM.BRANCH_CODE\=Pm.branch_code AND TPM.Tmas_Product_id \= pm.Product_id AND Pm.Amend_Id \= (SELECT MAX (Amend_Id) FROM Position_Master P WHERE P.Contract_No \= Pm.Contract_No and nvl(P.layer_no,0)\=nvl(pm.layer_no,0)) ORDER BY CLAIM_NO DESC) where  rownum<\=100 

#claim.select.getpaymentlist=SELECT PAID_AMOUNT_OC,p.CLAIM_NO,p.CONTRACT_NO,p.LAYER_NO,PAYMENT_REQUEST_NO,LOSS_ESTIMATE_REVISED_OC ,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,TO_CHAR(p.INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT,PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_DC,CLAIM_PAYMENT_NO,RESERVE_ID,SETTLEMENT_STATUS,t.RECEIPT_NO TRANSACTION_NO,Decode(r.TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT','ADJUSTMENT') TRANS_TYPE FROM TTRN_CLAIM_PAYMENT p left join TTRN_ALLOCATED_TRANSACTION t on t.CONTRACT_NO = p.CONTRACT_NO AND t.PAID_AMOUNT = p.PAID_AMOUNT_OC AND t.TYPE = 'C' left join TTRN_PAYMENT_RECEIPT r on t.RECEIPT_NO = r.PAYMENT_RECEIPT_NO  ORDER BY CLAIM_PAYMENT_NO DESC
#claim.select.getpaymentlist=SELECT  DISTINCT PAID_AMOUNT_OC,TCD.CLAIM_NO,TCD.CONTRACT_NO, PAYMENT_REQUEST_NO, LOSS_ESTIMATE_REVISED_OC,TO_CHAR(TCD.INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT, CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE, ADVICE_TREASURY,PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_DC, CLAIM_PAYMENT_NO,RESERVE_ID,SETTLEMENT_STATUS,t.RECEIPT_NO TRANSACTION_NO,DECODE (r.TRANS_TYPE,'PT', 'PAYMENT','RT', 'RECEIPT','ADJUSTMENT')TRANS_TYPE,pm.Product_id,TPM.TMAS_PRODUCT_NAME,TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR (PM.Expiry_date, 'DD/MM/YYYY') Expiry_date,(SELECT   FIRST_NAME FROM   personal_info Pi WHERE       CUSTOMER_TYPE = 'C' AND pm.CEDING_COMPANY_ID = Pi.CUSTOMER_ID AND pi.branch_code = pm.branch_code  AND amend_id =(SELECT   MAX (Amend_id) FROM   personal_info p WHERE       p.CUSTOMER_TYPE = pi.CUSTOMER_TYPE AND p.customer_id = pi.customer_id AND p.branch_code = pm.branch_code)) Customer_name,(SELECT   FIRST_NAME FROM   personal_info Pi  WHERE       CUSTOMER_TYPE = 'B' AND pm.Broker_id = Pi.CUSTOMER_ID  AND pi.branch_code = pm.branch_code AND amend_id = (SELECT   MAX (Amend_id) FROM   personal_info p WHERE       p.CUSTOMER_TYPE = pi.CUSTOMER_TYPE AND p.customer_id = pi.customer_id  AND p.branch_code = pm.branch_code))  Broker_name, Pm.Proposal_no,  Pm.layer_no FROM   TTRN_CLAIM_PAYMENT TCD, POSITION_MASTER PM, TMAS_PRODUCT_MASTER TPM, TTRN_ALLOCATED_TRANSACTION t,TTRN_PAYMENT_RECEIPT r WHERE       TCD.Contract_No = Pm.Contract_No AND NVL (tcd.layer_no, 0) = NVL (pm.layer_no, 0) AND Pm.branch_code = ? AND TPM.BRANCH_CODE = Pm.branch_code AND TPM.Tmas_Product_id = pm.Product_id AND Pm.Amend_Id = (SELECT   MAX (Amend_Id) FROM   Position_Master P WHERE   P.Contract_No = Pm.Contract_No AND NVL (P.layer_no, 0) = NVL (pm.layer_no, 0)) and t.CONTRACT_NO =TCD.CONTRACT_NO AND t.PAID_AMOUNT =TCD.PAID_AMOUNT_OC  AND t.TYPE = 'C' and t.RECEIPT_NO = r.PAYMENT_RECEIPT_NO ORDER BY   CLAIM_PAYMENT_NO DESC
claim.select.getpaymentlist=SELECT   DISTINCT PAID_AMOUNT_OC,TCD.CLAIM_NO,TCD.CONTRACT_NO, PAYMENT_REQUEST_NO, LOSS_ESTIMATE_REVISED_OC,TO_CHAR (TCD.INCEPTION_DATE, 'DD/MM/YYYY') AS INCEPTION_DT,  CLAIM_NOTE_RECOMM, PAYMENT_REFERENCE, ADVICE_TREASURY, PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_DC, CLAIM_PAYMENT_NO, RESERVE_ID,SETTLEMENT_STATUS,  pm.Product_id, TPM.TMAS_PRODUCT_NAME, TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR (PM.Expiry_date, 'DD/MM/YYYY') Expiry_date,  (SELECT   COMPANY_NAME FROM   personal_info Pi WHERE       CUSTOMER_TYPE \= 'C'  AND pm.CEDING_COMPANY_ID \= Pi.CUSTOMER_ID AND pi.branch_code \= pm.branch_code AND amend_id \= (SELECT   MAX (Amend_id)  FROM   personal_info p WHERE       p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code))  Customer_name,(SELECT   FIRST_NAME  FROM   personal_info Pi  WHERE       CUSTOMER_TYPE \= 'B'    AND pm.Broker_id \= Pi.CUSTOMER_ID  AND pi.branch_code \= pm.branch_code  AND amend_id \=  (SELECT   MAX (Amend_id)   FROM   personal_info p WHERE       p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id   AND p.branch_code \= pm.branch_code))   Broker_name,  Pm.Proposal_no, Pm.layer_no,PM.DEPT_ID  FROM   TTRN_CLAIM_PAYMENT TCD,   POSITION_MASTER PM, TMAS_PRODUCT_MASTER TPM WHERE      TCD.Contract_No \= Pm.Contract_No   AND NVL (tcd.layer_no, 0) \= NVL (pm.layer_no, 0)   AND Pm.branch_code \= ?  AND TPM.BRANCH_CODE \= Pm.branch_code  AND TPM.Tmas_Product_id \= pm.Product_id AND Pm.Amend_Id \=  (SELECT   MAX (Amend_Id)  FROM   Position_Master P   WHERE   P.Contract_No \= Pm.Contract_No AND NVL (P.layer_no, 0) \= NVL (pm.layer_no, 0)) ORDER BY   CLAIM_NO DESC
partial.claim.select.getpaymentlist=select * from (SELECT   DISTINCT PAID_AMOUNT_OC,TCD.CLAIM_NO,TCD.CONTRACT_NO, PAYMENT_REQUEST_NO, LOSS_ESTIMATE_REVISED_OC,TO_CHAR (TCD.INCEPTION_DATE, 'DD/MM/YYYY') AS INCEPTION_DT,  CLAIM_NOTE_RECOMM, PAYMENT_REFERENCE, ADVICE_TREASURY, PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_DC, CLAIM_PAYMENT_NO, RESERVE_ID,SETTLEMENT_STATUS,  pm.Product_id, TPM.TMAS_PRODUCT_NAME, TO_CHAR (PM.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR (PM.Expiry_date, 'DD/MM/YYYY') Expiry_date,  (SELECT   COMPANY_NAME FROM   personal_info Pi WHERE       CUSTOMER_TYPE \= 'C'  AND pm.CEDING_COMPANY_ID \= Pi.CUSTOMER_ID AND pi.branch_code \= pm.branch_code AND amend_id \= (SELECT   MAX (Amend_id)  FROM   personal_info p WHERE       p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code))  Customer_name,(SELECT   FIRST_NAME  FROM   personal_info Pi  WHERE       CUSTOMER_TYPE \= 'B'    AND pm.Broker_id \= Pi.CUSTOMER_ID  AND pi.branch_code \= pm.branch_code  AND amend_id \=  (SELECT   MAX (Amend_id)   FROM   personal_info p WHERE       p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id   AND p.branch_code \= pm.branch_code))   Broker_name,  Pm.Proposal_no, Pm.layer_no,PM.DEPT_ID  FROM   TTRN_CLAIM_PAYMENT TCD,   POSITION_MASTER PM, TMAS_PRODUCT_MASTER TPM WHERE      TCD.Contract_No \= Pm.Contract_No   AND NVL (tcd.layer_no, 0) \= NVL (pm.layer_no, 0)   AND Pm.branch_code \= ?  AND TPM.BRANCH_CODE \= Pm.branch_code  AND TPM.Tmas_Product_id \= pm.Product_id AND Pm.Amend_Id \=  (SELECT   MAX (Amend_Id)  FROM   Position_Master P   WHERE   P.Contract_No \= Pm.Contract_No AND NVL (P.layer_no, 0) \= NVL (pm.layer_no, 0)) ORDER BY   CLAIM_NO DESC)where  rownum<\=100
GET_END_DATE=select to_char(trunc(to_date(?,'DD/MM/YYYY'),'q'),'DD/MM/RRRR') endDate from dual
GET_END_DATE_YEAR=select case to_char(trunc(to_date(?,'DD/MM/YYYY'),'Q'),'Q') when '1' then to_char(trunc(to_date(?,'DD/MM/YYYY'),'YY'),'dd/mm/yyyy') when '2' then to_char(trunc(to_date(?,'DD/MM/YYYY'),'YY'),'dd/mm/yyyy')   else to_char(trunc(to_date(?,'DD/MM/YYYY'),'YY'),'dd/mm/yyyy')  end endDate from dual

GET_RETRO_PROCESSING=CALL RETRO_PROCESSING(?,?,?,?)
payment.select.getDirBroDtls.retro=select RETRO_CONTRACT_NUMBER,TRANSACTION_NO,RETROCESSIONAIRE,TO_CHAR (TRANSACTION_DATE, 'DD/MM/YYYY')TRANSACTION_DATE,'RE'TYPE, abs((NVL (NET_DUE_RCP, 0) - NVL (ALLOCATED_TILL_DATE, 0)))NETDUE,case sign(NVL (NET_DUE_RCP, 0) - NVL (ALLOCATED_TILL_DATE, 0)) when -1 then 'C' else 'P' end sign,(SELECT   COMPANY_NAME FROM   personal_info pi WHERE   pi.customer_id = RETROCESSIONAIRE AND pi.branch_code = A.BRANCH_CODE) CEDING_COMPANY_name from ttrn_retro_soa A where branch_code=? and RETRO_CURRENCY_ID=? AND CASE WHEN '63' = ? THEN A.RETROCESSIONAIRE ELSE A.RETRO_BROKER END = ?  AND (NVL (NET_DUE_RCP, 0) - NVL (ALLOCATED_TILL_DATE, 0)) !=0  ORDER BY RETRO_CONTRACT_NUMBER, TRANSACTION_NO,NET_DUE_RCP NULLS LAST
payment.update.retro.details=UPDATE TTRN_RETRO_SOA SET ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)+( ? )) WHERE RETRO_CONTRACT_NUMBER = ? AND TRANSACTION_NO = ?
payment.update.retro.status=UPDATE TTRN_RETRO_SOA SET ALLOCATION_STATUS\=? WHERE  (NVL(NET_DUE_RCP,'0')-NVL(ALLOCATED_TILL_DATE,'0'))\='0' AND RETRO_CONTRACT_NUMBER\=? AND TRANSACTION_NO\=?
payment.update.retro.payment=UPDATE TTRN_RETRO_SOA SET ALLOCATED_TILL_DATE=(NVL((ALLOCATED_TILL_DATE),0)-( ? )),ALLOCATION_STATUS='Pending' WHERE RETRO_CONTRACT_NUMBER = ? AND TRANSACTION_NO = ?
payment.get.retro.payment=SELECT (NVL (NET_DUE_RCP, 0) - NVL (ALLOCATED_TILL_DATE, 0)) NETDUE FROM TTRN_RETRO_SOA WHERE RETRO_CONTRACT_NUMBER \= ? AND TRANSACTION_NO \= ?
##PREMIUM DELETE
allocation.status=select COUNT(*) from  ttrn_allocated_transaction where transaction_no=? AND STATUS='Y'
retro.status=select COUNT(*) from ttrn_retro_prcl trp where transaction_no\=? 
retro.status1=select COUNT(*) from ttrn_retro_prcl trp where transaction_no=? AND process_id IS NOT NULL and trp.amend_id=(select max(amend_id) from ttrn_retro_prcl tr where trp.transaction_no=tr.transaction_no)
#get.count.prcl.processid=select count(*) from ttrn_retro_prcl c where amend_id=(select max(amend_id) from TTRN_RETRO_PRCL where contract_no= C.contract_no and TRANSACTION_NO=C.TRANSACTION_NO) and   PROCESS_ID is null and TRANSACTION_MONTH_YEAR between to_date(to_char(trunc(to_date(?,'DD/MM/YYYY'),'q'),'DD/MM/RRRR'),'DD/MM/YYYY') and to_date(?,'DD/MM/YYYY') AND BRANCH_CODE=? and RETROCESSIONAIRE != 64
get.count.prcl.processid=SELECT COUNT(*)  FROM TTRN_RETRO_PRCL S  WHERE AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RETRO_PRCL WHERE CONTRACT_NO= S.CONTRACT_NO AND TRANSACTION_NO=S.TRANSACTION_NO) AND   PROCESS_ID IS NULL AND TRANSACTION_MONTH_YEAR BETWEEN TO_DATE(?,'DD/MM/YYYY') AND TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE=? AND SOA_FREQUENCY IN(?) AND S.RETROCESSIONAIRE != 64
GET_REPORTING_PERIOD=SELECT SUBSTR(DATE_TYPE,1,1) QTYPE,(lpad(START_DATE,2,0) ||'/'||lpad(start_month,2,0)||'/'||  (TO_CHAR(TO_DATE(?,'DD/MM/YYYY'),'YYYY')-(END_YEAR-START_YEAR) )) startDate, (lpad(end_DATE,2,0) ||'/'||lpad(end_month,2,0) ||'/'|| TO_CHAR(TO_DATE(?,'DD/MM/YYYY'),'YYYY'))   endDate FROM  TMAS_REPORTING_PERIOD WHERE BRANCH_CODE=? AND (lpad(end_DATE,2,0) ||'/'||lpad(end_month,2,0))=TO_CHAR(TO_DATE(?,'DD/MM/YYYY'),'DD/MM')
#Cresta
GET_CRESTAID_LIST=SELECT CRESTA_ID,CRESTA_NAME FROM  TMAS_CRESTA_MASTER WHERE BRANCH_CODE=? AND STATUS='Y' AND TERITORY_CODE=?
GET_CRESTA_NAME_LIST=SELECT CRESTA_ID,CRESTA_NAME FROM  TMAS_CRESTA_MASTER WHERE BRANCH_CODE=? AND STATUS='Y' AND CRESTA_ID=?
GET_CURRENCY_SHORT_LIST=SELECT DISTINCT CM.CURRENCY_ID,CM.SHORT_NAME FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE\=? AND CM.COUNTRY_ID\=? and CM.STATUS\=? AND CM.AMEND_ID\=(select MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE BRANCH_CODE\=CM.BRANCH_CODE AND  COUNTRY_ID\=CM.COUNTRY_ID and STATUS\=CM.STATUS AND CURRENCY_ID\=CM.CURRENCY_ID) ORDER BY CURRENCY_ID
INSERT_CRESTA_DETAILS=INSERT INTO TTRN_CRESTAZONE_DETAILS_ARCH(CONTRACT_NO,PROPOSAL_NO,AMEND_ID,SUB_CLASS,CRESTA_ID,CRESTA_NAME,Currency,ACC_RISK,ACCUM_DATE,ENTRY_DATE,STATUS,BRANCH_CODE,TERITORY_CODE)VALUES(?,?,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),sysdate,'Y',?,?)
GET_CRESTA_DETAIL_LIST=SELECT SNO,CRESTA_ID,CRESTA_NAME,CURRENCY,ACC_RISK,TO_CHAR(ACCUM_DATE,'dd/mm/yyyy')ACCUM_DATE,TERITORY_CODE FROM TTRN_CRESTAZONE_DETAILS WHERE PROPOSAL_NO\=? and AMEND_ID\=? AND BRANCH_CODE\=? order by SNO
DELETE_CRESTA_DETAILS=DELETE FROM TTRN_CRESTAZONE_DETAILS_ARCH WHERE PROPOSAL_NO\=? AND AMEND_ID\=? AND BRANCH_CODE\=?
#MOVE_TO_CRESTA_MAIN_TABLE=INSERT INTO TTRN_CRESTAZONE_DETAILS(CONTRACT_NO,PROPOSAL_NO,AMEND_ID,SUB_CLASS,CRESTA_ID,CRESTA_NAME,Currency,ACC_RISK,ACCUM_DATE,ENTRY_DATE,STATUS,BRANCH_CODE,TERITORY_CODE)SELECT ?,PROPOSAL_NO,AMEND_ID,SUB_CLASS, CRESTA_ID,CRESTA_NAME,CURRENCY,ACC_RISK,ACCUM_DATE,sysdate,'Y',BRANCH_CODE,TERITORY_CODE FROM TTRN_CRESTAZONE_DETAILS_ARCH WHERE PROPOSAL_NO\=? and AMEND_ID\=? AND BRANCH_CODE\=?
MOVE_TO_CRESTA_MAIN_TABLE=INSERT INTO TTRN_CRESTAZONE_DETAILS(CONTRACT_NO,PROPOSAL_NO,AMEND_ID,SUB_CLASS,CRESTA_ID,CRESTA_NAME,Currency,ACC_RISK,ACCUM_DATE,ENTRY_DATE,STATUS,BRANCH_CODE,TERITORY_CODE,SNO)VALUES(?,?,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),SYSDATE,'Y',?,?,?)
GET_CRESTA_ARCH_DETAIL_LIST=SELECT CRESTA_ID,CRESTA_NAME,CURRENCY,ACC_RISK,TO_CHAR(ACCUM_DATE,'dd/mm/yyyy')ACCUM_DATE,TERITORY_CODE FROM TTRN_CRESTAZONE_DETAILS_ARCH WHERE PROPOSAL_NO=? and AMEND_ID=? AND BRANCH_CODE=?
#GET_CRESTA_DETAIL_COUNT=SELECT COUNT(*) FROM TTRN_CRESTAZONE_DETAILS_ARCH WHERE PROPOSAL_NO=? AND AMEND_ID=? AND BRANCH_CODE=?
GET_CRESTA_DETAIL_COUNT=SELECT COUNT(*) FROM TTRN_CRESTAZONE_DETAILS WHERE PROPOSAL_NO=? AND AMEND_ID=? AND BRANCH_CODE=?
DELETE_CRESTA_MAIN_DETAILS=DELETE FROM TTRN_CRESTAZONE_DETAILS WHERE PROPOSAL_NO\=? AND AMEND_ID\=? AND BRANCH_CODE\=?
CREATA_CONTRACT_UPDATE = UPDATE TTRN_CRESTAZONE_DETAILS SET CONTRACT_NO = ? WHERE PROPOSAL_NO=? AND AMEND_ID=? AND BRANCH_CODE=?
CRESTA_ID_CHECK = SELECT count(CRESTA_ID) CRESTA_ID FROM  TMAS_CRESTA_MASTER WHERE CRESTA_ID=? AND BRANCH_CODE=? AND STATUS='Y'
CRESTA_NAME_CHECK = SELECT CRESTA_NAME CRESTA_NAME FROM  TMAS_CRESTA_MASTER WHERE CRESTA_ID=? AND BRANCH_CODE=? AND STATUS='Y'
CRESTA_CURRENCY_CHECK=SELECT  CURRENCY_ID FROM CURRENCY_MASTER CM WHERE CM.SHORT_NAME\=? AND CM.BRANCH_CODE\=? AND CM.COUNTRY_ID\=?  and CM.STATUS\='Y' AND CM.AMEND_ID\=(select MAX(AMEND_ID) FROM CURRENCY_MASTER WHERE BRANCH_CODE\=CM.BRANCH_CODE AND  COUNTRY_ID\=CM.COUNTRY_ID and STATUS\=CM.STATUS AND SHORT_NAME\=CM.SHORT_NAME) ORDER BY CURRENCY_ID
CRESTA_TERRITORY_CHECK = select COUNTRY_ID from  COUNTRY_MASTER WHERE UPPER(COUNTRY_NAME)=UPPER(?) AND STATUS='Y' AND BRANCH_CODE=?


# BONUS FIELD#
GET_BONUS_LIST = select DETAIL_NAME,REMARKS  from CONSTANT_DETAIL where CATEGORY_ID=? and status=?
BONUS_ARCH_SELECT = SELECT * FROM TTRN_BONUS_ARCH WHERE PROPOSAL_NO =?  and BRANCH=? and TYPE=? ORDER BY LCB_ID
BONUS_MAIN_SELECT = SELECT PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,LCB_FROM,LCB_TO,LCB_PERCENTAGE,USERID,BRANCH,LCB_ID,TYPE,ENDORSEMENT_NO,SUB_CLASS,SYS_DATE,LAYERNO,QUOTA_SHARE,REMARKS,FIRST_PROFIT_COMM,FPC_DURATION_TYPE,SUB__PROFIT_COMM,SPC_DURATION_TYPE,SUB_SEC_CAL,REFERENCE_NO,SCALE_MAX_PART_PERCENT,FPC_TYPE,TO_CHAR(FPC_FIXED_DATE,'DD/MM/YYYY')FPC_FIXED_DATE FROM TTRN_BONUS TT WHERE PROPOSAL_NO =?  and BRANCH=? and TYPE=? AND LCB_TYPE=? AND ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_BONUS TB WHERE TT.PROPOSAL_NO=TB.PROPOSAL_NO AND TT.BRANCH=TB.BRANCH AND TT.TYPE= TB.TYPE AND TT.LCB_TYPE= TB.LCB_TYPE) ORDER BY LCB_ID
BONUS_MAIN_SELECT_REFERENCE = SELECT PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,LCB_FROM,LCB_TO,LCB_PERCENTAGE,USERID,BRANCH,LCB_ID,TYPE,ENDORSEMENT_NO,SUB_CLASS,SYS_DATE,LAYERNO,QUOTA_SHARE,REMARKS,FIRST_PROFIT_COMM,FPC_DURATION_TYPE,SUB__PROFIT_COMM,SPC_DURATION_TYPE,SUB_SEC_CAL,REFERENCE_NO,SCALE_MAX_PART_PERCENT,FPC_TYPE,TO_CHAR(FPC_FIXED_DATE,'DD/MM/YYYY')FPC_FIXED_DATE FROM TTRN_BONUS TT WHERE REFERENCE_NO =?  and BRANCH=? and TYPE=? AND LCB_TYPE=? AND ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_BONUS TB WHERE TT.REFERENCE_NO=TB.REFERENCE_NO AND TT.BRANCH=TB.BRANCH AND TT.TYPE= TB.TYPE AND TT.LCB_TYPE= TB.LCB_TYPE) ORDER BY LCB_ID
BONUS_MAIN_SELECT_LPC = SELECT PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,LCB_FROM,LCB_TO,LCB_PERCENTAGE,USERID,BRANCH,LCB_ID,TYPE,ENDORSEMENT_NO,SUB_CLASS,SYS_DATE,LAYERNO,QUOTA_SHARE,REMARKS,FIRST_PROFIT_COMM,FPC_DURATION_TYPE,SUB__PROFIT_COMM,SPC_DURATION_TYPE,SUB_SEC_CAL,REFERENCE_NO,SCALE_MAX_PART_PERCENT,FPC_TYPE,TO_CHAR(FPC_FIXED_DATE,'DD/MM/YYYY')FPC_FIXED_DATE FROM TTRN_BONUS TT WHERE PROPOSAL_NO =?  and BRANCH=? and TYPE=? AND ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_BONUS TB WHERE TT.PROPOSAL_NO=TB.PROPOSAL_NO AND TT.BRANCH=TB.BRANCH AND TT.TYPE= TB.TYPE) ORDER BY LCB_ID
BONUS_MAIN_SELECT_REFERENCE_LPC = SELECT PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,LCB_FROM,LCB_TO,LCB_PERCENTAGE,USERID,BRANCH,LCB_ID,TYPE,ENDORSEMENT_NO,SUB_CLASS,SYS_DATE,LAYERNO,QUOTA_SHARE,REMARKS,FIRST_PROFIT_COMM,FPC_DURATION_TYPE,SUB__PROFIT_COMM,SPC_DURATION_TYPE,SUB_SEC_CAL,REFERENCE_NO,SCALE_MAX_PART_PERCENT,FPC_TYPE,TO_CHAR(FPC_FIXED_DATE,'DD/MM/YYYY')FPC_FIXED_DATE FROM TTRN_BONUS TT WHERE REFERENCE_NO =?  and BRANCH=? and TYPE=? AND ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_BONUS TB WHERE TT.REFERENCE_NO=TB.REFERENCE_NO AND TT.BRANCH=TB.BRANCH AND TT.TYPE= TB.TYPE) ORDER BY LCB_ID
BONUS_MAIN_INSERT = INSERT INTO ttrn_bonus(PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,LCB_FROM,LCB_TO,LCB_PERCENTAGE,USERID,BRANCH,LCB_ID,TYPE,ENDORSEMENT_NO,SUB_CLASS,SYS_DATE,LAYERNO,REFERENCE_NO)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?)
BONUS_MAIN_DELETE = DELETE FROM ttrn_bonus WHERE PROPOSAL_NO \=? and BRANCH\=? and TYPE\=? and LAYERNO \=?
BONUS_MAIN_DELETE2 = DELETE FROM ttrn_bonus WHERE PROPOSAL_NO =?  and ENDORSEMENT_NO =? and BRANCH=? and TYPE=? and LAYERNO =?
BONUS_MAIN_DELETE3 = DELETE FROM ttrn_bonus WHERE REFERNCE_NO \=? and BRANCH\=? and TYPE\=? and LAYERNO \=?
BONUS_ARCH_DELETE = DELETE FROM ttrn_bonus_arch WHERE PROPOSAL_NO \=?  and BRANCH\=? and TYPE\=? LAYERNO\=?
BONUS_COUNT_ARCH = SELECT count(*) FROM TTRN_BONUS_ARCH WHERE PROPOSAL_NO \=?  and BRANCH\=? and TYPE\=?
BONUS_COUNT_MAIN = SELECT count(LCB_FROM) FROM TTRN_BONUS WHERE PROPOSAL_NO \=?  and BRANCH\=?  AND TYPE\=? and ENDORSEMENT_NO\=? and LAYERNO \=?
BONUS_COUNT_MAIN_REFERENCE = SELECT count(LCB_FROM) FROM TTRN_BONUS WHERE REFERENCE_NO \=?  and BRANCH\=?  AND TYPE\=? and ENDORSEMENT_NO\=? and LAYERNO \=?
BONUS_ARCH_INSERT = INSERT INTO ttrn_bonus_arch(PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,LCB_FROM,LCB_TO,LCB_PERCENTAGE,USERID,BRANCH,LCB_ID,TYPE,SUB_CLASS,SYS_DATE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)
BONUS_OLO_CONTRACT_DATA = SELECT * FROM TTRN_BONUS TT WHERE CONTRACT_NO =?  and BRANCH=? and and TYPE=? AND ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_BONUS TB WHERE TT.PROPOSAL_NO=TB.PROPOSAL_NO AND TT.BRANCH=TB.BRANCH) ORDER BY LCB_ID
BONUS_OLD_CONTRACT_NO = SELECT DISTINCT OLD_CONTRACTNO FROM POSITION_MASTER WHERE PROPOSAL_NO=? AND BRANCH_CODE=?
#BONUS_PREVIOUS_TYPE_CHECK = SELECT DISTINCT TYPE  FROM TTRN_BONUS WHERE PROPOSAL_NO =?  and BRANCH=?   and ENDORSEMENT_NO=?
#BONUS_PREVIOUS_TYPE_CHECK =select nvl((SELECT  type  FROM TTRN_BONUS WHERE PROPOSAL_NO =?  and BRANCH=?   and ENDORSEMENT_NO=?),'NA') from dual
BONUS_PREVIOUS_TYPE_CHECK =select nvl((SELECT  DISTINCT type  FROM TTRN_BONUS T WHERE PROPOSAL_NO =?  and BRANCH=? and LAYERNO =?  and ENDORSEMENT_NO=(SELECT MAX(ENDORSEMENT_NO) FROM  TTRN_BONUS TT WHERE TT.PROPOSAL_NO =T.PROPOSAL_NO  and TT.BRANCH=T.BRANCH )),'NA') from dual
BONUS_MAIN_INSERT_PTTY = INSERT INTO ttrn_bonus(PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,LCB_FROM,LCB_TO,LCB_PERCENTAGE,USERID,BRANCH,LCB_ID,TYPE,ENDORSEMENT_NO,SUB_CLASS,SYS_DATE,LAYERNO,QUOTA_SHARE,REMARKS,FIRST_PROFIT_COMM,FPC_DURATION_TYPE,SUB__PROFIT_COMM,SPC_DURATION_TYPE,SUB_SEC_CAL,REFERENCE_NO,SCALE_MAX_PART_PERCENT,FPC_TYPE,FPC_FIXED_DATE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,to_date(?,'DD/MM/YYYY'))

##Cresta master
GET_TERIRORY_DROP_DOWN = select COUNTRY_ID,COUNTRY_NAME from  COUNTRY_MASTER WHERE STATUS=? AND BRANCH_CODE=?
GET_CRESTA_LIST = SELECT tcm.CRESTA_SNO,tcm.TERITORY_CODE,cm.COUNTRY_NAME TERITORY_NAME, tcm.CRESTA_ID, tcm.CRESTA_NAME, tcm.BRANCH_CODE, to_char(tcm.ENTRY_DATE,'dd/mm/yyyy') ENTRY_DATE, DECODE(tcm.STATUS,'N','De Active','Y','Active') STATUS, tcm.USER_ID, tcm.REMARKS FROM tmas_cresta_master tcm,COUNTRY_MASTER cm WHERE tcm.BRANCH_CODE=? and tcm.TERITORY_CODE=cm.COUNTRY_ID and tcm.BRANCH_CODE=cm.BRANCH_CODE order by tcm.CRESTA_SNO desc
GET_CRESTA_EDIT = SELECT TERITORY_CODE, CRESTA_ID, CRESTA_NAME, BRANCH_CODE,  STATUS, REMARKS FROM tmas_cresta_master WHERE BRANCH_CODE=? and CRESTA_SNO=?
CRESTA_INSERT =Insert into TMAS_CRESTA_MASTER(TERITORY_CODE, CRESTA_ID, CRESTA_NAME, BRANCH_CODE,  ENTRY_DATE, STATUS, USER_ID, REMARKS, CRESTA_SNO)Values(?, ?, ?, ?,sysdate , ?, ?, ?, ?)
CRESTA_UPDATE = UPDATE TMAS_CRESTA_MASTER SET TERITORY_CODE=?, CRESTA_ID=?, CRESTA_NAME=?, BRANCH_CODE=?, ENTRY_DATE=SYSDATE, STATUS=?, USER_ID=?, REMARKS=?  WHERE  CRESTA_SNO=?
CRESTA_MAX_ID =select nvl(max(CRESTA_SNO),0)+1 from TMAS_CRESTA_MASTER WHERE BRANCH_CODE\=?

##Rate Master
#GET_RATE_LIST =SELECT SNO,SECTION_NO, ANNUAL_THRESHOLD_LIMIT, TYPE, RESIDENTIAL_STATUS, TDS_RATE, CESS1, CESS2, CESS3, TOTAL_TDS_RATE, EFFECTIVE_DATE, AMEND_ID FROM TMAS_TDSRATE T WHERE AMEND_ID = (SELECT MAX(AMEND_ID) FROM TMAS_TDSRATE TT WHERE TT.SNO=T.SNO) AND BRANCH_CODE=? ORDER BY SNO DESC
GET_RATE_LIST =SELECT  DISTINCT to_char(T.SYS_DATE,'dd/mm/yyyy') SYS_DATE ,to_char(T.EFFECTIVE_DATE,'dd/mm/yyyy') EFFECTIVE_DATE,(SELECT MAX(AMEND_ID) FROM TMAS_TDSRATE TT WHERE TT.BRANCH_CODE=T.BRANCH_CODE)MAX_AMENDID,T.AMEND_ID FROM TMAS_TDSRATE T  WHERE   T.BRANCH_CODE=? ORDER BY T.AMEND_ID DESC
GET_DROP_DOWN_TYPE_LIST = SELECT CATEGORY_DETAIL_ID,DETAIL_NAME FROM CONSTANT_DETAIL WHERE STATUS=? AND CATEGORY_ID=?
GET_RATE_EDIT = SELECT SNO,SECTION_NO, ANNUAL_THRESHOLD_LIMIT, TYPE, RESIDENTIAL_STATUS, TDS_RATE, CESS1, CESS2, CESS3, TOTAL_TDS_RATE, to_char(EFFECTIVE_DATE,'dd/mm/yyyy') EFFECTIVE_DATE,to_char(SYS_DATE,'dd/mm/yyyy') SYS_DATE, AMEND_ID FROM TMAS_TDSRATE T WHERE AMEND_ID \= (SELECT MAX(AMEND_ID) FROM TMAS_TDSRATE TT WHERE TT.BRANCH_CODE\=T.BRANCH_CODE) AND BRANCH_CODE\=? 
GET_RATE_VIEW = SELECT SNO,SECTION_NO, ANNUAL_THRESHOLD_LIMIT, TYPE, RESIDENTIAL_STATUS, TDS_RATE, CESS1, CESS2, CESS3, TOTAL_TDS_RATE, to_char(EFFECTIVE_DATE,'dd/mm/yyyy') EFFECTIVE_DATE, to_char(SYS_DATE,'dd/mm/yyyy') SYS_DATE,AMEND_ID FROM TMAS_TDSRATE T WHERE AMEND_ID = ? AND BRANCH_CODE=?
#RATE_MAX_AMEND_ID = SELECT MAX(AMEND_ID)+1 FROM TMAS_TDSRATE WHERE BRANCH_CODE=? AND TDS_SNO=?
RATE_INSERT_MAX_AMEND_ID = SELECT nvl(MAX(AMEND_ID)+1,0) FROM TMAS_TDSRATE WHERE BRANCH_CODE=?
#RATE_MAX_ID = SELECT NVL(MAX(TDS_SNO),0)+1 FROM TMAS_TDSRATE WHERE BRANCH_CODE=?
DATE_RATE_MASTER = select DISTINCT to_char(EFFECTIVE_DATE,'dd/mm/yyyy') EFFECTIVE_DATE from TMAS_TDSRATE T where   branch_code=? and AMEND_ID = (SELECT MAX(AMEND_ID) FROM TMAS_TDSRATE TT WHERE TT.BRANCH_CODE=T.BRANCH_CODE)
RATE_INSERT =Insert into TMAS_TDSRATE(SNO, SECTION_NO, ANNUAL_THRESHOLD_LIMIT, TYPE, RESIDENTIAL_STATUS, TDS_RATE, CESS1, CESS2, CESS3, TOTAL_TDS_RATE, EFFECTIVE_DATE, AMEND_ID, USER_ID, BRANCH_CODE,SYS_DATE)Values(?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,sysdate)
CONTRACT_NO_BASED_PROPOSAL =SELECT DISTINCT PROPOSAL_NO FROM POSITION_MASTER WHERE CONTRACT_NO\=? AND BRANCH_CODE\=? AND BASE_LAYER IS NULL


##Service Tax
GET_SERVICE_TAX=SELECT SERVICE_TAX,CESS1,CESS2,CESS3,CESS4 FROM TMAS_SERVICE_TAX_MASTER WHERE STATUS\='Y'


##PROFIT COMMISSION
GET_COMMISSION_LIST = SELECT DETAIL_NAME,REMARKS FROM CONSTANT_DETAIL WHERE  CATEGORY_ID=? AND STATUS=?
DELETE_PROFI_COMMISSSION_RAW = DELETE FROM TTRN_PROFIT_COMMISSION_ARCH WHERE PROPOSAL_NO\=? AND BRANCH_CODE\=? AND  S_NO\=?
INSERT_PROFIT_RAW = INSERT INTO TTRN_PROFIT_COMMISSION_ARCH(S_NO,MANAGEMENT_EXPENSES,LOSS,PROFIT_COMMISSION,PROFIT_MONTHS,PROFIT_QUARTERS,PROFIT_YEAR,FIRST_PROFIT_COM_AFTER,PROPOSAL_NO,CONTRACT_NO,ENDORSEMENT_NO,PRODUCT_ID,BRANCH_CODE,SUB_CLASS,ENTRY_DATE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)
PROFIT_ARCH_SELECT = SELECT S_NO, MANAGEMENT_EXPENSES, LOSS, PROFIT_COMMISSION, PROFIT_MONTHS, PROFIT_QUARTERS, PROFIT_YEAR,FIRST_PROFIT_COM_AFTER,C.REMARKS FROM TTRN_PROFIT_COMMISSION_ARCH P,CONSTANT_DETAIL C WHERE C.DETAIL_NAME \=P.PROFIT_MONTHS AND  P.PROPOSAL_NO\=? AND P.BRANCH_CODE\=?  order by P.S_NO 
PROFIT_MAIN_SELECT = SELECT S_NO, MANAGEMENT_EXPENSES, LOSS, PROFIT_COMMISSION, PROFIT_MONTHS, PROFIT_QUARTERS, PROFIT_YEAR,FIRST_PROFIT_COM_AFTER,C.REMARKS FROM TTRN_PROFIT_COMMISSION TT,CONSTANT_DETAIL C WHERE C.DETAIL_NAME \=TT.PROFIT_MONTHS AND  TT.PROPOSAL_NO\=? AND TT.BRANCH_CODE\=? AND TT.ENDORSEMENT_NO \= (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_PROFIT_COMMISSION TB WHERE TT.PROPOSAL_NO\=TB.PROPOSAL_NO AND TT.BRANCH_CODE\=TB.BRANCH_CODE)  order by TT.S_NO 
INSERT_PROFIT_MAIN =  INSERT INTO TTRN_PROFIT_COMMISSION(S_NO,MANAGEMENT_EXPENSES,LOSS,PROFIT_COMMISSION,PROFIT_MONTHS,PROFIT_QUARTERS,PROFIT_YEAR,FIRST_PROFIT_COM_AFTER,PROPOSAL_NO,CONTRACT_NO,ENDORSEMENT_NO,PRODUCT_ID,BRANCH_CODE,SUB_CLASS,ENTRY_DATE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)
PROFIT_MAIN_DELETE = DELETE FROM TTRN_PROFIT_COMMISSION WHERE PROPOSAL_NO=? AND BRANCH_CODE=?
PROFIT_MAIN_DELETE2 = DELETE FROM TTRN_PROFIT_COMMISSION WHERE PROPOSAL_NO=? AND BRANCH_CODE=? AND ENDORSEMENT_NO=?
PROFIT_COUNT_ARCH = SELECT count(*) FROM TTRN_PROFIT_COMMISSION_ARCH WHERE PROPOSAL_NO \=?  and BRANCH_CODE\=? 
PROFIT_COUNT_MAIN = SELECT count(S_NO) FROM TTRN_PROFIT_COMMISSION WHERE PROPOSAL_NO \=?  and BRANCH_CODE\=?  and ENDORSEMENT_NO\=?
PROFIT_MAX_SNO =SELECT nvl(MAX(S_NO)+1,1) FROM TTRN_PROFIT_COMMISSION_ARCH WHERE PROPOSAL_NO \=?  and BRANCH_CODE\=?
PROFIT_COMMISSION_EDIT =SELECT S_NO, MANAGEMENT_EXPENSES, LOSS, PROFIT_COMMISSION, PROFIT_MONTHS, PROFIT_QUARTERS, PROFIT_YEAR,FIRST_PROFIT_COM_AFTER FROM TTRN_PROFIT_COMMISSION_ARCH WHERE PROPOSAL_NO=? AND BRANCH_CODE=? AND  S_NO=?
PROFIT_UPDATE = UPDATE TTRN_PROFIT_COMMISSION_ARCH SET  MANAGEMENT_EXPENSES=?, LOSS=?, PROFIT_COMMISSION=?, PROFIT_MONTHS=?, PROFIT_QUARTERS=?, PROFIT_YEAR=?,FIRST_PROFIT_COM_AFTER=? WHERE PROPOSAL_NO=? AND BRANCH_CODE=? AND  S_NO=?
PROFIT_COMMISSION_DELETE =DELETE FROM TTRN_PROFIT_COMMISSION_ARCH WHERE PROPOSAL_NO \=?  and BRANCH_CODE\=? AND S_NO\=?
PROFIT_COMMISSION_ENABLE =SELECT RSK_PROFIT_COMM,RSK_COMBIN_SUB_CLASS FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE  RSK_PROPOSAL_NUMBER\=?)
PROFIT_COMMISSION_ENABLE_LOSS =SELECT RSK_LOSS_PART_CARRIDOR,RSK_LOSS_COMBIN_SUB_CLASS  FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE  RSK_PROPOSAL_NUMBER\=?)
PROFIT_COMMISSION_ENABLE_SLIDE =SELECT RSK_SLADSCALE_COMM,RSK_SLIDE_COMBIN_SUB_CLASS  FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE  RSK_PROPOSAL_NUMBER\=?)
PROFIT_COMMISSION_ENABLE_CRESTA =SELECT RSK_CREASTA_STATUS,RSK_CRESTA_COMBIN_SUB_CLASS  FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE  RSK_PROPOSAL_NUMBER\=?)


COMMIOSSION_DELETE =  DELETE FROM TTRN_COMMISSION_DETAILS WHERE PROPOSAL_NO=? AND BRANCH_CODE=? AND ENDORSEMENT_NO=?
COMMISSION_INSERT = INSERT INTO TTRN_COMMISSION_DETAILS(SNO,COMM_FROM,COMM_TO,PROFIT_COMM,PROPOSAL_NO,CONTRACT_NO,ENDORSEMENT_NO,PRODUCT_ID,BRANCH_CODE,SUB_CLASS,COMMISSION_TYPE,LOGIN_ID,ENTRY_DATE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)
COMMISSION_STATUS_UPDATE = UPDATE TTRN_COMMISSION_DETAILS SET CONTRACT_NO=?,PROFIT_COM_STATUS=? WHERE PROPOSAL_NO=? AND BRANCH_CODE=? AND ENDORSEMENT_NO=?
##RE INSTATEMENT POP UP
GET_REINSTATEMENT_LIST =    SELECT DETAIL_NAME,REMARKS FROM CONSTANT_DETAIL WHERE  CATEGORY_ID=? AND STATUS=?
REINSTATEMENT_ARCH_SELECT = SELECT REINSTATEMENT,REINST_NO,REINST_TYPE,AMOUNT_PERCENT,MIN_AMOUNT_PERCENT,MIN_TIME_PERCENT FROM TTRN_RIP_ARCH WHERE PROPOSAL_NO=? AND BRANCH_CODE=? ORDER BY REINST_NO
REINSTATEMENT_MAIN_SELECT_A = SELECT REINSTATEMENT,REINST_NO,REINST_TYPE,AMOUNT_PERCENT,MIN_AMOUNT_PERCENT,MIN_TIME_PERCENT FROM TTRN_RIP T WHERE PROPOSAL_NO=? AND BRANCH_CODE=? AND SECTION_TYPE='A' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RIP TRA WHERE TRA.PROPOSAL_NO=T.PROPOSAL_NO AND TRA.BRANCH_CODE=T.BRANCH_CODE) ORDER BY REINST_NO
REINSTATEMENT_MAIN_SELECT_B = SELECT DEPARTMENT_CLASS,ANNUAL_AGGRE_LAIBLE FROM TTRN_RIP T WHERE PROPOSAL_NO=? AND BRANCH_CODE=? AND SECTION_TYPE='B' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RIP TRA WHERE TRA.PROPOSAL_NO=T.PROPOSAL_NO AND TRA.BRANCH_CODE=T.BRANCH_CODE)
REINSTATEMENT_MAIN_SELECT_A_REFERENCE = SELECT REINSTATEMENT,REINST_NO,REINST_TYPE,AMOUNT_PERCENT,MIN_AMOUNT_PERCENT,MIN_TIME_PERCENT FROM TTRN_RIP T WHERE REFERENCE_NO=? AND BRANCH_CODE=? AND SECTION_TYPE='A' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RIP TRA WHERE TRA.REFERENCE_NO=T.REFERENCE_NO AND TRA.BRANCH_CODE=T.BRANCH_CODE) ORDER BY REINST_NO
REINSTATEMENT_MAIN_SELECT_B-REFERENCE = SELECT DEPARTMENT_CLASS,ANNUAL_AGGRE_LAIBLE FROM TTRN_RIP T WHERE REFERENCE_NO=? AND BRANCH_CODE=? AND SECTION_TYPE='B' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RIP TRA WHERE TRA.REFERENCE_NO=T.REFERENCE_NO AND TRA.BRANCH_CODE=T.BRANCH_CODE)
REINSTATEMENT_COUNT_MAIN = SELECT COUNT(REINST_NO) FROM TTRN_RIP WHERE PROPOSAL_NO=? AND BRANCH_CODE=? AND AMEND_ID=?
REINSTATEMENT_COUNT_MAIN_REFERENCE = SELECT COUNT(REINST_NO) FROM TTRN_RIP WHERE REFERENCE_NO=? AND BRANCH_CODE=? AND AMEND_ID=?
REINSTATEMENT_COUNT_ARCH = SELECT COUNT(REINST_NO) FROM TTRN_RIP_ARCH WHERE PROPOSAL_NO=? AND BRANCH_CODE=?
INSERT_REINSTATEMENT_RAW = INSERT INTO TTRN_RIP_ARCH(REINST_NO,REINST_TYPE,AMOUNT_PERCENT,MIN_AMOUNT_PERCENT,MIN_TIME_PERCENT,PROPOSAL_NO,BRANCH_CODE,AMEND_ID,SUB_CLASS,CONTRACT_NO,LAYER_NO,PRODUCT_ID,REINSTATEMENT,SYS_DATE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)
QUERY_ARCH_TABLE = DELETE FROM TTRN_RIP_ARCH WHERE PROPOSAL_NO=? AND BRANCH_CODE=?
INSERT_REINSTATEMENT_MAIN =INSERT INTO TTRN_RIP(REINST_NO,REINST_TYPE,AMOUNT_PERCENT,MIN_AMOUNT_PERCENT,MIN_TIME_PERCENT,PROPOSAL_NO,BRANCH_CODE,AMEND_ID,SUB_CLASS,CONTRACT_NO,PRODUCT_ID,LAYER_NO,REINSTATEMENT,SYS_DATE,SECTION_TYPE,REFERENCE_NO)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?)
INSERT_REINSTATEMENT_MAIN_B=INSERT INTO TTRN_RIP(DEPARTMENT_CLASS,ANNUAL_AGGRE_LAIBLE,PROPOSAL_NO,BRANCH_CODE,AMEND_ID,SUB_CLASS,CONTRACT_NO,PRODUCT_ID,LAYER_NO,SYS_DATE,SECTION_TYPE,REFERENCE_NO)VALUES(?,?,?,?,?,?,?,?,?,SYSDATE,?,?)
REINSTATEMENT_MAIN_DELETE =DELETE FROM TTRN_RIP WHERE PROPOSAL_NO=? AND BRANCH_CODE=?
REINSTATEMENT_MAIN_DELETE2 =DELETE FROM TTRN_RIP WHERE PROPOSAL_NO\=? AND AMEND_ID\=? AND BRANCH_CODE\=?

GET_UNDERWRITER_COUNTRY_LIST = SELECT COUNTRY_ID,COUNTRY_NAME FROM COUNTRY_MASTER C WHERE C.BRANCH_CODE=? AND STATUS=? AND  C.COUNTRY_ID=(SELECT COUNTRY FROM personal_info P WHERE P.CUSTOMER_ID=? AND P.COUNTRY=C.COUNTRY_ID AND P.BRANCH_CODE=C.BRANCH_CODE AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM personal_info PI WHERE PI.CUSTOMER_ID =P.CUSTOMER_ID AND PI.BRANCH_CODE = P.BRANCH_CODE))
GET_UNDERWRITER_COUNTRY_NAME = SELECT COUNTRY_NAME FROM COUNTRY_MASTER C WHERE C.BRANCH_CODE=? AND C.STATUS=? AND C.COUNTRY_ID=?
UPDATE_REINSTATEMENT_TOTAL_NO =UPDATE TTRN_RISK_COMMISSION R SET RSK_TOTAL_NO_REINSTATEMENTS\=? WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION T WHERE T.RSK_PROPOSAL_NUMBER\=R.RSK_PROPOSAL_NUMBER)
#SUM_COVER_LIMT =  SELECT SUM(RSK_COVER_LIMT) FROM TTRN_RSK_CLASS_LIMITS R WHERE RSK_PROPOSAL_NUMBER=? AND BRANCH_CODE=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RSK_CLASS_LIMITS L WHERE L.RSK_PROPOSAL_NUMBER=R.RSK_PROPOSAL_NUMBER AND L.BRANCH_CODE=R.BRANCH_CODE )
SUM_COVER_LIMT = WITH T1        AS (SELECT   SUM (RSK_COVER_LIMT) sum_rsk              FROM   TTRN_RSK_CLASS_LIMITS R             WHERE       R.RSK_PROPOSAL_NUMBER = ?                     AND R.BRANCH_CODE = ?                     AND R.RSK_LAYER_NO = ?                     and R.RSK_PRODUCTID = ?                     AND RSK_ENDORSEMENT_NO =                           (SELECT   MAX (RSK_ENDORSEMENT_NO)                              FROM   TTRN_RSK_CLASS_LIMITS L                             WHERE   L.RSK_PROPOSAL_NUMBER =      R.RSK_PROPOSAL_NUMBER   AND L.BRANCH_CODE = R.BRANCH_CODE   AND R.RSK_LAYER_NO = L.RSK_LAYER_NO and R.RSK_PRODUCTID = L.RSK_PRODUCTID)),     t2        AS (SELECT   COUNT ( * ) + 1 AS cnt              FROM   TTRN_RIP T             WHERE       T.BRANCH_CODE = ?                     AND T.PROPOSAL_NO = ?  and T.PRODUCT_ID =?       AND T.SECTION_TYPE='A'              AND T.AMEND_ID =                           (SELECT   MAX (AMEND_ID)                              FROM   TTRN_RIP P                             WHERE       P.BRANCH_CODE = T.BRANCH_CODE   AND P.PROPOSAL_NO = T.PROPOSAL_NO   AND P.LAYER_NO = T.LAYER_NO   and P.PRODUCT_ID = T.PRODUCT_ID AND T.SECTION_TYPE='A')) SELECT   sum_rsk * cnt SUM_VAL   FROM   t1, t2
CEDENT_BASED_MAX_CLAIM_NUMBER =SELECT nvl(MAX(CLAIM_NO),0) FROM TTRN_CLAIM_DETAILS WHERE CEDENT_CLAIM_NO\=? AND BRANCH_CODE\=?
UPDATE_MND_INSTALLMENT=UPDATE TTRN_MND_INSTALLMENTS TMI SET TRANSACTION_NO=? WHERE  CONTRACT_NO = ? AND LAYER_NO = ? and INSTALLMENT_NO=? AND ENDORSEMENT_NO = (SELECT   MAX (ENDORSEMENT_NO)  FROM   TTRN_MND_INSTALLMENTS  WHERE   CONTRACT_NO = TMI.CONTRACT_NO AND LAYER_NO = TMI.LAYER_NO and INSTALLMENT_NO=TMI.INSTALLMENT_NO)
GET_SUM_INSTALLMENT_BOOKED=SELECT SUM(MND_PREMIUM_OC) FROM  TTRN_MND_INSTALLMENTS TMI WHERE  CONTRACT_NO = ? AND LAYER_NO = ? AND TRANSACTION_NO IS NOT NULL  AND ENDORSEMENT_NO = (SELECT   MAX (ENDORSEMENT_NO) FROM   TTRN_MND_INSTALLMENTS  WHERE   CONTRACT_NO = TMI.CONTRACT_NO AND LAYER_NO = TMI.LAYER_NO AND TRANSACTION_NO IS NOT NULL)
GET_COUNT_INSTALLMENT_BOOKED=SELECT COUNT(*) FROM  TTRN_MND_INSTALLMENTS TMI WHERE  CONTRACT_NO \= ? AND LAYER_NO \= ? AND TRANSACTION_NO IS NOT NULL  AND ENDORSEMENT_NO \= (SELECT   MAX (ENDORSEMENT_NO) FROM   TTRN_MND_INSTALLMENTS  WHERE   CONTRACT_NO \= TMI.CONTRACT_NO AND LAYER_NO \= TMI.LAYER_NO AND TRANSACTION_NO IS NOT NULL)
UPDATE_INSTALLMENT_TRANSACTION=UPDATE TTRN_MND_INSTALLMENTS MA  SET TRANSACTION_NO\=(SELECT  TRANSACTION_NO FROM TTRN_MND_INSTALLMENTS TI  WHERE INSTALLMENT_NO\=MA.INSTALLMENT_NO  AND  PROPOSAL_NO \=MA.PROPOSAL_NO  AND   CONTRACT_NO\=MA.CONTRACT_NO AND TRANSACTION_NO IS NOT NULL  AND ENDORSEMENT_NO\=(SELECT  MAX(ENDORSEMENT_NO)-1  FROM  TTRN_MND_INSTALLMENTS  WHERE PROPOSAL_NO\=TI.PROPOSAL_NO))  WHERE  PROPOSAL_NO\=? AND ENDORSEMENT_NO\=(SELECT  MAX(ENDORSEMENT_NO)  FROM  TTRN_MND_INSTALLMENTS  WHERE PROPOSAL_NO\=MA.PROPOSAL_NO)
INSERT_TRACKING_DETAILS=INSERT INTO TMAS_SESSION_TRACKING(SNO,LOGIN_ID,SESSION_ID,PRODUCT_NAME,DEPARTMENT_NAME,PROCESS_NMAE,MENU_NAME,BRANCH_CODE,ENTRY_TIME)VALUES(NVL((SELECT MAX(SNO)+1 FROM TMAS_SESSION_TRACKING WHERE BRANCH_CODE\=?),0),?,?,?,?,?,?,?,SYSDATE)

#GET_TERRITORY_COUNTRY_LIST = SELECT distinct TC.COUNTRY_NAME,TC.COUNTRY_ID FROM TMAS_COUNTRY TC, TMAS_TERRITORY_COUNTRY_MAPPING TT WHERE TC.BRANCH_CODE IN (''{0}'') AND TT.TERRITORY_ID IN (''{1}'')  AND TT.COUNTRY_ID=TC.COUNTRY_ID AND TT.BRANCH_CODE=TC.BRANCH_CODE AND TT.AMEND_ID = (SELECT MAX(AMEND_ID) FROM TMAS_TERRITORY_COUNTRY_MAPPING M WHERE TT.BRANCH_CODE=M.BRANCH_CODE AND  TT.TERRITORY_ID=M.TERRITORY_ID)
GET_TERRITORY_COUNTRY_LIST = SELECT distinct TC.COUNTRY_NAME,TC.COUNTRY_ID FROM COUNTRY_MASTER TC, TMAS_TERRITORY_COUNTRY_MAPPING TT WHERE TC.BRANCH_CODE IN (''{0}'') AND TT.TERRITORY_ID IN (''{1}'')  AND TT.COUNTRY_ID=TC.COUNTRY_ID AND TT.BRANCH_CODE=TC.BRANCH_CODE AND TT.AMEND_ID = (SELECT MAX(AMEND_ID) FROM TMAS_TERRITORY_COUNTRY_MAPPING M WHERE TT.BRANCH_CODE=M.BRANCH_CODE AND  TT.TERRITORY_ID=M.TERRITORY_ID)

INSERT_TERRITORY_DETAILS=INSERT INTO TTRN_TERRITORY_ARCH(PROPOSAL_NO,CONTRACT_NO,LAYERNO,DEPARTMENTID,AMEND_ID,TERRITORY,COUNTRIES_INCLUDE,COUNTRIES_EXCLUDE,LOGIN_ID,SYS_DATE,BRANCH_CODE)VALUES(?,?,?,?,?,?,?,?,?,SYSDATE,?)

COMMISSION_TYPE_COUNT =SELECT COUNT(*) FROM TTRN_COMMISSION_DETAILS C WHERE PROPOSAL_NO\=? AND BRANCH_CODE\=? AND COMMISSION_TYPE\=? AND ENDORSEMENT_NO \= (SELECT MAX(ENDORSEMENT_NO) FROM  TTRN_COMMISSION_DETAILS T WHERE T.PROPOSAL_NO\=C.PROPOSAL_NO AND T.BRANCH_CODE\=C.BRANCH_CODE)
CONTRACT_UPDATE = UPDATE TTRN_BONUS T SET CONTRACT_NO = ? WHERE PROPOSAL_NO = ? AND BRANCH = ? AND ENDORSEMENT_NO=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_BONUS B WHERE B.PROPOSAL_NO = T.PROPOSAL_NO AND B.BRANCH = T.BRANCH)
COMMISSION_TYPE_LIST = SELECT SNO,COMM_FROM,COMM_TO,PROFIT_COMM FROM TTRN_COMMISSION_DETAILS C WHERE PROPOSAL_NO\=? AND BRANCH_CODE \= ? AND COMMISSION_TYPE\=? AND ENDORSEMENT_NO \= (SELECT MAX(ENDORSEMENT_NO) FROM  TTRN_COMMISSION_DETAILS T WHERE T.PROPOSAL_NO\=C.PROPOSAL_NO AND T.BRANCH_CODE\=C.BRANCH_CODE) 
GET_VALID_LOGIN_STATUS=SELECT LOGIN_ID,SESSION_ID,IP_ADDRESS,TO_char(LOGIN_DT, 'dd/mm/YYYY HH\:MI\:SS') LOGIN_DT,TO_char(LOGOUT_DT, 'dd/mm/YYYY HH\:MI\:SS')  LOGOUT_DT,REMARKS,STATUS,BRANCH_CODE FROM SESSION_MASTER WHERE LOGIN_ID\=? AND LOGOUT_DT IS NULL ORDER BY LOGIN_DT ASC
GET_VALID_USER_STATUS=SELECT COUNT(*) FROM SESSION_MASTER WHERE LOGIN_ID\=? AND SESSION_ID\=? AND LOGOUT_DT IS NULL
GET_SESSION_USER_DETAILS=select * from session_master where branch_code\=? and LOGOUT_DT is null and LOGIN_ID not in(?)
UPDATE_USER_STATUS=UPDATE LOGIN_MASTER SET STATUS\=? WHERE LOGIN_ID NOT IN(?) AND BRANCH_CODE\=?


UPDATE_CONTRACT_DETAILS =UPDATE TTRN_BONUS SET CONTRACT_NO\=? WHERE PROPOSAL_NO\=? AND BRANCH\=? AND TYPE\=? AND ENDORSEMENT_NO\=? and LAYERNO\=?


GET_DEPARTMENT_NO =SELECT  RSK_DEPTID FROM TTRN_RISK_DETAILS D WHERE  RSK_CONTRACT_NO\=? AND RSK_ENDORSEMENT_NO \= (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS T WHERE T.RSK_CONTRACT_NO\=D.RSK_CONTRACT_NO AND T.RSK_PROPOSAL_NUMBER \= D.RSK_PROPOSAL_NUMBER)

RETRO_DELETE_QUERY =DELETE FROM TTRN_INSURER_DETAILS WHERE PROPOSAL_NO\=? AND ENDORSEMENT_NO\=? 

GET_CLAIM_COUNT =    SELECT count(*)     FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO=? AND CLAIM_NO=?

## ACCUMULATION DATA
INSERT_ACCUMULATION_DATA = INSERT INTO TTRN_CLAIM_ACC(CLAIM_NO,CONTRACT_NO ,LAYER_NO,SUB_CLASS ,RISK_CODE ,AGGREGATE_CODE ,EVENT_CODE ,AMEND_ID ,CREATED_DATE ,BRANCH_CODE,LOGIN_ID ) VALUES (?,?,?,?,?,?,?,(SELECT NVL(MAX(AMEND_ID)+1,0) FROM TTRN_CLAIM_ACC WHERE CLAIM_NO=? AND CONTRACT_NO=?AND LAYER_NO=? AND SUB_CLASS=?),SYSDATE,?,?)
GET_EDIT_ACC_DATA =SELECT RISK_CODE,AGGREGATE_CODE,EVENT_CODE FROM TTRN_CLAIM_ACC TCA WHERE CLAIM_NO\=? AND CONTRACT_NO\=? AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_CLAIM_ACC TCS WHERE TCS.CLAIM_NO\=TCA.CLAIM_NO AND TCS.CONTRACT_NO\=TCA.CONTRACT_NO)

RE_INSTATEMENT_UPDATE =UPDATE TTRN_RIP SET CONTRACT_NO\=?,LAYER_NO\=? WHERE PROPOSAL_NO \= ? AND BRANCH_CODE\=? AND AMEND_ID\=?

GET_BASE_PROPOSAL_NO =select nvl((SELECT DISTINCT nvl(PROPOSAL_NO,0) FROM POSITION_MASTER P WHERE BASE_LAYER IS NULL AND CONTRACT_NO \= (SELECT distinct OLD_CONTRACTNO FROM POSITION_MASTER R WHERE PROPOSAL_NO\=? AND  AMEND_ID \=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER F WHERE F.PROPOSAL_NO\= R.PROPOSAL_NO ))  AND AMEND_ID \=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO \= P.PROPOSAL_NO )),0) PROPOSAL_NO from dual


#FACULTATIVE CHANGES:
UPDATE_RISK_DETAILS = UPDATE TTRN_RISK_DETAILS SET INWARD_BUS_TYPE=?,RSK_RECEIPT_PAYEMENT=?,RSK_LOC_ISSUED=?,RSK_LATITUDE =?,RSK_LONGITUDE=?,RSK_VESSAL_TONNAGE=?,RS_ENDORSEMENT_TYPE=?,RSK_LOC_BNK_NAME=?,RSK_LOC_CRDT_PRD=?,RSK_LOC_CRDT_AMT=?,RSK_LOC_BENFCRE_NAME=? WHERE RSK_PROPOSAL_NUMBER=? and RSK_ENDORSEMENT_NO=?
UPDATE_FAC_RISK_PROPOSAL = UPDATE TTRN_FAC_RISK_PROPOSAL SET COVER_LIMIT_PML_OC=?, COVER_LIMIT_PML_DC=?,COVER_LIMIT_PML_OS_OC=?,COVER_LIMIT_PML_OS_DC=?,GWPI_PML_OC=?,GWPI_PML_DC=?, GWPI_PML_OS_OC=?,GWPI_PML_OS_DC=?, PSL_OC=?, PSL_DC=?, PSL_OS_OC=?, PSL_OS_DC=?, PLL_OC=?, PLL_DC=?, PLL_OS_OC=?, PLL_OS_DC=?,  PBL_OC=?, PBL_DC=?, PBL_OS_OC=?, PBL_OS_DC=?, PML_100_OC=?, PML_100_DC=?, PML_OS_OC=?,   PML_OS_DC=?, SUM_INS_PML_OC=?, SUM_INS_PML_DC=? ,SUM_INS_PML_OS_OC=? ,SUM_INS_PML_OS_DC=? WHERE RSK_PROPOSAL_NUMBER=? and RSK_ENDORSEMENT_NO=?
RISK_COM_UPDATE =UPDATE TTRN_RISK_COMMISSION SET  RSK_LEAD_UW\=?,RSK_LEAD_UW_SHARE\=?,RSK_LEAD_UNDERWRITER_COUNTRY\=?,RSK_EXCLUSION\=?,RSK_CREASTA_STATUS\=?,RSK_DOC_STATUS \= ? WHERE RSK_PROPOSAL_NUMBER \= ? AND RSK_ENDORSEMENT_NO\=?


GET_SYS_DATE_COMPARE = SELECT TO_date(?, 'dd/mm/yyyy')-trunc(sysdate)   DAYS FROM dual
DOC_CON_UPDATE =UPDATE TTRN_DOC_UPLOAD_DETAILS SET ENDORSEMENT_NO\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE  PROPOSAL_NO \= ?),DEPTID\=(SELECT DEPT_ID FROM POSITION_MASTER P  WHERE  PROPOSAL_NO \= ? AND P.AMEND_ID \= (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO \= ?)) WHERE PROPOSAL_NO \=? AND ENDORSEMENT_NO\=?


GET_VERSION_CONTROL_DETAILS =SELECT  VERSION_NAME FROM TMAS_VERSION_CONTROL  WHERE VERSION_ID\=(SELECT MAX(VERSION_ID) FROM TMAS_VERSION_CONTROL) AND STATUS\='Y'
GET_BRANCH_CODE = SELECT BRANCH_CODE FROM LOGIN_MASTER WHERE LOGIN_ID=?



##client Master:

GET_BANK_CURRENCY_LIST=select CURRENCY_ID,CURRENCY_NAME from currency_master where status=? AND BRANCH_CODE=?
GET_BANK_TDSTYPE_LIST=SELECT TYPE AS CATEGORY_DETAIL_ID,DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID=? AND STATUS=?
GET_CLIENT_TYPE_LIST=SELECT TYPE AS CATEGORY_DETAIL_ID,DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID=? AND STATUS=?
GET_CLIENT_DETAILS=select p.CUSTOMER_ID,p.CUSTOMER_TYPE,c.DETAIL_NAME,p.FIRST_NAME,p.EMAIL,p.TELEPHONE,p.MOBILE,to_char(p.INCEPTION_DATE,'dd/mm/yyyy') INCEPTION_DATE,to_char(p.EFFECTIVE_DATE,'dd/mm/yyyy') EFFECTIVE_DATE from personal_info p,constant_detail c where p.CUSTOMER_TYPE =c.TYPE and c.CATEGORY_ID = '38' and  p.BRANCH_CODE=? and p.AMEND_ID=(select max(AMEND_ID) from personal_info i where i.CUSTOMER_ID=p.CUSTOMER_ID and i.BRANCH_CODE=p.BRANCH_CODE) ORDER BY CUSTOMER_ID DESC
#GET_CLIENT_DETAILS=select p.CUSTOMER_ID,p.CUSTOMER_TYPE,p.FIRST_NAME,p.EMAIL,p.TELEPHONE from personal_info p where p.BRANCH_CODE=? and p.AMEND_ID=(select max(AMEND_ID) from personal_info i where i.CUSTOMER_ID=p.CUSTOMER_ID and i.BRANCH_CODE=p.BRANCH_CODE)
INSERT_CLIENT_DETAILS=INSERT INTO PERSONAL_INFO (CUSTOMER_TYPE,FIRST_NAME,EFFECTIVE_DATE,ADDRESS1,ADDRESS2,CITY,COUNTRY,POBOX,EMAIL,TELEPHONE,MOBILE,FAX,PAN_NUMBER,INDIVIDUALYN,NON_RESIDENTYN,SPECIAL_RATE,STATUS,REMARKS,CON_DEPARTMENT,BANK_CURRENCY,BANK_ACC_NO,BANK_NAME,BANK_ACC_NAME,SWIFT_CODE,IFSC_CODE,BANK_REMARKS,BROKER_GROUP,ENTRY_DATE,INCEPTION_DATE,AMEND_ID,CUSTOMER_ID,BRANCH_CODE,LOGIN_ID, ESTB_YEAR, REG_NO, CIN_NO, RATING, RATING_AGENCY, LAST_RATING,COMPANY_NAME)VALUES (?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,sysdate,?,?,?,?,?,?,?,?,?,to_date(?,'dd/mm/yyyy'),?)
EDIT_CLIENT_DETAILS=SELECT CUSTOMER_TYPE,TITLE,FIRST_NAME,OCCUPATION,to_char(EFFECTIVE_DATE,'DD/MM/YYYY') EFFECTIVE_DATE,ADDRESS1,ADDRESS2,CITY,COUNTRY,POBOX,EMAIL,TELEPHONE,MOBILE,FAX,PAN_NUMBER,INDIVIDUALYN,NON_RESIDENTYN,SPECIAL_RATE,STATUS,REMARKS,CON_DEPARTMENT,BANK_CURRENCY,BANK_ACC_NO,BANK_NAME,BANK_ACC_NAME,SWIFT_CODE,IFSC_CODE,BANK_REMARKS,BROKER_GROUP,ESTB_YEAR, REG_NO, CIN_NO, RATING, RATING_AGENCY,to_char(LAST_RATING,'DD/MM/YYYY') LAST_RATING FROM PERSONAL_INFO PI WHERE PI.CUSTOMER_ID=? AND PI.BRANCH_CODE=? AND PI.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND BRANCH_CODE=PI.BRANCH_CODE)
EDIT_CLIENT_DETAILS_POP=SELECT CUSTOMER_TYPE,TITLE,FIRST_NAME,OCCUPATION,to_char(EFFECTIVE_DATE,'DD/MM/YYYY') EFFECTIVE_DATE,ADDRESS1,ADDRESS2,CITY,COUNTRY,POBOX,EMAIL,TELEPHONE,MOBILE,FAX,PAN_NUMBER,INDIVIDUALYN,NON_RESIDENTYN,SPECIAL_RATE,STATUS,REMARKS,CON_DEPARTMENT,BANK_CURRENCY,BANK_ACC_NO,BANK_NAME,BANK_ACC_NAME,SWIFT_CODE,IFSC_CODE,BANK_REMARKS,BROKER_GROUP,ESTB_YEAR, REG_NO, CIN_NO, RATING, RATING_AGENCY, LAST_RATING FROM PERSONAL_INFO PI WHERE PI.CUSTOMER_ID=? AND PI.BRANCH_CODE=? AND PI.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND BRANCH_CODE=PI.BRANCH_CODE)

INSERT_BANK_DETAILS=INSERT INTO BANK_DETAILS (CUSTOMER_ID,BANK_CURRENCY,BANK_ACC_NO,BANK_NAME,BANK_ACC_NAME,SWIFT_CODE,IFSC_CODE,REMARKS) VALUES(?,?,?,?,?,?,?,?)
UPDATE_CLIENT_DETAILS=UPDATE PERSONAL_INFO SET CUSTOMER_TYPE=?,FIRST_NAME=?,EFFECTIVE_DATE=to_date(?,'dd/mm/yyyy'),ADDRESS1=?,ADDRESS2=?,CITY=?,COUNTRY=?,POBOX=?,EMAIL=?,TELEPHONE=?,MOBILE=?,FAX=?,PAN_NUMBER=?,INDIVIDUALYN=?,NON_RESIDENTYN=?,SPECIAL_RATE=?,STATUS=?,REMARKS=?,CON_DEPARTMENT=?,BANK_CURRENCY=?,BANK_ACC_NO=?,BANK_NAME=?,BANK_ACC_NAME=?,SWIFT_CODE=?,IFSC_CODE=?,BANK_REMARKS=?,BROKER_GROUP=? WHERE CUSTOMER_ID=? AND BRANCH_CODE=?
EDIT_BANK_DETAILS=SELECT CUSTOMER_ID,BANK_CURRENCY,BANK_ACC_NO,BANK_NAME,BANK_ACC_NAME,SWIFT_CODE,IFSC_CODE,REMARKS FROM BANK_DETAILS WHERE CUSTOMER_ID=?
UPDATE_BANK_DETAILS=UPDATE BANK_DETAILS SET CUSTOMER_ID\=?,BANK_CURRENCY\=?,BANK_ACC_NO\=?,BANK_NAME\=?,BANK_ACC_NAME\=?,SWIFT_CODE\=?,IFSC_CODE\=?,REMARKS\=? WHERE CUSTOMER_ID\=?
GET_BROKERGROUP_DETAILS=select CUSTOMER_ID,FIRST_NAME from personal_info where CUSTOMER_TYPE='B' and BROKER_GROUP is  null
#GET_VERSION_CONTROL_DETAILS = SELECT DETAIL_NAME FROM constant_detail WHERE STATUS='Y' AND CATEGORY_ID='39'
GET_DOC_LIST= SELECT DOC_ID,DOC_DESC,ORG_FILE_NAME,OUR_FILE_NAME FROM TTRN_DOC_UPLOAD_DETAILS WHERE BRANCH_CODE=? AND STATUS=? AND PRODUCT_ID=?
DELETE_DOC_LIST=UPDATE TTRN_DOC_UPLOAD_DETAILS SET STATUS='D',DEL_LOGIN_ID=? WHERE BRANCH_CODE=? AND MODULE_TYPE=? AND PRODUCT_ID=? AND DOC_ID=? AND OUR_FILE_NAME=?


# PTTY SLIDE PREMIUM DETAILS
GET_SILDE_VALUE = SELECT   (case count(*) when  0  then 0 else  sum(nvl(LCB_PERCENTAGE,0))  end) as LCB_PERCENTAGE FROM   TTRN_BONUS T WHERE   CONTRACT_NO = ? AND PRODUCT_ID = ? AND BRANCH = ? and ?  between LCB_FROM and LCB_TO and TYPE=?  and PROPOSAL_NO=? AND T.ENDORSEMENT_NO =(SELECT   MAX (ENDORSEMENT_NO) FROM   TTRN_BONUS B WHERE       T.CONTRACT_NO = B.CONTRACT_NO AND T.PRODUCT_ID = B.PRODUCT_ID AND T.BRANCH = B.BRANCH)
GET_SILDE_VALUE_DEPT = SELECT   (case count(*) when  0  then 0 else  sum(nvl(LCB_PERCENTAGE,0))  end) as LCB_PERCENTAGE FROM   TTRN_BONUS T WHERE   CONTRACT_NO = ? AND PRODUCT_ID = ? AND BRANCH = ? and ?  between LCB_FROM and LCB_TO and TYPE=? and SUB_CLASS=? and PROPOSAL_NO=? AND T.ENDORSEMENT_NO =(SELECT   MAX (ENDORSEMENT_NO) FROM   TTRN_BONUS B WHERE       T.CONTRACT_NO = B.CONTRACT_NO AND T.PRODUCT_ID = B.PRODUCT_ID AND T.BRANCH = B.BRANCH)
GET_PAID_AMOUT = SELECT CD.CURRENCY CURRENCY_ID,T.PAID_AMOUNT_OC,(select SHORT_NAME from  CURRENCY_MASTER C where CURRENCY_ID=CD.CURRENCY and BRANCH_CODE=CD.BRANCH_CODE AND STATUS='Y' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID=CD.CURRENCY AND  CM.BRANCH_CODE=CD.BRANCH_CODE AND CM.STATUS='Y'))SHORT_NAME,'0'PremiumOC,'0' CLAIM_PAID_AMOUNT,'0' COMMISSION_PAID_OC,'0'CliamOSOC,'0' OSCLAIM_LOSSUPDATE_OC,'0' ACQUI_COST,'0' PROFIT_COMMISSION_OC,T.CONTRACT_NO CONTRACT_NO,TO_CHAR(T.INCEPTION_DATE,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,T.CLAIM_PAYMENT_NO TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME FROM TTRN_CLAIM_PAYMENT T,TTRN_CLAIM_DETAILS CD,TMAS_DEPARTMENT_MASTER D WHERE   T.CONTRACT_NO =? AND CD.CONTRACT_NO = T.CONTRACT_NO AND CD.CLAIM_NO = T.CLAIM_NO AND CD.BRANCH_CODE = ? AND TRUNC(T.INCEPTION_DATE) < = TO_DATE (?, 'DD/MM/YYYY')  AND D.TMAS_DEPARTMENT_ID=CD.SUB_CLASS AND   D.BRANCH_CODE = CD.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' order by CD.CURRENCY
GET_PREMIUM_DETAILS = SELECT   R.CURRENCY_ID,R.PREMIUM_QUOTASHARE_OC, R.PREMIUM_SURPLUS_OC,  R.XL_COST_OC,  R.PREMIUM_PORTFOLIOIN_OC, R.PREMIUM_PORTFOLIOOUT_OC,C.SHORT_NAME,R.COMMISSION_QUOTASHARE_OC ,R.COMMISSION_SURPLUS_OC,(PREMIUM_QUOTASHARE_OC+PREMIUM_SURPLUS_OC-XL_COST_OC+PREMIUM_PORTFOLIOIN_OC-PREMIUM_PORTFOLIOOUT_OC)PremiumOC,(CLAIMS_PAID_OC+ CLAIM_PORTFOLIO_OUT_OC+ CASH_LOSSPAID_OC- CASH_LOSS_CREDIT_OC- CLAIM_PORTFOLIOIN_OC) CLAIM_PAID_AMOUNT,(COMMISSION_QUOTASHARE_OC+COMMISSION_SURPLUS_OC)COMMISSION_PAID_OC,'0'PAID_AMOUNT_OC,CONTRACT_NO,C.CURRENCY_NAME  CURRENCY,TO_CHAR(R.TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,R.SUB_CLASS,R.TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME,(select nvl((SELECT  AMOUNT_OC  FROM TABLE(FN_RENEWAL_STATISTICS(? ,'','','',?,?,'OSLR')) where TRANSACTION_NO=R.TRANSACTION_NO),0) from dual)CliamOSOC,(nvl(COMMISSION_QUOTASHARE_OC,0)+nvl(COMMISSION_SURPLUS_OC,0)+nvl(OVERRIDER_AMT_OC,0)+nvl(SC_COMM_OC,0)+nvl(OTHER_COST_OC,0)+nvl(TAX_AMT_OC,0))ACQUI_COST,PROFIT_COMMISSION_OC,R.OSCLAIM_LOSSUPDATE_OC   FROM   CURRENCY_MASTER C, RSK_PREMIUM_DETAILS R,TMAS_DEPARTMENT_MASTER D WHERE       C.CURRENCY_ID IN (SELECT   CURRENCY_ID    FROM   rsk_premium_details WHERE   CONTRACT_NO = ?) AND C.BRANCH_CODE = ? AND C.BRANCH_CODE = R.BRANCH_CODE AND C.STATUS = 'Y'  AND R.CONTRACT_NO = ?  AND R.CURRENCY_ID = C.CURRENCY_ID AND TRUNC(R.TRANSACTION_MONTH_YEAR) <= TO_DATE (?, 'DD/MM/YYYY')  AND D.TMAS_DEPARTMENT_ID=R.SUB_CLASS AND   D.BRANCH_CODE = R.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' and C.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE = C.BRANCH_CODE AND CM.CURRENCY_ID =C.CURRENCY_ID AND  C.STATUS = 'Y') ORDER BY R.CURRENCY_ID
GET_PAID_AMOUT1 = SELECT CD.CURRENCY CURRENCY_ID,T.PAID_AMOUNT_OC,(select DISTINCT SHORT_NAME from  CURRENCY_MASTER C where CURRENCY_ID=CD.CURRENCY and BRANCH_CODE=CD.BRANCH_CODE AND STATUS='Y' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID=CD.CURRENCY AND  CM.BRANCH_CODE=CD.BRANCH_CODE AND CM.STATUS='Y'))SHORT_NAME,'0'PremiumOC,'0' CLAIM_PAID_AMOUNT,'0' COMMISSION_PAID_OC,'0'CliamOSOC,'0' OSCLAIM_LOSSUPDATE_OC,'0' ACQUI_COST,'0' PROFIT_COMMISSION_OC,T.CONTRACT_NO CONTRACT_NO,TO_CHAR(T.INCEPTION_DATE,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,T.CLAIM_PAYMENT_NO TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME FROM TTRN_CLAIM_PAYMENT T,TTRN_CLAIM_DETAILS CD,TMAS_DEPARTMENT_MASTER D WHERE   T.CONTRACT_NO =? AND CD.CONTRACT_NO = T.CONTRACT_NO AND CD.CLAIM_NO = T.CLAIM_NO AND CD.BRANCH_CODE = ? AND TRUNC(T.INCEPTION_DATE) < = TO_DATE (?, 'DD/MM/YYYY') AND CD.SUB_CLASS =? AND D.TMAS_DEPARTMENT_ID=CD.SUB_CLASS AND   D.BRANCH_CODE = CD.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' order by CD.CURRENCY
GET_PREMIUM_DETAILS1 = SELECT   R.CURRENCY_ID,R.PREMIUM_QUOTASHARE_OC, R.PREMIUM_SURPLUS_OC,  R.XL_COST_OC,  R.PREMIUM_PORTFOLIOIN_OC, R.PREMIUM_PORTFOLIOOUT_OC,C.SHORT_NAME,R.COMMISSION_QUOTASHARE_OC ,R.COMMISSION_SURPLUS_OC,(PREMIUM_QUOTASHARE_OC+PREMIUM_SURPLUS_OC-XL_COST_OC+PREMIUM_PORTFOLIOIN_OC-PREMIUM_PORTFOLIOOUT_OC)PremiumOC,(CLAIMS_PAID_OC+ CLAIM_PORTFOLIO_OUT_OC+ CASH_LOSSPAID_OC- CASH_LOSS_CREDIT_OC- CLAIM_PORTFOLIOIN_OC) CLAIM_PAID_AMOUNT,(COMMISSION_QUOTASHARE_OC+COMMISSION_SURPLUS_OC)COMMISSION_PAID_OC,'0'PAID_AMOUNT_OC,CONTRACT_NO,C.CURRENCY_NAME  CURRENCY,TO_CHAR(R.TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,R.SUB_CLASS,R.TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME,(select nvl((SELECT  AMOUNT_OC  FROM TABLE(FN_RENEWAL_STATISTICS(? ,'','','',?,?,'OSLR')) where TRANSACTION_NO=R.TRANSACTION_NO),0) from dual)CliamOSOC,(nvl(COMMISSION_QUOTASHARE_OC,0)+nvl(COMMISSION_SURPLUS_OC,0)+nvl(OVERRIDER_AMT_OC,0)+nvl(SC_COMM_OC,0)+nvl(OTHER_COST_OC,0)+nvl(TAX_AMT_OC,0))ACQUI_COST,PROFIT_COMMISSION_OC,R.OSCLAIM_LOSSUPDATE_OC  FROM   CURRENCY_MASTER C, RSK_PREMIUM_DETAILS R,TMAS_DEPARTMENT_MASTER D WHERE       C.CURRENCY_ID IN (SELECT   CURRENCY_ID    FROM   rsk_premium_details WHERE   CONTRACT_NO = ?) AND C.BRANCH_CODE = ? AND C.BRANCH_CODE = R.BRANCH_CODE AND C.STATUS = 'Y'  AND R.CONTRACT_NO = ?  AND R.CURRENCY_ID = C.CURRENCY_ID AND TRUNC(R.TRANSACTION_MONTH_YEAR) <= TO_DATE (?, 'DD/MM/YYYY') AND R.SUB_CLASS = ? AND D.TMAS_DEPARTMENT_ID=R.SUB_CLASS AND   D.BRANCH_CODE = R.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' and C.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE = C.BRANCH_CODE AND CM.CURRENCY_ID =C.CURRENCY_ID AND  C.STATUS = 'Y') ORDER BY R.CURRENCY_ID
#GET_PREMIUM_CLAIMS_OUT_VAL = SELECT TRANSACTION_NO,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY')  ACCOUNTING_PERIOD_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY')  STATEMENT_DATE,PREMIUM_SUBCLASS SUB_CLASS,OSCLAIM_LOSSUPDATE_OC,CURRENCY_ID  FROM RSK_PREMIUM_DETAILS CD  WHERE BRANCH_CODE=?  AND CONTRACT_NO=?  AND TRUNC(ACCOUNTING_PERIOD_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(STATEMENT_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(TRANSACTION_MONTH_YEAR)<=TO_DATE(?,'dd/mm/yyyy')  AND PREMIUM_CLASS =? AND TRANSACTION_NO=(  SELECT MAX(TRANSACTION_NO)  FROM RSK_PREMIUM_DETAILS  WHERE BRANCH_CODE=?  AND CONTRACT_NO=?  AND PREMIUM_SUBCLASS=CD.PREMIUM_SUBCLASS  and CURRENCY_ID = CD.CURRENCY_ID  AND PREMIUM_CLASS=CD.PREMIUM_CLASS AND TRUNC(ACCOUNTING_PERIOD_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(STATEMENT_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(TRANSACTION_MONTH_YEAR)<=TO_DATE(?,'dd/mm/yyyy')) order by CURRENCY_ID
#GET_PREMIUM_CLAIMS_OUT_VAL = SELECT TRANSACTION_NO,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE, SUB_CLASS,OSCLAIM_LOSSUPDATE_OC,  CURRENCY_ID, PREMIUM_SUBCLASS,SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME FROM RSK_PREMIUM_DETAILS CD WHERE BRANCH_CODE=? AND CONTRACT_NO=? AND TRUNC(ACCOUNTING_PERIOD_DATE)<=TO_DATE(?,'dd/mm/yyyy') AND TRUNC(STATEMENT_DATE)<=TO_DATE(?,'dd/mm/yyyy') AND TRUNC(TRANSACTION_MONTH_YEAR)<=TO_DATE(?,'dd/mm/yyyy') AND ACCOUNTING_PERIOD_DATE=(SELECT MAX(ACCOUNTING_PERIOD_DATE) FROM RSK_PREMIUM_DETAILS AP WHERE AP.BRANCH_CODE=CD.BRANCH_CODE AND CONTRACT_NO=CD.CONTRACT_NO AND SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME=CD.SUB_CLASS||CD.CURRENCY_ID||CD.PREMIUM_SUBCLASS||CD.SECTION_NAME) AND STATEMENT_DATE = (SELECT MAX(STATEMENT_DATE) FROM RSK_PREMIUM_DETAILS AP WHERE AP.BRANCH_CODE=CD.BRANCH_CODE AND CONTRACT_NO=CD.CONTRACT_NO AND SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME=CD.SUB_CLASS||CD.CURRENCY_ID||CD.PREMIUM_SUBCLASS||CD.SECTION_NAME) AND TRANSACTION_NO=(SELECT MAX(TRANSACTION_NO) FROM RSK_PREMIUM_DETAILS WHERE BRANCH_CODE=CD.BRANCH_CODE AND CONTRACT_NO=CD.CONTRACT_NO AND SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME=CD.SUB_CLASS||CD.CURRENCY_ID||CD.PREMIUM_SUBCLASS||CD.SECTION_NAME) ORDER BY CURRENCY_ID
GET_PREMIUM_CLAIMS_OUT_VAL = SELECT AMOUNT_OC OSCLAIM_LOSSUPDATE_OC, CURRENCY CURRENCY_ID FROM TABLE(FN_RENEWAL_STATISTICS(? ,'','','',?,?,'OSLR')) ORDER BY CURRENCY
GET_PREMIUM_CLAIMS_OUT_VAL1 =SELECT AMOUNT_OC OSCLAIM_LOSSUPDATE_OC, CURRENCY CURRENCY_ID FROM TABLE(FN_RENEWAL_STATISTICS(? ,'','','',?,?,'OSLR')) ORDER BY CURRENCY


##PROFIT COMMISSION

##LOSS
GET_PAID_AMOUT_LOSS = SELECT CD.CURRENCY CURRENCY_ID,T.PAID_AMOUNT_OC,(select SHORT_NAME from  CURRENCY_MASTER C where CURRENCY_ID=CD.CURRENCY and BRANCH_CODE=CD.BRANCH_CODE AND STATUS='Y' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID=CD.CURRENCY AND  CM.BRANCH_CODE=CD.BRANCH_CODE AND CM.STATUS='Y'))SHORT_NAME,'0'PremiumOC,'0' CLAIM_PAID_AMOUNT,'0' COMMISSION_PAID_OC,'0'CliamOSOC,'0' OSCLAIM_LOSSUPDATE_OC,'0' ACQUI_COST,'0' PROFIT_COMMISSION_OC,T.CONTRACT_NO CONTRACT_NO,TO_CHAR(T.INCEPTION_DATE,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,T.CLAIM_PAYMENT_NO TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME FROM TTRN_CLAIM_PAYMENT T,TTRN_CLAIM_DETAILS CD,TMAS_DEPARTMENT_MASTER D WHERE   T.CONTRACT_NO =? AND CD.CONTRACT_NO = T.CONTRACT_NO AND CD.CLAIM_NO = T.CLAIM_NO AND CD.BRANCH_CODE = ? AND TRUNC(T.INCEPTION_DATE) < = TO_DATE (?, 'DD/MM/YYYY')  AND D.TMAS_DEPARTMENT_ID=CD.SUB_CLASS AND   D.BRANCH_CODE = CD.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' ORDER BY CD.CURRENCY
GET_PREMIUM_DETAILS_LOSS = SELECT   R.CURRENCY_ID,R.PREMIUM_QUOTASHARE_OC, R.PREMIUM_SURPLUS_OC,  R.XL_COST_OC,  R.PREMIUM_PORTFOLIOIN_OC, R.PREMIUM_PORTFOLIOOUT_OC,C.SHORT_NAME,R.COMMISSION_QUOTASHARE_OC ,R.LPC_OC COMMISSION_SURPLUS_OC,(PREMIUM_QUOTASHARE_OC+PREMIUM_SURPLUS_OC-XL_COST_OC+PREMIUM_PORTFOLIOIN_OC-PREMIUM_PORTFOLIOOUT_OC)PremiumOC,(CLAIMS_PAID_OC+ CLAIM_PORTFOLIO_OUT_OC+ CASH_LOSSPAID_OC- CASH_LOSS_CREDIT_OC- CLAIM_PORTFOLIOIN_OC) CLAIM_PAID_AMOUNT,(COMMISSION_QUOTASHARE_OC+COMMISSION_SURPLUS_OC)COMMISSION_PAID_OC,'0'PAID_AMOUNT_OC,CONTRACT_NO,C.CURRENCY_NAME  CURRENCY,TO_CHAR(R.TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,R.SUB_CLASS,R.TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME,(select nvl((SELECT  AMOUNT_OC  FROM TABLE(FN_RENEWAL_STATISTICS(? ,'','','',?,?,'OSLR')) where TRANSACTION_NO=R.TRANSACTION_NO),0) from dual)CliamOSOC,(nvl(COMMISSION_QUOTASHARE_OC,0)+nvl(COMMISSION_SURPLUS_OC,0)+nvl(OVERRIDER_AMT_OC,0)+nvl(SC_COMM_OC,0)+nvl(OTHER_COST_OC,0)+nvl(TAX_AMT_OC,0))ACQUI_COST,PROFIT_COMMISSION_OC,R.OSCLAIM_LOSSUPDATE_OC   FROM   CURRENCY_MASTER C, RSK_PREMIUM_DETAILS R,TMAS_DEPARTMENT_MASTER D WHERE       C.CURRENCY_ID IN (SELECT   CURRENCY_ID    FROM   rsk_premium_details WHERE   CONTRACT_NO = ?) AND C.BRANCH_CODE = ? AND C.BRANCH_CODE = R.BRANCH_CODE AND C.STATUS = 'Y'  AND R.CONTRACT_NO = ?  AND R.CURRENCY_ID = C.CURRENCY_ID AND TRUNC(R.TRANSACTION_MONTH_YEAR) <= TO_DATE (?, 'DD/MM/YYYY')  AND D.TMAS_DEPARTMENT_ID=R.SUB_CLASS AND   D.BRANCH_CODE = R.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' and C.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE = C.BRANCH_CODE AND CM.CURRENCY_ID =C.CURRENCY_ID AND  C.STATUS = 'Y') ORDER BY R.CURRENCY_ID
GET_PAID_AMOUT_LOSS1 = SELECT CD.CURRENCY CURRENCY_ID,T.PAID_AMOUNT_OC,(select DISTINCT SHORT_NAME from  CURRENCY_MASTER C where CURRENCY_ID=CD.CURRENCY and BRANCH_CODE=CD.BRANCH_CODE AND STATUS='Y' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID=CD.CURRENCY AND  CM.BRANCH_CODE=CD.BRANCH_CODE AND CM.STATUS='Y'))SHORT_NAME,'0'PremiumOC,'0' CLAIM_PAID_AMOUNT,'0' COMMISSION_PAID_OC,'0'CliamOSOC,'0' OSCLAIM_LOSSUPDATE_OC,'0' ACQUI_COST,'0' PROFIT_COMMISSION_OC,T.CONTRACT_NO CONTRACT_NO,TO_CHAR(T.INCEPTION_DATE,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,T.CLAIM_PAYMENT_NO TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME FROM TTRN_CLAIM_PAYMENT T,TTRN_CLAIM_DETAILS CD,TMAS_DEPARTMENT_MASTER D WHERE   T.CONTRACT_NO =? AND CD.CONTRACT_NO = T.CONTRACT_NO AND CD.CLAIM_NO = T.CLAIM_NO AND CD.BRANCH_CODE = ? AND TRUNC(T.INCEPTION_DATE) < = TO_DATE (?, 'DD/MM/YYYY') AND CD.SUB_CLASS =? AND D.TMAS_DEPARTMENT_ID=CD.SUB_CLASS AND   D.BRANCH_CODE = CD.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' ORDER BY CD.CURRENCY
GET_PREMIUM_DETAILS_LOSS1 = SELECT   R.CURRENCY_ID,R.PREMIUM_QUOTASHARE_OC, R.PREMIUM_SURPLUS_OC,  R.XL_COST_OC,  R.PREMIUM_PORTFOLIOIN_OC, R.PREMIUM_PORTFOLIOOUT_OC,C.SHORT_NAME,R.COMMISSION_QUOTASHARE_OC ,R.LPC_OC COMMISSION_SURPLUS_OC,(PREMIUM_QUOTASHARE_OC+PREMIUM_SURPLUS_OC-XL_COST_OC+PREMIUM_PORTFOLIOIN_OC-PREMIUM_PORTFOLIOOUT_OC)PremiumOC,(CLAIMS_PAID_OC+ CLAIM_PORTFOLIO_OUT_OC+ CASH_LOSSPAID_OC- CASH_LOSS_CREDIT_OC- CLAIM_PORTFOLIOIN_OC) CLAIM_PAID_AMOUNT,(COMMISSION_QUOTASHARE_OC+COMMISSION_SURPLUS_OC)COMMISSION_PAID_OC,'0'PAID_AMOUNT_OC,CONTRACT_NO,C.CURRENCY_NAME  CURRENCY,TO_CHAR(R.TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,R.SUB_CLASS,R.TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME,(select nvl((SELECT  AMOUNT_OC  FROM TABLE(FN_RENEWAL_STATISTICS(? ,'','','',?,?,'OSLR')) where TRANSACTION_NO=R.TRANSACTION_NO),0) from dual)CliamOSOC,(nvl(COMMISSION_QUOTASHARE_OC,0)+nvl(COMMISSION_SURPLUS_OC,0)+nvl(OVERRIDER_AMT_OC,0)+nvl(SC_COMM_OC,0)+nvl(OTHER_COST_OC,0)+nvl(TAX_AMT_OC,0))ACQUI_COST,PROFIT_COMMISSION_OC,R.OSCLAIM_LOSSUPDATE_OC  FROM   CURRENCY_MASTER C, RSK_PREMIUM_DETAILS R,TMAS_DEPARTMENT_MASTER D WHERE       C.CURRENCY_ID IN (SELECT   CURRENCY_ID    FROM   rsk_premium_details WHERE   CONTRACT_NO = ?) AND C.BRANCH_CODE = ? AND C.BRANCH_CODE = R.BRANCH_CODE AND C.STATUS = 'Y'  AND R.CONTRACT_NO = ?  AND R.CURRENCY_ID = C.CURRENCY_ID AND TRUNC(R.TRANSACTION_MONTH_YEAR) <= TO_DATE (?, 'DD/MM/YYYY') AND R.SUB_CLASS = ? AND D.TMAS_DEPARTMENT_ID=R.SUB_CLASS AND   D.BRANCH_CODE = R.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' and C.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE = C.BRANCH_CODE AND CM.CURRENCY_ID =C.CURRENCY_ID AND  C.STATUS = 'Y') ORDER BY R.CURRENCY_ID
#GET_PREMIUM_CLAIMS_OUT_VAL_LOSS = SELECT TRANSACTION_NO,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY')  ACCOUNTING_PERIOD_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY')  STATEMENT_DATE, SUB_CLASS,OSCLAIM_LOSSUPDATE_OC,  CURRENCY_ID,PREMIUM_SUBCLASS  FROM RSK_PREMIUM_DETAILS CD  WHERE BRANCH_CODE=?  AND CONTRACT_NO=?  AND TRUNC(ACCOUNTING_PERIOD_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(STATEMENT_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(TRANSACTION_MONTH_YEAR)<=TO_DATE(?,'dd/mm/yyyy')  AND TRANSACTION_NO=(  SELECT MAX(TRANSACTION_NO) FROM RSK_PREMIUM_DETAILS  WHERE BRANCH_CODE=?  AND CONTRACT_NO=?  AND nvl(PREMIUM_SUBCLASS,0)=nvl(CD.PREMIUM_SUBCLASS,0)  and CURRENCY_ID = CD.CURRENCY_ID AND PREMIUM_CLASS=CD.PREMIUM_CLASS  AND TRUNC(ACCOUNTING_PERIOD_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(STATEMENT_DATE)<=TO_DATE(?,'dd/mm/yyyy') AND TRUNC(TRANSACTION_MONTH_YEAR)<=TO_DATE(?,'dd/mm/yyyy'))  AND ACCOUNTING_PERIOD_DATE=(SELECT MAX(ACCOUNTING_PERIOD_DATE)  FROM RSK_PREMIUM_DETAILS AP  WHERE AP.BRANCH_CODE=CD.BRANCH_CODE  AND CONTRACT_NO=CD.CONTRACT_NO  AND nvl(PREMIUM_SUBCLASS,0)=nvl(CD.PREMIUM_SUBCLASS,0)  and CURRENCY_ID = CD.CURRENCY_ID  AND PREMIUM_CLASS=CD.PREMIUM_CLASS  AND ACCOUNTING_PERIOD_DATE=CD.ACCOUNTING_PERIOD_DATE  AND STATEMENT_DATE=CD.STATEMENT_DATE  AND TRANSACTION_MONTH_YEAR=CD.TRANSACTION_MONTH_YEAR)  and STATEMENT_DATE = ( SELECT MAX(STATEMENT_DATE)  FROM RSK_PREMIUM_DETAILS AP  WHERE AP.BRANCH_CODE=CD.BRANCH_CODE  AND CONTRACT_NO=CD.CONTRACT_NO  AND nvl(PREMIUM_SUBCLASS,0)=nvl(CD.PREMIUM_SUBCLASS,0)  and CURRENCY_ID = CD.CURRENCY_ID  AND PREMIUM_CLASS=CD.PREMIUM_CLASS  AND ACCOUNTING_PERIOD_DATE=CD.ACCOUNTING_PERIOD_DATE  AND STATEMENT_DATE=CD.STATEMENT_DATE  AND TRANSACTION_MONTH_YEAR=CD.TRANSACTION_MONTH_YEAR)  order by CURRENCY_ID
#GET_PREMIUM_CLAIMS_OUT_VAL_LOSS =SELECT TRANSACTION_NO,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE, SUB_CLASS,OSCLAIM_LOSSUPDATE_OC,  CURRENCY_ID, PREMIUM_SUBCLASS,SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME FROM RSK_PREMIUM_DETAILS CD WHERE BRANCH_CODE=? AND CONTRACT_NO=? AND TRUNC(ACCOUNTING_PERIOD_DATE)<=TO_DATE(?,'dd/mm/yyyy') AND TRUNC(STATEMENT_DATE)<=TO_DATE(?,'dd/mm/yyyy') AND TRUNC(TRANSACTION_MONTH_YEAR)<=TO_DATE(?,'dd/mm/yyyy') AND ACCOUNTING_PERIOD_DATE=(SELECT MAX(ACCOUNTING_PERIOD_DATE) FROM RSK_PREMIUM_DETAILS AP WHERE AP.BRANCH_CODE=CD.BRANCH_CODE AND CONTRACT_NO=CD.CONTRACT_NO AND SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME=CD.SUB_CLASS||CD.CURRENCY_ID||CD.PREMIUM_SUBCLASS||CD.SECTION_NAME) AND STATEMENT_DATE = (SELECT MAX(STATEMENT_DATE) FROM RSK_PREMIUM_DETAILS AP WHERE AP.BRANCH_CODE=CD.BRANCH_CODE AND CONTRACT_NO=CD.CONTRACT_NO AND SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME=CD.SUB_CLASS||CD.CURRENCY_ID||CD.PREMIUM_SUBCLASS||CD.SECTION_NAME) AND TRANSACTION_NO=(SELECT MAX(TRANSACTION_NO) FROM RSK_PREMIUM_DETAILS WHERE BRANCH_CODE=CD.BRANCH_CODE AND CONTRACT_NO=CD.CONTRACT_NO AND SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME=CD.SUB_CLASS||CD.CURRENCY_ID||CD.PREMIUM_SUBCLASS||CD.SECTION_NAME) ORDER BY CURRENCY_ID
GET_PREMIUM_CLAIMS_OUT_VAL_LOSS =SELECT AMOUNT_OC OSCLAIM_LOSSUPDATE_OC, CURRENCY CURRENCY_ID FROM TABLE(FN_RENEWAL_STATISTICS(? ,'','','',?,?,'OSLR')) ORDER BY CURRENCY
#GET_PREMIUM_CLAIMS_OUT_VAL_LOSS1 = SELECT TRANSACTION_NO,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY')  ACCOUNTING_PERIOD_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY')  STATEMENT_DATE, SUB_CLASS,OSCLAIM_LOSSUPDATE_OC,  CURRENCY_ID,PREMIUM_SUBCLASS  FROM RSK_PREMIUM_DETAILS CD  WHERE BRANCH_CODE=?  AND CONTRACT_NO=?  AND TRUNC(ACCOUNTING_PERIOD_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(STATEMENT_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(TRANSACTION_MONTH_YEAR)<=TO_DATE(?,'dd/mm/yyyy')  AND CD.PREMIUM_CLASS =?  AND TRANSACTION_NO=(  SELECT MAX(TRANSACTION_NO) FROM RSK_PREMIUM_DETAILS  WHERE BRANCH_CODE=?  AND CONTRACT_NO=?  AND nvl(PREMIUM_SUBCLASS,0)=nvl(CD.PREMIUM_SUBCLASS,0)  and CURRENCY_ID = CD.CURRENCY_ID AND PREMIUM_CLASS=CD.PREMIUM_CLASS AND SUB_CLASS=CD.SUB_CLASS AND TRUNC(ACCOUNTING_PERIOD_DATE)<=TO_DATE(?,'dd/mm/yyyy')  AND TRUNC(STATEMENT_DATE)<=TO_DATE(?,'dd/mm/yyyy') AND TRUNC(TRANSACTION_MONTH_YEAR)<=TO_DATE(?,'dd/mm/yyyy'))  AND ACCOUNTING_PERIOD_DATE=(SELECT MAX(ACCOUNTING_PERIOD_DATE)  FROM RSK_PREMIUM_DETAILS AP  WHERE AP.BRANCH_CODE=CD.BRANCH_CODE  AND CONTRACT_NO=CD.CONTRACT_NO  AND nvl(PREMIUM_SUBCLASS,0)=nvl(CD.PREMIUM_SUBCLASS,0) AND SUB_CLASS=CD.SUB_CLASS and CURRENCY_ID = CD.CURRENCY_ID  AND PREMIUM_CLASS=CD.PREMIUM_CLASS  AND ACCOUNTING_PERIOD_DATE=CD.ACCOUNTING_PERIOD_DATE  AND STATEMENT_DATE=CD.STATEMENT_DATE  AND TRANSACTION_MONTH_YEAR=CD.TRANSACTION_MONTH_YEAR)  and STATEMENT_DATE = ( SELECT MAX(STATEMENT_DATE)  FROM RSK_PREMIUM_DETAILS AP  WHERE AP.BRANCH_CODE=CD.BRANCH_CODE  AND CONTRACT_NO=CD.CONTRACT_NO  AND nvl(PREMIUM_SUBCLASS,0)=nvl(CD.PREMIUM_SUBCLASS,0) AND SUB_CLASS=CD.SUB_CLASS and CURRENCY_ID = CD.CURRENCY_ID  AND PREMIUM_CLASS=CD.PREMIUM_CLASS  AND ACCOUNTING_PERIOD_DATE=CD.ACCOUNTING_PERIOD_DATE  AND STATEMENT_DATE=CD.STATEMENT_DATE  AND TRANSACTION_MONTH_YEAR=CD.TRANSACTION_MONTH_YEAR)  order by CURRENCY_ID
GET_PREMIUM_CLAIMS_OUT_VAL_LOSS1 =SELECT AMOUNT_OC OSCLAIM_LOSSUPDATE_OC, CURRENCY CURRENCY_ID FROM TABLE(FN_RENEWAL_STATISTICS(? ,'','','',?,?,'OSLR')) ORDER BY CURRENCY
GET_SHRT_NAME = SELECT DISTINCT SHORT_NAME  FROM CURRENCY_MASTER WHERE CURRENCY_ID =? and BRANCH_CODE =? AND STATUS ='Y'
GET_CURRENY_DET = SELECT DISTINCT C.SHORT_NAME, C.CURRENCY_ID FROM   CURRENCY_MASTER C  WHERE C.CURRENCY_ID IN  (select to_char(CURRENCY_ID) from rsk_premium_details R where CONTRACT_NO = ?   and R.TRANSACTION_MONTH_YEAR <= TO_DATE (?, 'DD/MM/YYYY') AND R.BRANCH_CODE=?  union select to_char(CURRENCY) from TTRN_CLAIM_DETAILS CD where CD.CONTRACT_NO = ?   and trunc(CD.CREATED_DATE) <= TO_DATE (?, 'DD/MM/YYYY') AND CD.BRANCH_CODE=?)   AND C.BRANCH_CODE = ? AND C.STATUS = 'Y' ORDER BY C.CURRENCY_ID
GET_CURRENY_DET1 =SELECT DISTINCT C.SHORT_NAME,C.CURRENCY_ID  FROM   CURRENCY_MASTER C  WHERE C.CURRENCY_ID IN  (select to_char(CURRENCY_ID) from rsk_premium_details R where CONTRACT_NO = ? and  R.SUB_CLASS = ?  and R.TRANSACTION_MONTH_YEAR <= TO_DATE (?, 'DD/MM/YYYY') AND R.BRANCH_CODE=?  union select to_char(CURRENCY) from TTRN_CLAIM_DETAILS CD where CD.CONTRACT_NO = ? and CD.SUB_CLASS = ?   and  trunc(CD.CREATED_DATE) <= TO_DATE (?, 'DD/MM/YYYY') AND CD.BRANCH_CODE=?)   AND C.BRANCH_CODE = ? AND C.STATUS = 'Y' ORDER BY C.CURRENCY_ID
GET_BASE_LAYER = SELECT NVL(BASE_LAYER,'0') BASE_LAYER,PROPOSAL_NO  FROM Position_Master P  WHERE CONTRACT_NO=? AND DEPT_ID= ?  AND AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO = P.CONTRACT_NO AND DEPT_ID = P.DEPT_ID  and PROPOSAL_NO=P.PROPOSAL_NO)
GET_SLIDE_COMM_VALUE = SELECT RSK_SLIDE_COMBIN_SUB_CLASS,RSK_SLADSCALE_COMM,RSK_PROFIT_COMM,RSK_COMBIN_SUB_CLASS,RSK_LOSS_PART_CARRIDOR,RSK_LOSS_COMBIN_SUB_CLASS FROM TTRN_RISK_COMMISSION P WHERE RSK_PROPOSAL_NUMBER\=? AND SUB_CLASS \=? AND RSK_ENDORSEMENT_NO \= (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION R WHERE R.RSK_PROPOSAL_NUMBER \= P.RSK_PROPOSAL_NUMBER and R.SUB_CLASS\= P.SUB_CLASS ) 
GET_DEPT_ID = SELECT DEPT_ID  FROM Position_Master P  WHERE PROPOSAL_NO=?  AND AMEND_ID = (SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = P.PROPOSAL_NO)
GET_SLIDE_COMM_VALUE1 = SELECT RSK_SLADSCALE_COMM,RSK_SLIDE_COMBIN_SUB_CLASS,RSK_PROFIT_COMM,RSK_COMBIN_SUB_CLASS,RSK_LOSS_PART_CARRIDOR,RSK_LOSS_COMBIN_SUB_CLASS FROM TTRN_RISK_COMMISSION P WHERE RSK_PROPOSAL_NUMBER=? and SUB_CLASS = ? AND RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION R WHERE R.RSK_PROPOSAL_NUMBER = P.RSK_PROPOSAL_NUMBER and R.SUB_CLASS= P.SUB_CLASS )
GET_SLIDE_COMM_VALUE2 = SELECT RSK_SLADSCALE_COMM,RSK_PROFIT_COMM FROM TTRN_RISK_COMMISSION P WHERE RSK_PROPOSAL_NUMBER=? and SUB_CLASS = ? AND RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION R WHERE R.RSK_PROPOSAL_NUMBER = P.RSK_PROPOSAL_NUMBER and R.SUB_CLASS= P.SUB_CLASS )
PREMIUM_QUOTA_SHARE = select nvl(sum(PREMIUM_QUOTASHARE_OC+PREMIUM_SURPLUS_OC),0) from rsk_premium_details where CONTRACT_NO\= ? 
GET_CONT_PREM = select nvl(RSK_EPI_OSOE_OC,0) from  TTRN_RISK_PROPOSAL TRP where RSK_PROPOSAL_NUMBER=(SELECT PROPOSAL_NO FROM POSITION_MASTER PM WHERE CONTRACT_NO=? AND DEPT_ID=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO=PM.CONTRACT_NO AND DEPT_ID=PM.DEPT_ID)) and TRP.BRANCH_CODE=?  and RSK_ENDORSEMENT_NO=(select max(RSK_ENDORSEMENT_NO) from TTRN_RISK_PROPOSAL p where p.RSK_PROPOSAL_NUMBER=TRP.RSK_PROPOSAL_NUMBER and p.BRANCH_CODE = TRP.BRANCH_CODE)
#GET_CONT_PREM = select nvl(RSK_EPI_OSOE_OC,0) from  TTRN_RISK_PROPOSAL TRP where RSK_PROPOSAL_NUMBER=(select PROPOSAL_NO from position_master PM where CONTRACT_NO=? and DEPT_ID=? and amend_id=(select max(amend_id) from position_master where CONTRACT_NO=pm.CONTRACT_NO and branch_code=? and DEPT_ID=pm.DEPT_ID) and CONTRACT_STATUS='A') and RSK_ENDORSEMENT_NO=(select max(RSK_ENDORSEMENT_NO) from TTRN_RISK_PROPOSAL where RSK_PROPOSAL_NUMBER=TRP.RSK_PROPOSAL_NUMBER)
#GET_CASH_LOSS_CREADIT = SELECT rownum sno ,CONTRACT_NO,CLAIM_NO,CLAIM_PAYMENT_NO,to_char(INCEPTION_DATE,'DD/MM/YYYY')INCEPTION_DATE,PAID_AMOUNT_OC,(select CURRENCY from TTRN_Claim_Details where CONTRACT_NO=TCP.CONTRACT_NO and  CLAIM_NO=TCP.CLAIM_NO) CURRENCY_ID FROM TTRN_CLAIM_PAYMENT TCP WHERE NVL(PAID_AMOUNT_OC,0)-NVL(CASH_LOSS_SETTLED_TILLDATE,0)>0  AND CONTRACT_NO=?
GET_CASH_LOSS_CREADIT = SELECT   ROWNUM sno, TCP.CONTRACT_NO, TCP.CLAIM_NO, CLAIM_PAYMENT_NO, TO_CHAR (TCP.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, NVL (PAID_AMOUNT_OC, 0) - NVL (CASH_LOSS_SETTLED_TILLDATE, 0)PAID_AMOUNT_OC,CURRENCY CURRENCY_ID  FROM   TTRN_CLAIM_PAYMENT TCP,TTRN_Claim_Details TCD WHERE   NVL (PAID_AMOUNT_OC, 0) - NVL (CASH_LOSS_SETTLED_TILLDATE, 0) > 0 AND TCP.CONTRACT_NO like substr(?, 0, length(?)-2)||'%' and SUB_CLASS=?  and TCD.CONTRACT_NO = TCP.CONTRACT_NO AND TCD.CLAIM_NO = TCP.CLAIM_NO
GET_CASH_LOSS_CREADIT1 = SELECT   ROWNUM sno, TCP.CONTRACT_NO, TCP.CLAIM_NO, CLAIM_PAYMENT_NO, TO_CHAR (TCP.INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, NVL (PAID_AMOUNT_OC, 0) - NVL (CASH_LOSS_SETTLED_TILLDATE, 0)PAID_AMOUNT_OC,CURRENCY CURRENCY_ID  FROM   TTRN_CLAIM_PAYMENT TCP,TTRN_Claim_Details TCD WHERE   NVL (PAID_AMOUNT_OC, 0) - NVL (CASH_LOSS_SETTLED_TILLDATE, 0) > 0  and TCD.CONTRACT_NO = TCP.CONTRACT_NO AND TCD.CLAIM_NO = TCP.CLAIM_NO
GET_CURRENCY_NAME = SELECT SHORT_NAME FROM  CURRENCY_MASTER CD WHERE BRANCH_CODE=? AND CURRENCY_ID=? AND STATUS='Y' AND AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER C WHERE C.BRANCH_CODE=CD.BRANCH_CODE AND C.CURRENCY_ID=CD.CURRENCY_ID AND C.STATUS='Y')
GET_PREMIUM_RESERVED_DETAILS=SELECT ROWNUM sno,CONTRACT_NO,TRANSACTION_NO,TO_CHAR (TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,CURRENCY_ID,(nvl(PREMIUMRESERVE_QUOTASHARE_OC,0)-nvl(PRD_ALLOCATED_TILL_DATE,0))PREMIUMRESERVE_QUOTASHARE_OC ,nvl(PRD_ALLOCATED_TILL_DATE,0)ALLOCATE_TILLDATE from RSK_PREMIUM_DETAILS where  (nvl(PREMIUMRESERVE_QUOTASHARE_OC,0))<>nvl(PRD_ALLOCATED_TILL_DATE,0) AND  CONTRACT_NO\=? and SUB_CLASS\=? and TRANSACTION_MONTH_YEAR<\=trunc(to_date(?,'DD/MM/YYYY')) 
GET_LOSS_RESERVED_DETAILS=SELECT ROWNUM sno,CONTRACT_NO,TRANSACTION_NO,TO_CHAR (TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,CURRENCY_ID,(nvl(LOSS_RESERVERETAINED_OC,0)-nvl(LRD_ALLOCATED_TILL_DATE,0))PREMIUMRESERVE_QUOTASHARE_OC ,nvl(LRD_ALLOCATED_TILL_DATE,0)ALLOCATE_TILLDATE from RSK_PREMIUM_DETAILS where  (nvl(LOSS_RESERVERETAINED_OC,0))<>nvl(LRD_ALLOCATED_TILL_DATE,0) AND  CONTRACT_NO\=? and SUB_CLASS\=? and TRANSACTION_MONTH_YEAR<\=trunc(to_date(?,'DD/MM/YYYY'))
GET_POP_UP_LOSS_PART=SELECT LCB_FROM,LCB_TO,LCB_PERCENTAGE    FROM   TTRN_BONUS T WHERE   CONTRACT_NO = ? AND PRODUCT_ID = ? AND BRANCH = ? and LCB_FROM<? and TYPE=? and SUB_CLASS=? AND T.ENDORSEMENT_NO =(SELECT   MAX (ENDORSEMENT_NO) FROM   TTRN_BONUS B WHERE       T.CONTRACT_NO = B.CONTRACT_NO AND T.PRODUCT_ID = B.PRODUCT_ID AND T.BRANCH = B.BRANCH AND T.SUB_CLASS=SUB_CLASS)
GET_POP_UP_LOSS_PART_GRE=SELECT LCB_FROM,LCB_TO,LCB_PERCENTAGE    FROM   TTRN_BONUS T WHERE   CONTRACT_NO = ? AND PRODUCT_ID = ? AND BRANCH = ? and ? >LCB_TO and TYPE=? and SUB_CLASS=? AND T.ENDORSEMENT_NO =(SELECT   MAX (ENDORSEMENT_NO) FROM   TTRN_BONUS B WHERE       T.CONTRACT_NO = B.CONTRACT_NO AND T.PRODUCT_ID = B.PRODUCT_ID AND T.BRANCH = B.BRANCH AND T.SUB_CLASS=SUB_CLASS) AND LCB_ID=(SELECT   MAX (LCB_ID) FROM   TTRN_BONUS B WHERE       T.CONTRACT_NO = B.CONTRACT_NO  AND T.PRODUCT_ID = B.PRODUCT_ID AND T.BRANCH = B.BRANCH AND T.SUB_CLASS=SUB_CLASS)
GET_POP_UP_LOSS_PART_LESS=SELECT LCB_FROM,LCB_TO,LCB_PERCENTAGE    FROM   TTRN_BONUS T WHERE   CONTRACT_NO = ? AND PRODUCT_ID = ? AND BRANCH = ? and ? <LCB_FROM and TYPE=? and SUB_CLASS=? AND T.ENDORSEMENT_NO =(SELECT   MAX (ENDORSEMENT_NO) FROM   TTRN_BONUS B WHERE       T.CONTRACT_NO = B.CONTRACT_NO AND T.PRODUCT_ID = B.PRODUCT_ID AND T.BRANCH = B.BRANCH AND T.SUB_CLASS=SUB_CLASS)AND LCB_ID=(SELECT   MIN (LCB_ID) FROM   TTRN_BONUS B WHERE       T.CONTRACT_NO = B.CONTRACT_NO  AND T.PRODUCT_ID = B.PRODUCT_ID AND T.BRANCH = B.BRANCH AND T.SUB_CLASS=SUB_CLASS)
# Slide Scale Commission
PREMIUM_CONTRACT_DETAILS =SELECT   RK.RSK_DEPTID, RK.RSK_CONTRACT_NO, RK.RSK_ENDORSEMENT_NO, PERSONAL.COMPANY_NAME COMPANY, RK.RSK_TREATYID, PI.FIRST_NAME || ' ' || PI.LAST_NAME BROKER, TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE, RK.RSK_PROPOSAL_NUMBER, RK.RSK_UWYEAR, RK.RSK_LAYER_NO, RK.RSK_ORIGINAL_CURR, (select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID\=RK.RSK_DEPTID and branch_code\=RK.branch_code  and TMAS_PRODUCT_ID\=RK.RSK_PRODUCTID)  TMAS_DEPARTMENT_NAME   FROM   TTRN_RISK_DETAILS RK, PERSONAL_INFO PERSONAL, PERSONAL_INFO PI  WHERE       RK.RSK_CONTRACT_NO \= ? AND RK.RSK_CEDINGID \= PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE \= 'C' AND PERSONAL.BRANCH_CODE \= ? AND PERSONAL.AMEND_ID \=       (SELECT   MAX (AMEND_ID)          FROM   PERSONAL_INFO         WHERE   CUSTOMER_ID \= PERSONAL.CUSTOMER_ID        AND BRANCH_CODE \= PERSONAL.BRANCH_CODE) AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND PI.CUSTOMER_TYPE \= 'B' AND PI.BRANCH_CODE \= ? AND PI.AMEND_ID \=       (SELECT   MAX (AMEND_ID)          FROM   PERSONAL_INFO         WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID        AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO)        FROM   TTRN_RISK_DETAILS       WHERE   RSK_CONTRACT_NO \= ?) and RK.RSK_PROPOSAL_NUMBER\=?
#SLIDE_COMM_INSERT = INSERT INTO TTRN_PRM_SLIDE_SCL_COMM( PREM_OC ,CLAIM_PAID_OC ,CLAIM_OS_OC ,CLAIM_RATIO_OC ,SLIDE_SCLE_COM_OC , COMM_PAID_TIL_DATE_OC ,SLIDE_SCLE_ADJ_OC ,CURRENCY_ID ,EXCHANGE_RATE,CONTRACT_NO ,BRANCH_CODE ,DEPT_ID , TRANSACTION_DT ,TRANSACTION_NO ,LOGIN_ID,PRODUCT_ID,INCEPTION_DATE,AMEND_ID)VALUES (?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,SYSDATE,?)
#SELECT_EDIT_FIELD_VALUES =select PREM_OC ,CLAIM_PAID_OC ,CLAIM_OS_OC ,CLAIM_RATIO_OC ,SLIDE_SCLE_COM_OC , COMM_PAID_TIL_DATE_OC ,SLIDE_SCLE_ADJ_OC ,ACQ_COST_BROKR,MANAGMT_EXP,PRFT_LOSS_FRWD,OTH_ARJ,TRTY_RES_AFTR_ADJ,PROFIT_RATIO,LOSS_RATIO,PROFIT_COMM,SUP_PROFIT_COMM,PROFIT_COMM_ADJ,SC.CURRENCY_ID ,EXCHANGE_RATE,CLAIM_PAID_RATIO_OC,ADJTOOUT_OC,(SELECT SHORT_NAME  FROM  CURRENCY_MASTER CM WHERE  SC.CURRENCY_ID\=CM.CURRENCY_ID AND SC.BRANCH_CODE\=CM.BRANCH_CODE AND CM.STATUS\='Y' AND CM.AMEND_ID \=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER M WHERE M.CURRENCY_ID\=CM.CURRENCY_ID AND M.BRANCH_CODE\=CM.BRANCH_CODE AND M.STATUS\='Y') ) SHORT_NAME   from TTRN_PRM_SLIDE_SCL_COMM  SC  where TRANSACTION_NO\=? AND   SC.TRANSACTION_DT\=to_date(?,'dd/mm/yyyy') AND SC.BRANCH_CODE\=? and SC.PRODUCT_ID\=? and SC.CONTRACT_NO\=? and SC.DEPT_ID\=?   and SC.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_PRM_SLIDE_SCL_COMM C WHERE C.TRANSACTION_NO\=SC.TRANSACTION_NO AND C.CONTRACT_NO\=SC.CONTRACT_NO)  

#SLIDE_COMM_DELETE = DELETE FROM TTRN_PRM_SLIDE_SCL_COMM WHERE TRANSACTION_NO=? and TRANSACTION_DT=to_date(?,'dd/mm/yyyy') and BRANCH_CODE=? and PRODUCT_ID=? and CONTRACT_NO=? and DEPT_ID=?
#SLIDE_COMM_UPDATE =UPDATE TTRN_PRM_SLIDE_SCL_COMM SET TRANSACTION_NO\=? WHERE CONTRACT_NO\=? AND BRANCH_CODE\=? AND PRODUCT_ID\=? AND DEPT_ID\=? and TRANSACTION_DT\=?
#SLIDE_MAX_AMEND_ID = SELECT nvl(MAX(AMEND_ID)+1,0) FROM TTRN_PRM_SLIDE_SCL_COMM WHERE TRANSACTION_NO=? and TRANSACTION_DT=to_date(?,'dd/mm/yyyy') and BRANCH_CODE=? and PRODUCT_ID=? and CONTRACT_NO=? and DEPT_ID=?
CANCEL_PROPOSAL = UPDATE POSITION_MASTER pm SET CONTRACT_STATUS\='C' , EDIT_MODE\='N'  WHERE PROPOSAL_NO\=?   and amend_id\=(select max(amend_id) from position_master p where p.PROPOSAL_NO\=pm.PROPOSAL_NO )
CANCEL_OLD_PROPOSAL =UPDATE POSITION_MASTER pm SET RENEWAL_STATUS\='1' WHERE PROPOSAL_NO\=?   and amend_id\=(select max(amend_id) from position_master p where p.PROPOSAL_NO\=pm.PROPOSAL_NO )

GET_RETRO_TYPE =SELECT DISTINCT RSK_RETRO_TYPE FROM TTRN_RISK_DETAILS R WHERE R.RSK_PROPOSAL_NUMBER \= ? AND R.BRANCH_CODE \= ? AND RSK_ENDORSEMENT_NO \= (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS D WHERE D.RSK_PROPOSAL_NUMBER \= R.RSK_PROPOSAL_NUMBER AND D.BRANCH_CODE \= R.BRANCH_CODE)
INCLUSION_EXCLUSION_INSERT=INSERT INTO TTRN_IE_MODULE(PROPOSAL_NO,CONTRACT_NO,LAYER_NO,TRANSACTION_NO,ITEM_NO,ITEM_TYPE,ITEM_INCLUSION_EXCLUSION,AMEND_ID,BRANCH_CODE,EEFECTIVE_DATE,SYS_DATE,LOGIN_ID)VALUES(?,?,?,?,?,?,?,?,?,to_date(?,'DD/MM/YYYY'),SYSDATE,?)
GET_INCLUSIONEX_LIST=SELECT DISTINCT PROPOSAL_NO,CONTRACT_NO,LAYER_NO,TRANSACTION_NO,TO_CHAR(EEFECTIVE_DATE,'DD/MM/YYYY')EEFECTIVE_DATE FROM TTRN_IE_MODULE WHERE PROPOSAL_NO=?  AND BRANCH_CODE=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_IE_MODULE TI WHERE PROPOSAL_NO=?  AND BRANCH_CODE=TI.BRANCH_CODE)
DUPLICATE_COUNT_CHECK =SELECT COUNT(PROPOSAL_NO) FROM  POSITION_MASTER WHERE UW_YEAR\=? AND BRANCH_CODE\=? and PRODUCT_ID\=? and RSK_DUMMY_CONTRACT\=? and PROPOSAL_STATUS\='A' and CONTRACT_STATUS\='A'

GET_SIGN_SHARE_PRODUCT1=select nvl(SHARE_SIGNED,0) from ttrn_fac_risk_proposal rk where RSK_PROPOSAL_NUMBER=? and RSK_ENDORSEMENT_NO=(select max(RSK_ENDORSEMENT_NO) from ttrn_fac_risk_proposal where RSK_PROPOSAL_NUMBER=rk.RSK_PROPOSAL_NUMBER)
GET_SIGN_SHARE_PRODUCT23=select RSK_SHARE_SIGNED from ttrn_risk_proposal rk where RSK_PROPOSAL_NUMBER=? and RSK_ENDORSEMENT_NO=(select max(RSK_ENDORSEMENT_NO) from ttrn_risk_proposal where RSK_PROPOSAL_NUMBER=rk.RSK_PROPOSAL_NUMBER)
GET_GNPI_COUNT = SELECT COUNT(RS_ENDORSEMENT_TYPE) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER=? AND RSK_CONTRACT_NO=? AND RS_ENDORSEMENT_TYPE=?
GET_GNPI_COUNT_PRE = SELECT COUNT(RS_ENDORSEMENT_TYPE) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=? AND RSK_LAYER_NO=? AND RS_ENDORSEMENT_TYPE=?
#GET_GNPI_LIST =SELECT DISTINCT RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY')  KEY1,  RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY') VALUE  FROM TTRN_RISK_DETAILS T ,RSK_PREMIUM_DETAILS R  WHERE RSK_CONTRACT_NO\=?  AND RSK_LAYER_NO\=?  AND RS_ENDORSEMENT_TYPE\=?  
GET_GNPI_LIST =SELECT   DISTINCT RSK_ENDORSEMENT_NO || '_' || TO_CHAR (ENDORSEMENT_DATE, 'DD/MM/YYYY') KEY1, RSK_ENDORSEMENT_NO || '_' || TO_CHAR (ENDORSEMENT_DATE, 'DD/MM/YYYY') VALUE  FROM   POSITION_MASTER T,TTRN_RISK_DETAILS R  WHERE   T.CONTRACT_NO = ? AND T.LAYER_NO = ? AND R.RS_ENDORSEMENT_TYPE = ? AND RSK_ENDORSEMENT_NO =AMEND_ID and  RSK_CONTRACT_NO = T.CONTRACT_NO AND RSK_LAYER_NO = T.LAYER_NO
GET_GNPI_LIST_CON = SELECT DISTINCT RSK_ENDORSEMENT_NO || '_' || TO_CHAR (ENDORSEMENT_DATE, 'DD/MM/YYYY')  KEY1,RSK_ENDORSEMENT_NO || '_' || TO_CHAR (ENDORSEMENT_DATE, 'DD/MM/YYYY') VALUE  FROM   POSITION_MASTER P   join TTRN_RISK_DETAILS T  on (P.CONTRACT_NO \= T.RSK_CONTRACT_NO AND P.LAYER_NO \= T.RSK_LAYER_NO and T.RSK_ENDORSEMENT_NO \= P.AMEND_ID and  RSK_CONTRACT_NO\=?  AND RSK_LAYER_NO\=? AND RS_ENDORSEMENT_TYPE\=?) left join RSK_PREMIUM_DETAILS R  on ( R.CONTRACT_NO\=T.RSK_CONTRACT_NO  AND R.LAYER_NO \=T.RSK_LAYER_NO  and trunc(ENDORSEMENT_DATE)\=to_date(substr(R.GNPI_ENDT_NO,(instr(R.GNPI_ENDT_NO,'_',1)+1),length(R.GNPI_ENDT_NO)),'dd/mm/yyyy')) where  to_number(RSK_ENDORSEMENT_NO)>to_number(nvl(substr(R.GNPI_ENDT_NO,1,(instr(R.GNPI_ENDT_NO,'_',1)-1)),0)) 
#GET_GNPI_LIST_CON =SELECT DISTINCT RSK_ENDORSEMENT_NO || '_' || TO_CHAR (ENDORSEMENT_DATE, 'DD/MM/YYYY')  KEY1, RSK_ENDORSEMENT_NO || '_' || TO_CHAR (ENDORSEMENT_DATE, 'DD/MM/YYYY')  VALUE  FROM TTRN_RISK_DETAILS T ,RSK_PREMIUM_DETAILS R,   POSITION_MASTER P  WHERE RSK_CONTRACT_NO=?  AND RSK_LAYER_NO=?  AND RS_ENDORSEMENT_TYPE=?  AND R.CONTRACT_NO=T.RSK_CONTRACT_NO  AND R.LAYER_NO =T.RSK_LAYER_NO  and  P.CONTRACT_NO = T.RSK_CONTRACT_NO AND P.LAYER_NO = T.RSK_LAYER_NO AND RSK_ENDORSEMENT_NO = P.AMEND_ID  AND RSK_ENDORSEMENT_NO || '_' || TO_CHAR (ENDORSEMENT_DATE, 'DD/MM/YYYY') >  R.GNPI_ENDT_NO
#GET_GNPI_LIST_CON = SELECT DISTINCT RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY')  KEY1,  RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY') VALUE  FROM TTRN_RISK_DETAILS T ,RSK_PREMIUM_DETAILS R  WHERE RSK_CONTRACT_NO\=?  AND RSK_LAYER_NO\=?  AND RS_ENDORSEMENT_TYPE\=? AND R.CONTRACT_NO\=T.RSK_CONTRACT_NO AND R.LAYER_NO \=T.RSK_LAYER_NO  AND T.RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(T.SYS_DATE ,'DD/MM/YYYY') > R.GNPI_ENDT_NO 
#GET_GNPI_LIST_RETRO =SELECT DISTINCT RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY')  KEY1,  RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY') VALUE  FROM TTRN_RISK_DETAILS T ,RSK_XL_PREMIUM_DETAILS R  WHERE RSK_CONTRACT_NO\=?  AND RSK_LAYER_NO\=?  AND RS_ENDORSEMENT_TYPE\=? AND T.RSK_ENDORSEMENT_NO \= (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS D WHERE D.RSK_CONTRACT_NO\=T.RSK_CONTRACT_NO  AND D.RSK_LAYER_NO\=T.RSK_CONTRACT_NO)
#GET_GNPI_LIST_CON_RETRO = SELECT DISTINCT RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY')  KEY1,  RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY') VALUE  FROM TTRN_RISK_DETAILS T ,RSK_XL_PREMIUM_DETAILS R  WHERE RSK_CONTRACT_NO\=?  AND RSK_LAYER_NO\=?  AND RS_ENDORSEMENT_TYPE\=? AND R.CONTRACT_NO\=T.RSK_CONTRACT_NO AND R.LAYER_NO \=T.RSK_LAYER_NO  AND T.RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(T.SYS_DATE ,'DD/MM/YYYY') > R.GNPI_ENDT_NO 
GET_GNPI_LIST_CON_RETRO =SELECT DISTINCT RSK_ENDORSEMENT_NO || '_' || TO_CHAR (ENDORSEMENT_DATE, 'DD/MM/YYYY')  KEY1, RSK_ENDORSEMENT_NO || '_' || TO_CHAR (ENDORSEMENT_DATE, 'DD/MM/YYYY')  VALUE  FROM TTRN_RISK_DETAILS T ,RSK_XL_PREMIUM_DETAILS R,   POSITION_MASTER P  WHERE RSK_CONTRACT_NO=?  AND RSK_LAYER_NO=?  AND RS_ENDORSEMENT_TYPE=?  AND R.CONTRACT_NO=T.RSK_CONTRACT_NO  AND R.LAYER_NO =T.RSK_LAYER_NO  and  P.CONTRACT_NO = T.RSK_CONTRACT_NO AND P.LAYER_NO = T.RSK_LAYER_NO AND RSK_ENDORSEMENT_NO = P.AMEND_ID  AND  RSK_ENDORSEMENT_NO>(SELECT MAX( substr(R.GNPI_ENDT_NO,1,instr(R.GNPI_ENDT_NO,'_',1)-1))  FROM  RSK_PREMIUM_DETAILS RT WHERE RT.CONTRACT_NO=R.CONTRACT_NO   AND R.LAYER_NO=RT.LAYER_NO )
#SELECT RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY')  KEY1,RSK_ENDORSEMENT_NO  || '_' || TO_CHAR(SYS_DATE ,'DD/MM/YYYY') VALUE FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO\=? AND RSK_LAYER_NO\=? AND RS_ENDORSEMENT_TYPE\=?
PRCL_DELETE = DELETE FROM TTRN_RETRO_PRCL WHERE CONTRACT_NO =? AND LAYER_NO=? AND PRODUCT_ID=?
PREMIUM_COUNT =SELECT COUNT(GNPI_ENDT_NO) FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO\=? AND LAYER_NO\=?
PREMIUM_COUNT_RETRO = SELECT COUNT(GNPI_ENDT_NO) FROM RSK_XL_PREMIUM_DETAILS WHERE CONTRACT_NO\=? AND LAYER_NO\=?
DEPARTMENT_VALUE= SELECT   DISTINCT TMAS_DEPARTMENT_ID, TMAS_DEPARTMENT_NAME     FROM   TMAS_DEPARTMENT_MASTER    WHERE   BRANCH_CODE \= ? AND TMAS_PRODUCT_ID \= ? AND TMAS_STATUS \= ?            AND TMAS_DEPARTMENT_ID IN   (SELECT   DEPT_ID   FROM   POSITION_MASTER t WHERE   CONTRACT_NO \= ? AND LAYER_NO \= ? AND AMEND_ID \= (SELECT   MAX (AMEND_ID)FROM   POSITION_MASTER WHERE   PROPOSAL_NO \=  t.PROPOSAL_NO)) ORDER BY   TMAS_DEPARTMENT_NAME ASC


INSERT_REMARKS_DETAILS=INSERT INTO TTRN_RISK_REMARKS (PROPOSAL_NO,CONTRACT_NO,LAYER_NO,DEPT_ID,PRODUCT_ID,AMEND_ID,RSK_SNO,RSK_DESCRIPTION,RSK_REMARK1,RSK_REMARK2,LOGIN_ID,BRANCH_CODE,SYS_DATE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE)
DELETE_REMARKS_DETAILS=DELETE TTRN_RISK_REMARKS TRR WHERE PROPOSAL_NO=? AND LAYER_NO=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RISK_REMARKS WHERE  PROPOSAL_NO=TRR.PROPOSAL_NO)
GET_REMARKS_DETAILS=SELECT  RSK_SNO,RSK_DESCRIPTION,RSK_REMARK1,RSK_REMARK2 FROM TTRN_RISK_REMARKS TRR WHERE PROPOSAL_NO=? AND LAYER_NO=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RISK_REMARKS WHERE  PROPOSAL_NO=TRR.PROPOSAL_NO) order by RSK_SNO
LOSS_DELETE = DELETE FROM ttrn_loss_details T WHERE PROPOSAL_NO=? AND LAYER_NO=? AND ENDORSEMENT_NO=( SELECT MAX(ENDORSEMENT_NO) FROM TTRN_LOSS_DETAILS D WHERE D.PROPOSAL_NO=T.PROPOSAL_NO AND D.LAYER_NO=T.LAYER_NO)
INSET_LOSS_REC = INSERT INTO ttrn_loss_details (PROPOSAL_NO ,   CONTRACT_NO ,   ENDORSEMENT_NO ,   PRODUCT_ID ,   BRANCH,   SYS_DATE ,   LAYER_NO,   YEAR,   LOSS_NO ,   INSURED_NAME,   INCEPTION_DATE,   EXPIRYDATE ,   DATE_OF_LOSS ,   CAUSE_OF_LOSS,   INSURED_CLAIM ,   PREMIUM ,   LOSS_RATIO ,   LEADER,   ITI_RE_SHARE)VALUES(?,?,?,?,?,SYSDATE,?,?,?,?,to_date(?,'DD/MM/YYYY'),to_date(?,'DD/MM/YYYY'),to_date(?,'DD/MM/YYYY'),?,?,?,?,?,?)
GET_LOSS_DETIALS = SELECT PROPOSAL_NO, CONTRACT_NO, ENDORSEMENT_NO, PRODUCT_ID, BRANCH, SYS_DATE, LAYER_NO, YEAR, LOSS_NO, INSURED_NAME, TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR(EXPIRYDATE,'DD/MM/YYYY') EXPIRYDATE,TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') DATE_OF_LOSS, CAUSE_OF_LOSS, INSURED_CLAIM,  PREMIUM, LOSS_RATIO, LEADER, ITI_RE_SHARE FROM TTRN_LOSS_DETAILS T WHERE PROPOSAL_NO\=? AND LAYER_NO\=? AND ENDORSEMENT_NO\=( SELECT MAX(ENDORSEMENT_NO) FROM TTRN_LOSS_DETAILS D WHERE D.PROPOSAL_NO\=T.PROPOSAL_NO AND D.LAYER_NO\=T.LAYER_NO)  order by YEAR
DELETE_COVERDEDUCTABLE_DETAILS=DELETE TTRN_FAC_SI TRR WHERE PROPOSAL_NO=? AND LAYER_NO=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_FAC_SI WHERE  PROPOSAL_NO=TRR.PROPOSAL_NO)
INSERT_COVERDEDUCTABLE_DETAILS=INSERT INTO TTRN_FAC_SI (PROPOSAL_NO,CONTRACT_NO,LAYER_NO,DEPT_ID,PRODUCT_ID,AMEND_ID,RSK_SNO,RSK_CLASS,RSK_SUBCLASS,RSK_TYPE,RSK_COVERLIMIT_OC,RSK_DEDUCTABLELIMIT_OC,RSK_COVERAGE_DAYS,RSK_DEDUCTABLE_DAYS,RSK_PREMIUM_RATE,RSK_GWPI_OC,RSK_COVER_REMARKS,LOGIN_ID,BRANCH_CODE,SYS_DATE,PML_PERCENTAGE,PML_HUN_PER_OC,RSK_BUSINESS_TYPE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?)
GET_COVER_DEDUCTABLE_DETAILS=SELECT PML_PERCENTAGE,RSK_SNO,RSK_CLASS,RSK_SUBCLASS,RSK_TYPE,RSK_COVERLIMIT_OC,RSK_DEDUCTABLELIMIT_OC,RSK_COVERAGE_DAYS,RSK_DEDUCTABLE_DAYS,RSK_PREMIUM_RATE,RSK_GWPI_OC,RSK_COVER_REMARKS,PML_HUN_PER_OC FROM TTRN_FAC_SI TRR WHERE PROPOSAL_NO=? AND LAYER_NO=? AND RSK_BUSINESS_TYPE='1' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_FAC_SI WHERE  PROPOSAL_NO=TRR.PROPOSAL_NO  AND LAYER_NO=TRR.LAYER_NO AND RSK_BUSINESS_TYPE=TRR.RSK_BUSINESS_TYPE) order by RSK_SNO
INSERT_XOLCOVERDEDUCTABLE_DETAILS=INSERT INTO TTRN_FAC_SI (PROPOSAL_NO,CONTRACT_NO,LAYER_NO,DEPT_ID,PRODUCT_ID,AMEND_ID,RSK_SNO,RSK_CLASS,RSK_SUBCLASS,RSK_COVERLIMIT_OC,RSK_DEDUCTABLELIMIT_OC,RSK_PREMIUM_RATE,RSK_GWPI_OC,LOGIN_ID,BRANCH_CODE,SYS_DATE,RSK_BUSINESS_TYPE) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?)
GET_XOLCOVER_DEDUCTABLE_DETAILS=SELECT PML_PERCENTAGE,RSK_SNO,RSK_CLASS,RSK_SUBCLASS,RSK_TYPE,RSK_COVERLIMIT_OC,RSK_DEDUCTABLELIMIT_OC,RSK_COVERAGE_DAYS,RSK_DEDUCTABLE_DAYS,RSK_PREMIUM_RATE,RSK_GWPI_OC,RSK_COVER_REMARKS,PML_HUN_PER_OC FROM TTRN_FAC_SI TRR WHERE PROPOSAL_NO=? AND LAYER_NO=? AND RSK_BUSINESS_TYPE='2' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_FAC_SI WHERE  PROPOSAL_NO=TRR.PROPOSAL_NO AND LAYER_NO=TRR.LAYER_NO AND RSK_BUSINESS_TYPE=TRR.RSK_BUSINESS_TYPE ) order by RSK_SNO
POS_MAS_ED_MODE_UPDT = UPDATE POSITION_MASTER P SET EDIT_MODE\=? WHERE PROPOSAL_NO \= ?  AND AMEND_ID \=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO \= P.PROPOSAL_NO )
POS_MAS_BQ_MODE_UPDT = UPDATE POSITION_MASTER P SET EDIT_MODE\=? WHERE BOUQUET_NO \= ?  AND AMEND_ID \=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO \= P.PROPOSAL_NO ) 
POS_MAS_ED_MODE_SELECT = SELECT NVL(EDIT_MODE,'N') FROM POSITION_MASTER P WHERE PROPOSAL_NO = ?  AND AMEND_ID =(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = P.PROPOSAL_NO )

##UPDATE_SUB_ENDT_STATUS = UPDATE POSITION_MASTER P SET EDIT_MODE=? WHERE PROPOSAL_NO in(SELECT PROPOSAL_NO FROM POSITION_MASTER R WHERE BASE_LAYER=? AND  AMEND_ID =(SELECT MAX(AMEND_ID) FROM POSITION_MASTER F WHERE F.PROPOSAL_NO = R.PROPOSAL_NO )  AND AMEND_ID =(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO = P.PROPOSAL_NO ) )
UPDATE_SUB_ENDT_STATUS = UPDATE POSITION_MASTER P SET EDIT_MODE\=? WHERE PROPOSAL_NO IN(SELECT PROPOSAL_NO FROM POSITION_MASTER R WHERE BASE_LAYER\=? AND  AMEND_ID \=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER F WHERE F.PROPOSAL_NO\= R.PROPOSAL_NO and CONTRACT_STATUS \!\='C' ))  AND AMEND_ID \=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO \= P.PROPOSAL_NO ) 
GET_BASE_PROPOSAL =SELECT BASE_LAYER FROM POSITION_MASTER P  WHERE PROPOSAL_NO \=?  AND AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE   PROPOSAL_NO \= P.PROPOSAL_NO)
DELETE_RET_DETAILS=DELETE TTRN_CEDENT_RET TRR WHERE PROPOSAL_NO=? AND LAYER_NO=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RISK_REMARKS WHERE  PROPOSAL_NO=TRR.PROPOSAL_NO)
INSERT_RET_DETAILS=INSERT INTO TTRN_CEDENT_RET(PROPOSAL_NO,CONTRACT_NO,LAYER_NO,DEPT_ID,PRODUCT_ID,AMEND_ID,RSK_SNO,RSK_CLASS,RSK_SUBCLASS,RSK_TYPE,RSK_RETTYPE,RSK_BASISTYPE,RSK_FIRST_RET_OC,RSK_SECOND_RET_OC,RSK_RET_TL_FST_OC,RSK_RET_TL_SST_OC,RSK_RET_EL_FST_OC,RSK_RET_EL_SST_OC,LOGIN_ID,BRANCH_CODE,SYS_DATE) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate)
GET_RET_DETAILS=SELECT  RSK_SNO,RSK_CLASS,RSK_SUBCLASS,RSK_TYPE,RSK_RETTYPE,RSK_BASISTYPE,RSK_FIRST_RET_OC,RSK_SECOND_RET_OC,RSK_RET_TL_FST_OC,RSK_RET_TL_SST_OC,RSK_RET_EL_FST_OC,RSK_RET_EL_SST_OC FROM TTRN_CEDENT_RET TRR WHERE PROPOSAL_NO\=? AND LAYER_NO\=? AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_CEDENT_RET WHERE  PROPOSAL_NO\=TRR.PROPOSAL_NO) order by RSK_SNO

RISK_LAYER_UPDATE =UPDATE TTRN_RISK_PROPOSAL SET RSK_LAYER_NO\=? WHERE RSK_PROPOSAL_NUMBER \=? AND RSK_ENDORSEMENT_NO\=?
GET_MENU_ID = SELECT MENU_ID FROM MENU_MASTER WHERE PROCESS_ID = ? AND ACTIVE =?  AND MENU_NAME like '%Con%'

#GET_CON_DEPT_ID =SELECT NVL(DEPT_ID,0) FROM POSITION_MASTER P WHERE CONTRACT_NO \= ? AND DEPT_ID \=? AND  BRANCH_CODE\=? and PROPOSAL_NO\=? AND CONTRACT_STATUS\='A' and AMEND_ID \= (select max(AMEND_ID) from position_master where PROPOSAL_NO \= P.PROPOSAL_NO)
GET_CON_DEPT_ID =SELECT NVL(DEPT_ID,0) FROM POSITION_MASTER P WHERE CONTRACT_NO \= ? AND DEPT_ID \=? AND  BRANCH_CODE\=?  AND CONTRACT_STATUS\='A'  AND AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE    CONTRACT_NO \= P.CONTRACT_NO AND DEPT_ID \= P.DEPT_ID AND BRANCH_CODE \= P.BRANCH_CODE  AND CONTRACT_STATUS \= P.CONTRACT_STATUS)
GET_CON_DEPT_ID_LAYER = SELECT NVL(LAYER_NO,'') FROM POSITION_MASTER P WHERE CONTRACT_NO \= ? AND LAYER_NO \=? AND  BRANCH_CODE\=? AND CONTRACT_STATUS\='A' AND AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   POSITION_MASTER WHERE    CONTRACT_NO \= P.CONTRACT_NO AND LAYER_NO \= P.LAYER_NO AND BRANCH_CODE \= P.BRANCH_CODE  AND CONTRACT_STATUS \= P.CONTRACT_STATUS)
GET_PROPO_STATUS = SELECT PROPOSAL_NO,CONTRACT_STATUS FROM POSITION_MASTER P WHERE PROPOSAL_NO IN (''{0}'') AND  PRODUCT_ID IN (''1'',''2'',''3'') AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO =P.PROPOSAL_NO)
GET_CON_DETAILS =SELECT NVL(CONTRACT_NO,'') FROM POSITION_MASTER P WHERE CONTRACT_NO \= ?  AND  BRANCH_CODE\=? AND CONTRACT_STATUS\='A' and AMEND_ID \= (select max(AMEND_ID) from position_master where CONTRACT_NO \= P.CONTRACT_NO  AND  BRANCH_CODE\=P.BRANCH_CODE AND CONTRACT_STATUS\=P.CONTRACT_STATUS)
GET_EXCLUDE_PROPOSAL =SELECT   ITEM_TYPE FROM   TTRN_IE_MODULE TI WHERE   PROPOSAL_NO = ? AND TRANSACTION_NO = ? AND BRANCH_CODE = ? AND ITEM_INCLUSION_EXCLUSION = 'E'  AND ITEM_NO ='7' AND AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   TTRN_IE_MODULE  WHERE    TI.PROPOSAL_NO = PROPOSAL_NO AND TI.TRANSACTION_NO = TRANSACTION_NO AND TI.BRANCH_CODE = BRANCH_CODE AND TI.ITEM_INCLUSION_EXCLUSION =  ITEM_INCLUSION_EXCLUSION AND ITEM_NO='7')
GET_RET_BASE_DETAILS=SELECT  * FROM ( SELECT RT.* ,DENSE_RANK()  OVER ( ORDER BY PROPOSAL_NO DESC) RN  FROM  TTRN_CEDENT_RET RT  WHERE  EXISTS (SELECT 'Y' FROM POSITION_MASTER PM WHERE  PM.PROPOSAL_NO\=RT.PROPOSAL_NO  AND BRANCH_CODE\=?  AND  CEDING_COMPANY_ID\=? AND UW_YEAR\=? AND PRODUCT_ID\=?  AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER PM1 WHERE PM1.PROPOSAL_NO\=PM.PROPOSAL_NO )) ) WHERE  RN\=1 
GET_COUNT_OPEN_PERIOD=SELECT COUNT(*) FROM TMAS_OPEN_PERIOD WHERE SNO<? AND BRANCH_CODE=? AND STATUS='Y'

||CURRENCY_ID||SECTION_NAME FROM RSK_PREMIUM_DETAILS CD WHERE BRANCH_CODE\=? AND CONTRACT_NO\=? AND SUB_CLASS\=? AND TRUNC(ACCOUNTING_PERIOD_DATE)<\=TO_DATE(?,'dd/mm/yyyy') AND TRUNC(STATEMENT_DATE)<\=TO_DATE(?,'dd/mm/yyyy') AND TRUNC(TRANSACTION_MONTH_YEAR)<\=TO_DATE(?,'dd/mm/yyyy') AND ACCOUNTING_PERIOD_DATE\=(SELECT MAX(ACCOUNTING_PERIOD_DATE) FROM RSK_PREMIUM_DETAILS AP WHERE AP.BRANCH_CODE\=CD.BRANCH_CODE AND CONTRACT_NO\=CD.CONTRACT_NO AND SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME\=CD.SUB_CLASS ||CD.CURRENCY_ID||CD.PREMIUM_SUBCLASS||CD.SECTION_NAME)AND STATEMENT_DATE \= (SELECT MAX(STATEMENT_DATE) FROM RSK_PREMIUM_DETAILS AP WHERE AP.BRANCH_CODE\=CD.BRANCH_CODE AND CONTRACT_NO\=CD.CONTRACT_NO AND SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME\=CD.SUB_CLASS||CD.CURRENCY_ID||CD.PREMIUM_SUBCLASS||CD.SECTION_NAME)AND TRANSACTION_NO\=(SELECT MAX(TRANSACTION_NO) FROM RSK_PREMIUM_DETAILS WHERE BRANCH_CODE\=CD.BRANCH_CODE AND CONTRACT_NO\=CD.CONTRACT_NO AND SUB_CLASS||CURRENCY_ID||PREMIUM_SUBCLASS||SECTION_NAME\=CD.SUB_CLASS ||CD.CURRENCY_ID||CD.PREMIUM_SUBCLASS||CD.SECTION_NAME) ORDER BY CURRENCY_ID
GET_OBS_LIST=SELECT CONTRACT_NO,LAYER_NO, RSK_INSURED_NAME DEPTID,TRANSACTION_NO,ACCOUNT_PERIOD_QTR ,STATEMENT_DATE STATEMENT_DATE ,RSK_SPFCID SUB_CLASS,COMPANY_CODE CURRENCY_ID,BROKER_CODE SECTION_NAME,to_number(AMOUNT_OC) OSCLAIM_LOSSUPDATE_OC,TRANSACTION_DATE,ACCOUNTING_PERIOD_DATE FROM TABLE(FN_RENEWAL_STATISTICS(? ,'','','',?,?,'OSLR') ) ORDER BY CURRENCY

#FAC_CONTRACT_LIST = SELECT  DISTINCT RD.RSK_CONTRACT_NO,RD.RSK_ENDORSEMENT_NO,RD.RSK_PROPOSAL_NUMBER,PE.FIRST_NAME RSK_BROKERID,PI.UNDERWRITTER RSK_UNDERWRITTER, RD.RSK_INSURED_NAME FROM TTRN_RISK_DETAILS RD,TTRN_FAC_RISK_PROPOSAL RP,UNDERWRITTER_MASTER PI,PERSONAL_INFO PE WHERE RD.RSK_CEDINGID=? AND RD.RSK_INCEPTION_DATE=TO_DATE(?,'DD/MM/YYYY') AND RD.RSK_EXPIRY_DATE=TO_DATE(?,'DD/MM/YYYY') AND RD.RSK_UWYEAR=? AND RD.RSK_ORIGINAL_CURR=? AND RD.RSK_DEPTID=? AND RP.TYPE=? and RP.SUM_INSURED_OC=? AND RP.RSK_PROPOSAL_NUMBER = RD.RSK_PROPOSAL_NUMBER AND RD.RSK_ENDORSEMENT_NO = (SELECT MAX(D.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS D WHERE D.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) AND RP.RSK_ENDORSEMENT_NO=(SELECT MAX(FP.RSK_ENDORSEMENT_NO) FROM TTRN_FAC_RISK_PROPOSAL FP WHERE FP.RSK_PROPOSAL_NUMBER=RD.RSK_PROPOSAL_NUMBER) and RD.RSK_CONTRACT_NO is not null  AND PI.UWR_CODE = RD.RSK_UNDERWRITTER  AND PI.UWR_STATUS='Y' AND PI.BRANCH_CODE=RD.BRANCH_CODE AND  PE.CUSTOMER_ID = RD.RSK_BROKERID  AND PE.CUSTOMER_TYPE='B' AND PE.BRANCH_CODE=RD.BRANCH_CODE AND PE.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PE.CUSTOMER_ID  AND CUSTOMER_TYPE=PE.CUSTOMER_TYPE AND BRANCH_CODE=PE.BRANCH_CODE)
#FAC_CONTRACT_LIST =SELECT  RD.RSK_CONTRACT_NO,RD.RSK_ENDORSEMENT_NO,RD.RSK_PROPOSAL_NUMBER,RD.RSK_BROKERID,RD.RSK_UNDERWRITTER,RD.RSK_INSURED_NAME FROM TTRN_RISK_DETAILS RD,TTRN_FAC_RISK_PROPOSAL RP WHERE RD.RSK_CEDINGID\=? AND RD.RSK_INCEPTION_DATE\=TO_DATE(?,'DD/MM/YYYY') AND RD.RSK_EXPIRY_DATE\=TO_DATE(?,'DD/MM/YYYY') AND RD.RSK_UWYEAR\=? AND RD.RSK_ORIGINAL_CURR\=? AND RD.RSK_DEPTID\=? AND RP.TYPE\=? and RP.SUM_INSURED_OC\=? AND RP.RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER AND RD.RSK_ENDORSEMENT_NO \= (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS D WHERE D.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER) AND RP.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_FAC_RISK_PROPOSAL P WHERE P.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER) and RD.RSK_CONTRACT_NO is not null
FAC_CONTRACT_LIST=SELECT  DISTINCT RD.RSK_CONTRACT_NO,RD.RSK_ENDORSEMENT_NO,RD.  RSK_PROPOSAL_NUMBER,PE.FIRST_NAME RSK_BROKERID,PI.UNDERWRITTER  RSK_UNDERWRITTER, RD.RSK_INSURED_NAME  FROM TTRN_RISK_DETAILS RD,TTRN_FAC_RISK_PROPOSAL RP,UNDERWRITTER_MASTER  PI,PERSONAL_INFO PE,POSITION_MASTER PM  WHERE RD.RSK_CEDINGID\=?  AND TRUNC(RD.RSK_INCEPTION_DATE)\=TO_DATE(?,'DD/MM/YYYY')  AND TRUNC(RD.RSK_EXPIRY_DATE)\=TO_DATE(?,'DD/MM/YYYY')  AND RD.RSK_UWYEAR\=?  AND RD.RSK_ORIGINAL_CURR\=?  AND RD.RSK_DEPTID\=?  AND RP.TYPE\=?  and decode(RP.TYPE,'1',RP.SUM_INSURED_OC,RP.DEDUCTIBLE_FACXOL_OC)\=? and RSK_PFCID \=? and PM.BRANCH_CODE\=?  AND RP.RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER  AND RD.RSK_ENDORSEMENT_NO \= (  SELECT MAX(D.RSK_ENDORSEMENT_NO)  FROM TTRN_RISK_DETAILS D  WHERE D.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER)  AND RP.RSK_ENDORSEMENT_NO\=(  SELECT MAX(FP.RSK_ENDORSEMENT_NO)  FROM TTRN_FAC_RISK_PROPOSAL FP  WHERE FP.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER)  and RD.RSK_CONTRACT_NO is not null  AND PI.UWR_CODE \= RD.RSK_UNDERWRITTER  AND PI.UWR_STATUS\='Y'  AND PI.BRANCH_CODE\=RD.BRANCH_CODE  AND  PE.CUSTOMER_ID \= RD.RSK_BROKERID  AND PE.CUSTOMER_TYPE\='B'  AND PE.BRANCH_CODE\=RD.BRANCH_CODE  AND PE.AMEND_ID\=(  SELECT MAX(AMEND_ID)  FROM PERSONAL_INFO  WHERE CUSTOMER_ID\=PE.CUSTOMER_ID  AND CUSTOMER_TYPE\=PE.CUSTOMER_TYPE  AND BRANCH_CODE\=PE.BRANCH_CODE)  AND PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  AND PM.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER POM WHERE POM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER)   AND PM.DATA_MAP_CONT_NO IS NULL 
PTTY_CONTRACT_LIST=SELECT  DISTINCT RD.RSK_CONTRACT_NO,RD.RSK_ENDORSEMENT_NO,RD.  RSK_PROPOSAL_NUMBER,PE.FIRST_NAME RSK_BROKERID,PI.UNDERWRITTER  RSK_UNDERWRITTER, RD.RSK_INSURED_NAME  FROM TTRN_RISK_DETAILS RD,TTRN_RISK_PROPOSAL RP,UNDERWRITTER_MASTER  PI,PERSONAL_INFO PE,POSITION_MASTER PM  WHERE RD.RSK_CEDINGID\=?  AND TRUNC(RD.RSK_INCEPTION_DATE)\=TO_DATE(?,'DD/MM/YYYY')  AND TRUNC(RD.RSK_EXPIRY_DATE)\=TO_DATE(?,'DD/MM/YYYY')  AND RD.RSK_UWYEAR\=?  AND RD.RSK_ORIGINAL_CURR\=?  AND RD.RSK_DEPTID\=?  AND RD.TREATYTYPE\=?   and RSK_PFCID \=?  and PM.BRANCH_CODE\=? AND RP.RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER  AND RD.RSK_ENDORSEMENT_NO \= (  SELECT MAX(D.RSK_ENDORSEMENT_NO)  FROM TTRN_RISK_DETAILS D  WHERE D.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER)  AND RP.RSK_ENDORSEMENT_NO\=(  SELECT MAX(FP.RSK_ENDORSEMENT_NO)  FROM TTRN_RISK_PROPOSAL FP  WHERE FP.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER)  and RD.RSK_CONTRACT_NO is not null  AND PI.UWR_CODE \= RD.RSK_UNDERWRITTER  AND PI.UWR_STATUS\='Y'  AND PI.BRANCH_CODE\=RD.BRANCH_CODE  AND  PE.CUSTOMER_ID \= RD.RSK_BROKERID  AND PE.CUSTOMER_TYPE\='B'  AND PE.BRANCH_CODE\=RD.BRANCH_CODE  AND PE.AMEND_ID\=(  SELECT MAX(AMEND_ID)  FROM PERSONAL_INFO  WHERE CUSTOMER_ID\=PE.CUSTOMER_ID  AND CUSTOMER_TYPE\=PE.CUSTOMER_TYPE  AND BRANCH_CODE\=PE.BRANCH_CODE)  AND PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  AND PM.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER POM WHERE POM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER)   AND PM.DATA_MAP_CONT_NO IS NULL
#NPTTY_CONTRACT_LIST=SELECT  DISTINCT RD.RSK_CONTRACT_NO,RD.RSK_ENDORSEMENT_NO,RD.  RSK_PROPOSAL_NUMBER,PE.FIRST_NAME RSK_BROKERID,PI.UNDERWRITTER  RSK_UNDERWRITTER, RD.RSK_INSURED_NAME  FROM TTRN_RISK_DETAILS RD,TTRN_RISK_PROPOSAL RP,UNDERWRITTER_MASTER  PI,PERSONAL_INFO PE,POSITION_MASTER PM,TTRN_RSK_CLASS_LIMITS CL  WHERE CL.RSK_PROPOSAL_NUMBER\=PM.PROPOSAL_NO AND CM.RSK_CONTRACT_NO\=PM.CONTRACT_NO AND CM.RSK_LAYER_NO \= PM.LAYER_NO AND CM.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RSK_CLASS_LIMITS L WHERE L.PROPOSAL_NO\=CM.PROPOSAL_NO AND L.RSK_CONTRACT_NO\=CM.RSK_CONTRACT_NO AND L.RSK_LAYER_NO \= CM.RSK_LAYER_NO)  RD.RSK_CEDINGID\=?  AND RD.RSK_INCEPTION_DATE\=TO_DATE(?,'DD/MM/YYYY')  AND RD.RSK_EXPIRY_DATE\=TO_DATE(?,'DD/MM/YYYY')  AND RD.RSK_UWYEAR\=?  AND RD.RSK_ORIGINAL_CURR\=?  AND RD.RSK_DEPTID\=?  AND RD.TREATYTYPE\=?   and RSK_PFCID \=?  AND RP.RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER  AND RD.RSK_ENDORSEMENT_NO \= (  SELECT MAX(D.RSK_ENDORSEMENT_NO)  FROM TTRN_RISK_DETAILS D  WHERE D.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER)  AND RP.RSK_ENDORSEMENT_NO\=(  SELECT MAX(FP.RSK_ENDORSEMENT_NO)  FROM TTRN_RISK_PROPOSAL FP  WHERE FP.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER)  and RD.RSK_CONTRACT_NO is not null  AND PI.UWR_CODE \= RD.RSK_UNDERWRITTER  AND PI.UWR_STATUS\='Y'  AND PI.BRANCH_CODE\=RD.BRANCH_CODE  AND  PE.CUSTOMER_ID \= RD.RSK_BROKERID  AND PE.CUSTOMER_TYPE\='B'  AND PE.BRANCH_CODE\=RD.BRANCH_CODE  AND PE.AMEND_ID\=(  SELECT MAX(AMEND_ID)  FROM PERSONAL_INFO  WHERE CUSTOMER_ID\=PE.CUSTOMER_ID  AND CUSTOMER_TYPE\=PE.CUSTOMER_TYPE  AND BRANCH_CODE\=PE.BRANCH_CODE)  AND PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  AND PM.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER POM WHERE POM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER)   AND PM.DATA_MAP_CONT_NO IS NULL
NPTTY_CONTRACT_LIST=with   e1  as (  select RSK_PROPOSAL_NUMBER,RSK_CONTRACT_NO,RSK_LAYER_NO LAYER_NO,sum(CM.RSK_COVER_LIMT) cvr_limit,  sum(CM.RSK_DEDUCTABLE_LIMT) DEDU,SUM(RSK_COVER_LIMT_PERCENTAGE) COVER_PER,SUM(RSK_DEDUCTABLE_PERCENTAGE) DED_PER from TTRN_RSK_CLASS_LIMITS CM  WHERE CM.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RSK_CLASS_LIMITS L WHERE L.RSK_PROPOSAL_NUMBER\=CM.RSK_PROPOSAL_NUMBER AND L.RSK_CONTRACT_NO\=CM.RSK_CONTRACT_NO AND L.RSK_LAYER_NO \= CM.RSK_LAYER_NO)   group   by  RSK_PROPOSAL_NUMBER,RSK_CONTRACT_NO,RSK_LAYER_NO ),  E2 AS (  SELECT  DISTINCT RD.RSK_CONTRACT_NO,RD.RSK_ENDORSEMENT_NO,PM.LAYER_NO,RD.RSK_PROPOSAL_NUMBER,PE.FIRST_NAME RSK_BROKERID,PI.UNDERWRITTER RSK_UNDERWRITTER, RD.RSK_INSURED_NAME FROM TTRN_RISK_DETAILS RD,TTRN_RISK_PROPOSAL RP,UNDERWRITTER_MASTER  PI, PERSONAL_INFO PE,POSITION_MASTER PM where   RP.RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER  AND PI.UWR_CODE \= RD.RSK_UNDERWRITTER  AND PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  AND PI.BRANCH_CODE\=RD.BRANCH_CODE AND  PE.CUSTOMER_ID \= RD.RSK_BROKERID AND PE.BRANCH_CODE\=RD.BRANCH_CODE AND RD.RSK_CEDINGID\=? AND trunc(RD.RSK_INCEPTION_DATE)\=TO_DATE(?,'DD/MM/YYYY') AND trunc(RD.RSK_EXPIRY_DATE)\=TO_DATE(?,'DD/MM/YYYY') AND RD.RSK_UWYEAR\=? AND RD.RSK_ORIGINAL_CURR\=? AND RD.RSK_DEPTID\=? AND RD.RSK_BUSINESS_TYPE\=? and RSK_PFCID \=? and PM.LAYER_NO \=?  and PM.BRANCH_CODE \=? and PM.PRODUCT_ID\='3' and PM.LAYER_NO\=RD.RSK_LAYER_NO AND PM.LAYER_NO \= RP.RSK_LAYER_NO AND RD.RSK_ENDORSEMENT_NO \= ( SELECT MAX(D.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS D WHERE D.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER) AND RP.RSK_ENDORSEMENT_NO\=( SELECT MAX(FP.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL FP WHERE FP.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER) and RD.RSK_CONTRACT_NO is not null AND PI.UWR_STATUS\='Y' AND PE.CUSTOMER_TYPE\='B' AND PE.AMEND_ID\=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=PE.CUSTOMER_ID AND CUSTOMER_TYPE\=PE.CUSTOMER_TYPE AND BRANCH_CODE\=PE.BRANCH_CODE) AND PM.AMEND_ID\=( SELECT MAX(AMEND_ID) FROM POSITION_MASTER POM WHERE POM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER) AND PM.DATA_MAP_CONT_NO IS NULL)  SELECT   * FROM  E1,E2     WHERE   E1.RSK_CONTRACT_NO\=E2.RSK_CONTRACT_NO  AND E1.RSK_PROPOSAL_NUMBER\=E2.RSK_PROPOSAL_NUMBER AND  E1.LAYER_NO\=E2.LAYER_NO  
NPTTY_CONTRACT_LIST_CON=with   e1  as (  select RSK_PROPOSAL_NUMBER,RSK_CONTRACT_NO,RSK_LAYER_NO LAYER_NO,sum(CM.RSK_COVER_LIMT) cvr_limit,  sum(CM.RSK_DEDUCTABLE_LIMT) DEDU,SUM(RSK_COVER_LIMT_PERCENTAGE) COVER_PER,SUM(RSK_DEDUCTABLE_PERCENTAGE) DED_PER from TTRN_RSK_CLASS_LIMITS CM  WHERE CM.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RSK_CLASS_LIMITS L WHERE L.RSK_PROPOSAL_NUMBER\=CM.RSK_PROPOSAL_NUMBER AND L.RSK_CONTRACT_NO\=CM.RSK_CONTRACT_NO AND L.RSK_LAYER_NO \= CM.RSK_LAYER_NO)   group   by  RSK_PROPOSAL_NUMBER,RSK_CONTRACT_NO,RSK_LAYER_NO ),  E2 AS (  SELECT  DISTINCT RD.RSK_CONTRACT_NO,RD.RSK_ENDORSEMENT_NO,PM.LAYER_NO,RD.RSK_PROPOSAL_NUMBER,PE.FIRST_NAME RSK_BROKERID,PI.UNDERWRITTER RSK_UNDERWRITTER, RD.RSK_INSURED_NAME FROM TTRN_RISK_DETAILS RD,TTRN_RISK_PROPOSAL RP,UNDERWRITTER_MASTER  PI, PERSONAL_INFO PE,POSITION_MASTER PM where   RP.RSK_PROPOSAL_NUMBER \= RD.RSK_PROPOSAL_NUMBER  AND PI.UWR_CODE \= RD.RSK_UNDERWRITTER  AND PM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER  AND PI.BRANCH_CODE\=RD.BRANCH_CODE AND  PE.CUSTOMER_ID \= RD.RSK_BROKERID AND PE.BRANCH_CODE\=RD.BRANCH_CODE AND RD.RSK_CEDINGID\=? AND trunc(RD.RSK_INCEPTION_DATE)\=TO_DATE(?,'DD/MM/YYYY') AND trunc(RSK_EXPIRY_DATE)\=TO_DATE(?,'DD/MM/YYYY') AND RD.RSK_UWYEAR\=? AND RD.RSK_ORIGINAL_CURR\=? AND RD.RSK_DEPTID\=? AND RD.RSK_BUSINESS_TYPE\=? and RSK_PFCID \=? and PM.LAYER_NO \=? AND RD.RSK_CONTRACT_NO\!\=? and PM.BRANCH_CODE \=?  and PM.PRODUCT_ID\='3' and PM.LAYER_NO\=RD.RSK_LAYER_NO AND PM.LAYER_NO \= RP.RSK_LAYER_NO AND RD.RSK_ENDORSEMENT_NO \= ( SELECT MAX(D.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS D WHERE D.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER) AND RP.RSK_ENDORSEMENT_NO\=( SELECT MAX(FP.RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL FP WHERE FP.RSK_PROPOSAL_NUMBER\=RD.RSK_PROPOSAL_NUMBER) and RD.RSK_CONTRACT_NO is not null AND PI.UWR_STATUS\='Y' AND PE.CUSTOMER_TYPE\='B' AND PE.AMEND_ID\=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID\=PE.CUSTOMER_ID AND CUSTOMER_TYPE\=PE.CUSTOMER_TYPE AND BRANCH_CODE\=PE.BRANCH_CODE) AND PM.AMEND_ID\=( SELECT MAX(AMEND_ID) FROM POSITION_MASTER POM WHERE POM.PROPOSAL_NO \=RD.RSK_PROPOSAL_NUMBER) AND PM.DATA_MAP_CONT_NO IS NULL)  SELECT   * FROM  E1,E2     WHERE   E1.RSK_CONTRACT_NO\=E2.RSK_CONTRACT_NO  AND E1.RSK_PROPOSAL_NUMBER\=E2.RSK_PROPOSAL_NUMBER AND  E1.LAYER_NO\=E2.LAYER_NO          

GET_CLEAN_CUT_COUNT=SELECT COUNT(*) FROM RSK_PREMIUM_DETAILS WHERE ACCOUNT_PERIOD_QTR='5' AND CONTRACT_NO IN (SELECT  RSK_CONTRACT_NO FROM  TTRN_RISK_DETAILS RD WHERE RSK_PROPOSAL_TYPE='C' AND RSK_CONTRACT_NO=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_TYPE='C' AND RSK_CONTRACT_NO=RD.RSK_CONTRACT_NO))
GET_CLEAN_CUT_CONT_COUNT=SELECT  COUNT(RSK_CONTRACT_NO) FROM  TTRN_RISK_DETAILS RD WHERE RSK_PROPOSAL_TYPE='C' AND RSK_CONTRACT_NO=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_TYPE='C' AND RSK_CONTRACT_NO=RD.RSK_CONTRACT_NO)
GET_ACCOUNT_PERIOD_COUNT=SELECT COUNT(*) FROM RSK_PREMIUM_DETAILS WHERE BRANCH_CODE=? AND ACCOUNTING_PERIOD_DATE=ADD_MONTHS(TO_DATE(?,'DD/MM/YYYY'),(SELECT (CASE RSK_ACCOUNTING_PERIOD WHEN  1  THEN -3  WHEN 2 THEN -6 WHEN 3  THEN 12  ELSE 0  END) FROM TTRN_RISK_DETAILS TR WHERE RSK_CONTRACT_NO=? AND RSK_DEPTID=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=TR.RSK_CONTRACT_NO AND RSK_DEPTID=TR.RSK_DEPTID))) AND CONTRACT_NO=? AND  SUB_CLASS=? and ACCOUNT_PERIOD_QTR!='5'

#GET_ACCOUNT_PERIOD_COUNT1=SELECT COUNT(*) FROM DUAL WHERE TO_DATE(?,'DD/MM/YYYY')\=(SELECT CASE RSK_ACCOUNTING_PERIOD WHEN   1 THEN LAST_DAY( ADD_MONTHS(TRUNC(INCP_DATE,'Q'),2))WHEN   2 THEN LAST_DAY( ADD_MONTHS(TRUNC(INCP_DATE,'Q'),5))WHEN   3 THEN LAST_DAY( ADD_MONTHS(TRUNC(INCP_DATE,'Q'),11))END  FROM (SELECT RSK_ACCOUNTING_PERIOD ,trunc(RSK_INCEPTION_DATE) INCP_DATE FROM TTRN_RISK_DETAILS TR WHERE RSK_CONTRACT_NO\=? AND RSK_DEPTID\=? AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO\=TR.RSK_CONTRACT_NO AND RSK_DEPTID\=TR.RSK_DEPTID)))
GET_ACCOUNT_PERIOD_COUNT1=SELECT (CASE WHEN TO_DATE(?,'DD/MM/YYYY')=END_DT THEN 1 ELSE 0 END) FROM (SELECT ADD_MONTHS(TRUNC(INCP_DATE,'YY'), RSK_ACCOUNTING_PERIOD  * (LEVEL ))-1  END_DT,B.INCP_DATE FROM (SELECT  DECODE(RSK_ACCOUNTING_PERIOD,1,3,2,6,3,12,RSK_ACCOUNTING_PERIOD) RSK_ACCOUNTING_PERIOD,trunc(RSK_INCEPTION_DATE) INCP_DATE FROM TTRN_RISK_DETAILS TR WHERE RSK_CONTRACT_NO=? AND RSK_DEPTID=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO)  FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=TR.RSK_CONTRACT_NO AND RSK_DEPTID=TR.RSK_DEPTID))B  CONNECT BY     LEVEL<=1+ FLOOR(MONTHS_BETWEEN(add_months(TRUNC(INCP_DATE,'YY'),12),TRUNC(INCP_DATE,'YY'))/ RSK_ACCOUNTING_PERIOD) ) WHERE END_DT>=INCP_DATE AND ROWNUM=1
# GET_ACCOUNT_PERIOD_COUNT1 = SELECT COUNT(*) FROM RSK_PREMIUM_DETAILS WHERE BRANCH_CODE=? AND AND CONTRACT_NO=? AND  SUB_CLASS=? AND ACCOUNT_PERIOD_QTR=?
GET_RETRO_CON_UPDATE =UPDATE TTRN_RETRO_CESSIONARY SET CONTRACT_NO\=? WHERE PROPOSAL_NO\=? AND LAYER_NO\=? AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_RETRO_CESSIONARY RC WHERE RC.PROPOSAL_NO\=PROPOSAL_NO AND RC.LAYER_NO\=LAYER_NO)
##BONUS
FAC_PREMIUM_CONTRACT_DETAILS =SELECT   RK.RSK_DEPTID, RK.RSK_CONTRACT_NO, RK.RSK_ENDORSEMENT_NO, PERSONAL.COMPANY_NAME COMPANY, RK.RSK_TREATYID, PI.FIRST_NAME || ' ' || PI.LAST_NAME BROKER, TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE, RK.RSK_PROPOSAL_NUMBER, RK.RSK_UWYEAR, RK.RSK_LAYER_NO, RK.RSK_ORIGINAL_CURR, (select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID\=RK.RSK_DEPTID and branch_code\=RK.branch_code  and TMAS_PRODUCT_ID\=RK.RSK_PRODUCTID AND TMAS_STATUS\='Y')  TMAS_DEPARTMENT_NAME , ( SELECT RSK_BONUS_ID FROM          TTRN_RISK_COMMISSION T WHERE RSK_PROPOSAL_NUMBER\=RK.RSK_PROPOSAL_NUMBER AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER\=T.RSK_PROPOSAL_NUMBER)) BONUS_TYPE,RK.RSK_INSURED_NAME  FROM   TTRN_RISK_DETAILS RK, PERSONAL_INFO PERSONAL, PERSONAL_INFO PI  WHERE       RK.RSK_CONTRACT_NO \= ? AND RSK_LAYER_NO \=NVL(?,0) AND RK.RSK_CEDINGID \= PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE \= 'C' AND PERSONAL.BRANCH_CODE \= ? AND PERSONAL.AMEND_ID \=       (SELECT   MAX (AMEND_ID)          FROM   PERSONAL_INFO         WHERE   CUSTOMER_ID \= PERSONAL.CUSTOMER_ID        AND BRANCH_CODE \= PERSONAL.BRANCH_CODE) AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND PI.CUSTOMER_TYPE \= 'B' AND PI.BRANCH_CODE \= ? AND PI.AMEND_ID \=       (SELECT   MAX (AMEND_ID)          FROM   PERSONAL_INFO         WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID        AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO)        FROM   TTRN_RISK_DETAILS       WHERE   RSK_CONTRACT_NO \= ? AND RSK_LAYER_NO \=NVL(?,0))
GET_BONUS_CURRENY_DET=SELECT DISTINCT C.SHORT_NAME, C.CURRENCY_ID FROM   CURRENCY_MASTER C  WHERE C.CURRENCY_ID IN  (select to_char(CURRENCY_ID) from rsk_premium_details R where CONTRACT_NO \= ? and LAYER_NO\=nvl(?,0)   and trunc(R.TRANSACTION_MONTH_YEAR) <\= TO_DATE (?, 'DD/MM/YYYY') AND R.BRANCH_CODE\=?  union select to_char(CURRENCY) from TTRN_CLAIM_DETAILS CD where CD.CONTRACT_NO \= ? and LAYER_NO\=nvl(?,0)   and trunc(CD.CREATED_DATE) <\= TO_DATE (?, 'DD/MM/YYYY') AND CD.BRANCH_CODE\=?)   AND C.BRANCH_CODE \= ? AND C.STATUS \= 'Y' ORDER BY C.CURRENCY_ID
GET_BONUS_PREMIUM_DETAILS=SELECT C.SHORT_NAME,  R.CURRENCY_ID,R.PREMIUM_QUOTASHARE_OC, R.M_DPREMIUM_OC,  R.ADJUSTMENT_PREMIUM_OC,(nvl(R.PREMIUM_QUOTASHARE_OC,0)+ nvl(R.M_DPREMIUM_OC,0)+  nvl(R.ADJUSTMENT_PREMIUM_OC,0))PremiumOC,(CLAIMS_PAID_OC+ CLAIM_PORTFOLIO_OUT_OC+ CASH_LOSSPAID_OC- CASH_LOSS_CREDIT_OC- CLAIM_PORTFOLIOIN_OC) CLAIM_PAID_AMOUNT,(COMMISSION_QUOTASHARE_OC+COMMISSION_SURPLUS_OC)COMMISSION_PAID_OC,'0'PAID_AMOUNT_OC,CONTRACT_NO,C.CURRENCY_NAME  CURRENCY,TO_CHAR(R.TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,R.SUB_CLASS,R.TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME,150000 CliamOSOC,BONUS_OC   FROM   CURRENCY_MASTER C, RSK_PREMIUM_DETAILS R,TMAS_DEPARTMENT_MASTER D WHERE       C.CURRENCY_ID IN (SELECT   CURRENCY_ID    FROM   rsk_premium_details WHERE   CONTRACT_NO = ? AND LAYER_NO=NVL(?,0)) AND C.BRANCH_CODE = ? AND C.BRANCH_CODE = R.BRANCH_CODE AND C.STATUS = 'Y'  AND R.CONTRACT_NO = ?  AND LAYER_NO=NVL(?,0) AND R.CURRENCY_ID = C.CURRENCY_ID AND R.TRANSACTION_MONTH_YEAR <= TO_DATE (?, 'DD/MM/YYYY')  AND D.TMAS_DEPARTMENT_ID=R.SUB_CLASS AND   D.BRANCH_CODE = R.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' and C.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CM WHERE CM.BRANCH_CODE = C.BRANCH_CODE AND CM.CURRENCY_ID =C.CURRENCY_ID AND  C.STATUS = 'Y') ORDER BY R.CURRENCY_ID
GET_BONUS_PAID_AMOUT=SELECT CD.CURRENCY CURRENCY_ID,T.PAID_AMOUNT_OC,(select SHORT_NAME from  CURRENCY_MASTER C where CURRENCY_ID=CD.CURRENCY and BRANCH_CODE=CD.BRANCH_CODE AND STATUS='Y' AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID=CD.CURRENCY AND  CM.BRANCH_CODE=CD.BRANCH_CODE AND CM.STATUS='Y'))SHORT_NAME,'0'PremiumOC,'0' CLAIM_PAID_AMOUNT,'0' COMMISSION_PAID_OC,'0'CliamOSOC,T.CONTRACT_NO CONTRACT_NO,TO_CHAR(T.INCEPTION_DATE,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,T.CLAIM_PAYMENT_NO TRANSACTION_NO,D.TMAS_DEPARTMENT_NAME FROM TTRN_CLAIM_PAYMENT T,TTRN_CLAIM_DETAILS CD,TMAS_DEPARTMENT_MASTER D WHERE   T.CONTRACT_NO =? AND  T.LAYER_NO=NVL(?,0) AND T.LAYER_NO= CD.LAYER_NO AND CD.CONTRACT_NO = T.CONTRACT_NO AND CD.CLAIM_NO = T.CLAIM_NO AND CD.BRANCH_CODE = ? AND TRUNC(T.INCEPTION_DATE) < = TO_DATE (?, 'DD/MM/YYYY')  AND D.TMAS_DEPARTMENT_ID=CD.SUB_CLASS AND   D.BRANCH_CODE = CD.BRANCH_CODE AND D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS ='Y' ORDER BY CD.CURRENCY
GET_BONUS_RESERVED_CLAIM_PAID=SELECT (NVL(TBLA.CLAIM_RESERVED,0)-NVL(TBLB.CALIM_PAID,0))OSLR ,TBLA.CURRENCY_ID,TBLA.CLAIM_RESERVED,TBLB.CALIM_PAID FROM  ( SELECT  SUM(NVL(LOSS_ESTIMATE_REVISED_OC,0) + NVL(SAF_OS_OC,0) + NVL(OTH_FEE_OS_OC,0))CLAIM_RESERVED,CURRENCY_ID,TCU.CLAIM_NO FROM TTRN_CLAIM_UPDATION TCU,CURRENCY_MASTER C WHERE  CONTRACT_NO=?  AND LAYER_NO=NVL(?,0) AND TRUNC(TCU.INCEPTION_DATE)<=TO_DATE(?,'DD/MM/YYYY')AND C.BRANCH_CODE=TCU.BRANCH_CODE AND CURRENCY_ID in(SELECT DISTINCT CURRENCY FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO=TCU.CONTRACT_NO AND LAYER_NO=TCU.LAYER_NO AND TRUNC(CREATED_DATE)<=TCU.INCEPTION_DATE ) AND SL_NO=(SELECT MAX(SL_NO) FROM  TTRN_CLAIM_UPDATION WHERE  CONTRACT_NO=TCU.CONTRACT_NO AND LAYER_NO=TCU.LAYER_NO AND TRUNC(INCEPTION_DATE)<=TCU.INCEPTION_DATE) GROUP BY CURRENCY_ID,TCU.CLAIM_NO) TBLA  LEFT OUTER JOIN (SELECT SUM(NVL(PAID_CLAIM_OS_OC,0) + NVL(SAF_OS_OC,0) + NVL(OTH_FEE_OS_OC,0))CALIM_PAID,CURRENCY_ID,TCP.CLAIM_NO FROM TTRN_CLAIM_PAYMENT TCP,CURRENCY_MASTER C WHERE  CONTRACT_NO=? AND LAYER_NO=NVL(?,0)  AND TRUNC(TCP.INCEPTION_DATE)<=TO_DATE(?,'DD/MM/YYYY') AND C.BRANCH_CODE=TCP.BRANCH_CODE AND  CURRENCY_ID in(SELECT DISTINCT CURRENCY FROM TTRN_CLAIM_DETAILS WHERE  CONTRACT_NO=TCP.CONTRACT_NO AND LAYER_NO=TCP.LAYER_NO AND TRUNC(CREATED_DATE)<=TCP.INCEPTION_DATE ) GROUP BY CURRENCY_ID,TCP.CLAIM_NO )TBLB  ON ( TBLA.CURRENCY_ID=TBLB.CURRENCY_ID AND  TBLA.CLAIM_NO=TBLB.CLAIM_NO)
#GET_BONUS_RESERVED_CLAIM_PAID=SELECT (NVL(TBLA.CLAIM_RESERVED,0)-NVL(TBLB.CALIM_PAID,0))OSLR ,TBLA.CURRENCY_ID,TBLA.CLAIM_RESERVED,TBLB.CALIM_PAID FROM  ( SELECT  SUM(NVL(LOSS_ESTIMATE_REVISED_OC,0) + NVL(SAF_OS_OC,0) + NVL(OTH_FEE_OS_OC,0))CLAIM_RESERVED,CURRENCY_ID,TCU.CLAIM_NO FROM TTRN_CLAIM_UPDATION TCU,CURRENCY_MASTER C WHERE  CONTRACT_NO=?  AND LAYER_NO=NVL(?,0) AND TRUNC(TCU.INCEPTION_DATE)<=TO_DATE(?,'DD/MM/YYYY')AND C.BRANCH_CODE=TCU.BRANCH_CODE AND CURRENCY_ID in(SELECT DISTINCT CURRENCY FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO=TCU.CONTRACT_NO AND LAYER_NO=TCU.LAYER_NO AND TRUNC(CREATED_DATE)<=TCU.INCEPTION_DATE ) AND SL_NO=(SELECT MAX(SL_NO) FROM  TTRN_CLAIM_UPDATION WHERE  CONTRACT_NO=TCU.CONTRACT_NO AND LAYER_NO=TCU.LAYER_NO AND TRUNC(INCEPTION_DATE)<=TCU.INCEPTION_DATE) GROUP BY CURRENCY_ID,TCU.CLAIM_NO) TBLA,(SELECT SUM(NVL(PAID_CLAIM_OS_OC,0) + NVL(SAF_OS_OC,0) + NVL(OTH_FEE_OS_OC,0))CALIM_PAID,CURRENCY_ID,TCP.CLAIM_NO FROM TTRN_CLAIM_PAYMENT TCP,CURRENCY_MASTER C WHERE  CONTRACT_NO=? AND LAYER_NO=NVL(?,0)  AND TRUNC(TCP.INCEPTION_DATE)<=TO_DATE(?,'DD/MM/YYYY') AND C.BRANCH_CODE=TCP.BRANCH_CODE AND  CURRENCY_ID in(SELECT DISTINCT CURRENCY FROM TTRN_CLAIM_DETAILS WHERE  CONTRACT_NO=TCP.CONTRACT_NO AND LAYER_NO=TCP.LAYER_NO AND TRUNC(CREATED_DATE)<=TCP.INCEPTION_DATE ) GROUP BY CURRENCY_ID,TCP.CLAIM_NO )TBLB   WHERE TBLA.CURRENCY_ID=TBLB.CURRENCY_ID AND  TBLA.CLAIM_NO=TBLB.CLAIM_NO

GET_BONUS_VALUE= SELECT nvl(RSK_NOCLAIMBONUS_PRCENT,0) FROM TTRN_RISK_COMMISSION TRC,TTRN_RISK_DETAILS TRD WHERE TRC.RSK_PROPOSAL_NUMBER=TRD.RSK_PROPOSAL_NUMBER AND TRD.RSK_CONTRACT_NO=? and TRD.RSK_LAYER_NO=NVL(?,0) AND TRC.RSK_ENDORSEMENT_NO=( SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION  WHERE RSK_PROPOSAL_NUMBER=TRC.RSK_PROPOSAL_NUMBER) AND TRD.RSK_ENDORSEMENT_NO=( SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_PROPOSAL_NUMBER=TRC.RSK_PROPOSAL_NUMBER)
BONUS_MAX_AMEND_ID=SELECT nvl(MAX(AMEND_ID)+1,0) FROM TTRN_PRM_BONUS WHERE TRANSACTION_NO=? and TRANSACTION_DT=to_date(?,'dd/mm/yyyy') and BRANCH_CODE=? and PRODUCT_ID=? and CONTRACT_NO=? and LAYER_NO=NVL(?,0)
BONUS_CAL_INSERT=INSERT INTO TTRN_PRM_BONUS (CONTRACT_NO,LAYER_NO,PRODUCT_ID,TRANSACTION_NO,TRANSACTION_DT,PREMIUM_OC,CLAIM_PAID_OC,CLAIM_OS_OC,CLAIM_RATIO_OC,BONUS_OC,BONUS_PAID_TIL_DATE_OC,BONUS_ADJ_OC,CURRENCY_ID,EXCHANGE_RATE,AMEND_ID,LOGIN_ID,INCEPTION_DATE,BRANCH_CODE)VALUES(?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?)
SELECT_BONUS_FIELD_VALUES =SELECT PREMIUM_OC ,CLAIM_PAID_OC ,CLAIM_OS_OC ,CLAIM_RATIO_OC ,BONUS_OC , BONUS_PAID_TIL_DATE_OC ,BONUS_ADJ_OC, SC.CURRENCY_ID ,EXCHANGE_RATE,(SELECT SHORT_NAME  FROM  CURRENCY_MASTER CM WHERE  SC.CURRENCY_ID=CM.CURRENCY_ID AND SC.BRANCH_CODE=CM.BRANCH_CODE AND CM.STATUS='Y' AND CM.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER M WHERE M.CURRENCY_ID=CM.CURRENCY_ID AND M.BRANCH_CODE=CM.BRANCH_CODE AND M.STATUS='Y') ) SHORT_NAME   FROM TTRN_PRM_BONUS  SC  WHERE TRANSACTION_NO=? AND   SC.TRANSACTION_DT=TO_DATE(?,'dd/mm/yyyy') AND SC.BRANCH_CODE=? AND SC.PRODUCT_ID=? AND SC.CONTRACT_NO=? AND SC.LAYER_NO=?   AND SC.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_PRM_BONUS C WHERE C.TRANSACTION_NO=SC.TRANSACTION_NO AND C.CONTRACT_NO=SC.CONTRACT_NO)
GET_MANAGEMENT_EXP = SELECT  NVL(RSK_PRO_MANAGEMENT_EXP,0) RSK_PRO_MANAGEMENT_EXP,RSK_PRO_SET_UP,nvl(RSK_PRO_COMM_TYPE,'0') RSK_PRO_COMM_TYPE,nvl(RSK_PRO_COMM_PER,0) RSK_PRO_COMM_PER,RSK_PRO_SUP_PRO_COM  FROM TTRN_RISK_COMMISSION R WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION C WHERE C.RSK_PROPOSAL_NUMBER=R.RSK_PROPOSAL_NUMBER)
GET_POP_UP_PROFIT_COMM =SELECT PROFIT_COMM,COMM_FROM,COMM_TO,SNO FROM TTRN_COMMISSION_DETAILS C WHERE CONTRACT_NO\=? AND PROPOSAL_NO\=? AND PRODUCT_ID\=? AND BRANCH_CODE\=?and COMMISSION_TYPE \=?  AND   SNO <\=(SELECT SNO FROM TTRN_COMMISSION_DETAILS CD WHERE CD.PROPOSAL_NO\=C.PROPOSAL_NO AND ? BETWEEN COMM_FROM AND COMM_TO AND CD.COMMISSION_TYPE\=C.COMMISSION_TYPE AND ENDORSEMENT_NO\=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_COMMISSION_DETAILS WHERE PROPOSAL_NO\=CD.PROPOSAL_NO)) AND ENDORSEMENT_NO\=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_COMMISSION_DETAILS D WHERE D.PROPOSAL_NO\=C.PROPOSAL_NO)

GET_POSITION_MASTER_CON_MAP =SELECT NVL(DATA_MAP_CONT_NO,'0') FROM POSITION_MASTER WHERE PROPOSAL_NO\=? AND AMEND_ID\=?
GET_MAPPING_PROPOSAL_NO =SELECT PROPOSAL_NO,AMEND_ID FROM POSITION_MASTER M WHERE M.CONTRACT_NO \=? AND M.LAYER_NO\=? AND M.DEPT_ID\=? AND M.UW_YEAR\=? AND M.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER P WHERE P.PROPOSAL_NO\=M.PROPOSAL_NO AND P.CONTRACT_NO\=M.CONTRACT_NO AND P.LAYER_NO\=M.LAYER_NO)
XL_COST_LIST = SELECT TRANSACTION_NO,INSTALMENT_NUMBER,to_char(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,(SELECT SHORT_NAME FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID \= RD.CURRENCY_ID AND CM.BRANCH_CODE \= RD.BRANCH_CODE AND CM.STATUS\='Y' AND CM.AMEND_ID \=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER C WHERE C.CURRENCY_ID \= CM.CURRENCY_ID AND C.BRANCH_CODE \= CM.BRANCH_CODE AND C.STATUS\='Y'))CURRENCY_NAME,(SELECT TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER DM WHERE DM.TMAS_DEPARTMENT_ID\=SUB_CLASS and DM.TMAS_STATUS\='Y' AND TMAS_PRODUCT_ID\=? AND DM.BRANCH_CODE\=RD.BRANCH_CODE) TMAS_DEPARTMENT_NAME,  CURRENCY_ID,to_char(ENTRY_DATE,'DD/MM/YYYY') ENTRY_DATE,(NVL(M_DPREMIUM_OC,0)+NVL(ADJUSTMENT_PREMIUM_OC,0)) PREMIUM_OC,(NVL(M_DPREMIUM_DC,0)+NVL(ADJUSTMENT_PREMIUM_DC,0)) PREMIUM_DC FROM RSK_PREMIUM_DETAILS RD WHERE BRANCH_CODE\=? AND CONTRACT_NO\=? AND LAYER_NO\=?
RETRO_XL_COST_LIST = SELECT TRANSACTION_NO,INSTALMENT_NUMBER,to_char(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,(SELECT SHORT_NAME FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID \= RD.CURRENCY_ID AND CM.BRANCH_CODE \= RD.BRANCH_CODE AND CM.STATUS\='Y' AND CM.AMEND_ID \=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER C WHERE C.CURRENCY_ID \= CM.CURRENCY_ID AND C.BRANCH_CODE \= CM.BRANCH_CODE AND C.STATUS\='Y'))CURRENCY_NAME,(SELECT TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER DM WHERE DM.TMAS_DEPARTMENT_ID\=SUB_CLASS and DM.TMAS_STATUS\='Y' AND TMAS_PRODUCT_ID\=? AND DM.BRANCH_CODE\=RD.BRANCH_CODE) TMAS_DEPARTMENT_NAME,  CURRENCY_ID,to_char(ENTRY_DATE,'DD/MM/YYYY') ENTRY_DATE,(NVL(M_DPREMIUM_OC,0)+NVL(ADJUSTMENT_PREMIUM_OC,0)) PREMIUM_OC,(NVL(M_DPREMIUM_DC,0)+NVL(ADJUSTMENT_PREMIUM_DC,0)) PREMIUM_DC FROM RSK_XL_PREMIUM_DETAILS RD WHERE BRANCH_CODE\=? AND CONTRACT_NO\=? AND LAYER_NO\=? 
XL_CLAIM_DETAILS = SELECT CP.CLAIM_NO,CLAIM_PAYMENT_NO,(NVL(CP.PAID_CLAIM_OS_DC,0)+NVL(CP.SAF_OS_DC,0)+NVL(CP.OTH_FEE_OS_DC,0)) PAID_EXCHANGE_RATE_DC,(NVL(CP.PAID_CLAIM_OS_OC,0)+NVL(CP.SAF_OS_OC,0)+NVL(CP.OTH_FEE_OS_OC,0)) PAID_EXCHANGE_RATE_OC,CP.EXCHANGE_RATE, (SELECT  TMAS_DEPARTMENT_NAME from TMAS_DEPARTMENT_MASTER DM WHERE DM.TMAS_DEPARTMENT_ID=CD.SUB_CLASS and DM.TMAS_STATUS='Y' AND TMAS_PRODUCT_ID=? AND DM.BRANCH_CODE=CP.BRANCH_CODE) TMAS_DEPARTMENT_NAME,TO_CHAR(CP.INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE, (SELECT SHORT_NAME FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID = CD.CURRENCY AND CM.BRANCH_CODE = CD.BRANCH_CODE AND CM.STATUS='Y' AND CM.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CU WHERE CU.CURRENCY_ID = CM.CURRENCY_ID AND CU.BRANCH_CODE = CM.BRANCH_CODE AND CU.STATUS='Y'))CURRENCY_NAME, CD.CURRENCY, ( SELECT SHORT_NAME FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID = D.RSK_ORIGINAL_CURR AND CM.BRANCH_CODE = CD.BRANCH_CODE AND CM.STATUS='Y' AND CM.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CU WHERE CU.CURRENCY_ID = CM.CURRENCY_ID AND CU.BRANCH_CODE = CM.BRANCH_CODE AND CU.STATUS='Y'))RDS_CURRENCY_NAME,D.RSK_ORIGINAL_CURR  FROM TTRN_CLAIM_PAYMENT CP,TTRN_CLAIM_DETAILS CD, TTRN_RISK_DETAILS D,TTRN_RISK_COMMISSION P,POSITION_MASTER PM  WHERE  CD.CONTRACT_NO=CP.CONTRACT_NO AND CD.LAYER_NO=CP.LAYER_NO AND CD.CLAIM_NO=CP.CLAIM_NO AND  CD.CONTRACT_NO=? AND CD.LAYER_NO=? AND CD.BRANCH_CODE=? and D.RSK_CONTRACT_NO=CP.CONTRACT_NO AND D.RSK_LAYER_NO = CP.LAYER_NO AND  D.BRANCH_CODE =CP.BRANCH_CODE AND D.RSK_PROPOSAL_NUMBER=P.RSK_PROPOSAL_NUMBER AND D.RSK_LAYER_NO = P.RSK_LAYER_NO AND  D.BRANCH_CODE =P.BRANCH_CODE  AND PM.PROPOSAL_NO = P.RSK_PROPOSAL_NUMBER AND PM.LAYER_NO=P.RSK_LAYER_NO AND PM.CONTRACT_NO = CP.CONTRACT_NO AND ( TRUNC(P.RSK_END_DATE)<=TO_DATE(?,'dd/mm/yyyy')  OR TRUNC(PM.ACCOUNT_DATE)<=TO_DATE(?,'dd/mm/yyyy')) AND D.RSK_ENDORSEMENT_NO= P.RSK_ENDORSEMENT_NO AND P.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION TC WHERE TC.RSK_PROPOSAL_NUMBER=P.RSK_PROPOSAL_NUMBER ) AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER M WHERE M.PROPOSAL_NO = PM.PROPOSAL_NO AND M.LAYER_NO=PM.LAYER_NO AND  M.CONTRACT_NO = PM.CONTRACT_NO) and CP.CLAIM_PAYMENT_NO !=? order by INCEPTION_DATE asc,CLAIM_PAYMENT_NO asc
GET_RIP_TYPE = SELECT NVL((SELECT  distinct REINSTATEMENT FROM TTRN_RIP T WHERE T.CONTRACT_NO=? AND LAYER_NO=? AND BRANCH_CODE=? AND PRODUCT_ID=? AND SUB_CLASS=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RIP R WHERE R.CONTRACT_NO=T.CONTRACT_NO AND R.LAYER_NO=T.LAYER_NO AND R.PROPOSAL_NO =T.PROPOSAL_NO) and SECTION_TYPE='A'),'N') FROM DUAL
COVER_SUM_INSURED_VAL =WITH E1 AS (SELECT NVL(RSK_SHARE_SIGNED,0) RSK_SHARE_SIGNED FROM TTRN_RISK_PROPOSAL R WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_LAYER_NO\=? AND BRANCH_CODE\=?  AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL P WHERE  P.RSK_PROPOSAL_NUMBER\=R.RSK_PROPOSAL_NUMBER  AND P.RSK_LAYER_NO\=R.RSK_LAYER_NO AND P.BRANCH_CODE\=R.BRANCH_CODE)),E2 AS(SELECT SUM(NVL(RSK_COVER_LIMT,0)) COVER_LIMIT  FROM TTRN_RSK_CLASS_LIMITS RC WHERE  RC.RSK_PROPOSAL_NUMBER\=?  AND RC.RSK_LAYER_NO\=? AND RC.RSK_CONTRACT_NO\=? AND RC.BRANCH_CODE\=? AND RC.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM  TTRN_RSK_CLASS_LIMITS L WHERE L.RSK_PROPOSAL_NUMBER\=RC.RSK_PROPOSAL_NUMBER))SELECT (COVER_LIMIT*RSK_SHARE_SIGNED)/100 FROM E1,E2 
#GET_RIP_VALUES =SELECT   REINST_TYPE,AMOUNT_PERCENT,MIN_AMOUNT_PERCENT,MIN_TIME_PERCENT,COUNT  from (SELECT rownum rx ,REINST_TYPE,AMOUNT_PERCENT,MIN_AMOUNT_PERCENT,MIN_TIME_PERCENT,count(*)  OVER(PARTITION By PROPOSAL_NO) COUNT from TTRN_RIP P where P.PROPOSAL_NO\=? and P.CONTRACT_NO\=? AND P.LAYER_NO\=? AND P.BRANCH_CODE\=? and P.SECTION_TYPE\='A' AND P.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM  TTRN_RIP T WHERE T.PROPOSAL_NO\=P.PROPOSAL_NO and T.CONTRACT_NO\=P.CONTRACT_NO AND T.LAYER_NO\=P.LAYER_NO AND T.BRANCH_CODE\=P.BRANCH_CODE))x  where rx\=?
GET_RIP_VALUES =SELECT REINST_TYPE,AMOUNT_PERCENT,MIN_AMOUNT_PERCENT,MIN_TIME_PERCENT,count(*)  OVER(PARTITION By PROPOSAL_NO) COUNT from TTRN_RIP P where P.PROPOSAL_NO\=? and P.CONTRACT_NO\=? AND P.LAYER_NO\=? AND P.BRANCH_CODE\=? and P.SECTION_TYPE\='A' AND REINST_NO\=? AND P.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM  TTRN_RIP T WHERE T.PROPOSAL_NO\=P.PROPOSAL_NO and T.CONTRACT_NO\=P.CONTRACT_NO AND T.LAYER_NO\=P.LAYER_NO AND T.BRANCH_CODE\=P.BRANCH_CODE)
GET_DATE_OF_LOSS = SELECT TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') DATE_OF_LOSS FROM TTRN_CLAIM_DETAILS WHERE CLAIM_NO=? AND CONTRACT_NO=? AND LAYER_NO=? and BRANCH_CODE=?
GET_RDS_DATE = SELECT TO_CHAR(RSK_INCEPTION_DATE,'DD/MM/YYYY') RSK_INCEPTION_DATE, TO_CHAR(RSK_EXPIRY_DATE,'DD/MM/YYYY') RSK_EXPIRY_DATE from TTRN_RISK_DETAILS D WHERE D.RSK_PROPOSAL_NUMBER\=? AND D.RSK_CONTRACT_NO\=? AND D.RSK_LAYER_NO\=? AND D.BRANCH_CODE\=? AND D.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS RD WHERE RD.RSK_PROPOSAL_NUMBER\= D.RSK_PROPOSAL_NUMBER) 
GET_ANNUAL_AGR_VAL =SELECT nvl((SELECT NVL(ANNUAL_AGGRE_LAIBLE,0) FROM TTRN_RIP R WHERE R.PROPOSAL_NO\=? AND R.CONTRACT_NO\=? AND  R.LAYER_NO\=? AND R.BRANCH_CODE\=? AND R.DEPARTMENT_CLASS\=? AND R.SECTION_TYPE\='B' AND R.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_RIP T WHERE T.PROPOSAL_NO\=R.PROPOSAL_NO AND  T.CONTRACT_NO\=R.CONTRACT_NO AND  T.LAYER_NO\=R.LAYER_NO AND R.SECTION_TYPE\='B')),0) from dual
#PREMIUM_SLIDE_SCALE_INSERT =INSERT INTO TTRN_PRM_SLIDE_SCL_COMM(PREM_OC,ACQ_COST_BROKR,CLAIM_PAID_OC,CLAIM_OS_OC,MANAGMT_EXP,PRFT_LOSS_FRWD,OTH_ARJ,TRTY_RES_AFTR_ADJ,PROFIT_COMM_ADJ,PROFIT_RATIO,LOSS_RATIO,PROFIT_COMM,SUP_PROFIT_COMM,COMM_PAID_TIL_DATE_OC,CURRENCY_ID,CONTRACT_NO,BRANCH_CODE,DEPT_ID,TRANSACTION_DT,TRANSACTION_NO,LOGIN_ID,INCEPTION_DATE,EXCHANGE_RATE,PRODUCT_ID,AMEND_ID)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,SYSDATE,?,?,?)

RDS_CURRENCY_NAME =SELECT SHORT_NAME FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID \= (SELECT RSK_ORIGINAL_CURR FROM TTRN_RISK_DETAILS D  WHERE D.RSK_PROPOSAL_NUMBER\=? AND D.RSK_CONTRACT_NO\=? AND D.RSK_LAYER_NO\=? AND D.RSK_PRODUCTID\=? AND D.RSK_ENDORSEMENT_NO \=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS RD WHERE  RD.RSK_PROPOSAL_NUMBER\= D.RSK_PROPOSAL_NUMBER)) AND CM.BRANCH_CODE \= ? AND CM.STATUS\='Y' AND CM.AMEND_ID \=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CU WHERE CU.CURRENCY_ID \= CM.CURRENCY_ID AND CU.BRANCH_CODE \= CM.BRANCH_CODE AND CU.STATUS\='Y')

GET_STATISTIC_QUERY = SELECT TRANSACTION_NO, TO_CHAR (TRANSACTION_DATE, 'DD/MM/YYYY') TRANSACTION_DATE, AMENDMENT_DATE, TRANSACTION_MONTH, TRANSACTION_YEAR, DOC_TYPE, CEDANT_REFERENCE, CONTRACT_NO, UW_YEAR, RSK_SPFCID, TO_CHAR (INCEPTION_DATE, 'DD/MM/YYYY') INCEPTION_DATE, TO_CHAR (EXPIRY_DATE, 'DD/MM/YYYY') EXPIRY_DATE, COMPANY_CODE, BROKER_CODE, RSK_INSURED_NAME, LOSS_DATE, CLAIM_NO, ACCOUNT_PERIOD_QTR, CURRENCY, PREMIUM_QUOTASHARE_OC, PREMIUM_SURPLUS_OC, PREMIUM_TOTAL, XL_COST_OC, PREMIUM_PORTFOLIOIN_OC, PREMIUM_PORTFOLIOOUT_OC, NET_PREMIUM, COMMISSION_QUOTASHARE_OC, COMMISSION_SURPLUS_OC, COMMISSION_TOTAL, BROKERAGE_AMT_OC, TAX_AMT_OC, OVERRIDER_AMT_OC, OTHER_COST_OC, PROFIT_COMMISSION_OC, TOTAL_COST, WITH_HOLDING_TAX_OC, PREMIUM_RESERVE_RETAINED_OC, PREMIUM_RESERVE_REALSED_OC, LOSS_RESERVERETAINED_OC, LOSS_RESERVE_RELEASED_OC, INTEREST_OC, CLAIMS_PAID_OC, CLAIM_RECOVERY_OC, CLAIM_PORTFOLIOIN_OC, CLAIM_PORTFOLIO_OUT_OC, CASH_LOSSPAID_OC, CASH_LOSS_CREDIT_OC, NET_CLAIMS, RECEIPT_AMOUNT, PAYMENT_AMOUNT, NET_DUE, ALLOCATED_TILL_DATE, PENDING_ALLOCATION, ALLOCATION_NUMBER, EXCHANGE_RATE, PREMIUM_QUOTASHARE_DC, PREMIUM_SURPLUS_DC, PREMIUM_TOTAL_DC, XL_COST_DC, PREMIUM_PORTFOLIOIN_DC, PREMIUM_PORTFOLIOOUT_DC, NET_PREMIUM_DC, COMMISSION_QUOTASHARE_DC, COMMISSION_SURPLUS_DC, COMMISSION_TOTAL_DC, BROKERAGE_AMT_DC, TAX_AMT_DC, OVERRIDER_AMT_DC, OTHER_COST_DC, PROFIT_COMMISSION_DC, TOTAL_COST_DC, WITH_HOLDING_TAX_DC, PREMIUM_RESERVE_RETAINED_DC, PREMIUM_RESERVE_REALSED_DC, LOSS_RESERVERETAINED_DC, LOSS_RESERVE_RELEASED_DC, INTEREST_DC, CLAIMS_PAID_DC, CLAIM_RECOVERY_DC, CLAIM_PORTFOLIOIN_DC, CLAIM_PORTFOLIO_OUT_DC, CASH_LOSSPAID_DC, CASH_LOSS_CREDIT_DC, NET_CLAIMS_DC, RECEIPT_AMOUNT_DC, PAYMENT_AMOUNT_DC, NET_DUE_DC, ALLOCATED_TILL_DATE_DC, PENDING_ALLOCATION_DC, ALLOCATION_NUMBER_DC, BRANCH_CODE, REINSTATEMENTPREMIUM_OC, REINSTATEMENTPREMIUM_DC, CUSTOMER_ID, BROKER_ID, SNO, LOGIN_ID, TDS_OC, TDS_DC, ST_OC, ST_DC, SC_COMM_OC, SC_COMM_DC, BONUS_OC, BONUS_DC, LPC_OC, LPC_DC, PRD_ALLOCATED_TILL_DATE, LRD_ALLOCATED_TILL_DATE, TO_CHAR (STATEMENT_DATE, 'DD/MM/YYYY')  STATEMENT_DATE, OSBYN, DEPARTMENT_NAME, OSCLAIM_LOSSUPDATE_OC, OSCLAIM_LOSSUPDATE_DC, LAYER_NO, SAF_OS_OC, OTH_FEE_OS_OC, SAF_OS_DC, OTH_FEE_OS_DC FROM TRANSACTION_REPORT WHERE BRANCH_CODE=? and CONTRACT_NO=?
GET_CLAIM_COVER_DEPARTMENT_ID=SELECT TMAS_DEPARTMENT_ID,TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_DEPARTMENT_ID IN(SELECT Distinct(REGEXP_SUBSTR(RSK_COVER_CLASS,'[^,]+',1,LEVEL)) lc_login FROM(SELECT RSK_COVER_CLASS FROM TTRN_RSK_CLASS_LIMITS C WHERE  C.RSK_CONTRACT_NO=? AND C.RSK_LAYER_NO=? AND C.RSK_PRODUCTID=? AND C.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RSK_CLASS_LIMITS  L WHERE L.RSK_PROPOSAL_NUMBER=C.RSK_PROPOSAL_NUMBER AND L.RSK_CONTRACT_NO=C.RSK_CONTRACT_NO AND L.RSK_LAYER_NO=C.RSK_LAYER_NO))B  CONNECT BY LEVEL <= LENGTH(RSK_COVER_CLASS) - LENGTH(REPLACE(RSK_COVER_CLASS,',','')  ))AND TMAS_PRODUCT_ID=? AND TMAS_STATUS='Y' AND BRANCH_CODE=?
treaty.withdraw.report.list=SELECT  *  FROM TABLE(PF_TREATY_WDL_PENDG_REP (?,?,?,?,?,?))
GET_GNPI_PREMIUM=WITH E1 AS (SELECT NVL(RSK_SHARE_SIGNED,0) RSK_SHARE_SIGNED,RSK_ADJRATE FROM  TTRN_RISK_PROPOSAL R WHERE RSK_PROPOSAL_NUMBER\=(SELECT RSK_PROPOSAL_NUMBER FROM TTRN_RISK_DETAILS PM WHERE RSK_CONTRACT_NO\=? AND RSK_LAYER_NO\=? AND RSK_ORIGINAL_CURR \=? AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO\=PM.RSK_CONTRACT_NO AND RSK_LAYER_NO\=PM.RSK_LAYER_NO AND RSK_ORIGINAL_CURR\=PM.RSK_ORIGINAL_CURR)) AND RSK_LAYER_NO\=? AND BRANCH_CODE\=? AND RSK_ENDORSEMENT_NO\=( SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL P WHERE  P.RSK_PROPOSAL_NUMBER\=R.RSK_PROPOSAL_NUMBER AND P.RSK_LAYER_NO\=R.RSK_LAYER_NO AND P.BRANCH_CODE\=R.BRANCH_CODE)),E2 AS(SELECT SUM(NVL(RSK_GNPI_AS_OFF,0)) COVER_LIMIT FROM TTRN_RSK_CLASS_LIMITS RC  WHERE  RC.RSK_CONTRACT_NO\=? AND RC.RSK_LAYER_NO\=? AND RC.BRANCH_CODE\=? AND RSK_COVER_CLASS\=? AND RC.RSK_ENDORSEMENT_NO\=?) SELECT (COVER_LIMIT*RSK_SHARE_SIGNED*RSK_ADJRATE/100)/100 RSK_GNPI_AS_OFF  FROM E1,E2
GET_DEPOSIT_PREMIUM=SELECT SUM(NVL(M_DPREMIUM_OC,0)+NVL(ADJUSTMENT_PREMIUM_OC,0)) MD_PREMIUM FROM RSK_PREMIUM_DETAILS WHERE CONTRACT_NO=? AND LAYER_NO=? AND PREMIUM_CLASS=? AND CURRENCY_ID=? AND BRANCH_CODE=?


GET_STATISTIC_DEPARTMENT = SELECT TMAS_DEPARTMENT_ID,TMAS_DEPARTMENT_NAME FROM  TMAS_DEPARTMENT_MASTER D WHERE D.TMAS_PRODUCT_ID=? AND D.TMAS_STATUS=? AND D.BRANCH_CODE=? AND TMAS_DEPARTMENT_ID IN(SELECT DEPT_ID FROM POSITION_MASTER P WHERE CONTRACT_NO=? AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER M WHERE M.PROPOSAL_NO=P.PROPOSAL_NO AND M.CONTRACT_NO=P.CONTRACT_NO))
GET_DEPT_NAME =SELECT TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER DM WHERE DM.TMAS_DEPARTMENT_ID\=? and DM.TMAS_STATUS\='Y' AND TMAS_PRODUCT_ID\=? AND DM.BRANCH_CODE\=?
GET_RDS_CURRENCY_ID = SELECT RSK_ORIGINAL_CURR FROM TTRN_RISK_DETAILS P WHERE RSK_CONTRACT_NO\=? AND RSK_LAYER_NO\=? AND RSK_PRODUCTID\=? AND BRANCH_CODE\=? and P.RSK_PROPOSAL_NUMBER\=?  and RSK_ENDORSEMENT_NO \=(select max(RSK_ENDORSEMENT_NO) from TTRN_RISK_DETAILS D WHERE D.RSK_CONTRACT_NO \= P.RSK_CONTRACT_NO AND D.RSK_LAYER_NO\=P.RSK_LAYER_NO AND D.RSK_PROPOSAL_NUMBER\=P.RSK_PROPOSAL_NUMBER)
GET_CURRENCY_ID = SELECT RSK_ORIGINAL_CURR,RSK_ENDORSEMENT_NO FROM TTRN_RISK_DETAILS R WHERE R.RSK_PROPOSAL_NUMBER=? AND R.RSK_CONTRACT_NO=? AND R.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS D WHERE D.RSK_PROPOSAL_NUMBER=R.RSK_PROPOSAL_NUMBER AND D.RSK_CONTRACT_NO=R.RSK_CONTRACT_NO)

GET_BONUS_ID = SELECT RSK_BONUS_ID FROM TTRN_RISK_COMMISSION P WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION R WHERE R.RSK_PROPOSAL_NUMBER = P.RSK_PROPOSAL_NUMBER  )
GET_CRESTA_DATE =SELECT M.CRESTA_ID,M.CRESTA_NAME,COUNTRY_NAME FROM TMAS_CRESTA_MASTER M,COUNTRY_MASTER C WHERE M.BRANCH_CODE\=? AND M.STATUS\='Y' AND C.COUNTRY_ID\=M.TERITORY_CODE AND C.BRANCH_CODE\=? AND C.STATUS\='Y'
INSERT_SECTION_DETAILS=INSERT INTO TTRN_PTTY_SECTION(SECTION_NO,CONTRACT_NO,DEPT_ID,SECTION_NAME,AMEND_ID,BRANCH_CODE,LOGIN_ID,ENTRY_DATE) VALUES(?,?,?,?,0,?,?,SYSDATE)
GET_MAX_SECTION_NO = SELECT NVL(MAX(NVL(SECTION_NO,0))+1,1) FROM TTRN_PTTY_SECTION WHERE CONTRACT_NO=? AND DEPT_ID=? AND BRANCH_CODE=?
GET_SECTION_LIST=SELECT SECTION_NO,SECTION_NAME FROM TTRN_PTTY_SECTION TPS WHERE CONTRACT_NO=? AND DEPT_ID=? AND BRANCH_CODE=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM  TTRN_PTTY_SECTION WHERE CONTRACT_NO=TPS.CONTRACT_NO AND DEPT_ID=TPS.DEPT_ID AND BRANCH_CODE=TPS.BRANCH_CODE )
GET_SECTION_COUNT=SELECT COUNT(*) FROM TTRN_PTTY_SECTION TPS WHERE CONTRACT_NO\=? AND DEPT_ID\=? AND BRANCH_CODE\=? AND UPPER(SECTION_NAME)\=UPPER(?) AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM  TTRN_PTTY_SECTION WHERE CONTRACT_NO\=TPS.CONTRACT_NO AND DEPT_ID\=TPS.DEPT_ID AND BRANCH_CODE\=TPS.BRANCH_CODE )
GET_FAC_PROPOSAL_NO=SELECT PROPOSAL_NO,DEPT_ID FROM POSITION_MASTER PM WHERE CONTRACT_NO=?  AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO=PM.CONTRACT_NO )
GET_PRO_PROPOSAL_NO=SELECT PROPOSAL_NO,DEPT_ID FROM POSITION_MASTER PM WHERE CONTRACT_NO=? AND DEPT_ID=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO=PM.CONTRACT_NO AND DEPT_ID=PM.DEPT_ID)
GET_XOL_PROPOSAL_NO=SELECT PROPOSAL_NO,DEPT_ID FROM POSITION_MASTER PM WHERE CONTRACT_NO=? AND LAYER_NO=NVL(?,0) AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE CONTRACT_NO=PM.CONTRACT_NO AND LAYER_NO=PM.LAYER_NO)
UPDATE_UW_SHARE=UPDATE TTRN_RISK_COMMISSION SET RSK_LEAD_UW_SHARE=? WHERE RSK_PROPOSAL_NUMBER=?  AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=?)

CLAIN_ARCH_INSERT = INSERT INTO TTRN_CLAIM_PAYMENT_ARCHIVE (SL_NO, CLAIM_NO, CONTRACT_NO, LAYER_NO, PAYMENT_REQUEST_NO, PAID_AMOUNT_OC, PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_OC, LOSS_ESTIMATE_REVISED_DC, CLAIM_NOTE_RECOMM, PAYMENT_REFERENCE, ADVICE_TREASURY, INCEPTION_DATE, EXPIRY_DATE, REMARKS, STATUS, CLAIM_PAYMENT_NO, ADVICE_TREASURY_EMAILID, ALLOCATED_TILL_DATE, ACC_CLAIM, CHECKYN, RESERVE_ID, SETTLEMENT_STATUS, REINSTATEMENT_TYPE, REINSPREMIUM_OURSHARE_OC, REINSPREMIUM_OURSHARE_DC, NETCLAIMAMT_OURSHARE_OC, NETCLAIMAMT_OURSHARE_DC, EXCHANGE_RATE, INSURED_NAME, CASH_LOSS_SETTLED_TILLDATE, BRANCH_CODE, LOGIN_ID, PAID_CLAIM_OS_OC, PAID_CLAIM_OS_DC, SAF_OS_OC, SAF_OS_DC, OTH_FEE_OS_OC, OTH_FEE_OS_DC, SYS_DATE,AMEND_ID)SELECT SL_NO, CLAIM_NO, CONTRACT_NO, LAYER_NO, PAYMENT_REQUEST_NO, PAID_AMOUNT_OC, PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_OC, LOSS_ESTIMATE_REVISED_DC, CLAIM_NOTE_RECOMM, PAYMENT_REFERENCE, ADVICE_TREASURY, INCEPTION_DATE, EXPIRY_DATE, REMARKS, STATUS, CLAIM_PAYMENT_NO, ADVICE_TREASURY_EMAILID, ALLOCATED_TILL_DATE, ACC_CLAIM, CHECKYN, RESERVE_ID, SETTLEMENT_STATUS, REINSTATEMENT_TYPE, REINSPREMIUM_OURSHARE_OC, REINSPREMIUM_OURSHARE_DC, NETCLAIMAMT_OURSHARE_OC, NETCLAIMAMT_OURSHARE_DC, EXCHANGE_RATE, INSURED_NAME, CASH_LOSS_SETTLED_TILLDATE, BRANCH_CODE, LOGIN_ID, PAID_CLAIM_OS_OC, PAID_CLAIM_OS_DC, SAF_OS_OC, SAF_OS_DC, OTH_FEE_OS_OC, OTH_FEE_OS_DC, sysdate,(SELECT NVL(MAX(AMEND_ID)+1,0) FROM TTRN_CLAIM_PAYMENT_ARCHIVE WHERE CONTRACT_NO=? AND CLAIM_NO=? AND LAYER_NO=? and CLAIM_PAYMENT_NO=?)  FROM TTRN_CLAIM_PAYMENT WHERE CONTRACT_NO=? AND CLAIM_NO=? AND LAYER_NO=? and CLAIM_PAYMENT_NO=?
CLAIM_UPDATE_PAYMENT = UPDATE TTRN_CLAIM_PAYMENT SET  INCEPTION_DATE=TO_DATE(?,'DD/MM/YYYY'),PAYMENT_REFERENCE=?,PAYMENT_REQUEST_NO=?,PAID_CLAIM_OS_OC=?,PAID_CLAIM_OS_DC=?,SAF_OS_OC=?,SAF_OS_DC=?,OTH_FEE_OS_OC=?,OTH_FEE_OS_DC=?,BRANCH_CODE=?,LOGIN_ID=?,SYS_DATE=SYSDATE,PAID_AMOUNT_OC=?,PAID_AMOUNT_DC=?,REMARKS=?,REINSTATEMENT_TYPE=?,REINSPREMIUM_OURSHARE_OC=?,REINSPREMIUM_OURSHARE_DC=?,PAYMENT_TYPE=? WHERE CONTRACT_NO=? AND CLAIM_NO=? AND LAYER_NO=? and CLAIM_PAYMENT_NO=?
GET_CLAIM_PAYMENT_DATA = SELECT  REINSPREMIUM_OURSHARE_OC,REINSTATEMENT_TYPE,decode(REINSTATEMENT_TYPE,'MDP','On M&D Premium','ADP','On Adjusted Premium','FDP','On Final Adjusted Premium','NA','Not Applicable') REINSTATEMENT_TYPE_NAME,CLAIM_PAYMENT_NO,PAYMENT_REQUEST_NO,PAID_AMOUNT_OC,PAID_CLAIM_OS_OC,LOSS_ESTIMATE_REVISED_OC,PAYMENT_REFERENCE,to_char(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,REMARKS,PAID_CLAIM_OS_DC,SAF_OS_OC,OTH_FEE_OS_OC,PAYMENT_TYPE FROM TTRN_CLAIM_PAYMENT WHERE CLAIM_NO=? AND CONTRACT_NO=? AND LAYER_NO=? and CLAIM_PAYMENT_NO=?
GET_CLAIM_CURRENCY =  SELECT CURRENCY FROM TTRN_CLAIM_DETAILS WHERE CLAIM_NO=? AND CONTRACT_NO=? AND LAYER_NO=?
GET_SIGN_SHARE_EQUAL_PRODUCT1=SELECT COUNT(*) FROM TTRN_FAC_RISK_PROPOSAL RK WHERE SHARE_SIGNED=? AND RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_FAC_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER=RK.RSK_PROPOSAL_NUMBER)
GET_SIGN_SHARE_EQUAL_PRODUCT23=SELECT COUNT(*) FROM TTRN_RISK_PROPOSAL RK WHERE RSK_SHARE_SIGNED\=? AND RSK_PROPOSAL_NUMBER\=? AND RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_PROPOSAL WHERE RSK_PROPOSAL_NUMBER\=RK.RSK_PROPOSAL_NUMBER)
COMMON_SELECT_GETCONSTDET_BASIC =SELECT DISTINCT TYPE,DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID\=? AND STATUS\=?
GET_CLAIM_COVERLIMIT=SELECT NVL(RSK_COVER_LIMT,0) FROM TTRN_RSK_CLASS_LIMITS TL WHERE RSK_PROPOSAL_NUMBER\=? AND RSK_COVER_CLASS\=? AND  RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RSK_CLASS_LIMITS WHERE RSK_PROPOSAL_NUMBER\=TL.RSK_PROPOSAL_NUMBER AND RSK_LAYER_NO\=TL.RSK_LAYER_NO AND RSK_COVER_CLASS\= TL.RSK_COVER_CLASS)
GET_CLAIM_COVERLIMIT_FAC = SELECT NVL((SELECT SUM(NVL(RSK_COVERLIMIT_OC,0)) FROM TTRN_FAC_SI S WHERE S.PROPOSAL_NO\=?  AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_FAC_SI I WHERE I.PROPOSAL_NO\=S.PROPOSAL_NO)),0) RSK_COVERLIMIT_OC FROM DUAL 
GET_COLUMN_HEADER=SELECT TO_CHAR(RANGE_START,'DD/MM/YYYY') ||' to ' ||TO_CHAR(RANGE_END, 'DD/MM/YYYY') RANGE FROM (SELECT  ROWNUM AS ROW_NO, ADD_MONTHS( TRUNC(TO_DATE(?,'DD/MM/YYYY')), (LEVEL-1) *12)  AS RANGE_START,ADD_MONTHS( TRUNC(TO_DATE(?,'DD/MM/YYYY')), (12)*(LEVEL) )-1  AS RANGE_END, COUNT(*) OVER() CNT FROM (SELECT DISTINCT TO_DATE(?,'DD/MM/YYYY')   FROM DUAL) CONNECT BY ADD_MONTHS( TRUNC(TO_DATE(?,'DD/MM/YYYY'), 'Y'), 12*(LEVEL) ) -1<=TO_DATE(?,'DD/MM/YYYY') ORDER BY RANGE_START)
GET_RENEWAL_STATISTICS_LIST=SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)M1,SUM(M2)M2,SUM(M3)M3,SUM(M4)M4,SUM(M5)M5,SUM(M6)M6,SUM(M7)M7,SUM(M8)M8,SUM(M9)M9,SUM(M10)M10,SUM(M11)M11,SUM(M12)M12,SUM(M13)M13,SUM(M14)M14 ,SUM(M15)M15,SUM(M16)M16,SUM(M17)M17,SUM(M18)M18,SUM(M19)M19,SUM(M20)M20,sum(AMOUNT_DC) TOTAL FROM TABLE(FN_RENEWAL_STATISTICS(?,?,?,?,?,?,?)) WHERE UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR
GET_TREATY_RESULT_UW=SELECT 'Treaty Result'ITEM,P.CNT, P.CONTRACT_NO,P.UW_YEAR, (NVL(PM1,0)-NVL(ACM1,0)-NVL(CM1,0)-NVL(COM1,0))M1,(NVL(PM2,0)-NVL(ACM2,0)-NVL(CM2,0)-NVL(COM2,0))M2,(NVL(PM3,0)-NVL(ACM3,0)-NVL(CM3,0)-NVL(COM3,0))M3,(NVL(PM4,0)-NVL(ACM4,0)-NVL(CM4,0)-NVL(COM4,0))M4,(NVL(PM5,0)-NVL(ACM5,0)-NVL(CM5,0)-NVL(COM5,0))M5,(NVL(PM6,0)-NVL(ACM6,0)-NVL(CM6,0)-NVL(COM6,0))M6,(NVL(PM7,0)-NVL(ACM7,0)-NVL(CM7,0)-NVL(COM7,0))M7,(NVL(PM8,0)-NVL(ACM8,0)-NVL(CM8,0)-NVL(COM8,0))M8,(NVL(PM9,0)-NVL(ACM9,0)-NVL(CM9,0)-NVL(COM9,0))M9,(NVL(PM10,0)-NVL(ACM10,0)-NVL(CM10,0)-NVL(COM10,0))M10,(NVL(PM11,0)-NVL(ACM11,0)-NVL(CM11,0)-NVL(COM11,0))M11,(NVL(PM12,0)-NVL(ACM12,0)-NVL(CM12,0)-NVL(COM12,0))M12,(NVL(PM13,0)-NVL(ACM13,0)-NVL(CM13,0)-NVL(COM13,0))M13,(NVL(PM14,0)-NVL(ACM14,0)-NVL(CM14,0)-NVL(COM14,0))M14,(NVL(PM15,0)-NVL(ACM15,0)-NVL(CM15,0)-NVL(COM15,0))M15,(NVL(PM16,0)-NVL(ACM16,0)-NVL(CM16,0)-NVL(COM16,0))M16,(NVL(PM17,0)-NVL(ACM17,0)-NVL(CM17,0)-NVL(COM17,0))M17,(NVL(PM18,0)-NVL(ACM18,0)-NVL(CM18,0)-NVL(COM18,0))M18,(NVL(PM19,0)-NVL(ACM19,0)-NVL(CM19,0)-NVL(COM19,0))M19,(NVL(PM20,0)-NVL(ACM20,0)-NVL(CM20,0)-NVL(COM20,0))M20, (NVL(PTOTAL,0)-NVL(ACTOTAL,0)-NVL(CTOTAL,0)-NVL(COTOTAL,0))TOTAL FROM  (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)PM1,SUM(M2)PM2,SUM(M3)PM3,SUM(M4)PM4,SUM(M5)PM5,SUM(M6)PM6,SUM(M7)PM7,SUM(M8)PM8,SUM(M9)PM9,SUM(M10)PM10,SUM(M11)PM11,SUM(M12)PM12,SUM(M13)PM13,SUM(M14)PM14 ,SUM(M15)PM15,SUM(M16)PM16,SUM(M17)PM17,SUM(M18)PM18,SUM(M19)PM19,SUM(M20)PM20,sum(AMOUNT_DC) PTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?, ?, ?, ?, ?, ?, 'PREMIUM'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)P  LEFT OUTER JOIN (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)ACM1,SUM(M2)ACM2,SUM(M3)ACM3,SUM(M4)ACM4,SUM(M5)ACM5,SUM(M6)ACM6,SUM(M7)ACM7,SUM(M8)ACM8,SUM(M9)ACM9,SUM(M10)ACM10,SUM(M11)ACM11,SUM(M12)ACM12,SUM(M13)ACM13,SUM(M14)ACM14 ,SUM(M15)ACM15,SUM(M16)ACM16,SUM(M17)ACM17,SUM(M18)ACM18,SUM(M19)ACM19,SUM(M20)ACM20,sum(AMOUNT_DC) ACTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?, ?, ?, ?, ?, ?, 'ACQCOST'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)AC on(P.UW_YEAR=AC.UW_YEAR)LEFT OUTER JOIN (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)CM1,SUM(M2)CM2,SUM(M3)CM3,SUM(M4)CM4,SUM(M5)CM5,SUM(M6)CM6,SUM(M7)CM7,SUM(M8)CM8,SUM(M9)CM9,SUM(M10)CM10,SUM(M11)CM11,SUM(M12)CM12,SUM(M13)CM13,SUM(M14)CM14 ,SUM(M15)CM15,SUM(M16)CM16,SUM(M17)CM17,SUM(M18)CM18,SUM(M19)CM19,SUM(M20)CM20,sum(AMOUNT_DC)  CTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?, ?, ?, ?, ?, ?, 'CLAIM'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)C   on(C.UW_YEAR=AC.UW_YEAR)LEFT OUTER JOIN  (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)COM1,SUM(M2)COM2,SUM(M3)COM3,SUM(M4)COM4,SUM(M5)COM5,SUM(M6)COM6,SUM(M7)COM7,SUM(M8)COM8,SUM(M9)COM9,SUM(M10)COM10,SUM(M11)COM11,SUM(M12)COM12,SUM(M13)COM13,SUM(M14)COM14 ,SUM(M15)COM15,SUM(M16)COM16,SUM(M17)COM17,SUM(M18)COM18,SUM(M19)COM19,SUM(M20)COM20,sum(AMOUNT_DC)  COTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?, ?, ?, ?, ?, ?, 'CLAIMOUTSTANDING'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)CO on(AC.UW_YEAR=CO.UW_YEAR) order by P.UW_YEAR
GET_CLAIM_RATIO_UW=SELECT 'Claims Ratio'ITEM,P.CNT, P.CONTRACT_NO,P.UW_YEAR, case when PM1>0 then ((NVL(CM1,0)+NVL(COM1,0))/(NVL(PM1,0)))*100 ELSE 99999999 end M1, case when PM2>0 then((NVL(CM2,0)+NVL(COM2,0))/(NVL(PM2,0)))*100 ELSE 99999999 end M2, case when PM3>0 then ((NVL(CM3,0)+NVL(COM3,0))/(NVL(PM3,0)))*100 ELSE 99999999 end M3, case when PM4>0 then((NVL(CM4,0)+NVL(COM4,0))/(NVL(PM4,0)))*100 ELSE 99999999 end M4,case when PM5>0 then ((NVL(CM5,0)+NVL(COM5,0))/(NVL(PM5,0)))*100 ELSE 99999999 end M5, case when PM6>0 then((NVL(CM6,0)+NVL(COM6,0))/(NVL(PM6,0)))*100 ELSE 99999999 end M6, case when PM7>0 then((NVL(CM7,0)+NVL(COM7,0))/(NVL(PM7,0)))*100 ELSE 99999999 end M7, case when PM8>0 then ((NVL(CM8,0)+NVL(COM8,0))/(NVL(PM8,0)))*100 ELSE 99999999 end M8,case when PM9>0 then ((NVL(CM9,0)+NVL(COM9,0))/(NVL(PM9,0)))*100 ELSE 99999999 end M9, case when PM10>0 then((NVL(CM10,0)+NVL(COM10,0))/(NVL(PM10,0)))*100 ELSE 99999999 end M10, case when PM11>0 then((NVL(CM11,0)+NVL(COM11,0))/(NVL(PM11,0)))*100 ELSE 99999999 end M11, case when PM12>0 then((NVL(CM12,0)+NVL(COM12,0))/(NVL(PM12,0)))*100 ELSE 99999999 end M12, case when PM13>0 then((NVL(CM13,0)+NVL(COM13,0))/(NVL(PM13,0)))*100 ELSE 99999999 end M13, case when PM14>0 then((NVL(CM14,0)+NVL(COM14,0))/(NVL(PM14,0)))*100 ELSE 99999999 end M14, case when PM15>0 then((NVL(CM15,0)+NVL(COM15,0))/(NVL(PM15,0)))*100 ELSE 99999999 end M15, case when PM16>0 then((NVL(CM16,0)+NVL(COM16,0))/(NVL(PM16,0)))*100 ELSE 99999999 end M16, case when PM17>0 then((NVL(CM17,0)+NVL(COM17,0))/(NVL(PM17,0)))*100 ELSE 99999999 end M17, case when PM18>0 then((NVL(CM18,0)+NVL(COM18,0))/(NVL(PM18,0)))*100 ELSE 99999999 end M18, case when PM19>0 then((NVL(CM19,0)+NVL(COM19,0))/(NVL(PM19,0)))*100 ELSE 99999999 end M19, case when PM20>0 then((NVL(CM20,0)+NVL(COM20,0))/(NVL(PM20,0)))*100 ELSE 99999999 end M20,case when PTOTAL>0 then((NVL(CTOTAL,0)+NVL(COTOTAL,0))/(NVL(PTOTAL,0)))*100 ELSE 99999999 end TOTAL FROM  (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)PM1,SUM(M2)PM2,SUM(M3)PM3,SUM(M4)PM4,SUM(M5)PM5,SUM(M6)PM6,SUM(M7)PM7,SUM(M8)PM8,SUM(M9)PM9,SUM(M10)PM10,SUM(M11)PM11,SUM(M12)PM12,SUM(M13)PM13,SUM(M14)PM14 ,SUM(M15)PM15,SUM(M16)PM16,SUM(M17)PM17,SUM(M18)PM18,SUM(M19)PM19,SUM(M20)PM20,sum(AMOUNT_DC) PTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?, ?, ?, ?, ?, ?, 'PREMIUM'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)P  LEFT OUTER JOIN (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)ACM1,SUM(M2)ACM2,SUM(M3)ACM3,SUM(M4)ACM4,SUM(M5)ACM5,SUM(M6)ACM6,SUM(M7)ACM7,SUM(M8)ACM8,SUM(M9)ACM9,SUM(M10)ACM10,SUM(M11)ACM11,SUM(M12)ACM12,SUM(M13)ACM13,SUM(M14)ACM14 ,SUM(M15)ACM15,SUM(M16)ACM16,SUM(M17)ACM17,SUM(M18)ACM18,SUM(M19)ACM19,SUM(M20)ACM20,sum(AMOUNT_DC) ACTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?, ?, ?, ?, ?, ?, 'ACQCOST'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)AC on(P.UW_YEAR=AC.UW_YEAR) LEFT OUTER JOIN (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)CM1,SUM(M2)CM2,SUM(M3)CM3,SUM(M4)CM4,SUM(M5)CM5,SUM(M6)CM6,SUM(M7)CM7,SUM(M8)CM8,SUM(M9)CM9,SUM(M10)CM10,SUM(M11)CM11,SUM(M12)CM12,SUM(M13)CM13,SUM(M14)CM14 ,SUM(M15)CM15,SUM(M16)CM16,SUM(M17)CM17,SUM(M18)CM18,SUM(M19)CM19,SUM(M20)CM20,sum(AMOUNT_DC) CTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?, ?, ?, ?, ?, ?, 'CLAIM'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)C   on(C.UW_YEAR=AC.UW_YEAR)LEFT OUTER JOIN (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)COM1,SUM(M2)COM2,SUM(M3)COM3,SUM(M4)COM4,SUM(M5)COM5,SUM(M6)COM6,SUM(M7)COM7,SUM(M8)COM8,SUM(M9)COM9,SUM(M10)COM10,SUM(M11)COM11,SUM(M12)COM12,SUM(M13)COM13,SUM(M14)COM14 ,SUM(M15)COM15,SUM(M16)COM16,SUM(M17)COM17,SUM(M18)COM18,SUM(M19)COM19,SUM(M20)COM20,sum(AMOUNT_DC) COTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?, ?, ?, ?, ?, ?, 'CLAIMOUTSTANDING'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)CO on(AC.UW_YEAR=CO.UW_YEAR) order by P.UW_YEAR
GET_COMINED_RATIO_UW=SELECT 'Combined Ratio'ITEM,P.CNT, P.CONTRACT_NO,P.UW_YEAR, case when PM1>0 then ((NVL(CM1,0)+NVL(COM1,0)+NVL(ACM1,0))/(NVL(PM1,0)))*100 ELSE 99999999 end M1, case when PM2>0 then((NVL(CM2,0)+NVL(COM2,0)+NVL(ACM2,0))/(NVL(PM2,0)))*100 ELSE 99999999 end M2, case when PM3>0 then ((NVL(CM3,0)+NVL(COM3,0)+NVL(ACM3,0))/(NVL(PM3,0)))*100 ELSE 99999999 end M3, case when PM4>0 then((NVL(CM4,0)+NVL(COM4,0)+NVL(ACM4,0))/(NVL(PM4,0)))*100 ELSE 99999999 end M4,case when PM5>0 then ((NVL(CM5,0)+NVL(COM5,0)+NVL(ACM5,0))/(NVL(PM5,0)))*100 ELSE 99999999 end M5, case when PM6>0 then((NVL(CM6,0)+NVL(COM6,0)+NVL(ACM6,0))/(NVL(PM6,0)))*100 ELSE 99999999 end M6, case when PM7>0 then((NVL(CM7,0)+NVL(COM7,0)+NVL(ACM7,0))/(NVL(PM7,0)))*100 ELSE 99999999 end M7, case when PM8>0 then ((NVL(CM8,0)+NVL(COM8,0)+NVL(ACM8,0))/(NVL(PM8,0)))*100 ELSE 99999999 end M8,case when PM9>0 then ((NVL(CM9,0)+NVL(COM9,0)+NVL(ACM9,0))/(NVL(PM9,0)))*100 ELSE 99999999 end M9, case when PM10>0 then((NVL(CM10,0)+NVL(COM10,0)+NVL(ACM10,0))/(NVL(PM10,0)))*100 ELSE 99999999 end M10, case when PM11>0 then((NVL(CM11,0)+NVL(COM11,0)+NVL(ACM11,0))/(NVL(PM11,0)))*100 ELSE 99999999 end M11, case when PM12>0 then((NVL(CM12,0)+NVL(COM12,0)+NVL(ACM12,0))/(NVL(PM12,0)))*100 ELSE 99999999 end M12, case when PM13>0 then((NVL(CM13,0)+NVL(COM13,0)+NVL(ACM13,0))/(NVL(PM13,0)))*100 ELSE 99999999 end M13, case when PM14>0 then((NVL(CM14,0)+NVL(COM14,0)+NVL(ACM14,0))/(NVL(PM14,0)))*100 ELSE 99999999 end M14, case when PM15>0 then((NVL(CM15,0)+NVL(COM15,0)+NVL(ACM15,0))/(NVL(PM15,0)))*100 ELSE 99999999 end M15, case when PM16>0 then((NVL(CM16,0)+NVL(COM16,0)+NVL(ACM16,0))/(NVL(PM16,0)))*100 ELSE 99999999 end M16, case when PM17>0 then((NVL(CM17,0)+NVL(COM17,0)+NVL(ACM17,0))/(NVL(PM17,0)))*100 ELSE 99999999 end M17, case when PM18>0 then((NVL(CM18,0)+NVL(COM18,0)+NVL(ACM18,0))/(NVL(PM18,0)))*100 ELSE 99999999 end M18, case when PM19>0 then((NVL(CM19,0)+NVL(COM19,0)+NVL(ACM19,0))/(NVL(PM19,0)))*100 ELSE 99999999 end M19, case when PM20>0 then((NVL(CM20,0)+NVL(COM20,0)+NVL(ACM20,0))/(NVL(PM20,0)))*100 ELSE 99999999 end M20,case when PTOTAL>0 then((NVL(CTOTAL,0)+NVL(COTOTAL,0)+NVL(ACTOTAL,0))/(NVL(PTOTAL,0)))*100 ELSE 99999999 end TOTAL FROM (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)PM1,SUM(M2)PM2,SUM(M3)PM3,SUM(M4)PM4,SUM(M5)PM5,SUM(M6)PM6,SUM(M7)PM7,SUM(M8)PM8,SUM(M9)PM9,SUM(M10)PM10,SUM(M11)PM11,SUM(M12)PM12,SUM(M13)PM13,SUM(M14)PM14 ,SUM(M15)PM15,SUM(M16)PM16,SUM(M17)PM17,SUM(M18)PM18,SUM(M19)PM19,SUM(M20)PM20,sum(AMOUNT_DC) PTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?,?,?,?,?,?, 'PREMIUM'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)P  LEFT OUTER JOIN (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)ACM1,SUM(M2)ACM2,SUM(M3)ACM3,SUM(M4)ACM4,SUM(M5)ACM5,SUM(M6)ACM6,SUM(M7)ACM7,SUM(M8)ACM8,SUM(M9)ACM9,SUM(M10)ACM10,SUM(M11)ACM11,SUM(M12)ACM12,SUM(M13)ACM13,SUM(M14)ACM14 ,SUM(M15)ACM15,SUM(M16)ACM16,SUM(M17)ACM17,SUM(M18)ACM18,SUM(M19)ACM19,SUM(M20)ACM20,sum(AMOUNT_DC) ACTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?,?,?,?,?,?, 'ACQCOST'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)AC on(P.UW_YEAR\=AC.UW_YEAR)  LEFT OUTER JOIN (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)CM1,SUM(M2)CM2,SUM(M3)CM3,SUM(M4)CM4,SUM(M5)CM5,SUM(M6)CM6,SUM(M7)CM7,SUM(M8)CM8,SUM(M9)CM9,SUM(M10)CM10,SUM(M11)CM11,SUM(M12)CM12,SUM(M13)CM13,SUM(M14)CM14 ,SUM(M15)CM15,SUM(M16)CM16,SUM(M17)CM17,SUM(M18)CM18,SUM(M19)CM19,SUM(M20)CM20,sum(AMOUNT_DC) CTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?,?,?,?,?,?, 'CLAIM'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)C   on(C.UW_YEAR\=AC.UW_YEAR)LEFT OUTER JOIN (SELECT ITEM,CNT, CONTRACT_NO,UW_YEAR,SUM(M1)COM1,SUM(M2)COM2,SUM(M3)COM3,SUM(M4)COM4,SUM(M5)COM5,SUM(M6)COM6,SUM(M7)COM7,SUM(M8)COM8,SUM(M9)COM9,SUM(M10)COM10,SUM(M11)COM11,SUM(M12)COM12,SUM(M13)COM13,SUM(M14)COM14 ,SUM(M15)COM15,SUM(M16)COM16,SUM(M17)COM17,SUM(M18)COM18,SUM(M19)COM19,SUM(M20)COM20,sum(AMOUNT_DC) COTOTAL FROM TABLE (FN_RENEWAL_STATISTICS (?,?,?,?,?,?, 'CLAIMOUTSTANDING'))  WHERE   UW_YEAR BETWEEN ? AND ? GROUP BY CONTRACT_NO,UW_YEAR,CNT,ITEM ORDER BY UW_YEAR DESC)CO on(AC.UW_YEAR\=CO.UW_YEAR) ORDER BY P.UW_YEAR


GET_PREMIUM_JV=SELECT DISTINCT TJP.REFERENCE,TJP.CONTRACTNO,TJP.TRANSACTIONNO, TJP.LAYER,TJP.TRANSACTIONDATE,TJP.ACCOUNTINGPERIOD, TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,TO_CHAR(PM.ACCOUNT_DATE,'DD/MM/YYYY') ACCOUNT_DATE,TJP.PRODUCTID,CASE WHEN TJP.PRODUCTID \= 1 THEN 'Facultative'WHEN TJP.PRODUCTID \= 2 THEN 'Proportional Treaty'WHEN TJP.PRODUCTID \= 3 THEN 'Non-Proportional Treaty' END PRODUCT_NAME,TJP.UWY,TJP.SPC,TJP.CURRENCY, TJP.PREMIUMOC,TJP.PORTFOLIO_PREMIUMIN_OC,TJP.PORTFOLIO_PREMIUMOUT_OC,TJP.LPC_OC,TJP.INTEREST_OC,TJP.PREMIUM_DEPOSITS_OC,TJP.CLAIM_DEPOSITS_OC,TJP.COMMISSION_OC, TJP.BROKERAGE_OC, TJP.TAX_OC,TJP.OVERRIDING_COMMISSION_OC,TJP.PROFIT_COMMISSION_OC, TJP.OTHER_COSTS_OC,TJP.CLAIMS_PAID_OC,TJP.CLAIM_PORTFOLIOIN_OC,TJP.CLAIM_PORTFOLIOOUT_OC,TJP.WITH_HOLDING_TAX_OC,TJP.TDS_OC,TJP.ST_OC,TJP.DEBTORS_OC,TJP.PREMIUM_DC,TJP.PORTFOLIO_PREMIUM_IN_DC,TJP.PORTFOLIO_PREMIUM_OUT_DC,TJP.LPC_DC,TJP.INTEREST_DC,TJP.PREMIUM_DEPOSITS_DC,TJP.CLAIM_DEPOSITS_DC,TJP.COMMISSION_DC,TJP.BROKERAGE_DC,TJP.TAX_DC,TJP.OVER_RIDING_COMMISSION_DC,TJP.PROFIT_COMMISSION_DC,TJP.OTHER_COSTS_DC, TJP.CLAIMS_PAID_DC,TJP.CLAIM_PORTFOLIO_IN_DC,TJP.CLAIM_PORTFOLIO_OUT_DC,TJP.WITH_HOLDING_TAX_DC,TJP.TDS_DC,TJP.ST_DC,TJP.DEBTORS_DC FROM TTRN_JVI_PREMIUM TJP, POSITION_MASTER PM WHERE TJP.CONTRACTNO \= PM.CONTRACT_NO AND TJP.BRANCH_CODE \= PM.BRANCH_CODE AND TJP.BRANCH_CODE \= ? AND TJP.START_DATE \= TO_DATE(?,'DD/MM/YYYY') AND TJP.END_DATE \= TO_DATE(?,'DD/MM/YYYY') AND PM.AMEND_ID IN (SELECT MAX(PM1.AMEND_ID) FROM POSITION_MASTER PM1 WHERE PM1.BRANCH_CODE \= PM.BRANCH_CODE AND PM1.PROPOSAL_NO \= PM.PROPOSAL_NO) ORDER BY TJP.REFERENCE,TJP.TRANSACTIONNO
GET_CLAIM_JV=SELECT  DISTINCT  TJC.REFERENCE, AMEND_ID, TJC.CLAIM_PAYMENT_NO, TJC.CLAIM_PAID_DATE,TJC.CLAIM_NUMBER, TJC.CONTRACT_NO,TJC.LAYER_NO, TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,TO_CHAR(PM.ACCOUNT_DATE,'DD/MM/YYYY') ACCOUNT_DATE,TJC.PRODUCT_ID,CASE WHEN TJC.PRODUCT_ID = 1 THEN 'Facultative' WHEN TJC.PRODUCT_ID = 2 THEN 'Proportional Treaty'  WHEN TJC.PRODUCT_ID = 3 THEN 'Non-Proportional Treaty' END PRODUCT_NAME,TJC.UWY,TJC.SPC,TJC.CURRENCY,TJC.CLAIMS_PAID_OC, TJC.REINSTATEMENT_PREMIUM_OC, TJC.NET_CLAIMS_PAID_OC, TJC.CLAIMS_PAID_DC,  TJC.REINSTATEMENT_PREMIUM_DC, TJC.NET_CLAIMS_PAID_DC FROM TTRN_JVI_CLAIMPAID TJC, POSITION_MASTER PM WHERE TJC.CONTRACT_NO = PM.CONTRACT_NO  AND TJC.BRANCH_CODE = PM.BRANCH_CODE  AND TJC.BRANCH_CODE = ?  AND TJC.START_DATE = TO_DATE(?,'DD/MM/YYYY')  AND TJC.END_DATE = TO_DATE(?,'DD/MM/YYYY')  AND PM.AMEND_ID IN (SELECT MAX(PM1.AMEND_ID) FROM POSITION_MASTER PM1 WHERE PM1.BRANCH_CODE = PM.BRANCH_CODE AND PM1.PROPOSAL_NO = PM.PROPOSAL_NO)ORDER BY TJC.REFERENCE,TJC.CLAIM_PAYMENT_NO
GET_TREASUTY_JV=SELECT DISTINCT REFERENCE,TRANSACTION_NUMBER,RT_PT,CASE WHEN RT_PT = 'RT' THEN 'RECEIPT'WHEN RT_PT = 'PT' THEN 'PAYMENT'END NAME,TRANSACTION_TYPE,(SELECT BANK_NAME FROM BANK_MASTER BM WHERE BM.BANK_ID=TJR.BANK_ID AND BRANCH_CODE=TJR.BRANCH_CODE) BANK_NAME,BANK_OC,BANK_CHARGES_OC,WHT_OC,UNALLOCATED_CASH_OC,BANK_DC, BANK_CHARGES_DC,WHT_DC, UNALLOCATED_CASH_DC,  EXCHDIFF_DC FROM TTRN_JVI_RTPT TJR WHERE BRANCH_CODE = ? AND START_DATE = TO_DATE(?,'DD/MM/YYYY') AND END_DATE = TO_DATE(?,'DD/MM/YYYY') ORDER BY REFERENCE
GET_TREASURY_JV2=SELECT DISTINCT TJRA.REFERENCE,TJRA.ALLOCATION_NO, TJRA.TREASURY_NO, TJRA.ALLOCATION_REVERSAL, CASE WHEN TJRA.ALLOCATION_REVERSAL  = 'RTA' THEN 'RECEIPT ALLOCATION' WHEN TJRA.ALLOCATION_REVERSAL  = 'PTA' THEN 'PAYMENT ALLOCATION' WHEN TJRA.ALLOCATION_REVERSAL  = 'RTAR' THEN 'RECEIPT ALLOCATION REVERSAL' WHEN TJRA.ALLOCATION_REVERSAL  = 'PTAR' THEN 'PAYMENT ALLOCATION REVERSAL' END AS NAME, CASE WHEN TJRA.ALLOCATION_REVERSAL IN ('RTA','PTA') THEN JV_DATE END AS ALLOCATION_DATE, CASE WHEN TJRA.ALLOCATION_REVERSAL IN ('RTAR','PTAR') THEN JV_DATE END AS REVERSAL_DATE,  (SELECT SHORT_NAME FROM CURRENCY_MASTER CM WHERE CM.CURRENCY_ID=TAT.CURRENCY_ID AND CM.BRANCH_CODE=TJRA.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER C WHERE CM.CURRENCY_ID=C.CURRENCY_ID AND CM.BRANCH_CODE=C.BRANCH_CODE )) CURRENCY_NAME, TJRA.DEBTORS_OC,TJRA.CREDITORS_OC,TJRA.UNALLOCATED_CASH_OC, TJRA.DEBTORS_DC,TJRA.CREDITORS_DC,TJRA.UNALLOCATED_CASH_DC,  TJRA.EXCHDIFF_DC FROM TTRN_JVI_RTAPTA TJRA, TTRN_ALLOCATED_TRANSACTION TAT WHERE TJRA.ALLOCATION_NO = TAT.SNO AND TJRA.BRANCH_CODE = TAT.BRANCH_CODE AND TJRA.BRANCH_CODE = ? AND TJRA.START_DATE = TO_DATE(?,'DD/MM/YYYY') AND TJRA.END_DATE = TO_DATE(?,'DD/MM/YYYY') ORDER BY TJRA.REFERENCE
GET_PREMIUM_JVF=SELECT DISTINCT TJP.REFERENCE,TJP.CONTRACTNO,TJP.TRANSACTIONNO, TJP.LAYER,TJP.TRANSACTIONDATE,TJP.ACCOUNTINGPERIOD, TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,TO_CHAR(PM.ACCOUNT_DATE,'DD/MM/YYYY') ACCOUNT_DATE,TJP.PRODUCTID,CASE WHEN TJP.PRODUCTID \= 1 THEN 'Facultative'WHEN TJP.PRODUCTID \= 2 THEN 'Proportional Treaty'WHEN TJP.PRODUCTID \= 3 THEN 'Non-Proportional Treaty' END PRODUCT_NAME,TJP.UWY,TJP.SPC,TJP.CURRENCY, TJP.PREMIUMOC,TJP.PORTFOLIO_PREMIUMIN_OC,TJP.PORTFOLIO_PREMIUMOUT_OC,TJP.LPC_OC,TJP.INTEREST_OC,TJP.PREMIUM_DEPOSITS_OC,TJP.CLAIM_DEPOSITS_OC,TJP.COMMISSION_OC, TJP.BROKERAGE_OC, TJP.TAX_OC,TJP.OVERRIDING_COMMISSION_OC,TJP.PROFIT_COMMISSION_OC, TJP.OTHER_COSTS_OC,TJP.CLAIMS_PAID_OC,TJP.CLAIM_PORTFOLIOIN_OC,TJP.CLAIM_PORTFOLIOOUT_OC,TJP.WITH_HOLDING_TAX_OC,TJP.TDS_OC,TJP.ST_OC,TJP.DEBTORS_OC,TJP.PREMIUM_DC,TJP.PORTFOLIO_PREMIUM_IN_DC,TJP.PORTFOLIO_PREMIUM_OUT_DC,TJP.LPC_DC,TJP.INTEREST_DC,TJP.PREMIUM_DEPOSITS_DC,TJP.CLAIM_DEPOSITS_DC,TJP.COMMISSION_DC,TJP.BROKERAGE_DC,TJP.TAX_DC,TJP.OVER_RIDING_COMMISSION_DC,TJP.PROFIT_COMMISSION_DC,TJP.OTHER_COSTS_DC, TJP.CLAIMS_PAID_DC,TJP.CLAIM_PORTFOLIO_IN_DC,TJP.CLAIM_PORTFOLIO_OUT_DC,TJP.WITH_HOLDING_TAX_DC,TJP.TDS_DC,TJP.ST_DC,TJP.DEBTORS_DC FROM TTRN_JVF_PREMIUM TJP, POSITION_MASTER PM WHERE TJP.CONTRACTNO \= PM.CONTRACT_NO AND TJP.BRANCH_CODE \= PM.BRANCH_CODE AND TJP.BRANCH_CODE \= ? AND TJP.START_DATE \= TO_DATE(?,'DD/MM/YYYY') AND TJP.END_DATE \= TO_DATE(?,'DD/MM/YYYY') AND PM.AMEND_ID IN (SELECT MAX(PM1.AMEND_ID) FROM POSITION_MASTER PM1 WHERE PM1.BRANCH_CODE \= PM.BRANCH_CODE AND PM1.PROPOSAL_NO \= PM.PROPOSAL_NO) ORDER BY TJP.REFERENCE,TJP.TRANSACTIONNO
GET_CLAIM_JVF=SELECT  DISTINCT TJC.REFERENCE,AMEND_ID, TJC.CLAIM_PAYMENT_NO, TJC.CLAIM_PAID_DATE,TJC.CLAIM_NUMBER, TJC.CONTRACT_NO,TJC.LAYER_NO, TO_CHAR(PM.INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,TO_CHAR(PM.EXPIRY_DATE,'DD/MM/YYYY') EXPIRY_DATE,TO_CHAR(PM.ACCOUNT_DATE,'DD/MM/YYYY') ACCOUNT_DATE,TJC.PRODUCT_ID,CASE WHEN TJC.PRODUCT_ID = 1 THEN 'Facultative' WHEN TJC.PRODUCT_ID = 2 THEN 'Proportional Treaty'  WHEN TJC.PRODUCT_ID = 3 THEN 'Non-Proportional Treaty' END PRODUCT_NAME,TJC.UWY,TJC.SPC,TJC.CURRENCY,TJC.CLAIMS_PAID_OC, TJC.REINSTATEMENT_PREMIUM_OC, TJC.NET_CLAIMS_PAID_OC, TJC.CLAIMS_PAID_DC,  TJC.REINSTATEMENT_PREMIUM_DC, TJC.NET_CLAIMS_PAID_DC FROM TTRN_JVF_CLAIMPAID TJC, POSITION_MASTER PM WHERE TJC.CONTRACT_NO = PM.CONTRACT_NO  AND TJC.BRANCH_CODE = PM.BRANCH_CODE  AND TJC.BRANCH_CODE = ?  AND TJC.START_DATE = TO_DATE(?,'DD/MM/YYYY')  AND TJC.END_DATE = TO_DATE(?,'DD/MM/YYYY')  AND PM.AMEND_ID IN (SELECT MAX(PM1.AMEND_ID) FROM POSITION_MASTER PM1 WHERE PM1.BRANCH_CODE = PM.BRANCH_CODE AND PM1.PROPOSAL_NO = PM.PROPOSAL_NO)ORDER BY TJC.REFERENCE,TJC.CLAIM_PAYMENT_NO
GET_TREASUTY_JVF=SELECT DISTINCT REFERENCE,TRANSACTION_NUMBER,RT_PT,CASE WHEN RT_PT = 'RT' THEN 'RECEIPT'WHEN RT_PT = 'PT' THEN 'PAYMENT'END NAME,TRANSACTION_TYPE,(SELECT BANK_NAME FROM BANK_MASTER BM WHERE BM.BANK_ID=TJR.BANK_ID AND BRANCH_CODE=TJR.BRANCH_CODE) BANK_NAME,BANK_OC,BANK_CHARGES_OC,WHT_OC,UNALLOCATED_CASH_OC,BANK_DC, BANK_CHARGES_DC,WHT_DC, UNALLOCATED_CASH_DC,  EXCHDIFF_DC FROM TTRN_JVF_RTPT TJR WHERE BRANCH_CODE = ? AND START_DATE = TO_DATE(?,'DD/MM/YYYY') AND END_DATE = TO_DATE(?,'DD/MM/YYYY') ORDER BY REFERENCE
GET_TREASURY_JV2F=SELECT DISTINCT TJRA.REFERENCE,TJRA.ALLOCATION_NO, TJRA.TREASURY_NO, TJRA.ALLOCATION_REVERSAL, CASE WHEN TJRA.ALLOCATION_REVERSAL  = 'RTA' THEN 'RECEIPT ALLOCATION' WHEN TJRA.ALLOCATION_REVERSAL  = 'PTA' THEN 'PAYMENT ALLOCATION' WHEN TJRA.ALLOCATION_REVERSAL  = 'RTAR' THEN 'RECEIPT ALLOCATION REVERSAL' WHEN TJRA.ALLOCATION_REVERSAL  = 'PTAR' THEN 'PAYMENT ALLOCATION REVERSAL' END AS NAME, CASE WHEN TJRA.ALLOCATION_REVERSAL IN ('RTA','PTA') THEN JV_DATE END AS ALLOCATION_DATE, CASE WHEN TJRA.ALLOCATION_REVERSAL IN ('RTAR','PTAR') THEN JV_DATE END AS REVERSAL_DATE,  (SELECT SHORT_NAME FROM CURRENCY_MASTER CM WHERE CM.CURRENCY_ID=TAT.CURRENCY_ID AND CM.BRANCH_CODE=TJRA.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER C WHERE CM.CURRENCY_ID=C.CURRENCY_ID AND CM.BRANCH_CODE=C.BRANCH_CODE )) CURRENCY_NAME, TJRA.DEBTORS_OC,TJRA.CREDITORS_OC,TJRA.UNALLOCATED_CASH_OC, TJRA.DEBTORS_DC,TJRA.CREDITORS_DC,TJRA.UNALLOCATED_CASH_DC,  TJRA.EXCHDIFF_DC FROM TTRN_JVF_RTAPTA TJRA, TTRN_ALLOCATED_TRANSACTION TAT WHERE TJRA.ALLOCATION_NO = TAT.SNO AND TJRA.BRANCH_CODE = TAT.BRANCH_CODE AND TJRA.BRANCH_CODE = ? AND TJRA.START_DATE = TO_DATE(?,'DD/MM/YYYY') AND TJRA.END_DATE = TO_DATE(?,'DD/MM/YYYY') ORDER BY TJRA.REFERENCE
GET_JV_REPORT=SELECT * FROM TABLE(JOURNAL_VIEW_REPORT(?,?,?,?,?))
GET_INSTALLMENT_DUE_REPORT=SELECT * FROM TABLE(INSTALLMENT_DUE_REPORT(?,?,?,?,?,?))
GET_TRAIL_BALANCE_REPORT=SELECT * FROM TABLE(FN_TB_REPORT(?,?))
PORTFOLIO_OUT_PENDING_REPORT=SELECT * FROM TABLE(FN_PORTFOLIO_OUT_PENDING(?,?))
GET_PPTY_SOA_PENDING_REPORT=SELECT * FROM TABLE(FN_PTTY_SOA_PENDING(?,?))
GET_RENEWAL_STATISTICS_REPORT=SELECT * FROM TABLE(FN_RENEWAL_STATISTICS(?,?,?,?,?,?,?)) ORDER BY UW_YEAR
GET_IE_REPORT=SELECT * FROM TABLE(FN_IE_REPORT(?,?,?,?,?,?))
GET_CONTRACT_NUMBER =SELECT CONTRACT_NO,CLAIM_CLASS FROM  TTRN_CLAIM_DETAILS  WHERE CLAIM_NO\=?
GET_ACC_PERIOD =  SELECT RSK_ACCOUNTING_PERIOD FROM TTRN_RISK_DETAILS R WHERE R.RSK_PROPOSAL_NUMBER=? AND R.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS D WHERE D.RSK_PROPOSAL_NUMBER=R.RSK_PROPOSAL_NUMBER)
COMMON_SELECT_GETCONSTDET_PTTY =SELECT   DISTINCT TYPE, DETAIL_NAME FROM   CONSTANT_DETAIL WHERE   CATEGORY_ID \= ? AND STATUS \= ? 

GET_PPTY_OSLR_CLAIM_REPORT=SELECT * FROM TABLE(FN_PTTY_OSLR_REPORT(?,?))
GET_RETRO_RDS_REPORT=SELECT * FROM TABLE(FN_RDS_RETRO_POLICY_REPORT(?,?,?))
GET_LEDGER_LIST=SELECT COA_ID LEDGER_ID,INTEGRATION_NAME LEDGER_NAME FROM TMAS_LEDGER_MASTER WHERE BRANCH_CODE=? AND STATUS=? ORDER BY INTEGRATION_NAME
GET_LEDGER_DEPT_LIST=SELECT DISTINCT TMAS_DEPARTMENT_ID,TMAS_DEPARTMENT_NAME  FROM TMAS_DEPARTMENT_MASTER WHERE TMAS_PRODUCT_ID IN('1','2','3','4','5') AND  BRANCH_CODE=? AND TMAS_STATUS=? ORDER BY TMAS_DEPARTMENT_ID
INSERT_MANUAL_JV=INSERT INTO TTRN_MANUAL_JV (TRANSACTION_NO,CLASS,CURRENCY,EXCHANGE_RATE,LEDGER,DEBIT_OC,CREDIT_OC,DEBIT_DC,CREDIT_DC,ENRTY_DATE,NARRATION,AMEND_ID,AMENDMENT_DATE,BRANCH_CODE,LOGIN_ID,SYS_DATE,SNO,STATUS,REVERAL_NO)VALUES(?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,SYSDATE,?,?,?)
GET_UW_YEAR =SELECT UW_YEAR FROM POSITION_MASTER P WHERE P.PROPOSAL_NO\=? AND P.CONTRACT_NO \=? AND P.LAYER_NO\=? AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER M WHERE M.PROPOSAL_NO\=P.PROPOSAL_NO AND M.CONTRACT_NO \=P.CONTRACT_NO AND M.LAYER_NO\=P.LAYER_NO)
GET_AMEND_ID =SELECT MAX(AMEND_ID) FROM POSITION_MASTER WHERE PROPOSAL_NO\=?
GET_LEDGER_ENTRY_LIST=SELECT   DISTINCT TRANSACTION_NO, TO_CHAR (ENRTY_DATE, 'DD/MM/YYYY') ENRTY_DATE,REVERAL_NO, (SELECT  SHORT_NAME FROM CURRENCY_MASTER CM WHERE BRANCH_CODE=TMJ.BRANCH_CODE AND CURRENCY_ID = TMJ.CURRENCY AND AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER  WHERE CM.CURRENCY_ID=CURRENCY_ID AND   CM.BRANCH_CODE = BRANCH_CODE)) CURRENCY_NAME, CURRENCY FROM TTRN_MANUAL_JV TMJ WHERE  TMJ.BRANCH_CODE = ? AND TMJ.AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_MANUAL_JV WHERE TRANSACTION_NO=TMJ.TRANSACTION_NO AND BRANCH_CODE=TMJ.BRANCH_CODE) ORDER BY TRANSACTION_NO DESC

GET_LEDGER_EDIT_LIST=SELECT TRANSACTION_NO,CLASS,CURRENCY,EXCHANGE_RATE,LEDGER,DEBIT_OC,CREDIT_OC,DEBIT_DC,CREDIT_DC,TO_CHAR(ENRTY_DATE,'DD/MM/YYYY')ENRTY_DATE,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,NARRATION,STATUS FROM TTRN_MANUAL_JV TMJ WHERE TRANSACTION_NO\=? AND BRANCH_CODE\=? AND LEDGER\!\='169' AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_MANUAL_JV WHERE TRANSACTION_NO\=TMJ.TRANSACTION_NO AND BRANCH_CODE\=TMJ.BRANCH_CODE) ORDER BY SNO
GET_JOURNAL_LIST=SELECT CATEGORY_DETAIL_ID ,REMARKS,DETAIL_NAME,PERCENT,DECODE(STATUS,'Y','Active','Inactive')STATUS,PARAM1 FROM CONSTANT_DETAIL WHERE CATEGORY_ID\='16'

UPADATE_REVERSAL_JV=UPDATE TTRN_MANUAL_JV TM SET REVERAL_NO\=? WHERE TRANSACTION_NO\=? AND BRANCH_CODE\=? AND STATUS\='C' AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_MANUAL_JV WHERE TRANSACTION_NO\=TM.TRANSACTION_NO AND BRANCH_CODE\=TM.BRANCH_CODE)
GET_FOR_EX_DIFF_NAME=SELECT INTEGRATION_NAME LEDGER_NAME FROM TMAS_LEDGER_MASTER WHERE BRANCH_CODE\=? AND STATUS\='Y' AND COA_ID\='169'  ORDER BY COA_ID
GET_JV_TRANID=SELECT DISTINCT MAX(TRANSACTION_NO) FROM  FINAL_JV_FORMAT WHERE    TRUNC(STARTDATE) = TO_DATE(?,'DD/MM/YYYY') AND TRUNC(END_DATE)=TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE=?


GET_COVER_DEPT_LIST =SELECT   TMAS_DEPARTMENT_ID,TMAS_DEPARTMENT_NAME FROM tmas_department_master  WHERE (TMAS_DEPARTMENT_ID,BRANCH_CODE,TMAS_PRODUCT_ID) IN (select  DISTINCT regexp_substr(RM.CORE_COMPANY_CODE||','||TMAS_DEPARTMENT_ID  ,'[^,]+', 1, level) CORE_COMPANY_CODE, BRANCH_CODE,TMAS_PRODUCT_ID  from   (SELECT  CORE_COMPANY_CODE||','||TMAS_DEPARTMENT_ID  CORE_COMPANY_CODE,TMAS_DEPARTMENT_ID,BRANCH_CODE,TMAS_PRODUCT_ID FROM  tmas_department_master WHERE TMAS_DEPARTMENT_ID \=? AND BRANCH_CODE \= ? AND TMAS_PRODUCT_ID\=? ) RM connect by regexp_substr(RM.CORE_COMPANY_CODE||','||TMAS_DEPARTMENT_ID  ,'[^,]+', 1, level) is not null) and  TMAS_STATUS\='Y'

GET_PROPOSAL_CAUSE_LIST =SELECT PROPOSAL_NO, CONTRACT_NO,(SELECT   COMPANY_NAME FROM   personal_info Pi WHERE       CUSTOMER_TYPE \= 'C'  AND pm.CEDING_COMPANY_ID \= Pi.CUSTOMER_ID AND pi.branch_code \= pm.branch_code AND amend_id \= (SELECT   MAX (Amend_id)  FROM   personal_info p WHERE       p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code))  Customer_name,(SELECT   FIRST_NAME  FROM   personal_info Pi  WHERE       CUSTOMER_TYPE \= 'B'    AND pm.Broker_id \= Pi.CUSTOMER_ID  AND pi.branch_code \= pm.branch_code  AND amend_id \=  (SELECT   MAX (Amend_id)   FROM   personal_info p WHERE       p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id   AND p.branch_code \= pm.branch_code))   Broker_name,UW_YEAR,decode(TRIM(PROPOSAL_STATUS),'A','Contract','P','Pending Offer','R','Rejected Offer','N','Not Taken Up') PROPOSAL_STATUS,EDIT_MODE,Regexp_substr(EDIT_MODE,'[^-"]+',1,2)EDIT_Proposal,BASE_LAYER,Regexp_substr(EDIT_MODE,'^[^-]*') EDIT_STATUS,BOUQUET_NO from position_master pm where branch_code \=? and amend_id\=(select max(amend_id) from position_master p where p.PROPOSAL_NO\=pm.PROPOSAL_NO ) and EDIT_MODE\!\='N' and CONTRACT_STATUS\!\='C'

GET_RETRO_MANUAL_ADJ_LIST = SELECT TRANSACTION_NO,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANSACTION_MONTH_YEAR,RETRO_CONTRACT_NUMBER,UWY, (SELECT FIRST_NAME FROM PERSONAL_INFO B WHERE A.BRANCH_CODE = B.BRANCH_CODE AND TRIM(A.RETRO_BROKER) = B.CUSTOMER_ID and amend_id=(select max(amend_id) from personal_info p Where customer_id=B.customer_id and branch_code=B.BRANCH_CODE)) RETRO_BROKER, (SELECT COMPANY_NAME FROM PERSONAL_INFO B WHERE A.BRANCH_CODE = B.BRANCH_CODE AND A.RETROCESSIONAIRE = B.CUSTOMER_ID and amend_id=(select max(amend_id) from personal_info p Where customer_id=B.customer_id and branch_code=B.BRANCH_CODE)) RETROCESSIONAIRE,A.PROPOSAL_NO FROM TTRN_RETRO_PRCL A  WHERE BRANCH_CODE=? and PROCESS_ID is null and PRODUCT_ID=? and A.AMEND_ID=(select max(AMEND_ID) from TTRN_RETRO_PRCL P WHERE P.BRANCH_CODE=A.BRANCH_CODE AND P.CONTRACT_NO=A.CONTRACT_NO AND P.TRANSACTION_NO=A.TRANSACTION_NO)

#GET_RETERO_CONTRACT =SELECT RSK_CONTRACT_NO FROM TTRN_RISK_DETAILS WHERE  RSK_UWYEAR=? and BRANCH_CODE=? and RSK_DUMMY_CONTRACT!='Y' and RSK_PRODUCTID='4'
GET_RETERO_CONTRACT = SELECT CONTRACT_NO RSK_CONTRACT_NO FROM position_master WHERE  UW_YEAR=? and BRANCH_CODE=? and RSK_DUMMY_CONTRACT!='Y' and PRODUCT_ID='4' and CONTRACT_NO is not null and CONTRACT_STATUS='A' order by CONTRACT_NO DESC
GET_RETRO_MANUAL_ADJ =SELECT (SELECT   COMPANY_NAME FROM   personal_info Pi WHERE       CUSTOMER_TYPE \= 'C'  AND pm.RSK_CEDINGID \= Pi.CUSTOMER_ID AND pi.branch_code \= pm.branch_code AND amend_id \= (SELECT   MAX (Amend_id)  FROM   personal_info p WHERE       p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code))  Customer_name,(SELECT   FIRST_NAME  FROM   personal_info Pi  WHERE       CUSTOMER_TYPE \= 'B'    AND pm.RSK_BROKERID \= Pi.CUSTOMER_ID  AND pi.branch_code \= pm.branch_code  AND amend_id \=  (SELECT   MAX (Amend_id)   FROM   personal_info p WHERE       p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id   AND p.branch_code \= pm.branch_code))   Broker_name,RSK_INSURED_NAME,RSK_TREATYID,RSK_PROPOSAL_NUMBER,RSK_ENDORSEMENT_NO,RSK_ORIGINAL_CURR FROM TTRN_RISK_DETAILS pm where  pm.RSK_CONTRACT_NO\=? and pm.BRANCH_CODE\=?  AND pm.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO)  FROM TTRN_RISK_DETAILS R WHERE pm.RSK_CONTRACT_NO\=R.RSK_CONTRACT_NO and pm.BRANCH_CODE\=R.BRANCH_CODE)

GET_RETRO_COMMISSION_DETAILS=SELECT RSK_OUR_ASS_ACQ_COST,RSK_COMM,RSK_COMM_QUOTASHARE,RSK_COMM_SURPLUS,RSK_OVERRIDER_PERC,RSK_BROKERAGE,RSK_TAX,RSK_PREMIUM_RESERVE,RSK_LOSS_RESERVE,RSK_OTHER_COST,RSK_ACQUISTION_COST_OC,RSK_MANAGEMENT_EXPENSES,RSK_PROFIT_COMM, NVL(RSK_PREMIUM_RESERVE,0) RSK_PREMIUM_RESERVE FROM  TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION WHERE RSK_PROPOSAL_NUMBER=?)
GET_PROPOSAL_NUMBER =SELECT PROPOSAL_NO FROM POSITION_MASTER A WHERE A.CONTRACT_NO\=? AND A.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER P WHERE P.PROPOSAL_NO\=A.PROPOSAL_NO AND P.CONTRACT_NO\=A.CONTRACT_NO)
INSERT_RETRO_MANUAL_ADJ =INSERT INTO TTRN_RETRO_PRCL (PREMIUM_CLASS,SPC,TRANSACTION_MONTH_YEAR,UWY,REFERENCE,RETROCESSIONAIRE,RETRO_BROKER,CURRENCY_ID,EXCHANGE_RATE,PREMIUM_QUOTASHARE_OC, PREMIUM_QUOTASHARE_DC,PREMIUM_QUOTASHARE_RC,COMMISSION_QUOTASHARE_OC,COMMISSION_QUOTASHARE_DC,COMMISSION_QUOTASHARE_RC,PREMIUM_PORTFOLIOIN_OC,PREMIUM_PORTFOLIOIN_DC,PREMIUM_PORTFOLIOIN_RC,SC_COMM_OC,SC_COMM_DC, SC_COMM_RC, CLAIM_PORTFOLIOIN_OC,CLAIM_PORTFOLIOIN_DC,CLAIM_PORTFOLIOIN_RC,BROKERAGE_AMT_OC,BROKERAGE_AMT_DC,BROKERAGE_AMT_RC,PREMIUM_RESERVE_REALSED_OC,PREMIUM_RESERVE_REALSED_DC,PREMIUM_RESERVE_REALSED_RC, LOSS_RESERVE_RELEASED_OC,LOSS_RESERVE_RELEASED_DC,LOSS_RESERVE_RELEASED_RC,TAX_AMT_OC,TAX_AMT_DC,TAX_AMT_RC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,WITH_HOLDING_TAX_RC, OVERRIDER_AMT_OC, OVERRIDER_AMT_DC,OVERRIDER_AMT_RC,INTEREST_OC,INTEREST_DC,INTEREST_RC,OTHER_COST_OC,OTHER_COST_DC,OTHER_COST_RC,CASH_LOSS_CREDIT_OC,CASH_LOSS_CREDIT_DC, CASH_LOSS_CREDIT_RC, PREMIUM_PORTFOLIOOUT_OC,PREMIUM_PORTFOLIOOUT_DC,PREMIUM_PORTFOLIOOUT_RC,TDS_OC,TDS_DC,TDS_RC,CLAIM_PORTFOLIO_OUT_OC,CLAIM_PORTFOLIO_OUT_DC,CLAIM_PORTFOLIO_OUT_RC, PREMIUMRESERVE_QUOTASHARE_OC, PREMIUMRESERVE_QUOTASHARE_DC,PREMIUMRESERVE_QUOTASHARE_RC,ST_OC,ST_DC,ST_RC,LOSS_RESERVERETAINED_OC,LOSS_RESERVERETAINED_DC,LOSS_RESERVERETAINED_RC, LPC_OC,LPC_DC, LPC_RC,PROFIT_COMMISSION_OC,PROFIT_COMMISSION_DC,PROFIT_COMMISSION_RC,CASH_LOSSPAID_OC,CASH_LOSSPAID_DC,CASH_LOSSPAID_RC,CLAIMS_PAID_OC,CLAIMS_PAID_DC,CLAIMS_PAID_RC,TREATY_NAME,BRANCH_CODE,ENTRY_DATE,OSCLAIM_LOSSUPDATE_OC,OSCLAIM_LOSSUPDATE_DC,OSCLAIM_LOSSUPDATE_RC,REMARKS,PRODUCT_ID,RETRO_CONTRACT_NUMBER,TRANSACTION_NO) VALUES(?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,?,?,?,?,?,?)
GET_RETRO_EDIT_COUNT =SELECT COUNT(EDIT_MODE) FROM POSITION_MASTER P WHERE PROPOSAL_NO IN (SELECT  PROPOSAL_NO FROM TTRN_INSURER_DETAILS D WHERE D.CONTRACT_NO\=? AND D.BRANCH_CODE\=? AND D.ENDORSEMENT_NO \=(SELECT MAX(ENDORSEMENT_NO) FROM TTRN_INSURER_DETAILS I WHERE I.CONTRACT_NO\=D.CONTRACT_NO AND I.BRANCH_CODE\=D.BRANCH_CODE AND I.PROPOSAL_NO\=D.PROPOSAL_NO)) AND P.EDIT_MODE\!\='N' AND  P.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER M WHERE M.PROPOSAL_NO\=P.PROPOSAL_NO AND M.CONTRACT_NO \= P.CONTRACT_NO AND M.BRANCH_CODE\=P.BRANCH_CODE)



### RETRO CLAIM ###
claim.select.sumPaidAmt.retro = SELECT NVL(SUM(PAID_AMOUNT_OC),0) FROM TTRN_RETRO_CLAIM_PAYMENT WHERE  CLAIM_NO\=? and CONTRACT_NO\=?
claim.select.revSumPaidAmt.retro=SELECT NVL(SUM(CP.PAID_AMOUNT_OC),'0') PAID_AMT FROM TTRN_RETRO_CLAIM_PAYMENT CP WHERE CP.CLAIM_NO=? AND CP.CONTRACT_NO=? AND CP.RESERVE_ID=(SELECT NVL(MAX(SL_NO),'1') MAXID FROM TTRN_RETRO_CLAIM_UPDATION WHERE  CLAIM_NO=CP.CLAIM_NO AND CONTRACT_NO=CP.CONTRACT_NO)
claim.select.claimEdit.retro=SELECT CLAIM_NO,STATUS_OF_CLAIM,TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') LOSS_DATE,TO_CHAR(REPUDATE_DATE,'DD/MM/YYYY') REPUDATE_DATE,TO_CHAR(REOPENED_DATE,'DD/MM/YYYY') REOPENED_DATE,TO_CHAR(RES_POS_DATE,'DD/MM/YYYY') RES_POS_DATE,TO_CHAR(RES_POS_DATE,'DD/MM/YYYY') RES_POS_DATE,TO_CHAR(REPORT_DATE,'DD/MM/YYYY') REP_DATE,LOSS_DETAILS,CAUSE_OF_LOSS,LOCATION,LOSS_ESTIMATE_OC,LOSS_ESTIMATE_OS_OC,EXCHANGE_RATE,LOSS_ESTIMATE_OS_DC,ADVICE_UW,ADVICE_MANAGEMENT,RI_RECOVERY,RI_RECOVERY_AMOUNT_DC,RECOVERY_FROM,CREATED_BY,TO_CHAR(CREATED_DATE,'DD/MM/YYYY') CREATED_DT,MODIFIED_BY,TO_CHAR(MODIFIED_DATE,'DD/MM/YYYY') MODIFIED_DT,UPDATED_BY,TO_CHAR(UPDATED_DATE,'DD/MM/YYYY') UPDATED_DT,CURRENCY,(SELECT SHORT_NAME FROM CURRENCY_MASTER CM WHERE CURRENCY_ID\=TC.CURRENCY AND BRANCH_CODE\= TC.BRANCH_CODE AND STATUS\='Y' AND AMEND_ID\= (SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER C WHERE C.CURRENCY_ID\=CM.CURRENCY_ID AND C.BRANCH_CODE\=CM.BRANCH_CODE AND C.STATUS\='Y')) CURRENCY_NAME,REMARKS,ADVICE_UW_EMAILID,ADVICE_MGT_EMAILID,RISK_CODE,ACCUMULATION_CODE,EVENT_CODE,LAYER_NO,insured_name,RECORD_FEES_CRE_RESERVE, SAF_100_OC, SAF_100_DC,OTH_FEE_100_OC, OTH_FEE_100_DC, C_IBNR_100_OC, C_IBNR_100_DC,RECORD_IBNR,CEDENT_CLAIM_NO,SAF_OS_DC,OTH_FEE_OS_DC,C_IBNR_OS_DC,SAF_OS_OC,OTH_FEE_OS_OC,C_IBNR_OS_OC,GROSSLOSS_FGU_OC,CLAIM_CLASS,CLAIM_SUBCLASS,COVER_LIMIT_DEPTID FROM TTRN_RETRO_CLAIM_DETAILS TC WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
claim.select.getClaimReserveList.Retro=SELECT SL_NO,PAID_AMOUNT_OC,PAYMENT_REQUEST_NO,LOSS_ESTIMATE_REVISED_OC ,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,TO_CHAR(p.INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT,PAID_AMOUNT_DC, LOSS_ESTIMATE_REVISED_DC,CLAIM_PAYMENT_NO,RESERVE_ID,SETTLEMENT_STATUS,t.RECEIPT_NO TRANSACTION_NO,Decode(r.TRANS_TYPE,'PT','PAYMENT','RT','RECEIPT','ADJUSTMENT') TRANS_TYPE FROM TTRN_RETRO_CLAIM_PAYMENT p left join TTRN_ALLOCATED_TRANSACTION t on t.CONTRACT_NO \= p.CONTRACT_NO AND t.PAID_AMOUNT \= p.PAID_AMOUNT_OC AND t.TYPE \= 'C' AND T.TRANSACTION_NO\=P.CLAIM_PAYMENT_NO left join TTRN_PAYMENT_RECEIPT r on t.RECEIPT_NO \= r.PAYMENT_RECEIPT_NO WHERE p.CLAIM_NO\=? AND p.CONTRACT_NO\=?   and  decode(r.AMEND_ID,'',1,r.AMEND_ID) \= (case when r.AMEND_ID is not null then  (select max(AMEND_ID) from  TTRN_PAYMENT_RECEIPT pr where pr.PAYMENT_RECEIPT_NO\= r.PAYMENT_RECEIPT_NO)  else 1 end) ORDER BY CLAIM_PAYMENT_NO DESC
claim.select.lossEstimateRevisedOc.Retro=SELECT LOSS_ESTIMATE_REVISED_OC FROM TTRN_RETRO_CLAIM_UPDATION WHERE CLAIM_NO=? AND CONTRACT_NO=? AND SL_NO=(SELECT MAX(SL_NO) FROM TTRN_RETRO_CLAIM_UPDATION WHERE CLAIM_NO=? AND CONTRACT_NO=? )
claim.select.claimTableList.Retro=SELECT CLAIM_NO,TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') AS DATE_OF_LOSS ,TO_CHAR(CREATED_DATE,'DD/MM/YYYY') AS CREATED_DATE,STATUS_OF_CLAIM,CONTRACT_NO,(TOTAL_AMT_PAID_TILL_DATE-LOSS_ESTIMATE_OS_OC) AS EDITVIEW FROM TTRN_RETRO_CLAIM_DETAILS WHERE CONTRACT_NO=? AND nvl(LAYER_NO,0)=nvl(?,0) AND SUB_CLASS=? ORDER BY CLAIM_NO DESC
claim.select.getClaimUpdateList.Retro=SELECT A.LOSS_ESTIMATE_REVISED_OC,A.LOSS_ESTIMATE_REVISED_DC,A.UPDATE_REFERENCE,TO_CHAR(A.INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DT,A.SL_NO,A.CLAIM_NO,A.CONTRACT_NO,A.UPDATE_REFERENCE,NVL((SELECT SUM(PAID_AMOUNT_OC) FROM TTRN_RETRO_CLAIM_PAYMENT WHERE RESERVE_ID=A.SL_NO AND CONTRACT_NO =A.CONTRACT_NO AND CLAIM_NO = A.CLAIM_NO ),'0') PAIDAMTOC,NVL((SELECT SUM(PAID_AMOUNT_DC) FROM TTRN_RETRO_CLAIM_PAYMENT WHERE RESERVE_ID=A.SL_NO AND CONTRACT_NO =A.CONTRACT_NO AND CLAIM_NO = A.CLAIM_NO ),'0') PAIDAMTUSD FROM TTRN_RETRO_CLAIM_UPDATION A WHERE A.CLAIM_NO=? AND A.CONTRACT_NO=? AND A.SL_NO=(SELECT MAX(SL_NO) FROM TTRN_RETRO_CLAIM_UPDATION WHERE CLAIM_NO = A.CLAIM_NO AND CONTRACT_NO = A.CONTRACT_NO)
claim.select.getClaimReviewQuery.Retro=SELECT TO_CHAR(REVIEW_DATE,'DD/MM/YYYY') REVIEW_DT,REVIEW_DONE_BY FROM TTRN_RETRO_CLAIM_DETAILS WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
clime.select.getClaimRESERVEList.Retro=SELECT  TC.LOSS_ESTIMATE_REVISED_OC, TC.LOSS_ESTIMATE_REVISED_DC, TC.UPDATE_REFERENCE, TO_CHAR (TC.INCEPTION_DATE, 'DD/MM/YYYY') AS INCEPTION_DT,  TC.SL_NO, TC.CLAIM_NO,TC.CONTRACT_NO,TC.C_IBNR_100_OC,TC.C_IBNR_OS_OC, NVL ((SELECT SUM (REINSPREMIUM_OURSHARE_OC) FROM TTRN_RETRO_CLAIM_PAYMENT WHERE RESERVE_ID = TC.SL_NO AND CONTRACT_NO = TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO),'0') REINSPREMIUM_OURSHARE_OC,NVL((SELECT SUM(PAID_AMOUNT_OC) FROM TTRN_RETRO_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') PAIDAMTOC, NVL((SELECT SUM(PAID_AMOUNT_DC) FROM TTRN_RETRO_CLAIM_PAYMENT WHERE RESERVE_ID=TC.SL_NO AND CONTRACT_NO =TC.CONTRACT_NO AND CLAIM_NO = TC.CLAIM_NO ),'0') PAIDAMTUSD  , NVL(loss_Estimate_Revised_OC,0) loss_Estimate_Revised_OC_2A , NVL(TP.PAID_CLAIM_OS_OC,0) PAID_CLAIM_OS_OC_2B , NVL(loss_Estimate_Revised_OC,0)-NVL(TP.PAID_CLAIM_OS_OC,0) OC_OS_Amount_2C, NVL(tc.SAF_OS_OC,0) SAF_OS_OC_3A, NVL(TP.SAF_OS_OC,0) SAF_OS_OC_3B, NVL(tc.SAF_OS_OC,0)-NVL(TP.SAF_OS_OC,0) Surveyor_OS_AMT_3C, NVL(tc.OTH_FEE_OS_OC,0) OTH_FEE_OS_OC_4A, NVL(TP.OTH_FEE_OS_OC,0) OTH_FEE_OS_OC_4B, NVL(tc.OTH_FEE_OS_OC,0)-NVL(TP.OTH_FEE_OS_OC,0) Other_Profess_OS_AMT_4C, NVL(loss_Estimate_Revised_OC,0)+NVL(tc.SAF_OS_OC,0)+NVL(tc.OTH_FEE_OS_OC,0) Total_A , NVL(TP.PAID_CLAIM_OS_OC,0)+NVL(TP.SAF_OS_OC,0) + NVL(TP.OTH_FEE_OS_OC,0) Total_b, (NVL(loss_Estimate_Revised_OC,0)-NVL(TP.PAID_CLAIM_OS_OC,0))+(NVL(tc.SAF_OS_OC,0)-NVL(TP.SAF_OS_OC,0))+(NVL(tc.OTH_FEE_OS_OC,0)-NVL(TP.OTH_FEE_OS_OC,0)) TOTAL_C FROM TTRN_RETRO_CLAIM_UPDATION tc left outer join (SELECT   reserve_id,NVL (SUM (NVL (PAID_CLAIM_OS_OC, 0)), 0) PAID_CLAIM_OS_OC, NVL (SUM (NVL (SAF_OS_OC, 0)), 0) SAF_OS_OC, NVL (SUM (NVL (OTH_FEE_OS_OC, 0)), 0) OTH_FEE_OS_OC FROM   ttrn_retro_claim_payment Tcp WHERE   CONTRACT_NO = ? AND CLAIM_NO = ? group by reserve_id) TP on ( tp.reserve_id=tc.SL_NO)  WHERE   TC.CONTRACT_NO = ? AND TC.CLAIM_NO = ? order by SL_NO
claim.select.getClaimList.Retro=SELECT CD.CLAIM_NO,TO_CHAR(CD.DATE_OF_LOSS ,'DD/MM/YYYY') AS DATEOFLOSS,CD.LOSS_ESTIMATE_OS_OC,CD.CURRENCY,TO_CHAR(CD.CREATED_DATE,'DD/MM/YYYY') AS CREATEDDATE,CM.SHORT_NAME CURRENCY_NAME FROM TTRN_RETRO_CLAIM_DETAILS CD,CURRENCY_MASTER CM WHERE CD.CLAIM_NO =? AND CD.CONTRACT_NO =? AND CM.BRANCH_CODE=? AND CM.CURRENCY_ID=CD.CURRENCY AND CM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER c WHERE  c.BRANCH_CODE=cm.BRANCH_CODE AND c.CURRENCY_ID=CM.CURRENCY_ID)
claim.select.getClaimPaymentList.Retro=SELECT PAID_AMOUNT_OC,PAYMENT_REQUEST_NO,PAID_AMOUNT_OC,LOSS_ESTIMATE_REVISED_OC,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') AS INCEPTION_DATE,PAID_AMOUNT_DC,LOSS_ESTIMATE_REVISED_DC,RESERVE_ID,CLAIM_PAYMENT_NO, SETTLEMENT_STATUS FROM TTRN_RETRO_CLAIM_PAYMENT WHERE CLAIM_NO\=? AND CONTRACT_NO\=? ORDER BY CLAIM_PAYMENT_NO DESC    
claim.insert.cliamDetails.Retro=INSERT INTO TTRN_RETRO_CLAIM_DETAILS (STATUS_OF_CLAIM,DATE_OF_LOSS,REPORT_DATE,LOSS_DETAILS,CAUSE_OF_LOSS,CURRENCY,LOSS_ESTIMATE_OC,LOSS_ESTIMATE_OS_OC,EXCHANGE_RATE,LOSS_ESTIMATE_OS_DC,ADVICE_UW,ADVICE_MANAGEMENT,RI_RECOVERY,RI_RECOVERY_AMOUNT_DC,RECOVERY_FROM,CREATED_BY,CREATED_DATE,LOCATION,REMARKS,ADVICE_UW_EMAILID, ADVICE_MGT_EMAILID,INCEPTION_DATE,STATUS,RISK_CODE,ACCUMULATION_CODE,EVENT_CODE,insured_name,SUB_CLASS,BRANCH_CODE, LOGIN_ID, RECORD_FEES_CRE_RESERVE, SAF_100_OC, SAF_100_DC,OTH_FEE_100_OC, OTH_FEE_100_DC, C_IBNR_100_OC, C_IBNR_100_DC,RECORD_IBNR,CEDENT_CLAIM_NO,SAF_OS_OC,OTH_FEE_OS_OC,C_IBNR_OS_OC,SAF_OS_DC,OTH_FEE_OS_DC,C_IBNR_OS_DC,Loss_Estimate_DC,REOPENED_DATE,GROSSLOSS_FGU_OC,CLAIM_CLASS,CLAIM_SUBCLASS,RES_POS_DATE,COVER_LIMIT_DEPTID,PROPOSAL_NO,PRODUCT_ID,REPUDATE_DATE,CONTRACT_NO,CLAIM_NO,LAYER_NO) VALUES (?,TO_DATE(?,'DD/MM/YYYY'),TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,SYSDATE,'Y',?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?)    
claim.insert.getUpdationQuery.Retro=INSERT INTO TTRN_RETRO_CLAIM_UPDATION (SL_NO,LAYER_NO,LOSS_ESTIMATE_REVISED_OC,LOSS_ESTIMATE_REVISED_DC,UPDATE_REFERENCE,INCEPTION_DATE,CLAIM_NO,CONTRACT_NO,STATUS,REMARKS,BRANCH_CODE, LOGIN_ID, SAF_100_OC, SAF_100_DC, OTH_FEE_100_OC, OTH_FEE_100_DC, C_IBNR_100_OC, C_IBNR_100_DC, SAF_OS_OC,OTH_FEE_OS_OC,C_IBNR_OS_OC,SAF_OS_DC, OTH_FEE_OS_DC, C_IBNR_OS_DC, LOSS_ESTIMATE_100_OC, LOSS_ESTIMATE_100_DC,RESERVE_FEES,RESERVE_IBNR,EXCHANGE_RATE,TOT_RES_AMOUNT_OC ,TOT_RES_AMOUNT_DC,RES_POS_DATE,SYS_DATE) VALUES(?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,'Y',? ,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),sysdate)    
claim.update.cliamDetailsUpdate.Retro=UPDATE TTRN_RETRO_CLAIM_DETAILS SET STATUS_OF_CLAIM\=?,DATE_OF_LOSS\=TO_DATE(?,'DD/MM/YYYY'),REPORT_DATE\=TO_DATE(?,'DD/MM/YYYY'),LOSS_DETAILS\=?,CAUSE_OF_LOSS\=?,CURRENCY\=?,LOSS_ESTIMATE_OC\=?,LOSS_ESTIMATE_OS_OC\=?,EXCHANGE_RATE\=?,LOSS_ESTIMATE_OS_DC\=?,ADVICE_UW\=?,ADVICE_MANAGEMENT\=?,RI_RECOVERY\=?,RI_RECOVERY_AMOUNT_DC\=?,RECOVERY_FROM\=?,CREATED_BY\=?,CREATED_DATE\=TO_DATE(?,'DD/MM/YYYY'),INCEPTION_DATE\=SYSDATE,LOCATION\=?,REMARKS\=?,ADVICE_UW_EMAILID\=?,ADVICE_MGT_EMAILID\=?,RISK_CODE\=?,ACCUMULATION_CODE\=?,EVENT_CODE\=?,insured_name\=?,SUB_CLASS\=?,BRANCH_CODE\=?, LOGIN_ID\=?, RECORD_FEES_CRE_RESERVE\=?, SAF_100_OC\=?, SAF_100_DC\=?,OTH_FEE_100_OC\=?, OTH_FEE_100_DC\=?, C_IBNR_100_OC\=?, C_IBNR_100_DC\=?,RECORD_IBNR\=?,CEDENT_CLAIM_NO\=?,SAF_OS_OC\=?,OTH_FEE_OS_OC\=?,C_IBNR_OS_OC\=?,SAF_OS_DC\=?,OTH_FEE_OS_DC\=?,C_IBNR_OS_DC\=?,Loss_Estimate_DC\=?,REOPENED_DATE\=TO_DATE(?,'DD/MM/YYYY'),GROSSLOSS_FGU_OC\=?,CLAIM_CLASS\=?,CLAIM_SUBCLASS\=?,RES_POS_DATE\=TO_DATE(?,'DD/MM/YYYY') , COVER_LIMIT_DEPTID\=?,PROPOSAL_NO\=?,PRODUCT_ID\=?,REPUDATE_DATE\=TO_DATE(?,'DD/MM/YYYY') WHERE CONTRACT_NO\=? AND CLAIM_NO\=? AND LAYER_NO\=?
claim.insert.payment.Retro=INSERT INTO TTRN_RETRO_CLAIM_PAYMENT (SL_NO,LAYER_NO,PAYMENT_REQUEST_NO,PAID_AMOUNT_OC,PAID_AMOUNT_DC,LOSS_ESTIMATE_REVISED_OC,LOSS_ESTIMATE_REVISED_DC,CLAIM_NOTE_RECOMM,PAYMENT_REFERENCE,ADVICE_TREASURY,INCEPTION_DATE,CLAIM_NO,CONTRACT_NO,STATUS,CLAIM_PAYMENT_NO,REMARKS,ADVICE_TREASURY_EMAILID,RESERVE_ID,SETTLEMENT_STATUS,REINSTATEMENT_TYPE,REINSPREMIUM_OURSHARE_OC,REINSPREMIUM_OURSHARE_DC,PAID_CLAIM_OS_OC,PAID_CLAIM_OS_DC,SAF_OS_OC,SAF_OS_DC,OTH_FEE_OS_OC,OTH_FEE_OS_DC,BRANCH_CODE,LOGIN_ID,EXCHANGE_RATE,SYS_DATE,PAYMENT_TYPE) VALUES(?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,'Y',?,?,?,?,'Pending',?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?)
claim.select.maxResvId.Retro=SELECT NVL(MAX(SL_NO),'1') MAXID FROM TTRN_RETRO_CLAIM_UPDATION WHERE  CLAIM_NO=? AND CONTRACT_NO=?
CLAIM_UPDATE_PAYMENT_RETRO = UPDATE TTRN_RETRO_CLAIM_PAYMENT SET  INCEPTION_DATE=TO_DATE(?,'DD/MM/YYYY'),PAYMENT_REFERENCE=?,PAYMENT_REQUEST_NO=?,PAID_CLAIM_OS_OC=?,PAID_CLAIM_OS_DC=?,SAF_OS_OC=?,SAF_OS_DC=?,OTH_FEE_OS_OC=?,OTH_FEE_OS_DC=?,BRANCH_CODE=?,LOGIN_ID=?,SYS_DATE=SYSDATE,PAID_AMOUNT_OC=?,PAID_AMOUNT_DC=?,REMARKS=?,REINSTATEMENT_TYPE=?,REINSPREMIUM_OURSHARE_OC=?,REINSPREMIUM_OURSHARE_DC=?,PAYMENT_TYPE=? WHERE CONTRACT_NO=? AND CLAIM_NO=? AND LAYER_NO=? and CLAIM_PAYMENT_NO=?
claim.update.totalAmtPaidTillDate.Retro=UPDATE TTRN_RETRO_CLAIM_DETAILS SET TOTAL_AMT_PAID_TILL_DATE=? where CLAIM_NO=? and CONTRACT_NO=?
claim.update.closeClaim.Retro=UPDATE TTRN_RETRO_CLAIM_DETAILS SET STATUS_OF_CLAIM=?,CLAIM_CLOSED_DATE=TO_DATE(?,'DD/MM/YYYY') WHERE CONTRACT_NO=? AND CLAIM_NO=?
claim.update.ttrnClaimDetailsRDandrdb.Retro=UPDATE TTRN_RETRO_CLAIM_DETAILS SET REVIEW_DATE=TO_DATE(?,'DD/MM/YYYY'),REVIEW_DONE_BY=? WHERE CONTRACT_NO=? AND CLAIM_NO=?
claim.select.paymentReqNo.Retro=SELECT COUNT(*) FROM TTRN_RETRO_CLAIM_PAYMENT WHERE CLAIM_NO=? AND PAYMENT_REQUEST_NO=?
claim.select.lossEstimateOsOc.Retro=SELECT LOSS_ESTIMATE_OS_OC FROM TTRN_RETRO_CLAIM_DETAILS WHERE CLAIM_NO=? AND CONTRACT_NO=?
claim.select.sumPaidAmtOc.Retro=SELECT NVL(SUM(PAID_AMOUNT_OC),'0') PAID_AMT FROM TTRN_RETRO_CLAIM_PAYMENT WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
claim.select.totalAmtPaidTillDate.Retro=SELECT TOTAL_AMT_PAID_TILL_DATE FROM TTRN_RETRO_CLAIM_DETAILS WHERE CLAIM_NO\=? AND CONTRACT_NO\=?
claim.select.lossEstRev.Retro=SELECT sum(nvl(CU.LOSS_ESTIMATE_REVISED_OC,0)+nvl(CU.SAF_OS_OC,0)+nvl(CU.OTH_FEE_OS_OC,0))LOSS_ESTIMATE_REVISED_OC FROM TTRN_RETRO_CLAIM_UPDATION CU WHERE CU.CONTRACT_NO=? AND CU.CLAIM_NO=? AND CU.SL_NO=(SELECT MAX(SL_NO) FROM TTRN_RETRO_CLAIM_UPDATION WHERE CONTRACT_NO=CU.CONTRACT_NO AND CLAIM_NO=CU.CLAIM_NO)
CLAIM_LOSS_ESTIMATE_PAID_DIFFERENCE_EDIT_RETRO = SELECT NVL(loss_Estimate_Revised_OC,0) -TP.PAID_CLAIM_OS_OC LOSS_ESTIMATE_DIFF  FROM   TTRN_RETRO_CLAIM_UPDATION tc,(SELECT nvl(SUM(NVL(PAID_CLAIM_OS_OC,0)),0) PAID_CLAIM_OS_OC from ttrn_RETRO_claim_payment Tcp  WHERE CONTRACT_NO=? AND CLAIM_NO=?  AND CLAIM_PAYMENT_NO!= ? and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_RETRO_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_RETRO_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=tc.CLAIM_NO )
claim.loss.estimate.paid.difference.Retro = SELECT NVL(loss_Estimate_Revised_OC,0) -TP.PAID_CLAIM_OS_OC LOSS_ESTIMATE_DIFF  FROM   TTRN_RETRO_CLAIM_UPDATION tc,(SELECT nvl(SUM(NVL(PAID_CLAIM_OS_OC,0)),0) PAID_CLAIM_OS_OC from ttrn_retro_claim_payment Tcp  WHERE CONTRACT_NO=? AND CLAIM_NO=?  and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_RETRO_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_RETRO_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=tc.CLAIM_NO )
CLAIM_SAF_OS_SUM_DIFFERENCE_EDIT_RETRO =SELECT NVL(tc.SAF_OS_OC,0) -TP.SAF_OS_OC SAF_OS_DIFF  FROM   TTRN_RETRO_CLAIM_UPDATION tc,(SELECT  nvl(SUM(NVL(SAF_OS_OC,0)),0) SAF_OS_OC from ttrn_retro_claim_payment Tcp WHERE CONTRACT_NO=? AND CLAIM_NO=? AND CLAIM_PAYMENT_NO!=? and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_RETRO_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_RETRO_CLAIM_UPDATION where  CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TC.CLAIM_NO )
claim.saf.os.sum.difference.Retro = SELECT NVL(tc.SAF_OS_OC,0) -TP.SAF_OS_OC SAF_OS_DIFF  FROM   TTRN_RETRO_CLAIM_UPDATION tc,(SELECT  nvl(SUM(NVL(SAF_OS_OC,0)),0) SAF_OS_OC from ttrn_retro_claim_payment Tcp WHERE CONTRACT_NO=? AND CLAIM_NO=?  and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_RETRO_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_RETRO_CLAIM_UPDATION where  CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TC.CLAIM_NO )
CLAIM_OTHER_FEE_OS_SUM_EDIT_RETRO = SELECT NVL(tc.OTH_FEE_OS_OC,0) -TP.OTH_FEE_OS_OC OTH_FEE_DIFF  FROM   TTRN_RETRO_CLAIM_UPDATION tc,(SELECT nvl(SUM(NVL(OTH_FEE_OS_OC,0)),0) OTH_FEE_OS_OC from ttrn_retro_claim_payment Tcp WHERE CONTRACT_NO\=? AND CLAIM_NO\=? AND CLAIM_PAYMENT_NO\!\=? and  reserve_id \=(SELECT   MAX (sl_no)  FROM   TTRN_RETRO_CLAIM_UPDATION WHERE   CONTRACT_NO \= ? AND CLAIM_NO \= ?))TP  WHERE TC.CONTRACT_NO\=?  AND TC.CLAIM_NO\=? AND tc.SL_NO\=(select max(sl_no)  from TTRN_RETRO_CLAIM_UPDATION where CONTRACT_NO\=tc.CONTRACT_NO AND CLAIM_NO\=TC.CLAIM_NO )    
claim.other.fee.os.sum.difference.Retro = SELECT NVL(tc.OTH_FEE_OS_OC,0) -TP.OTH_FEE_OS_OC OTH_FEE_DIFF  FROM   TTRN_RETRO_CLAIM_UPDATION tc,(SELECT nvl(SUM(NVL(OTH_FEE_OS_OC,0)),0) OTH_FEE_OS_OC from ttrn_retro_claim_payment Tcp WHERE CONTRACT_NO=? AND CLAIM_NO=?  and  reserve_id =(SELECT   MAX (sl_no)  FROM   TTRN_RETRO_CLAIM_UPDATION WHERE   CONTRACT_NO = ? AND CLAIM_NO = ?))TP  WHERE TC.CONTRACT_NO=?  AND TC.CLAIM_NO=? AND tc.SL_NO=(select max(sl_no)  from TTRN_RETRO_CLAIM_UPDATION where CONTRACT_NO=tc.CONTRACT_NO AND CLAIM_NO=TC.CLAIM_NO )
claim.select.excRate.Retro=SELECT EXCHANGE_RATE FROM TTRN_RETRO_CLAIM_DETAILS WHERE CLAIM_NO=? AND CONTRACT_NO=?
claim.select.claimstatus.Retro=SELECT STATUS_OF_CLAIM     FROM TTRN_RETRO_CLAIM_DETAILS WHERE CONTRACT_NO=? AND CLAIM_NO=?
claim.select.getInsDate.Retro=SELECT TO_CHAR(INCEPTION_DATE,'DD/MM/YYYY') INS_DATE FROM TTRN_RETRO_CLAIM_UPDATION WHERE CLAIM_NO=? AND SL_NO=(SELECT MAX(SL_NO) FROM TTRN_RETRO_CLAIM_UPDATION WHERE CLAIM_NO=?)
claim.select.getLossDate.Retro=SELECT  TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') LOSS_DATE FROM  TTRN_RETRO_CLAIM_DETAILS WHERE CLAIM_NO=?
claim.select.getLastPayDt.Retro=SELECT   TO_CHAR (CP.INCEPTION_DATE, 'DD/MM/YYYY') AS PAY_DT FROM   TTRN_RETRO_CLAIM_PAYMENT CP WHERE   CP.CLAIM_NO = ? AND CP.CONTRACT_NO = ? AND CP.CLAIM_PAYMENT_NO=(SELECT MAX(CLAIM_PAYMENT_NO) FROM TTRN_RETRO_CLAIM_PAYMENT WHERE CLAIM_NO = CP.CLAIM_NO AND CONTRACT_NO=CP.CONTRACT_NO)
GET_CURRENCY_RETRO=select   CURRENCY FROM   TTRN_RETRO_CLAIM_DETAILS CD, CURRENCY_MASTER CM WHERE  CD.CLAIM_NO =? AND CD.CONTRACT_NO = ?AND CM.BRANCH_CODE = ? AND CM.CURRENCY_ID = CD.CURRENCY AND CM.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   CURRENCY_MASTER c WHERE   c.BRANCH_CODE = cm.BRANCH_CODE AND c.CURRENCY_ID = CM.CURRENCY_ID)
CEDENT_BASED_MAX_CLAIM_NUMBER_RETRO =SELECT nvl(MAX(CLAIM_NO),0) FROM TTRN_RETRO_CLAIM_DETAILS WHERE CEDENT_CLAIM_NO\=? AND BRANCH_CODE\=?
GET_CLAIM_COUNT_RETRO =    SELECT count(*)     FROM TTRN_RETRO_CLAIM_DETAILS WHERE CONTRACT_NO=? AND CLAIM_NO=?
INSERT_ACCUMULATION_DATA_RETRO = INSERT INTO TTRN_CLAIM_ACC_RETRO(CLAIM_NO,CONTRACT_NO ,LAYER_NO,SUB_CLASS ,RISK_CODE ,AGGREGATE_CODE ,EVENT_CODE ,AMEND_ID ,CREATED_DATE ,BRANCH_CODE,LOGIN_ID ) VALUES (?,?,?,?,?,?,?,(SELECT NVL(MAX(AMEND_ID)+1,0) FROM TTRN_CLAIM_ACC WHERE CLAIM_NO=? AND CONTRACT_NO=?AND LAYER_NO=? AND SUB_CLASS=?),SYSDATE,?,?)
XL_CLAIM_DETAILS_RETRO = SELECT CP.CLAIM_NO,CLAIM_PAYMENT_NO,(NVL(CP.PAID_CLAIM_OS_DC,0)+NVL(CP.SAF_OS_DC,0)+NVL(CP.OTH_FEE_OS_DC,0)) PAID_EXCHANGE_RATE_DC,(NVL(CP.PAID_CLAIM_OS_OC,0)+NVL(CP.SAF_OS_OC,0)+NVL(CP.OTH_FEE_OS_OC,0)) PAID_EXCHANGE_RATE_OC,CP.EXCHANGE_RATE, (SELECT  TMAS_DEPARTMENT_NAME from TMAS_DEPARTMENT_MASTER DM WHERE DM.TMAS_DEPARTMENT_ID=CD.SUB_CLASS and DM.TMAS_STATUS='Y' AND TMAS_PRODUCT_ID=? AND DM.BRANCH_CODE=CP.BRANCH_CODE) TMAS_DEPARTMENT_NAME,TO_CHAR(CP.INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE, (SELECT SHORT_NAME FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID = CD.CURRENCY AND CM.BRANCH_CODE = CD.BRANCH_CODE AND CM.STATUS='Y' AND CM.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CU WHERE CU.CURRENCY_ID = CM.CURRENCY_ID AND CU.BRANCH_CODE = CM.BRANCH_CODE AND CU.STATUS='Y'))CURRENCY_NAME, CD.CURRENCY, ( SELECT SHORT_NAME FROM  CURRENCY_MASTER CM WHERE CM.CURRENCY_ID = D.RSK_ORIGINAL_CURR AND CM.BRANCH_CODE = CD.BRANCH_CODE AND CM.STATUS='Y' AND CM.AMEND_ID =(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER CU WHERE CU.CURRENCY_ID = CM.CURRENCY_ID AND CU.BRANCH_CODE = CM.BRANCH_CODE AND CU.STATUS='Y'))RDS_CURRENCY_NAME,D.RSK_ORIGINAL_CURR  FROM TTRN_RETRO_CLAIM_PAYMENT CP,TTRN_RETRO_CLAIM_DETAILS CD, TTRN_RISK_DETAILS D,TTRN_RISK_COMMISSION P,POSITION_MASTER PM  WHERE  CD.CONTRACT_NO=CP.CONTRACT_NO AND CD.LAYER_NO=CP.LAYER_NO AND CD.CLAIM_NO=CP.CLAIM_NO AND  CD.CONTRACT_NO=? AND CD.LAYER_NO=? AND CD.BRANCH_CODE=? and D.RSK_CONTRACT_NO=CP.CONTRACT_NO AND D.RSK_LAYER_NO = CP.LAYER_NO AND  D.BRANCH_CODE =CP.BRANCH_CODE AND D.RSK_PROPOSAL_NUMBER=P.RSK_PROPOSAL_NUMBER AND D.RSK_LAYER_NO = P.RSK_LAYER_NO AND  D.BRANCH_CODE =P.BRANCH_CODE  AND PM.PROPOSAL_NO = P.RSK_PROPOSAL_NUMBER AND PM.LAYER_NO=P.RSK_LAYER_NO AND PM.CONTRACT_NO = CP.CONTRACT_NO AND ( TRUNC(P.RSK_END_DATE)<=TO_DATE(?,'dd/mm/yyyy')  OR TRUNC(PM.ACCOUNT_DATE)<=TO_DATE(?,'dd/mm/yyyy')) AND D.RSK_ENDORSEMENT_NO= P.RSK_ENDORSEMENT_NO AND P.RSK_ENDORSEMENT_NO = (SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_COMMISSION TC WHERE TC.RSK_PROPOSAL_NUMBER=P.RSK_PROPOSAL_NUMBER ) AND PM.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER M WHERE M.PROPOSAL_NO = PM.PROPOSAL_NO AND M.LAYER_NO=PM.LAYER_NO AND  M.CONTRACT_NO = PM.CONTRACT_NO) and CLAIM_PAYMENT_NO !=? order by INCEPTION_DATE asc,CLAIM_PAYMENT_NO asc
GET_DATE_OF_LOSS_RETRO = SELECT TO_CHAR(DATE_OF_LOSS,'DD/MM/YYYY') DATE_OF_LOSS FROM TTRN_RETRO_CLAIM_DETAILS WHERE CLAIM_NO=? AND CONTRACT_NO=? AND LAYER_NO=? and BRANCH_CODE=?
GET_CLAIM_PAYMENT_DATA_RETRO = SELECT  REINSPREMIUM_OURSHARE_OC,REINSTATEMENT_TYPE,decode(REINSTATEMENT_TYPE,'MDP','On M&D Premium','ADP','On Adjusted Premium','FDP','On Final Adjusted Premium','NA','Not Applicable') REINSTATEMENT_TYPE_NAME,CLAIM_PAYMENT_NO,PAYMENT_REQUEST_NO,PAID_AMOUNT_OC,PAID_CLAIM_OS_OC,LOSS_ESTIMATE_REVISED_OC,PAYMENT_REFERENCE,to_char(INCEPTION_DATE,'DD/MM/YYYY') INCEPTION_DATE,REMARKS,PAID_CLAIM_OS_DC,SAF_OS_OC,OTH_FEE_OS_OC,PAYMENT_TYPE FROM TTRN_RETRO_CLAIM_PAYMENT WHERE CLAIM_NO=? AND CONTRACT_NO=? AND LAYER_NO=? and CLAIM_PAYMENT_NO=?
GET_CONTRACT_NUMBER_RETRO =SELECT CONTRACT_NO,CLAIM_CLASS FROM  TTRN_RETRO_CLAIM_DETAILS  WHERE CLAIM_NO\=?
GET_CLAIM_CURRENCY_RETRO =SELECT CURRENCY FROM TTRN_RETRO_CLAIM_DETAILS WHERE CLAIM_NO\=? AND CONTRACT_NO\=? AND LAYER_NO\=?

GET_DEPT_CODE_LIMIT =SELECT  RSK_COVER_CLASS FROM TTRN_RSK_CLASS_LIMITS R WHERE   RSK_CONTRACT_NO\=? AND RSK_LAYER_NO\=? AND RSK_PRODUCTID\=?  AND R.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RSK_CLASS_LIMITS T WHERE T.RSK_CONTRACT_NO \= R.RSK_CONTRACT_NO AND T.RSK_LAYER_NO \= R.RSK_LAYER_NO) AND RSK_SNO\=1
GET_COUNT_RETENTION =  SELECT COUNT(*) FROM  TTRN_CEDENT_RET  C WHERE PROPOSAL_NO=?  AND PRODUCT_ID=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_CEDENT_RET R WHERE  C.PROPOSAL_NO=R.PROPOSAL_NO)
UPDATE_RETEN_CONTNO =UPDATE TTRN_CEDENT_RET C SET CONTRACT_NO\=? ,DEPT_ID\=?  WHERE PROPOSAL_NO\=? AND PRODUCT_ID\=? AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM TTRN_CEDENT_RET R WHERE  C.PROPOSAL_NO\=R.PROPOSAL_NO)

GET_STATUS_OF_CLAIM =SELECT STATUS_OF_CLAIM FROM TTRN_CLAIM_DETAILS WHERE CONTRACT_NO \=? AND CLAIM_NO\=? AND LAYER_NO\=?
RETRO_GET_STATUS_OF_CLAIM = SELECT STATUS_OF_CLAIM FROM TTRN_RETRO_CLAIM_DETAILS WHERE CONTRACT_NO \=? AND CLAIM_NO\=? AND LAYER_NO\=?
GET_ALLOCATION_STATUS =SELECT COUNT(*) FROM TTRN_ALLOCATED_TRANSACTION  WHERE BRANCH_CODE\=?  and RECEIPT_NO\=?  AND STATUS\='Y'
GET_SOURCE_CODE =SELECT COMPANY_CODE FROM TMAS_BRANCH_MASTER WHERE BRANCH_CODE\=? AND STATUS\='Y'
GET_COMPANY_INFO=SELECT COMPANY_CODE,COMPANY_NAME,EMAIL,ADDRESS1,COUNTRY,WEB_SITE,MOBILE,HEADER_LOGO,MAIN_LOGO FROM COMPANY_MASTER WHERE COMPANY_CODE IN(SELECT COMPANY_CODE FROM TMAS_BRANCH_MASTER WHERE BRANCH_CODE=? AND STATUS='Y')
GET_CASHLOSS_COUNT =SELECT COUNT(*) FROM   TTRN_CLAIM_PAYMENT TCP, TTRN_Claim_Details TCD WHERE   NVL (PAID_AMOUNT_OC, 0) - NVL (CASH_LOSS_SETTLED_TILLDATE, 0) > 0 AND  TCP.CONTRACT_NO \= ? AND SUB_CLASS \=? AND TCD.CONTRACT_NO \= TCP.CONTRACT_NO AND TCD.CLAIM_NO \= TCP.CLAIM_NO
GET_CEDENT_NO_LIST =SELECT DISTINCT CLAIM_NO,TO_CHAR (CREATED_DATE, 'DD/MM/YYYY') CREATED_DATE,INSURED_NAME,CEDENT_CLAIM_NO,TO_CHAR (DATE_OF_LOSS, 'DD/MM/YYYY') DATE_OF_LOSS,GROSSLOSS_FGU_OC,LOSS_ESTIMATE_OS_OC,(Select SHORT_NAME from Currency_master cm where CM.CURRENCY_ID\=C.CURRENCY and BRANCH_CODE\=C.BRANCH_CODE AND AMEND_ID\=(SELECT MAX(AMEND_ID) FROM CURRENCY_MASTER M WHERE M.CURRENCY_ID\=C.CURRENCY and M.BRANCH_CODE\=C.BRANCH_CODE)) CURRENCY,GROSSLOSS_FGU_OC,LOSS_ESTIMATE_OS_OC,(Select   Company_Name From   Personal_Info Pi Where   Pi.Customer_Id \= P.CEDING_COMPANY_ID And Pi.Branch_Code \= P.Branch_Code and AMEND_ID \=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id \= P.CEDING_COMPANY_ID AND I.branch_code \=P.BRANCH_CODE)) Ceding_Company_Name, (Select   First_Name || Last_Name From   Personal_Info Pi Where   Pi.Customer_Id \= P.Broker_Id  And Pi.Branch_Code \= P.Branch_Code and AMEND_ID \=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO I WHERE   I.customer_id \= P.Broker_Id AND I.branch_code \= P.BRANCH_CODE))  Broker_Name FROM TTRN_CLAIM_DETAILS C,POSITION_MASTER P WHERE C.CEDENT_CLAIM_NO\=? AND C.DATE_OF_LOSS \=TO_DATE(?,'DD/MM/YYYY') AND  P.CEDING_COMPANY_ID\=? AND C.BRANCH_CODE\=?  AND C.CONTRACT_NO\=P.CONTRACT_NO AND C.BRANCH_CODE\=P.BRANCH_CODE AND C.LAYER_NO\=P.LAYER_NO AND P.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER CP WHERE  CP.CONTRACT_NO\=P.CONTRACT_NO AND  CP.LAYER_NO\=P.LAYER_NO)
GET_DUPLICATE_CEDENT_NO_LIST=SELECT CLAIM_NO FROM TTRN_CLAIM_DETAILS C,POSITION_MASTER P WHERE  C.BRANCH_CODE=? AND P.PROPOSAL_NO=? AND C.CEDENT_CLAIM_NO=?  AND C.CONTRACT_NO=P.CONTRACT_NO AND C.BRANCH_CODE=P.BRANCH_CODE AND C.LAYER_NO=P.LAYER_NO AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER CP WHERE  CP.CONTRACT_NO=P.CONTRACT_NO AND  CP.LAYER_NO=P.LAYER_NO) ORDER BY CLAIM_NO DESC
TRANSACTION_NO_LIST = SELECT TRANSACTION_NO FROM RSK_PREMIUM_DETAILS WHERE BRANCH_CODE\=? AND PROPOSAL_NO\=? AND TRUNC(TRANSACTION_MONTH_YEAR) <\= TO_DATE(?,'DD-MM-YYYY') AND REVERSE_TRANSACTION_NO IS NULL 
TRANSACTION_NO_LIST_RETRO = SELECT TRANSACTION_NO FROM RSK_XL_PREMIUM_DETAILS WHERE BRANCH_CODE\=? AND PROPOSAL_NO\=? AND TRUNC(TRANSACTION_MONTH_YEAR) < TO_DATE(?,'DD-MM-YYYY') AND REVERSE_TRANSACTION_NO IS NULL 
UPDATE_REV_TRANSACTION_NO =UPDATE RSK_PREMIUM_DETAILS SET REVERSE_TRANSACTION_NO\=? WHERE TRANSACTION_NO\=?
UPDATE_REV_TRANSACTION_NO_RETRO =UPDATE RSK_XL_PREMIUM_DETAILS SET REVERSE_TRANSACTION_NO\=? WHERE TRANSACTION_NO\=?
UPDATE_MND_INSTAL =UPDATE TTRN_MND_INSTALLMENTS M SET TRANSACTION_NO\=? WHERE PROPOSAL_NO\=? AND TRANSACTION_NO\=? 

GET_FAC_POLICY_REGISTER = SELECT * FROM TABLE(FN_FAC_POL_REG(?,?,?,?,?,?,?))
GET_TREATY_POLICY_REGISTER=SELECT * FROM TABLE(FN_TREATY_POL_REG(?,?,?,?,?,?,?,?))


### Premium Authendication ###
GET_SEQ_NAME =SELECT  SEQ_NAME FROM SEQUENCE_MASTER WHERE BRANCH_CODE\=? AND SEQ_ID\='20'
FAC_PREMIUM_SELECT_PREMIUMEDLIST_TEMP = SELECT RK.RSK_CONTRACT_NO ,PERSONAL.COMPANY_NAME,PI.FIRST_NAME ||' '||PI.LAST_NAME BROKER_NAME, RK.RSK_PROPOSAL_NUMBER,  RK.RSK_LAYER_NO,RK.RSK_DEPTID,TRA.REQUEST_NO,TRA.INSTALMENT_NUMBER ||' ' ||TRA.ACCOUNT_PERIOD_QTR INS_DETAIL, case rk.RSK_PRODUCTID when 2 then (SELECT DISTINCT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID\=49 AND TYPE\=TRA.ACCOUNT_PERIOD_QTR and STATUS\='Y') || ' ' || TRA.ACCOUNT_PERIOD_YEAR else TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR  end ACC_PER, TO_CHAR(TRA.ENTRY_DATE_TIME,'DD/MM/YYYY') INS_DATE, TO_CHAR(TRA.STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRA.ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,NVL(TRA.ALLOCATED_TILL_DATE,'0') ALLOC_AMT,TRA.MOVEMENT_YN,TRA.SETTLEMENT_STATUS,TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY')TRANSACTION_DATE ,TO_CHAR (TRA.STATEMENT_DATE, 'DD/MM/YYYY')STATEMENT_DATE,TRA.REVERSE_TRANSACTION_NO FROM TTRN_RISK_DETAILS RK , PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,RSK_PREMIUM_DETAILS_TEMP TRA WHERE RK.RSK_CONTRACT_NO\=? AND RK.RSK_CEDINGID\=PERSONAL.CUSTOMER_ID AND RK.RSK_BROKERID \= PI.CUSTOMER_ID AND PERSONAL.BRANCH_CODE\=? AND PERSONAL.AMEND_ID\=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE  CUSTOMER_ID\=PERSONAL.CUSTOMER_ID AND   BRANCH_CODE\=PERSONAL.BRANCH_CODE ) AND PI.BRANCH_CODE \= PERSONAL.BRANCH_CODE AND PI.AMEND_ID \= (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID \= PI.CUSTOMER_ID AND BRANCH_CODE \= PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO\=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO\=? ) AND TRA.CONTRACT_NO\=RK.RSK_CONTRACT_NO AND TRANS_STATUS\='P' ORDER BY TRA.REQUEST_NO DESC
PREMIUM_SELECT_FACPREMIUMEDIT_TEMP = SELECT TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER, CURRENCY_ID ,EXCHANGE_RATE,PREMIUM_QUOTASHARE_OC,COMMISSION,COMMISSION_QUOTASHARE_OC, BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME,STATUS,RECEIPT_NO,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY') AMENDMENT_DATE,ENTERING_MODE,OTHER_COST_OC ,CEDANT_REFERENCE,REMARKS,NETDUE_OC,TOTAL_CR_OC,TOTAL_DR_OC,SETTLEMENT_STATUS, WITH_HOLDING_TAX_OC, WITH_HOLDING_TAX_DC,RI_CESSION,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,REVERSE_TRANSACTION_NO,REVERSEL_STATUS from RSK_PREMIUM_DETAILS_TEMP WHERE CONTRACT_NO=? AND REQUEST_NO=?
#PREMIUM_SELECT_FACPREMIVIEW_TEMP = SELECT CONTRACT_NO,TRANSACTION_NO,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,EXCHANGE_RATE,BROKERAGE, BROKERAGE_AMT_OC, TAX, TAX_AMT_OC,COMMISSION,M_DPREMIUM_OC, ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC ,NETDUE_OC, LAYER_NO,ENTERING_MODE,ENTRY_DATE_TIME,ACCOUNT_PERIOD_QTR,CURRENCY_ID,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC,NETDUE_DC,OTHER_COST_DC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE, CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,SETTLEMENT_STATUS,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,INSTALMENT_NUMBER,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (TRANSACTION_MONTH_YEAR+30, 'DD/MM/YYYY') due_date,RI_CESSION,(select TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE\=? AND TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y' and TMAS_DEPARTMENT_ID\=SUB_CLASS)SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,GNPI_ENDT_NO,(select TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE\=? AND TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y' and TMAS_DEPARTMENT_ID\=PREMIUM_CLASS)PREMIUM_CLASS,REVERSEL_STATUS,REVERSE_TRANSACTION_NO from RSK_PREMIUM_DETAILS_TEMP where CONTRACT_NO\=? and REQUEST_NO\=?
PREMIUM_SELECT_FACPREMIVIEW_TEMP = SELECT CONTRACT_NO,TRANSACTION_NO,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,EXCHANGE_RATE,BROKERAGE, BROKERAGE_AMT_OC, TAX, TAX_AMT_OC,COMMISSION,M_DPREMIUM_OC, ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC ,NETDUE_OC, LAYER_NO,ENTERING_MODE,ENTRY_DATE_TIME,ACCOUNT_PERIOD_QTR,CURRENCY_ID,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC,NETDUE_DC,OTHER_COST_DC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE, CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,SETTLEMENT_STATUS,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,INSTALMENT_NUMBER,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (TRANSACTION_MONTH_YEAR+30, 'DD/MM/YYYY') due_date,RI_CESSION,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,GNPI_ENDT_NO,REVERSEL_STATUS,REVERSE_TRANSACTION_NO,PREMIUM_QUOTASHARE_OC,PREMIUM_QUOTASHARE_DC,COMMISSION_QUOTASHARE_OC,COMMISSION_QUOTASHARE_DC,STATUS,RECEIPT_NO, ( select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID\=RK.PREMIUM_CLASS and branch_code\=RK.branch_code and TMAS_PRODUCT_ID\=?  AND TMAS_STATUS\='Y')  TMAS_DEPARTMENT_NAME,PREMIUM_SUBCLASS, ( select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()' ),',') from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in( select * from table(SPLIT_TEXT_FN(replace(RK.PREMIUM_SUBCLASS,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID \= ? AND RK.BRANCH_CODE \= SPFC.BRANCH_CODE)PREMIUM_SUBCLASS_VAL from RSK_PREMIUM_DETAILS_TEMP RK where CONTRACT_NO\=? and REQUEST_NO\=?
PREMIUM_UPDATE_FACUPATEPRE_TEMP =UPDATE RSK_PREMIUM_DETAILS_TEMP SET ACCOUNT_PERIOD_QTR\=?,INSTALMENT_NUMBER\=?,TRANSACTION_MONTH_YEAR\=TO_DATE(?,'DD/MM/YYYY'),CURRENCY_ID\=?,EXCHANGE_RATE\=?,PREMIUM_QUOTASHARE_OC\=?,COMMISSION\=?,COMMISSION_QUOTASHARE_OC\=?,BROKERAGE\=? ,BROKERAGE_AMT_OC\=?,TAX\=?,TAX_AMT_OC\=?,ENTRY_DATE_TIME\=to_date(?,'dd/mm/yyyy'),STATUS\=?, NETDUE_OC\=?,ENTERING_MODE\=?,RECEIPT_NO\=?,OTHER_COST_OC\=?,PREMIUM_QUOTASHARE_DC\=?, COMMISSION_QUOTASHARE_DC\=?,BROKERAGE_AMT_DC\=?,TAX_AMT_DC\=?,NETDUE_DC\=?,OTHER_COST_DC\=?, CEDANT_REFERENCE\=?,REMARKS\=?,TOTAL_CR_OC\=?,TOTAL_CR_DC\=?,TOTAL_DR_OC\=?,TOTAL_DR_DC\=?,AMENDMENT_DATE\=to_date(?,'dd/mm/yyyy'),ENTRY_DATE\=SYSDATE,MOVEMENT_YN\=NULL,WITH_HOLDING_TAX_OC\=?,WITH_HOLDING_TAX_DC\=?,RI_CESSION\=?,LOGIN_ID\=?,BRANCH_CODE\=?,TDS_OC\=?,TDS_DC\=?,ST_OC\=?,ST_DC\=?,BONUS_OC\=?,BONUS_DC\=?,PREMIUM_CLASS\=?,PREMIUM_SUBCLASS\=?,STATEMENT_DATE\=TO_DATE(?,'DD/MM/YYYY'),TRANS_TYPE\=? WHERE CONTRACT_NO\=? AND REQUEST_NO\=?
FAC_PREMIUM_TEMP_TO_MAIN = INSERT INTO RSK_PREMIUM_DETAILS (CONTRACT_NO, TRANSACTION_NO, TRANSACTION_MONTH_YEAR, ACCOUNT_PERIOD_QTR, ACCOUNT_PERIOD_YEAR,     CURRENCY_ID, EXCHANGE_RATE, BROKERAGE, BROKERAGE_AMT_OC, BROKERAGE_AMT_DC,     TAX, TAX_AMT_OC, TAX_AMT_DC, ENTRY_DATE_TIME, COMMISSION,     PREMIUM_QUOTASHARE_OC, PREMIUM_QUOTASHARE_DC, COMMISSION_QUOTASHARE_OC, COMMISSION_QUOTASHARE_DC, PREMIUM_SURPLUS_OC,     PREMIUM_SURPLUS_DC, COMMISSION_SURPLUS_OC, COMMISSION_SURPLUS_DC, PREMIUM_PORTFOLIOIN_OC, PREMIUM_PORTFOLIOIN_DC,     CLAIM_PORTFOLIOIN_OC, CLAIM_PORTFOLIOIN_DC, PREMIUM_PORTFOLIOOUT_OC, PREMIUM_PORTFOLIOOUT_DC, LOSS_RESERVE_RELEASED_OC,     LOSS_RESERVE_RELEASED_DC, PREMIUMRESERVE_QUOTASHARE_OC, PREMIUMRESERVE_QUOTASHARE_DC, CASH_LOSS_CREDIT_OC, CASH_LOSS_CREDIT_DC,     LOSS_RESERVERETAINED_OC, LOSS_RESERVERETAINED_DC, PROFIT_COMMISSION_OC, PROFIT_COMMISSION_DC, CASH_LOSSPAID_OC,     CASH_LOSSPAID_DC, STATUS, REMARKS, NETDUE_OC, NETDUE_DC,     LAYER_NO, M_DPREMIUM_OC, M_DPREMIUM_DC, ADJUSTMENT_PREMIUM_OC, ADJUSTMENT_PREMIUM_DC,     REC_PREMIUM_OC, REC_PREMIUM_DC, ENTERING_MODE, RECEIPT_NO, CLAIMS_PAID_OC,     CLAIMS_PAID_DC, SETTLEMENT_STATUS, PAYMENT_NO, INSTALMENT_NUMBER, PREMIUM_RESERVE_RELEASE_OC,     PREMIUM_RESERVE_RELEASE_DC, PREMIUM_RESERVE_RETAINED_OC, PREMIUM_RESERVE_RETAINED_DC, INTEREST_OC, INTEREST_DC,     UW_MONTH, UW_YEAR, XL_COST_OC, XL_COST_DC, CLAIM_PORTFOLIO_OUT_OC,     CLAIM_PORTFOLIO_OUT_DC, PREMIUM_RESERVE_REALSED_OC, PREMIUM_RESERVE_REALSED_DC, OTHER_COST_OC, OTHER_COST_DC,     ALLOCATED_TILL_DATE, CEDANT_REFERENCE, ACC_PREMIUM, CHECKYN, TOTAL_CR_OC,     TOTAL_CR_DC, TOTAL_DR_OC, TOTAL_DR_DC, OSCLAIM_LOSSUPDATE_OC, OSCLAIM_LOSSUPDATE_DC,     PROPOSAL_NO, ENTRY_DATE, OVERRIDER, OVERRIDER_AMT_OC, OVERRIDER_AMT_DC,     MOVEMENT_YN, MOVMENT_TRANID, AMENDMENT_DATE, WITH_HOLDING_TAX_DC, WITH_HOLDING_TAX_OC,     AMEND_ID, RI_CESSION, SUB_CLASS, LOGIN_ID, BRANCH_CODE,     TDS_OC, TDS_DC, ST_OC, ST_DC, SC_COMM_OC,     SC_COMM_DC, BONUS_OC, BONUS_DC, PREMIUM_CLASS, PREMIUM_SUBCLASS,     PRD_ALLOCATED_TILL_DATE, LRD_ALLOCATED_TILL_DATE, GNPI_ENDT_NO, ACCOUNTING_PERIOD_DATE, STATEMENT_DATE,     OSBYN, LPC_OC, LPC_DC, SECTION_NAME, PRODUCT_ID,     REVERSE_TRANSACTION_NO, REVERSEL_STATUS, REQUEST_NO, TRANS_TYPE) SELECT CONTRACT_NO, TRANSACTION_NO, TRANSACTION_MONTH_YEAR, ACCOUNT_PERIOD_QTR, ACCOUNT_PERIOD_YEAR,     CURRENCY_ID, EXCHANGE_RATE, BROKERAGE, BROKERAGE_AMT_OC, BROKERAGE_AMT_DC,     TAX, TAX_AMT_OC, TAX_AMT_DC, ENTRY_DATE_TIME, COMMISSION,     PREMIUM_QUOTASHARE_OC, PREMIUM_QUOTASHARE_DC, COMMISSION_QUOTASHARE_OC, COMMISSION_QUOTASHARE_DC, PREMIUM_SURPLUS_OC,     PREMIUM_SURPLUS_DC, COMMISSION_SURPLUS_OC, COMMISSION_SURPLUS_DC, PREMIUM_PORTFOLIOIN_OC, PREMIUM_PORTFOLIOIN_DC,     CLAIM_PORTFOLIOIN_OC, CLAIM_PORTFOLIOIN_DC, PREMIUM_PORTFOLIOOUT_OC, PREMIUM_PORTFOLIOOUT_DC, LOSS_RESERVE_RELEASED_OC,     LOSS_RESERVE_RELEASED_DC, PREMIUMRESERVE_QUOTASHARE_OC, PREMIUMRESERVE_QUOTASHARE_DC, CASH_LOSS_CREDIT_OC, CASH_LOSS_CREDIT_DC,     LOSS_RESERVERETAINED_OC, LOSS_RESERVERETAINED_DC, PROFIT_COMMISSION_OC, PROFIT_COMMISSION_DC, CASH_LOSSPAID_OC,     CASH_LOSSPAID_DC, STATUS, REMARKS, NETDUE_OC, NETDUE_DC,     LAYER_NO, M_DPREMIUM_OC, M_DPREMIUM_DC, ADJUSTMENT_PREMIUM_OC, ADJUSTMENT_PREMIUM_DC,     REC_PREMIUM_OC, REC_PREMIUM_DC, ENTERING_MODE, RECEIPT_NO, CLAIMS_PAID_OC,     CLAIMS_PAID_DC, SETTLEMENT_STATUS, PAYMENT_NO, INSTALMENT_NUMBER, PREMIUM_RESERVE_RELEASE_OC,     PREMIUM_RESERVE_RELEASE_DC, PREMIUM_RESERVE_RETAINED_OC, PREMIUM_RESERVE_RETAINED_DC, INTEREST_OC, INTEREST_DC,     UW_MONTH, UW_YEAR, XL_COST_OC, XL_COST_DC, CLAIM_PORTFOLIO_OUT_OC,     CLAIM_PORTFOLIO_OUT_DC, PREMIUM_RESERVE_REALSED_OC, PREMIUM_RESERVE_REALSED_DC, OTHER_COST_OC, OTHER_COST_DC,     ALLOCATED_TILL_DATE, CEDANT_REFERENCE, ACC_PREMIUM, CHECKYN, TOTAL_CR_OC,     TOTAL_CR_DC, TOTAL_DR_OC, TOTAL_DR_DC, OSCLAIM_LOSSUPDATE_OC, OSCLAIM_LOSSUPDATE_DC,     PROPOSAL_NO, ENTRY_DATE, OVERRIDER, OVERRIDER_AMT_OC, OVERRIDER_AMT_DC,     MOVEMENT_YN, MOVMENT_TRANID, AMENDMENT_DATE, WITH_HOLDING_TAX_DC, WITH_HOLDING_TAX_OC,     AMEND_ID, RI_CESSION, SUB_CLASS, LOGIN_ID, BRANCH_CODE,     TDS_OC, TDS_DC, ST_OC, ST_DC, SC_COMM_OC,     SC_COMM_DC, BONUS_OC, BONUS_DC, PREMIUM_CLASS, PREMIUM_SUBCLASS,     PRD_ALLOCATED_TILL_DATE, LRD_ALLOCATED_TILL_DATE, GNPI_ENDT_NO, ACCOUNTING_PERIOD_DATE, STATEMENT_DATE,     OSBYN, LPC_OC, LPC_DC, SECTION_NAME, PRODUCT_ID,     REVERSE_TRANSACTION_NO, REVERSEL_STATUS, REQUEST_NO, TRANS_TYPE FROM RSK_PREMIUM_DETAILS_TEMP WHERE REQUEST_NO=? AND BRANCH_CODE = ?
FAC_TRANS_UPDATE = UPDATE RSK_PREMIUM_DETAILS SET TRANSACTION_NO=? WHERE REQUEST_NO=? AND BRANCH_CODE=?
FAC_TEMP_STATUS_UPDATE =UPDATE RSK_PREMIUM_DETAILS_TEMP SET TRANS_STATUS\=?,REVIEWER_ID\=?,REVIEW_DATE\=SYSDATE,TRANSACTION_NO\=? WHERE REQUEST_NO\=? AND BRANCH_CODE\=?
GET_AUTHENTICATION_LIST = SELECT TRANSACTION_NO,LAYER_NO,PREMIUM_CLASS,REQUEST_NO,LOGIN_ID,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER,RECEIPT_NO,PREMIUM_SUBCLASS, REVERSEL_STATUS,REVERSE_TRANSACTION_NO,PRODUCT_ID,CONTRACT_NO,case TRA.PRODUCT_ID when 2 then (SELECT DISTINCT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID\=49 AND TYPE\=TRA.ACCOUNT_PERIOD_QTR and STATUS\='Y') || ' ' || TRA.ACCOUNT_PERIOD_YEAR else TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR  end ACC_PER FROM RSK_PREMIUM_DETAILS_TEMP TRA WHERE BRANCH_CODE\=? AND TRANS_STATUS\=?
PREMIUM_SELECT_FACPREMIUMEDIT_TEMP_AUTH =SELECT TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,ACCOUNT_PERIOD_QTR,INSTALMENT_NUMBER, CURRENCY_ID ,EXCHANGE_RATE,PREMIUM_QUOTASHARE_OC,COMMISSION,COMMISSION_QUOTASHARE_OC, BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME,STATUS,RECEIPT_NO,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY') AMENDMENT_DATE,ENTERING_MODE,OTHER_COST_OC ,CEDANT_REFERENCE,REMARKS,NETDUE_OC,TOTAL_CR_OC,TOTAL_DR_OC,SETTLEMENT_STATUS, WITH_HOLDING_TAX_OC, WITH_HOLDING_TAX_DC,RI_CESSION,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,REVERSE_TRANSACTION_NO,REVERSEL_STATUS,PRODUCT_ID,PREMIUM_CLASS,CONTRACT_NO from RSK_PREMIUM_DETAILS_TEMP WHERE  REQUEST_NO\=?
PREMIUM_UPDATE_TREATYUPDATEPRE_TEMP =UPDATE RSK_PREMIUM_DETAILS SET TRANSACTION_MONTH_YEAR\=TO_DATE(?,'DD/MM/YYYY') ,ACCOUNT_PERIOD_QTR\=?,ACCOUNT_PERIOD_YEAR\=?,CURRENCY_ID\=? ,EXCHANGE_RATE\=?,BROKERAGE\=?,BROKERAGE_AMT_OC\=?,TAX\=?,TAX_AMT_OC\=?,ENTRY_DATE_TIME\=to_date(?,'dd/mm/yyyy'), PREMIUM_QUOTASHARE_OC\=?,COMMISSION_QUOTASHARE_OC\=?,PREMIUM_SURPLUS_OC\=?,COMMISSION_SURPLUS_OC\=?, PREMIUM_PORTFOLIOIN_OC\=?,CLAIM_PORTFOLIOIN_OC\=?,PREMIUM_PORTFOLIOOUT_OC\=?,LOSS_RESERVE_RELEASED_OC\=? ,PREMIUMRESERVE_QUOTASHARE_OC\=?,CASH_LOSS_CREDIT_OC\=?,LOSS_RESERVERETAINED_OC\=?,PROFIT_COMMISSION_OC\=?, CASH_LOSSPAID_OC\=?,ENTERING_MODE\=?,RECEIPT_NO\=?,CLAIMS_PAID_OC\=?,SETTLEMENT_STATUS\=?,XL_COST_OC\=?, CLAIM_PORTFOLIO_OUT_OC\=?,PREMIUM_RESERVE_REALSED_OC\=?,NETDUE_OC\=?,OTHER_COST_OC\=?,BROKERAGE_AMT_DC\=?,TAX_AMT_DC\=?,PREMIUM_QUOTASHARE_DC\=?,COMMISSION_QUOTASHARE_DC\=?,PREMIUM_SURPLUS_DC\=?,COMMISSION_SURPLUS_DC\=?,PREMIUM_PORTFOLIOIN_DC\=?, CLAIM_PORTFOLIOIN_DC\=?,PREMIUM_PORTFOLIOOUT_DC\=?,LOSS_RESERVE_RELEASED_DC\=?, PREMIUMRESERVE_QUOTASHARE_DC\=?,CASH_LOSS_CREDIT_DC\=?,LOSS_RESERVERETAINED_DC\=?,PROFIT_COMMISSION_DC\=?, CASH_LOSSPAID_DC\=?,CLAIMS_PAID_DC\=?,XL_COST_DC\=?, CLAIM_PORTFOLIO_OUT_DC\=?,PREMIUM_RESERVE_REALSED_DC\=?,NETDUE_DC\=?, OTHER_COST_DC\=?,CEDANT_REFERENCE\=?,REMARKS\=?,TOTAL_CR_OC\=?,TOTAL_CR_DC\=?,TOTAL_DR_OC\=?,TOTAL_DR_DC\=?,INTEREST_OC\=?,INTEREST_DC\=?,OSCLAIM_LOSSUPDATE_OC\=?,OSCLAIM_LOSSUPDATE_DC\=?,ENTRY_DATE\=SYSDATE,MOVEMENT_YN\=NULL,OVERRIDER_AMT_OC\=?,OVERRIDER_AMT_DC\=?,OVERRIDER\=?,AMENDMENT_DATE\=to_date(?,'dd/mm/yyyy'),WITH_HOLDING_TAX_OC\=?,WITH_HOLDING_TAX_DC\=?,RI_CESSION\=?,SUB_CLASS\=?,TDS_OC\=?,TDS_DC\=?,ST_OC\=?,ST_DC\=?, SC_COMM_OC\=?,SC_COMM_DC\=?,PREMIUM_CLASS\=?,PREMIUM_SUBCLASS\=?,ACCOUNTING_PERIOD_DATE\=TO_DATE(?,'DD/MM/YYYY'),STATEMENT_DATE\=TO_DATE(?,'DD/MM/YYYY'),OSBYN\=?,LPC_OC\=?,LPC_DC\=?,SECTION_NAME\=? WHERE CONTRACT_NO\=? AND REQUEST_NO\=?
PTTY_PREMIUM_LIST_TEMP = SELECT REQUEST_NO,RK.RSK_CONTRACT_NO ,PERSONAL.COMPANY_NAME,PI.FIRST_NAME ||' '||PI.LAST_NAME BROKER_NAME, RK.RSK_PROPOSAL_NUMBER,  RK.RSK_LAYER_NO,RK.RSK_DEPTID,TRA.TRANSACTION_NO,TRA.INSTALMENT_NUMBER ||' ' ||TRA.ACCOUNT_PERIOD_QTR INS_DETAIL, case rk.RSK_PRODUCTID when 2 then (SELECT DISTINCT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID=49 AND TYPE=TRA.ACCOUNT_PERIOD_QTR and STATUS='Y') || ' ' || TRA.ACCOUNT_PERIOD_YEAR else TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR  end ACC_PER, TO_CHAR(TRA.ENTRY_DATE_TIME,'DD/MM/YYYY') INS_DATE, TO_CHAR(TRA.STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRA.ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,NVL(TRA.ALLOCATED_TILL_DATE,'0') ALLOC_AMT,TRA.MOVEMENT_YN,TRA.SETTLEMENT_STATUS,TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY')TRANSACTION_DATE ,TO_CHAR (TRA.STATEMENT_DATE, 'DD/MM/YYYY')STATEMENT_DATE,TRA.REVERSE_TRANSACTION_NO FROM TTRN_RISK_DETAILS RK , PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,RSK_PREMIUM_DETAILS_TEMP TRA WHERE RK.RSK_CONTRACT_NO=? AND RK.RSK_CEDINGID=PERSONAL.CUSTOMER_ID AND RK.RSK_BROKERID = PI.CUSTOMER_ID AND PERSONAL.BRANCH_CODE=? AND PERSONAL.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE  CUSTOMER_ID=PERSONAL.CUSTOMER_ID AND   BRANCH_CODE=PERSONAL.BRANCH_CODE ) AND PI.BRANCH_CODE = PERSONAL.BRANCH_CODE AND PI.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=? AND RSK_DEPTID =  TRA.SUB_CLASS ) AND TRA.CONTRACT_NO=RK.RSK_CONTRACT_NO  AND RSK_DEPTID=? AND TRA.SUB_CLASS=RSK_DEPTID and TRANS_STATUS='P' ORDER BY TRA.TRANSACTION_NO DESC
PTTY_PREMIUM_EDIT_TEMP =SELECT TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,ACCOUNT_PERIOD_QTR, ACCOUNT_PERIOD_YEAR,CURRENCY_ID,EXCHANGE_RATE,BROKERAGE_AMT_OC,TAX_AMT_OC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY'),TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY') AMENDMENT_DATE,PREMIUM_QUOTASHARE_OC,  COMMISSION_QUOTASHARE_OC,PREMIUM_SURPLUS_OC,COMMISSION_SURPLUS_OC,PREMIUM_PORTFOLIOIN_OC, CLAIM_PORTFOLIOIN_OC,PREMIUM_PORTFOLIOOUT_OC,LOSS_RESERVE_RELEASED_OC,PREMIUMRESERVE_QUOTASHARE_OC, CASH_LOSS_CREDIT_OC,LOSS_RESERVERETAINED_OC,PROFIT_COMMISSION_OC,CASH_LOSSPAID_OC,STATUS,  REMARKS,NETDUE_OC,ENTERING_MODE,RECEIPT_NO,CLAIMS_PAID_OC,SETTLEMENT_STATUS,M_DPREMIUM_OC,ADJUSTMENT_PREMIUM_OC,REC_PREMIUM_OC  ,COMMISSION,INSTALMENT_NUMBER,to_char(ENTRY_DATE_TIME,'DD/MM/YYYY') INS_DATE,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,  OTHER_COST_OC,CEDANT_REFERENCE,REMARKS,NETDUE_OC,TOTAL_CR_OC,TOTAL_DR_OC,INTEREST_OC,OSCLAIM_LOSSUPDATE_OC,OVERRIDER,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,SC_Comm_OC,SC_Comm_DC,BONUS_OC,BONUS_DC,PREMIUM_SUBCLASS,LPC_OC,LPC_DC,GNPI_ENDT_NO,nvl(PRD_ALLOCATED_TILL_DATE,0)PRD_ALLOCATED_TILL_DATE,nvl(LRD_ALLOCATED_TILL_DATE,0)LRD_ALLOCATED_TILL_DATE,PREMIUM_CLASS,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,OSBYN,SECTION_NAME,REVERSEL_STATUS,REVERSE_TRANSACTION_NO FROM RSK_PREMIUM_DETAILS_TEMP where CONTRACT_NO\=? AND REQUEST_NO\=?
XOL_PREMIUM_LIST_TEMP = SELECT REQUEST_NO,RK.RSK_CONTRACT_NO ,PERSONAL.COMPANY_NAME,PI.FIRST_NAME ||' '||PI.LAST_NAME BROKER_NAME, RK.RSK_PROPOSAL_NUMBER,  RK.RSK_LAYER_NO,RK.RSK_DEPTID,TRA.TRANSACTION_NO,TRA.INSTALMENT_NUMBER ||' ' ||TRA.ACCOUNT_PERIOD_QTR INS_DETAIL, case rk.RSK_PRODUCTID when 2 then (SELECT DISTINCT DETAIL_NAME FROM CONSTANT_DETAIL WHERE CATEGORY_ID=49 AND TYPE=TRA.ACCOUNT_PERIOD_QTR and STATUS='Y') || ' ' || TRA.ACCOUNT_PERIOD_YEAR else TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR  end ACC_PER, TO_CHAR(TRA.ENTRY_DATE_TIME,'DD/MM/YYYY') INS_DATE, TO_CHAR(TRA.STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRA.ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,NVL(TRA.ALLOCATED_TILL_DATE,'0') ALLOC_AMT,TRA.MOVEMENT_YN,TRA.SETTLEMENT_STATUS,TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY')TRANSACTION_DATE ,TO_CHAR (TRA.STATEMENT_DATE, 'DD/MM/YYYY')STATEMENT_DATE,TRA.REVERSE_TRANSACTION_NO FROM TTRN_RISK_DETAILS RK , PERSONAL_INFO PERSONAL,PERSONAL_INFO PI,RSK_PREMIUM_DETAILS_TEMP TRA WHERE RK.RSK_CONTRACT_NO=? AND RK.RSK_CEDINGID=PERSONAL.CUSTOMER_ID AND RK.RSK_BROKERID = PI.CUSTOMER_ID AND PERSONAL.BRANCH_CODE=? AND PERSONAL.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE  CUSTOMER_ID=PERSONAL.CUSTOMER_ID AND   BRANCH_CODE=PERSONAL.BRANCH_CODE ) AND PI.BRANCH_CODE = PERSONAL.BRANCH_CODE AND PI.AMEND_ID = (SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE   CUSTOMER_ID = PI.CUSTOMER_ID AND BRANCH_CODE = PI.BRANCH_CODE) AND RK.RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS WHERE RSK_CONTRACT_NO=? AND RSK_LAYER_NO=? ) AND TRA.CONTRACT_NO=RK.RSK_CONTRACT_NO  AND TRA.LAYER_NO=RK.RSK_LAYER_NO  AND RK.RSK_LAYER_NO=? AND TRANS_STATUS='P' ORDER BY TRA.TRANSACTION_NO DESC
XOL_PREMIUM_VIEW_DETAILS_TEMP = SELECT CONTRACT_NO,TRANSACTION_NO,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,EXCHANGE_RATE,BROKERAGE, BROKERAGE_AMT_OC, TAX, TAX_AMT_OC,COMMISSION,M_DPREMIUM_OC, ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC ,NETDUE_OC, LAYER_NO,ENTERING_MODE,ENTRY_DATE_TIME,ACCOUNT_PERIOD_QTR,CURRENCY_ID,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC,NETDUE_DC,OTHER_COST_DC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY') ENTRY_DATE, CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,SETTLEMENT_STATUS,TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY')AMENDMENT_DATE,INSTALMENT_NUMBER,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,TO_CHAR (TRANSACTION_MONTH_YEAR+30, 'DD/MM/YYYY') due_date,RI_CESSION,(select TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE\=? AND TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y' and TMAS_DEPARTMENT_ID\=SUB_CLASS)SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,GNPI_ENDT_NO,(select TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER WHERE BRANCH_CODE\=? AND TMAS_PRODUCT_ID\=? AND TMAS_STATUS\='Y' and TMAS_DEPARTMENT_ID\=PREMIUM_CLASS)PREMIUM_CLASS,REVERSEL_STATUS,REVERSE_TRANSACTION_NO from RSK_PREMIUM_DETAILS_TEMP where CONTRACT_NO\=? and REQUEST_NO\=?

PREMIUM_INSERT_XOLPREMIUM_TEMP = INSERT INTO RSK_PREMIUM_DETAILS_TEMP ( CONTRACT_NO,REQUEST_NO,TRANSACTION_MONTH_YEAR ,ACCOUNT_PERIOD_QTR,ACCOUNT_PERIOD_YEAR,CURRENCY_ID ,EXCHANGE_RATE,BROKERAGE,BROKERAGE_AMT_OC,TAX,TAX_AMT_OC,ENTRY_DATE_TIME ,COMMISSION,M_DPREMIUM_OC, ADJUSTMENT_PREMIUM_OC, REC_PREMIUM_OC ,STATUS,NETDUE_OC, LAYER_NO,ENTERING_MODE,RECEIPT_NO,INSTALMENT_NUMBER, SETTLEMENT_STATUS,OTHER_COST_OC,BROKERAGE_AMT_DC,TAX_AMT_DC,M_DPREMIUM_DC,ADJUSTMENT_PREMIUM_DC,REC_PREMIUM_DC,NETDUE_DC,OTHER_COST_DC,CEDANT_REFERENCE,REMARKS,TOTAL_CR_OC,TOTAL_CR_DC,TOTAL_DR_OC,TOTAL_DR_DC,ENTRY_DATE,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,LOGIN_ID,BRANCH_CODE,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,BONUS_OC,BONUS_DC,GNPI_ENDT_NO,PREMIUM_SUBCLASS,PREMIUM_CLASS,STATEMENT_DATE, PROPOSAL_NO,PRODUCT_ID,REVERSEL_STATUS,TRANS_STATUS,TRANS_TYPE) VALUES (?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,?,?,?)
XOL_PREMIUM_UPDATE_UPDATE_TEMP =  UPDATE RSK_PREMIUM_DETAILS_TEMP SET TRANSACTION_MONTH_YEAR\=TO_DATE(?,'DD/MM/YYYY'), CURRENCY_ID\=?  ,EXCHANGE_RATE\=?,BROKERAGE\=?,BROKERAGE_AMT_OC\=?,TAX\=?,TAX_AMT_OC\=?,ENTRY_DATE_TIME\=to_date(?,'dd/mm/yyyy'), COMMISSION\=?,M_DPREMIUM_OC\=?,ADJUSTMENT_PREMIUM_OC\=?, REC_PREMIUM_OC\=?, NETDUE_OC\=? ,ENTERING_MODE\=?,RECEIPT_NO\=?,OTHER_COST_OC\=?, BROKERAGE_AMT_DC\=?,TAX_AMT_DC\=?,M_DPREMIUM_DC\=?,ADJUSTMENT_PREMIUM_DC\=?, REC_PREMIUM_DC\=?,NETDUE_DC\=?,OTHER_COST_DC\=?,CEDANT_REFERENCE\=?,REMARKS\=?,TOTAL_CR_OC\=?,TOTAL_CR_DC\=?,TOTAL_DR_OC\=?,TOTAL_DR_DC\=?,AMENDMENT_DATE\=to_date(?,'dd/mm/yyyy'),ENTRY_DATE\=SYSDATE,MOVEMENT_YN\=NULL,WITH_HOLDING_TAX_OC\=?,WITH_HOLDING_TAX_DC\=?,RI_CESSION\=?,SUB_CLASS\=?,TDS_OC\=?,TDS_DC\=?,ST_OC\=?,ST_DC\=?,BONUS_OC\=?,BONUS_DC\=?,GNPI_ENDT_NO\=?,PREMIUM_CLASS\=?,STATEMENT_DATE\=TO_DATE(?,'DD/MM/YYYY') WHERE CONTRACT_NO\=? AND REQUEST_NO\=?
XOL_PREMIUM_EDIT_TEMP =SELECT TO_CHAR(TRANSACTION_MONTH_YEAR,'DD/MM/YYYY') TRANS_DATE,TO_CHAR(ACCOUNTING_PERIOD_DATE,'DD/MM/YYYY') ACCOUNTING_PERIOD_DATE,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,ACCOUNT_PERIOD_QTR, ACCOUNT_PERIOD_YEAR,CURRENCY_ID,EXCHANGE_RATE,BROKERAGE_AMT_OC,TAX_AMT_OC,TO_CHAR(ENTRY_DATE_TIME,'DD/MM/YYYY'),TO_CHAR(AMENDMENT_DATE,'DD/MM/YYYY') AMENDMENT_DATE,PREMIUM_QUOTASHARE_OC,  COMMISSION_QUOTASHARE_OC,PREMIUM_SURPLUS_OC,COMMISSION_SURPLUS_OC,PREMIUM_PORTFOLIOIN_OC, CLAIM_PORTFOLIOIN_OC,PREMIUM_PORTFOLIOOUT_OC,LOSS_RESERVE_RELEASED_OC,PREMIUMRESERVE_QUOTASHARE_OC, CASH_LOSS_CREDIT_OC,LOSS_RESERVERETAINED_OC,PROFIT_COMMISSION_OC,CASH_LOSSPAID_OC,STATUS,  REMARKS,NETDUE_OC,ENTERING_MODE,RECEIPT_NO,CLAIMS_PAID_OC,SETTLEMENT_STATUS,M_DPREMIUM_OC,ADJUSTMENT_PREMIUM_OC,REC_PREMIUM_OC  ,COMMISSION,INSTALMENT_NUMBER,to_char(ENTRY_DATE_TIME,'DD/MM/YYYY') INS_DATE,XL_COST_OC,CLAIM_PORTFOLIO_OUT_OC,PREMIUM_RESERVE_REALSED_OC,  OTHER_COST_OC,CEDANT_REFERENCE,REMARKS,NETDUE_OC,TOTAL_CR_OC,TOTAL_DR_OC,INTEREST_OC,OSCLAIM_LOSSUPDATE_OC,OVERRIDER,OVERRIDER_AMT_OC,OVERRIDER_AMT_DC,WITH_HOLDING_TAX_OC,WITH_HOLDING_TAX_DC,RI_CESSION,SUB_CLASS,TDS_OC,TDS_DC,ST_OC,ST_DC,SC_Comm_OC,SC_Comm_DC,BONUS_OC,BONUS_DC,PREMIUM_SUBCLASS,LPC_OC,LPC_DC,GNPI_ENDT_NO,nvl(PRD_ALLOCATED_TILL_DATE,0)PRD_ALLOCATED_TILL_DATE,nvl(LRD_ALLOCATED_TILL_DATE,0)LRD_ALLOCATED_TILL_DATE,PREMIUM_CLASS,TO_CHAR(STATEMENT_DATE,'DD/MM/YYYY') STATEMENT_DATE,OSBYN,SECTION_NAME,REVERSEL_STATUS,REVERSE_TRANSACTION_NO FROM RSK_PREMIUM_DETAILS_TEMP where CONTRACT_NO\=? AND REQUEST_NO\=?
UPDATE_TRANSACTION_NO_STATUS =UPDATE TTRN_DEPOSIT_RELEASE SET RL_TRANSACTION_NO\=?,TABLE_MOVE_STATUS\=? WHERE CONTRACT_NO\=? AND TEMP_REQUEST_NO\=?
UPDATE_CASHLOSS_STATUS = UPDATE TTRN_CASH_LOSS_CREDIT SET CREDITTRXNNO =? , TABLE_MOVE_STATUS=? WHERE CONTRACT_NO=? AND TEMP_REQUEST_NO=?

GET_COUNT_DEPOSIT_PREM = SELECT COUNT(*) FROM TTRN_DEPOSIT_RELEASE WHERE CONTRACT_NO =? AND BRANCH_CODE=? AND TABLE_MOVE_STATUS=? AND RELEASE_TYPE=?
GET_COUNT_CASHLOSS_PREM =SELECT COUNT(*) FROM TTRN_CASH_LOSS_CREDIT WHERE  CONTRACT_NO \=? AND BRANCH_CODE\=? AND TABLE_MOVE_STATUS\=?
PREMIUM_TEMP_LIST =SELECT   DISTINCT RK.RSK_PRODUCTID,  RK.RSK_CONTRACT_NO,RK.RSK_DEPTID,REQUEST_NO, (SELECT   COMPANY_NAME FROM   personal_info Pi WHERE  CUSTOMER_TYPE \= 'C' AND pm.CEDING_COMPANY_ID \= Pi.CUSTOMER_ID AND pi.branch_code \= pm.branch_code AND amend_id \= (SELECT   MAX (Amend_id) FROM   personal_info p  WHERE   p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE  AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code)) COMPANY_NAME, (SELECT   FIRST_NAME FROM   personal_info Pi WHERE  CUSTOMER_TYPE \= 'B'  AND pm.Broker_id \= Pi.CUSTOMER_ID  AND pi.branch_code \= pm.branch_code  AND amend_id \= (SELECT   MAX (Amend_id)  FROM   personal_info p WHERE p.CUSTOMER_TYPE \= pi.CUSTOMER_TYPE AND p.customer_id \= pi.customer_id AND p.branch_code \= pm.branch_code))  Broker_name, RK.RSK_PROPOSAL_NUMBER, RK.RSK_LAYER_NO, TRA.TRANSACTION_NO,  TRA.INSTALMENT_NUMBER || ' ' || TRA.ACCOUNT_PERIOD_QTR  INS_DETAIL, CASE rk.RSK_PRODUCTID WHEN 2 THEN (SELECT   DISTINCT DETAIL_NAME FROM   CONSTANT_DETAIL WHERE       CATEGORY_ID \= 49 AND TYPE \= TRA.ACCOUNT_PERIOD_QTR  AND STATUS \= 'Y') || ' ' || TRA.ACCOUNT_PERIOD_YEAR ELSE TRA.ACCOUNT_PERIOD_QTR || ' ' || ACCOUNT_PERIOD_YEAR END ACC_PER, TO_CHAR (RK.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RK.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE, NVL (TRA.ALLOCATED_TILL_DATE, '0') ALLOC_AMT, TRA.MOVEMENT_YN, TRA.SETTLEMENT_STATUS,  TO_CHAR (TRA.TRANSACTION_MONTH_YEAR, 'DD/MM/YYYY') TRANSACTION_DATE,TRA.REVERSE_TRANSACTION_NO FROM   TTRN_RISK_DETAILS RK, RSK_PREMIUM_DETAILS_TEMP TRA, Position_Master Pm WHERE    pm.BRANCH_CODE \= ? AND pm.amend_id \= (SELECT   MAX (amend_id)  FROM   Position_master p  WHERE   P.contract_no \= pm.Contract_no and decode(RK.RSK_PRODUCTID,'2',P.DEPT_ID,'111111')\= decode(RK.RSK_PRODUCTID,'2',PM.DEPT_ID ,'111111') ) AND TRA.CONTRACT_NO \= pm.contract_no  AND RK.RSK_ENDORSEMENT_NO \= (SELECT   MAX (RSK_ENDORSEMENT_NO)  FROM   TTRN_RISK_DETAILS WHERE   RSK_CONTRACT_NO \= RK.RSK_CONTRACT_NO AND RSK_LAYER_NO \= rk.RSK_LAYER_NO and decode(RK.RSK_PRODUCTID,'2',RSK_DEPTID,'111111')\= decode(RK.RSK_PRODUCTID,'2',rk.RSK_DEPTID,'111111')) AND TRA.CONTRACT_NO \= RK.RSK_CONTRACT_NO AND TRA.LAYER_NO \= RK.RSK_LAYER_NO and   decode(RK.RSK_PRODUCTID,'2',TRA.SUB_CLASS ,'111111')\= decode(RK.RSK_PRODUCTID,'2',rk.RSK_DEPTID,'111111') AND TRANS_STATUS\='P'
 
GET_OPEN_PERIOD_STARTDATE=SELECT DISTINCT TO_CHAR(START_DATE,'DD/MM/YYYY')FROM_DATE,START_DATE FROM TMAS_OPEN_PERIOD  WHERE BRANCH_CODE=? ORDER BY TRUNC(START_DATE) DESC
GET_OPEN_PERIOD_ENDDATE=SELECT DISTINCT TO_CHAR(END_DATE,'DD/MM/YYYY')TO_DATE,END_DATE FROM TMAS_OPEN_PERIOD  WHERE BRANCH_CODE=? ORDER BY TRUNC(END_DATE) DESC
GET_OP_START_DATE_STATUS=SELECT STATUS FROM TMAS_OPEN_PERIOD WHERE START_DATE=TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE=?
GET_OP_END_DATE_STATUS=SELECT STATUS FROM TMAS_OPEN_PERIOD WHERE END_DATE\=TO_DATE(?,'DD/MM/YYYY') AND BRANCH_CODE\=?  

GET_PAYMENT_NO_LIST =SELECT DISTINCT TCP.CLAIM_PAYMENT_NO FROM TTRN_CLAIM_PAYMENT TCP, TTRN_CLAIM_DETAILS TCD WHERE TCP.CLAIM_NO \= TCD.CLAIM_NO AND TCP.BRANCH_CODE \= TCD.BRANCH_CODE AND TCP.BRANCH_CODE \= ? AND TCD.CONTRACT_NO \= ? AND TCD.LAYER_NO \= ? AND TCD.PROPOSAL_NO \= ? AND TCD.CURRENCY \= ? ORDER BY TCP.CLAIM_PAYMENT_NO
GET_CLAIM_AUTH_SINGLE = SELECT DISTINCT TCD.CLAIM_NO, TCP.CLAIM_PAYMENT_NO, PIC.COMPANY_NAME, PIB.FIRST_NAME || ' ' ||PIB.LAST_NAME BROKER_NAME, TCD.INSURED_NAME, TO_CHAR(TCD.DATE_OF_LOSS , 'DD/MM/YYYY')DATE_OF_LOSS , TCD.LOSS_DETAILS, TCD.LOSS_ESTIMATE_OC, TCP.PAYMENT_TYPE, TFRP.SHARE_SIGNED, nvl(TCD.LOSS_ESTIMATE_OS_OC,0)LOSS_ESTIMATE_OS_OC, TCD.CONTRACT_NO, TRD.RSK_INSURED_NAME, nvl(TCP.REINSPREMIUM_OURSHARE_OC , 0)REINSPREMIUM_OURSHARE_OC, nvl(TCP.PAID_AMOUNT_OC,0)PAID_AMOUNT_OC, nvl(TCU.LOSS_ESTIMATE_REVISED_OC - NVL((SELECT SUM(TCP1.PAID_AMOUNT_OC) FROM TTRN_CLAIM_PAYMENT TCP1 WHERE TCP1.SL_NO \= TCU.SL_NO AND TCP1.CLAIM_NO \= TCU.CLAIM_NO GROUP BY TCP1.CLAIM_PAYMENT_NO),0), 0)OSLR, CM.SHORT_NAME CURRENCY FROM TTRN_CLAIM_DETAILS TCD, TTRN_CLAIM_PAYMENT TCP, TTRN_CLAIM_UPDATION TCU, PERSONAL_INFO PIC, PERSONAL_INFO PIB, POSITION_MASTER PM, TTRN_FAC_RISK_PROPOSAL TFRP, TTRN_RISK_DETAILS TRD, CURRENCY_MASTER CM WHERE TCD.BRANCH_CODE \= TCP.BRANCH_CODE AND TCD.BRANCH_CODE \= TCU.BRANCH_CODE AND TCD.BRANCH_CODE \= PIC.BRANCH_CODE AND TCD.BRANCH_CODE \= PIB.BRANCH_CODE AND TCD.BRANCH_CODE \= PM.BRANCH_CODE AND TCD.BRANCH_CODE \= TFRP.BRANCH_CODE AND TCD.BRANCH_CODE \= TRD.BRANCH_CODE AND TCD.BRANCH_CODE \= CM.BRANCH_CODE AND PM.AMEND_ID IN(SELECT MAX (AMEND_ID) FROM POSITION_MASTER PM1 WHERE PM1.PROPOSAL_NO \= PM.PROPOSAL_NO) AND PM.AMEND_ID \= TFRP.RSK_ENDORSEMENT_NO AND PM.AMEND_ID \= TRD.RSK_ENDORSEMENT_NO AND PM.PROPOSAL_NO \= TCD.PROPOSAL_NO AND PM.PROPOSAL_NO \= TFRP.RSK_PROPOSAL_NUMBER AND PM.PROPOSAL_NO \= TRD.RSK_PROPOSAL_NUMBER AND PIB.AMEND_ID IN (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO PIB1 WHERE PIB1.CUSTOMER_ID \= PIB.CUSTOMER_ID ) AND PIB.CUSTOMER_TYPE \= 'B' AND PIB.CUSTOMER_ID \= PM.BROKER_ID AND PIC.AMEND_ID IN (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO PIC1 WHERE PIC1.CUSTOMER_ID \= PIC.CUSTOMER_ID ) AND PIC.CUSTOMER_TYPE \= 'C' AND PIC.CUSTOMER_ID \= PM.CEDING_COMPANY_ID AND TCD.BRANCH_CODE \= TCP.BRANCH_CODE AND TCD.CLAIM_NO \= TCP.CLAIM_NO AND TCD.CURRENCY \= CM.CURRENCY_ID AND TCD.BRANCH_CODE \= TCU.BRANCH_CODE AND TCD.CLAIM_NO \= TCU.CLAIM_NO AND TCU.SL_NO IN (SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION TCU1 WHERE TCU1.CLAIM_NO \= TCU.CLAIM_NO ) AND TCD.PROPOSAL_NO \= ? AND TCD.CONTRACT_NO \= ? AND TCD.LAYER_NO \= ? AND TCD.CURRENCY \= ? AND TCD.BRANCH_CODE \= ? AND TCP.CLAIM_PAYMENT_NO IN (?)
GET_CLAIM_AUTH_MULTIPLE =  SELECT  'MULTIPLE' PAYMENT_TYPE, CLAIM_NO, 'MULTIPLE' CLAIM_PAYMENT_NO, COMPANY_NAME, BROKER_NAME, INSURED_NAME, 'MULTIPLE' DATE_OF_LOSS , LOSS_DETAILS, SUM(LOSS_ESTIMATE_OC) LOSS_ESTIMATE_OC, AVG(SHARE_SIGNED) SHARE_SIGNED, SUM(LOSS_ESTIMATE_OS_OC) LOSS_ESTIMATE_OS_OC, CONTRACT_NO, RSK_INSURED_NAME, SUM(REINSPREMIUM_OURSHARE_OC) REINSPREMIUM_OURSHARE_OC, SUM(PAID_AMOUNT_OC) PAID_AMOUNT_OC, OSLR, CURRENCY FROM(SELECT DISTINCT 'MULTIPLE' CLAIM_NO, TCP.CLAIM_PAYMENT_NO AS CLAIM_PAYMENT_NO, PIC.COMPANY_NAME, PIB.FIRST_NAME || ' ' ||PIB.LAST_NAME BROKER_NAME, 'MULTIPLE' INSURED_NAME, 'MULTIPLE' DATE_OF_LOSS, 'MULTIPLE' LOSS_DETAILS, TCD.LOSS_ESTIMATE_OC, CASE WHEN PM.PRODUCT_ID = 1 THEN TFRP.SHARE_SIGNED ELSE TRP.RSK_SHARE_SIGNED END AS SHARE_SIGNED, TCD.LOSS_ESTIMATE_OS_OC, TCD.CONTRACT_NO, TRD.RSK_INSURED_NAME, NVL(TCP.REINSPREMIUM_OURSHARE_OC,0)REINSPREMIUM_OURSHARE_OC, NVL(TCP.PAID_AMOUNT_OC,0)PAID_AMOUNT_OC , 'MULTIPLE' OSLR, CM.SHORT_NAME CURRENCY FROM TTRN_CLAIM_DETAILS TCD, TTRN_CLAIM_PAYMENT TCP, TTRN_CLAIM_UPDATION TCU, PERSONAL_INFO PIC, PERSONAL_INFO PIB, POSITION_MASTER PM, TTRN_FAC_RISK_PROPOSAL TFRP, TTRN_RISK_PROPOSAL TRP, TTRN_RISK_DETAILS TRD, CURRENCY_MASTER CM, TMAS_DEPARTMENT_MASTER TDM WHERE TCD.BRANCH_CODE = TCP.BRANCH_CODE AND TCD.BRANCH_CODE = TCU.BRANCH_CODE AND TCD.BRANCH_CODE = PIC.BRANCH_CODE AND TCD.BRANCH_CODE = PIB.BRANCH_CODE AND TCD.BRANCH_CODE = PM.BRANCH_CODE AND TCD.BRANCH_CODE = TFRP.BRANCH_CODE(+) AND TCD.BRANCH_CODE = TRP.BRANCH_CODE(+) AND TCD.BRANCH_CODE = TRD.BRANCH_CODE AND TCD.BRANCH_CODE = CM.BRANCH_CODE AND TCD.BRANCH_CODE = TDM.BRANCH_CODE AND PM.AMEND_ID IN (SELECT MAX (AMEND_ID) FROM POSITION_MASTER PM1 WHERE PM1.PROPOSAL_NO = PM.PROPOSAL_NO) AND PM.AMEND_ID = TFRP.RSK_ENDORSEMENT_NO (+) AND PM.AMEND_ID = TRP.RSK_ENDORSEMENT_NO (+) AND PM.AMEND_ID = TRD.RSK_ENDORSEMENT_NO AND PM.PROPOSAL_NO = TCD.PROPOSAL_NO AND PM.PROPOSAL_NO = TFRP.RSK_PROPOSAL_NUMBER (+) AND PM.PROPOSAL_NO = TRP.RSK_PROPOSAL_NUMBER (+) AND PM.PROPOSAL_NO = TRD.RSK_PROPOSAL_NUMBER AND PIB.AMEND_ID IN (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO PIB1 WHERE PIB1.CUSTOMER_ID = PIB.CUSTOMER_ID) AND PIB.CUSTOMER_TYPE = 'B' AND PIB.CUSTOMER_ID = PM.BROKER_ID AND PIC.AMEND_ID IN (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO PIC1 WHERE PIC1.CUSTOMER_ID = PIC.CUSTOMER_ID) AND PIC.CUSTOMER_TYPE = 'C' AND PIC.CUSTOMER_ID = PM.CEDING_COMPANY_ID AND TCD.BRANCH_CODE = TCP.BRANCH_CODE AND TCD.CLAIM_NO = TCP.CLAIM_NO AND TCD.CURRENCY = CM.CURRENCY_ID AND TCD.BRANCH_CODE = TCU.BRANCH_CODE AND TCD.CLAIM_NO = TCU.CLAIM_NO AND TCU.SL_NO IN (SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION TCU1 WHERE TCU1.CLAIM_NO = TCU.CLAIM_NO ) AND TDM.TMAS_STATUS = 'Y' AND TDM.TMAS_PRODUCT_ID = PM.PRODUCT_ID AND TDM.TMAS_DEPARTMENT_ID = PM.DEPT_ID AND TCD.PROPOSAL_NO = ? AND TCD.CONTRACT_NO = ? AND TCD.LAYER_NO = ? AND TCD.CURRENCY = ? AND TCD.BRANCH_CODE = ?
GET_CLAIM_AUTH_MULTIPLE_GRID = SELECT DISTINCT PIC.COMPANY_NAME, TCD.INSURED_NAME, TCD.CONTRACT_NO, TCP.PAYMENT_REQUEST_NO REFERENCE, CM.SHORT_NAME CURRENCY, TDM.TMAS_DEPARTMENT_NAME CLASS, TCD.LOSS_DETAILS, TO_CHAR(TCD.DATE_OF_LOSS , 'DD/MM/YYYY')DATE_OF_LOSS, TCD.LOSS_ESTIMATE_OC, CASE WHEN PM.PRODUCT_ID \= 1 THEN TFRP.SHARE_SIGNED ELSE TRP.RSK_SHARE_SIGNED END AS SHARE_SIGNED, TCD.LOSS_ESTIMATE_OS_OC, TCP.PAYMENT_TYPE, TCP.CLAIM_NO, TCP.CLAIM_PAYMENT_NO AS CLAIM_PAYMENT_NO FROM TTRN_CLAIM_DETAILS TCD, TTRN_CLAIM_PAYMENT TCP, TTRN_CLAIM_UPDATION TCU, PERSONAL_INFO PIC, PERSONAL_INFO PIB, POSITION_MASTER PM, TTRN_FAC_RISK_PROPOSAL TFRP, TTRN_RISK_PROPOSAL TRP, TTRN_RISK_DETAILS TRD, CURRENCY_MASTER CM, TMAS_DEPARTMENT_MASTER TDM WHERE TCD.BRANCH_CODE \= TCP.BRANCH_CODE AND TCD.BRANCH_CODE \= TCU.BRANCH_CODE AND TCD.BRANCH_CODE \= PIC.BRANCH_CODE AND TCD.BRANCH_CODE \= PIB.BRANCH_CODE AND TCD.BRANCH_CODE \= PM.BRANCH_CODE AND TCD.BRANCH_CODE \= TFRP.BRANCH_CODE(+) AND TCD.BRANCH_CODE \= TRP.BRANCH_CODE (+) AND TCD.BRANCH_CODE \= TRD.BRANCH_CODE AND TCD.BRANCH_CODE \= CM.BRANCH_CODE AND TCD.BRANCH_CODE \= TDM.BRANCH_CODE AND PM.AMEND_ID IN (SELECT MAX (AMEND_ID) FROM POSITION_MASTER PM1 WHERE PM1.PROPOSAL_NO \= PM.PROPOSAL_NO) AND PM.AMEND_ID \= TFRP.RSK_ENDORSEMENT_NO (+) AND PM.AMEND_ID \= TRP.RSK_ENDORSEMENT_NO (+) AND PM.AMEND_ID \= TRD.RSK_ENDORSEMENT_NO AND PM.PROPOSAL_NO \= TCD.PROPOSAL_NO AND PM.PROPOSAL_NO \= TFRP.RSK_PROPOSAL_NUMBER (+) AND PM.PROPOSAL_NO \= TRP.RSK_PROPOSAL_NUMBER (+) AND PM.PROPOSAL_NO \= TRD.RSK_PROPOSAL_NUMBER AND PIB.AMEND_ID IN (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO PIB1 WHERE PIB1.CUSTOMER_ID \= PIB.CUSTOMER_ID ) AND PIB.CUSTOMER_TYPE \= 'B' AND PIB.CUSTOMER_ID \= PM.BROKER_ID AND PIC.AMEND_ID IN (SELECT MAX (AMEND_ID) FROM PERSONAL_INFO PIC1 WHERE PIC1.CUSTOMER_ID \= PIC.CUSTOMER_ID ) AND PIC.CUSTOMER_TYPE \= 'C' AND PIC.CUSTOMER_ID \= PM.CEDING_COMPANY_ID AND TCD.BRANCH_CODE \= TCP.BRANCH_CODE AND TCD.CLAIM_NO \= TCP.CLAIM_NO AND TCD.CURRENCY \= CM.CURRENCY_ID AND TCD.BRANCH_CODE \= TCU.BRANCH_CODE AND TCD.CLAIM_NO \= TCU.CLAIM_NO AND TCU.SL_NO IN (SELECT MAX(SL_NO) FROM TTRN_CLAIM_UPDATION TCU1 WHERE TCU1.CLAIM_NO \= TCU.CLAIM_NO ) AND TDM.TMAS_STATUS \= 'Y' AND TDM.TMAS_PRODUCT_ID \= PM.PRODUCT_ID AND TDM.TMAS_DEPARTMENT_ID \= PM.DEPT_ID AND TCD.PROPOSAL_NO \= ? AND TCD.CONTRACT_NO \= ? AND TCD.LAYER_NO \= ? AND TCD.CURRENCY \= ? AND TCD.BRANCH_CODE \= ?
GET_UG_UNDERWRITER=SELECT   P.FIRST_NAME || ' ' || P.LAST_NAME  RSK_LEAD_UW_UG FROM   PERSONAL_INFO P WHERE  P.BRANCH_CODE \= ? AND CUSTOMER_ID \= ? AND STATUS \= 'Y' AND P.AMEND_ID \=(SELECT   MAX (AMEND_ID) FROM   PERSONAL_INFO WHERE BRANCH_CODE \= P.BRANCH_CODE AND CUSTOMER_TYPE \= P.CUSTOMER_TYPE AND STATUS \= P.STATUS AND CUSTOMER_ID \= P.CUSTOMER_ID)
GET_EXCESS_RATE_PERCENT=SELECT PERCENT FROM  CONSTANT_DETAIL WHERE CATEGORY_ID='50' AND CATEGORY_DETAIL_ID='1'
GET_ALLOCATED_CASH_LOSS=SELECT CREDITTRXNNO,CONTRACT_NO,CLAIM_NO,CLAIMPAYMENT_NO,TO_CHAR(CREDITDATE,'DD/MM/YYYY'),CLDCURRENCY_ID,CLD_AMOUNT,CLCCURRENCY_ID,CREDITAMOUNTCLC,CREDITAMOUNTCLD,EXCHANGE_RATE FROM TTRN_CASH_LOSS_CREDIT WHERE PROPOSAL_NO=? AND STATUS='A'
GET_ALLOCATED_TRANS_LIST=SELECT DISTINCT CREDITTRXNNO,CONTRACT_NO FROM TTRN_CASH_LOSS_CREDIT WHERE PROPOSAL_NO=? AND STATUS='A'
GET_REVERSE_TRANS_LIST=SELECT CLC_NO,CREDITTRXNNO,CONTRACT_NO,CLAIM_NO,CLAIMPAYMENT_NO,TO_CHAR(CREDITDATE,'DD/MM/YYYY')CREDITDATE,CLDCURRENCY_ID,CLD_AMOUNT,CLCCURRENCY_ID,CREDITAMOUNTCLC,CREDITAMOUNTCLD,EXCHANGE_RATE FROM TTRN_CASH_LOSS_CREDIT WHERE PROPOSAL_NO=? AND CREDITTRXNNO=? AND STATUS='A'
UPDATE_REVERSE_CASH_LOSS=UPDATE TTRN_CASH_LOSS_CREDIT SET STATUS=?,REVERSAL_DATE=SYSDATE,REVERSAL_CLC=?,REVERSAL_CLD=?,CREDITAMOUNTCLC=?,CREDITAMOUNTCLD=? WHERE CREDITTRXNNO=? AND CLC_NO= ?
UPDATE_CASH_LOSS_PAYMENT=UPDATE TTRN_CLAIM_PAYMENT SET CASH_LOSS_SETTLED_TILLDATE=NVL(CASH_LOSS_SETTLED_TILLDATE,0)-? WHERE CONTRACT_NO=? AND  CLAIM_NO=? AND  CLAIM_PAYMENT_NO=?
GET_ATTACHED_UW_LIST=SELECT UWR_CODE,UNDERWRITTER FROM UNDERWRITTER_MASTER WHERE BRANCH_CODE=? AND UWR_STATUS='Y'
GET_UNDERWRITER_ATTACHED=SELECT DISTINCT UWR_CODE ,UNDERWRITTER  FROM UNDERWRITTER_MASTER WHERE  BRANCH_CODE\=? AND UWR_STATUS\=? AND UWR_CODE IN(select * from table(SPLIT_TEXT_FN(?))) ORDER BY UNDERWRITTER ASC
GET_CASSLOSS_ALLOCATE_COUNT=SELECT COUNT(*) FROM TTRN_CASH_LOSS_CREDIT WHERE PROPOSAL_NO=? AND STATUS='A' 
GET_CASSLOSS_ALLOCATE_AMOUNT_COUNT=SELECT COUNT(*) FROM TTRN_CASH_LOSS_CREDIT WHERE PROPOSAL_NO=? AND STATUS='A' AND CREDITTRXNNO=? AND CLD_AMOUNT!=CREDITAMOUNTCLD
GET_MAILCC_INFO=SELECT EMAIL_TO,EMAIL_CC FROM MAIL_DETAILS WHERE EMAIL_TYPE=? AND BRANCH_CODE=? AND STATUS='Y'
GET_CASH_LOSS_CREADIT_MAIL = SELECT   ROWNUM sno, TCP.CONTRACT_NO, TCP.CLAIM_NO, CLAIM_PAYMENT_NO CLAIMPAYMENT_NO, TO_CHAR (TCP.INCEPTION_DATE, 'DD/MM/YYYY') CREDITDATE, NVL (PAID_AMOUNT_OC, 0) - NVL (CASH_LOSS_SETTLED_TILLDATE, 0)CLD_AMOUNT,CURRENCY CLDCURRENCY_ID  FROM   TTRN_CLAIM_PAYMENT TCP,TTRN_Claim_Details TCD WHERE   NVL (PAID_AMOUNT_OC, 0) - NVL (CASH_LOSS_SETTLED_TILLDATE, 0) > 0 AND TCP.CONTRACT_NO like substr(?, 0, length(?)-2)||'%' and SUB_CLASS=?  and TCD.CONTRACT_NO = TCP.CONTRACT_NO AND TCD.CLAIM_NO = TCP.CLAIM_NO

GET_LAYER_INFO=SELECT LAYER_NO,PROPOSAL_NO,CEDING_COMPANY_ID,NVL(BASE_LAYER,PROPOSAL_NO)BASE_LAYER,CONTRACT_NO,DEPT_ID,PRODUCT_ID,SECTION_NO,(SELECT TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER B WHERE RD.RSK_DEPTId = b.TMAS_DEPARTMENT_ID AND b.TMAS_PRODUCT_ID = PM.PRODUCT_ID AND B.BRANCH_CODE=PM.BRANCH_CODE   AND B.TMAS_STATUS='Y')TMAS_DEPARTMENT_NAME,(SELECT DETAIL_NAME FROM  CONSTANT_DETAIL WHERE CATEGORY_ID=DECODE(PM.PRODUCT_ID,'2','43','29') AND TYPE=DECODE(PM.PRODUCT_ID,'2',RD.TREATYTYPE,RD.RSK_BUSINESS_TYPE))TREATY_TYPE,RD.RSK_TREATYID FROM POSITION_MASTER PM,TTRN_RISK_DETAILS RD WHERE  PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND (PROPOSAL_NO=? OR BASE_LAYER=?)  AND contract_status='P' ORDER BY PRODUCT_ID,BASE_LAYER,PROPOSAL_NO
UPDATE_BASE_LAYER=UPDATE POSITION_MASTER SET BASE_LAYER=? WHERE PROPOSAL_NO=?
GET_PAYMENT_PARTNER_LIST=SELECT DISTINCT P.CUSTOMER_ID, CASE WHEN P.CUSTOMER_TYPE = 'C' THEN P.COMPANY_NAME ELSE P.FIRST_NAME || ' ' || P.LAST_NAME END NAME FROM PERSONAL_INFO P WHERE P.BRANCH_CODE=? AND P.CUSTOMER_TYPE='C' AND STATUS='Y'  AND CUSTOMER_ID =?   AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE=P.BRANCH_CODE AND CUSTOMER_TYPE=P.CUSTOMER_TYPE AND STATUS=P.STATUS AND CUSTOMER_ID=P.CUSTOMER_ID)
GET_PAYMENT_PARTNER_BR_LIST=UNION ALL SELECT DISTINCT P.CUSTOMER_ID, CASE WHEN P.CUSTOMER_TYPE = 'C' THEN P.COMPANY_NAME ELSE P.FIRST_NAME || ' ' || P.LAST_NAME END NAME FROM PERSONAL_INFO P WHERE P.BRANCH_CODE=? AND P.CUSTOMER_TYPE='B' AND STATUS='Y' AND P.CUSTOMER_ID=? AND P.AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE BRANCH_CODE=P.BRANCH_CODE AND CUSTOMER_TYPE=P.CUSTOMER_TYPE AND STATUS=P.STATUS AND CUSTOMER_ID=P.CUSTOMER_ID)
GET_MAX_SECTION_NO_DET=SELECT NVL(MAX(SECTION_NO)+1,1)SECTION_NO from POSITION_MASTER PM WHERE NVL(BASE_LAYER,PROPOSAL_NO)=? 
GET_REFERENCE_NO_SEQ=SELECT  REFERENCENO_SEQ.NEXTVAL FROM DUAL
UPDATE_PROPOSAL_SCALE=UPDATE ttrn_bonus SET PROPOSAL_NO=? WHERE REFERENCE_NO=?
UPDATE_PROPOSAL_SCALE=UPDATE ttrn_rip SET PROPOSAL_NO=? WHERE REFERENCE_NO=?
DELETE_PERSONAL_CONTACT_INFO=DELETE FROM PERSONAL_INFO_CONTACT WHERE CUSTOMER_ID=? AND AMEND_ID=?
INSERT_PERSONAL_CONTACT_INFO=INSERT INTO PERSONAL_INFO_CONTACT(CONTACT_SNO,DEPARTMENT,SUB_DEPARTMENT,EMAIL,TELEPHONE,FAX_NUMBER,CUSTOMER_ID,BRANCH_CODE,AMEND_ID,ENTRY_DATE,REMARKS,STATUS)VALUES(?,?,?,?,?,?,?,?,?,SYSDATE,'','Y')
DELETE_PERSONAL_BANK_INFO=DELETE FROM PERSONAL_INFO_BANK WHERE CUSTOMER_ID=? AND AMEND_ID=?
INSERT_PERSONAL_BANK_INFO=INSERT INTO PERSONAL_INFO_BANK(BANK_SNO,BANK_CURRENCY,BANK_ACC_NO,BANK_NAME,BANK_ACC_NAME,SWIFT_CODE,CORESPONDENT_BANK,BANK_REMARKS,CUSTOMER_ID,BRANCH_CODE,AMEND_ID,ENTRY_DATE,REMARKS,STATUS)VALUES(?,?,?,?,?,?,?,?,?,?,?,SYSDATE,'','Y')
GET_PERSONAL_CONTACT_INFO=SELECT CONTACT_SNO,DEPARTMENT,SUB_DEPARTMENT,EMAIL,TELEPHONE,FAX_NUMBER,CUSTOMER_ID FROM PERSONAL_INFO_CONTACT  PI WHERE PI.CUSTOMER_ID=? AND PI.BRANCH_CODE=? AND PI.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND BRANCH_CODE=PI.BRANCH_CODE)
GET_PERSONAL_BANK_INFO=SELECT BANK_SNO,BANK_CURRENCY,BANK_ACC_NO,BANK_NAME,BANK_ACC_NAME,SWIFT_CODE,CORESPONDENT_BANK,BANK_REMARKS FROM PERSONAL_INFO_BANK PI WHERE PI.CUSTOMER_ID=? AND PI.BRANCH_CODE=? AND PI.AMEND_ID=( SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID AND BRANCH_CODE=PI.BRANCH_CODE)
GET_BOUQUET_LIST=select DISTINCT Bouquet_NO  from POSITION_MASTER where Bouquet_NO is not null AND BRANCH_CODE=?
GET_EXISTING_BOUQUET= SELECT TO_CHAR (RD.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RD.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,(SELECT COMPANY_NAME FROM PERSONAL_INFO PERSONAL WHERE RD.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE='C' AND PERSONAL.BRANCH_CODE = PM.BRANCH_CODE)COMPANY_NAME,PM.UW_YEAR,PM.UW_YEAR_TO,RD.TREATYTYPE,PM.PRODUCT_ID, (SELECT TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER PD WHERE PD.TMAS_PRODUCT_ID=PM.PRODUCT_ID AND PD.BRANCH_CODE=PM.BRANCH_CODE)BUSINESS_TYPE,PM.PROPOSAL_NO,(SELECT DETAIL_NAME FROM  CONSTANT_DETAIL WHERE CATEGORY_ID=DECODE(PM.PRODUCT_ID,'2','43','29') AND TYPE=DECODE(PM.PRODUCT_ID,'2',RD.TREATYTYPE,RD.RSK_BUSINESS_TYPE))TREATY_TYPE,RD.RSK_TREATYID,DECODE(PM.OLD_CONTRACTNO,'','New','Renew') POLICY_STATUS,''EXISTING_SHARE,NVL(PM.BASE_LAYER,PM.PROPOSAL_NO) BASE_LAYER,PM.SECTION_NO,PM.LAYER_NO,(SELECT TMAS_DEPARTMENT_NAME FROM TMAS_DEPARTMENT_MASTER B WHERE RD.RSK_DEPTId = b.TMAS_DEPARTMENT_ID AND b.TMAS_PRODUCT_ID = PM.PRODUCT_ID AND B.BRANCH_CODE=PM.BRANCH_CODE   AND B.TMAS_STATUS='Y')TMAS_DEPARTMENT_NAME FROM POSITION_MASTER PM,TTRN_RISK_DETAILS RD WHERE BOUQUET_NO IS NOT NULL AND PM.BRANCH_CODE=? AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.BOUQUET_NO=? ORDER BY PRODUCT_ID,BOUQUET_NO,PROPOSAL_NO
GET_EXISTING_PROPOSAL= SELECT TO_CHAR (RD.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RD.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,(SELECT COMPANY_NAME FROM PERSONAL_INFO PERSONAL WHERE RD.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE='C' AND PERSONAL.BRANCH_CODE = PM.BRANCH_CODE)COMPANY_NAME,PM.UW_YEAR,PM.UW_YEAR_TO,PM.CONTRACT_NO,PM.BASE_LAYER,PM.LAYER_NO,PM.SECTION_NO,(SELECT TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER PD WHERE PD.TMAS_PRODUCT_ID=PM.PRODUCT_ID AND PD.BRANCH_CODE=PM.BRANCH_CODE)BUSINESS_TYPE,PM.PROPOSAL_NO,(SELECT DETAIL_NAME FROM  CONSTANT_DETAIL WHERE CATEGORY_ID=DECODE(PM.PRODUCT_ID,'2','43','29') AND TYPE=DECODE(PM.PRODUCT_ID,'2',RD.TREATYTYPE,RD.RSK_BUSINESS_TYPE))TREATY_TYPE,RD.RSK_TREATYID,'New' POLICY_STATUS,''EXISTING_SHARE,BOUQUET_NO,Bouquet_Mode_YN FROM POSITION_MASTER PM,TTRN_RISK_DETAILS RD WHERE  PM.BRANCH_CODE=? AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.PROPOSAL_NO=?
GET_MAILTEPLATE_PROPOSAL =SELECT TO_CHAR (RD.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RD.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,(SELECT COMPANY_NAME FROM PERSONAL_INFO PERSONAL WHERE RD.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE='C' AND PERSONAL.BRANCH_CODE = PM.BRANCH_CODE)COMPANY_NAME,PM.UW_YEAR,PM.UW_YEAR_TO,PM.CONTRACT_NO,PM.BASE_LAYER,PM.LAYER_NO,PM.SECTION_NO,(SELECT TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER PD WHERE PD.TMAS_PRODUCT_ID=PM.PRODUCT_ID AND PD.BRANCH_CODE=PM.BRANCH_CODE)BUSINESS_TYPE,PM.PROPOSAL_NO,(SELECT DETAIL_NAME FROM  CONSTANT_DETAIL WHERE CATEGORY_ID=DECODE(PM.PRODUCT_ID,'2','43','29') AND TYPE=DECODE(PM.PRODUCT_ID,'2',RD.TREATYTYPE,RD.RSK_BUSINESS_TYPE))TREATY_TYPE,RD.RSK_TREATYID,'New' POLICY_STATUS,''EXISTING_SHARE,BOUQUET_NO,Bouquet_Mode_YN,( select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID=RD.RSK_DEPTId and branch_code=RD.branch_code and TMAS_PRODUCT_ID=RD.RSK_PRODUCTID  AND TMAS_STATUS='Y')  CLASS,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = RD.BRANCH_CODE)SUB_CLASS FROM POSITION_MASTER PM,TTRN_RISK_DETAILS RD WHERE  PM.BRANCH_CODE=? AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.PROPOSAL_NO=?
GET_MAILTEPLATE_BOUQUET =SELECT TO_CHAR (RD.RSK_INCEPTION_DATE, 'DD/MM/YYYY') INS_DATE, TO_CHAR (RD.RSK_EXPIRY_DATE, 'DD/MM/YYYY') EXP_DATE,(SELECT COMPANY_NAME FROM PERSONAL_INFO PERSONAL WHERE RD.RSK_CEDINGID = PERSONAL.CUSTOMER_ID AND PERSONAL.CUSTOMER_TYPE='C' AND PERSONAL.BRANCH_CODE = PM.BRANCH_CODE)COMPANY_NAME,PM.UW_YEAR,PM.UW_YEAR_TO,PM.CONTRACT_NO,PM.BASE_LAYER,PM.LAYER_NO,PM.SECTION_NO,(SELECT TMAS_PRODUCT_NAME FROM TMAS_PRODUCT_MASTER PD WHERE PD.TMAS_PRODUCT_ID=PM.PRODUCT_ID AND PD.BRANCH_CODE=PM.BRANCH_CODE)BUSINESS_TYPE,PM.PROPOSAL_NO,(SELECT DETAIL_NAME FROM  CONSTANT_DETAIL WHERE CATEGORY_ID=DECODE(PM.PRODUCT_ID,'2','43','29') AND TYPE=DECODE(PM.PRODUCT_ID,'2',RD.TREATYTYPE,RD.RSK_BUSINESS_TYPE))TREATY_TYPE,RD.RSK_TREATYID,'New' POLICY_STATUS,''EXISTING_SHARE,BOUQUET_NO,Bouquet_Mode_YN,( select TMAS_DEPARTMENT_NAME From tmas_department_master where TMAS_DEPARTMENT_ID=RD.RSK_DEPTId and branch_code=RD.branch_code and TMAS_PRODUCT_ID=RD.RSK_PRODUCTID  AND TMAS_STATUS='Y')  CLASS,(select RTRIM(XMLAGG(XMLELEMENT(E,TMAS_SPFC_NAME,',')).EXTRACT('//text()'),',')  from TMAS_SPFC_MASTER SPFC where SPFC.TMAS_SPFC_ID in(select * from table(SPLIT_TEXT_FN(replace(RD.RSK_SPFCID,' ', '')))) AND  SPFC.TMAS_PRODUCT_ID = RD.RSK_PRODUCTID AND SPFC.BRANCH_CODE = RD.BRANCH_CODE)SUB_CLASS FROM POSITION_MASTER PM,TTRN_RISK_DETAILS RD WHERE  PM.BRANCH_CODE=? AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.BOUQUET_NO=? ORDER BY PRODUCT_ID,BOUQUET_NO,PROPOSAL_NO
INSERT_SC_METHOD_INFO=INSERT INTO TTRN_BONUS(PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,PROVISIONAL_COMMISIION,SC_METHOD_TYPE,SC_MIN_LOSS_RATIO,SC_MAX_LOSS_RATIO,SC_COMBINE_LOSS_RATIO,SC_BANDING_STEP,SC_NO_OF_DIGIT,USERID,BRANCH,TYPE,ENDORSEMENT_NO,SUB_CLASS,SYS_DATE,LAYERNO,REMARKS,REFERENCE_NO,LCB_FROM,LCB_TO,DELTA_LOSS_RATIO,LCB_PERCENTAGE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?,?,?,?,?,?)
SELECT_SLIDING_SCALE_METHOD_INFO=SELECT PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,PROVISIONAL_COMMISIION,SC_METHOD_TYPE,SC_MIN_LOSS_RATIO,SC_MAX_LOSS_RATIO,SC_COMBINE_LOSS_RATIO,SC_BANDING_STEP,SC_NO_OF_DIGIT,USERID,BRANCH,TYPE,ENDORSEMENT_NO,SUB_CLASS,SYS_DATE,LAYERNO,REMARKS,REFERENCE_NO,LCB_FROM,LCB_TO,DELTA_LOSS_RATIO,LCB_PERCENTAGE FROM TTRN_BONUS TT WHERE PROPOSAL_NO =?  and BRANCH=? and TYPE=? AND LCB_TYPE=? AND ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_BONUS TB WHERE TT.PROPOSAL_NO=TB.PROPOSAL_NO AND TT.BRANCH=TB.BRANCH AND TT.TYPE= TB.TYPE AND TT.LCB_TYPE= TB.LCB_TYPE) ORDER BY LCB_ID
SELECT_SLIDING_SCALE_METHOD_INFO_REF=SELECT PROPOSAL_NO,CONTRACT_NO,PRODUCT_ID,LCB_TYPE,PROVISIONAL_COMMISIION,SC_METHOD_TYPE,SC_MIN_LOSS_RATIO,SC_MAX_LOSS_RATIO,SC_COMBINE_LOSS_RATIO,SC_BANDING_STEP,SC_NO_OF_DIGIT,USERID,BRANCH,TYPE,ENDORSEMENT_NO,SUB_CLASS,SYS_DATE,LAYERNO,REMARKS,REFERENCE_NO,LCB_FROM,LCB_TO,DELTA_LOSS_RATIO,LCB_PERCENTAGE FROM TTRN_BONUS TT WHERE PROPOSAL_NO =?  and BRANCH=? and TYPE=? AND LCB_TYPE=? AND ENDORSEMENT_NO = (SELECT MAX(ENDORSEMENT_NO) FROM TTRN_BONUS TB WHERE TT.PROPOSAL_NO=TB.PROPOSAL_NO AND TT.BRANCH=TB.BRANCH AND TT.TYPE= TB.TYPE AND TT.LCB_TYPE= TB.LCB_TYPE) ORDER BY LCB_ID
GET_BOUQUET_NO_SEQ=SELECT  BOUQUET_NO_SEQ.NEXTVAL FROM DUAL
GET_PLACEMENT_NO_SEQ=SELECT  PLACEMENT_SEQ.NEXTVAL FROM DUAL
GET_MAILRECORD_NO_SEQ=SELECT  MAIL_RECORD_SEQ.NEXTVAL FROM DUAL
INSERT_PLACEMENT_INFO=INSERT INTO TTRN_RI_PLACEMENT(PLACEMENT_NO,SNO,BOUQUET_NO,BASE_PROPOSAL_NO,PROPOSAL_NO,CONTRACT_NO,LAYER_NO,SECTION_NO,AMEND_ID,REINSURER_ID,BROKER_ID,SHARE_OFFERED,BRANCH_CODE,SYS_DATE,CEDING_COMPANY_ID,PLACEMENT_MODE)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,?)
#GET_REINSURER_INFO_IN=SELECT DISTINCT  P.REINSURER_ID,P.BROKER_ID,(SELECT CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME FROM PERSONAL_INFO PI WHERE CUSTOMER_TYPE='R'  AND CUSTOMER_ID=P.REINSURER_ID AND BRANCH_CODE=P.BRANCH_CODE  AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))REINSURER_NAME,(SELECT CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME FROM PERSONAL_INFO PI WHERE CUSTOMER_TYPE='B'  AND CUSTOMER_ID=P.BROKER_ID AND BRANCH_CODE=P.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))BROKER_NAME,P.SHARE_OFFERED,NVL(M.MAIL_STATUS,'Pending')MAIL_STATUS,P.PROPOSAL_NO,P.STATUS FROM TTRN_RI_PLACEMENT P LEFT JOIN MAIL_NOTIFICATION_DETAIL M ON(M.PROPOSAL_NO=P.PROPOSAL_NO AND M.REINSURER_ID=P.REINSURER_ID AND M.BROKER_ID=P.BROKER_ID)  WHERE P.BRANCH_CODE=? AND P.PROPOSAL_NO=? AND P.STATUS='P' AND M.MAIL_STATUS='Success'
GET_REINSURER_INFO_NOTIN=SELECT * FROM (SELECT DISTINCT  P.REINSURER_ID,P.BROKER_ID,P.SHARE_OFFERED,NVL(M.MAIL_STATUS,'Pending')MAIL_STATUS,P.PROPOSAL_NO,P.STATUS,P.BOUQUET_NO,P.PLACEMENT_MODE from TTRN_RI_PLACEMENT P LEFT JOIN MAIL_NOTIFICATION_DETAIL M ON(M.PROPOSAL_NO=P.PROPOSAL_NO AND M.REINSURER_ID=P.REINSURER_ID AND M.BROKER_ID=P.BROKER_ID)  WHERE P.BRANCH_CODE=? AND P.PROPOSAL_NO=? ) ORDER BY BOUQUET_NO,PROPOSAL_NO
GET_REINSURER_INFO_BOUQUET_NOTIN=SELECT DISTINCT  P.REINSURER_ID,P.BROKER_ID,P.SHARE_OFFERED,NVL(M.MAIL_STATUS,'Pending')MAIL_STATUS,P.STATUS,P.BOUQUET_NO,P.PLACEMENT_MODE from TTRN_RI_PLACEMENT P LEFT JOIN MAIL_NOTIFICATION_DETAIL M ON(M.PROPOSAL_NO=P.PROPOSAL_NO AND M.REINSURER_ID=P.REINSURER_ID AND M.BROKER_ID=P.BROKER_ID)  WHERE P.BRANCH_CODE=? AND P.BOUQUET_NO=? ORDER BY P.BOUQUET_NO
#GET_REINSURER_INFO_BOUQUET_IN=SELECT * FROM (SELECT DISTINCT  P.REINSURER_ID,P.BROKER_ID,(SELECT CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME FROM PERSONAL_INFO PI WHERE CUSTOMER_TYPE='R'  AND CUSTOMER_ID=P.REINSURER_ID AND BRANCH_CODE=P.BRANCH_CODE  AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))REINSURER_NAME,(SELECT CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME FROM PERSONAL_INFO PI WHERE CUSTOMER_TYPE='B'  AND CUSTOMER_ID=P.BROKER_ID AND BRANCH_CODE=P.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))BROKER_NAME,P.SHARE_OFFERED,NVL(M.MAIL_STATUS,'Pending')MAIL_STATUS,P.PROPOSAL_NO,P.STATUS,P.BOUQUET_NO FROM TTRN_RI_PLACEMENT P LEFT JOIN MAIL_NOTIFICATION_DETAIL M ON(M.PROPOSAL_NO=P.PROPOSAL_NO AND M.REINSURER_ID=P.REINSURER_ID AND M.BROKER_ID=P.BROKER_ID)  WHERE P.BRANCH_CODE=? AND P.BOUQUET_NO=? AND P.STATUS='P' AND M.MAIL_STATUS='Success') ORDER BY BOUQUET_NO,PROPOSAL_NO
GET_PLACEMENT_LIST=SELECT P.BOUQUET_NO,P.BASE_PROPOSAL_NO,P.PROPOSAL_NO,P.CEDING_COMPANY_ID,P.REINSURER_ID,P.BROKER_ID,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='R'  AND CUSTOMER_ID=P.REINSURER_ID AND BRANCH_CODE=P.BRANCH_CODE  AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))REINSURER_NAME,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='B'  AND CUSTOMER_ID=P.BROKER_ID AND BRANCH_CODE=P.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))BROKER_NAME,P.SHARE_OFFERED,P.SHARE_WRITTEN,P.SHARE_PROPOSAL_WRITTEN,P.SHARE_SIGNED,P.BROKERAGE,(SELECT  STATUS_NAME FROM STATUS_MASTER WHERE STATUS_CODE=P.STATUS AND BRANCH_CODE=P.BRANCH_CODE)STATUS,M.MAIL_STATUS from TTRN_RI_PLACEMENT  P LEFT JOIN MAIL_NOTIFICATION_DETAIL M ON(M.PROPOSAL_NO=P.PROPOSAL_NO AND M.REINSURER_ID=P.REINSURER_ID AND M.BROKER_ID=P.BROKER_ID)  WHERE P.BRANCH_CODE=? AND P.PROPOSAL_NO=?
#GET_PLACEMENT_BOUQUET_LIST=SELECT P.BOUQUET_NO,P.CEDING_COMPANY_ID,P.REINSURER_ID,P.BROKER_ID,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='R'  AND CUSTOMER_ID=P.REINSURER_ID AND BRANCH_CODE=P.BRANCH_CODE  AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))REINSURER_NAME,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='B'  AND CUSTOMER_ID=P.BROKER_ID AND BRANCH_CODE=P.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))BROKER_NAME,P.SHARE_OFFERED,P.SHARE_WRITTEN,P.SHARE_PROPOSAL_WRITTEN,P.SHARE_SIGNED,P.BROKERAGE,(SELECT  STATUS_NAME FROM STATUS_MASTER WHERE STATUS_CODE=P.STATUS AND BRANCH_CODE=P.BRANCH_CODE)STATUS,M.MAIL_STATUS from TTRN_RI_PLACEMENT  P LEFT JOIN MAIL_NOTIFICATION_DETAIL M ON(M.PROPOSAL_NO=P.PROPOSAL_NO AND M.REINSURER_ID=P.REINSURER_ID AND M.BROKER_ID=P.BROKER_ID)  WHERE P.BRANCH_CODE=? AND P.BOUQUET_NO=?
GET_PLACEMENT_BOUQUET_LIST=SELECT DISTINCT P.BOUQUET_NO,P.REINSURER_ID,P.BROKER_ID,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='R'  AND CUSTOMER_ID=P.REINSURER_ID AND BRANCH_CODE=P.BRANCH_CODE  AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))REINSURER_NAME,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='B'  AND CUSTOMER_ID=P.BROKER_ID AND BRANCH_CODE=P.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))BROKER_NAME,P.SHARE_OFFERED,NVL(M.MAIL_STATUS,'Pending')MAIL_STATUS from TTRN_RI_PLACEMENT  P LEFT JOIN MAIL_NOTIFICATION_DETAIL M ON(M.PROPOSAL_NO=P.PROPOSAL_NO AND M.REINSURER_ID=P.REINSURER_ID AND M.BROKER_ID=P.BROKER_ID)  WHERE P.BRANCH_CODE=? AND P.BOUQUET_NO=?
GET_STATUS_DROP_DOWN=SELECT STATUS_CODE,STATUS_NAME  FROM STATUS_MASTER WHERE BRANCH_CODE=? AND STATUS=?
GET_SUBSTATUS_DROP_DOWN=SELECT SUB_STATUS_CODE,SUB_STATUS_NAME  FROM SUB_STATUS_MASTER WHERE BRANCH_CODE=? AND STATUS=? AND STATUS_CODE=?
GET_PLACEMENT_EDIT=SELECT SNO, BOUQUET_NO,BASE_PROPOSAL_NO,PROPOSAL_NO,CEDING_COMPANY_ID,REINSURER_ID,BROKER_ID,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='R'  AND CUSTOMER_ID=P.REINSURER_ID AND BRANCH_CODE=P.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))REINSURER_NAME,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='B'  AND CUSTOMER_ID=P.BROKER_ID AND BRANCH_CODE=P.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))BROKER_NAME,SHARE_OFFERED,SHARE_WRITTEN,SHARE_PROPOSAL_WRITTEN,SHARE_SIGNED,BROKERAGE BROKERAGE_PER,STATUS,TO_CHAR(WRITTEN_LINE_VALIDITY,'DD/MM/YYYY')WRITTEN_LINE_VALIDITY,WRITTEN_LINE_REMARKS,TO_CHAR(SHARE_LINE_VALIDITY,'DD/MM/YYYY')SHARE_LINE_VALIDITY,SHARE_LINE_REMARKS,SHARE_PROPOSED_SIGNED,(SELECT MAIL_STATUS FROM MAIL_NOTIFICATION_DETAIL WHERE PROPOSAL_NO=P.PROPOSAL_NO AND REINSURER_ID=P.REINSURER_ID AND BROKER_ID=P.BROKER_ID AND MAIL_TYPE=P.STATUS)MAIL_STATUS from TTRN_RI_PLACEMENT P  WHERE BRANCH_CODE=? AND PROPOSAL_NO=?  AND REINSURER_ID=? AND BROKER_ID=?
GET_PLACEMENT_BOUQUET=SELECT SNO, BOUQUET_NO,BASE_PROPOSAL_NO,PROPOSAL_NO,CEDING_COMPANY_ID,REINSURER_ID,BROKER_ID,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='R'  AND CUSTOMER_ID=P.REINSURER_ID AND BRANCH_CODE=P.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))REINSURER_NAME,(select CASE WHEN PI.CUSTOMER_TYPE = 'C' THEN PI.COMPANY_NAME ELSE PI.FIRST_NAME || ' ' || PI.LAST_NAME END NAME from personal_info PI where customer_type='B'  AND CUSTOMER_ID=P.BROKER_ID AND BRANCH_CODE=P.BRANCH_CODE AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM PERSONAL_INFO WHERE CUSTOMER_ID=PI.CUSTOMER_ID))BROKER_NAME,SHARE_OFFERED,SHARE_WRITTEN,SHARE_PROPOSAL_WRITTEN,SHARE_SIGNED,BROKERAGE BROKERAGE_PER,STATUS,TO_CHAR(WRITTEN_LINE_VALIDITY,'DD/MM/YYYY')WRITTEN_LINE_VALIDITY,WRITTEN_LINE_REMARKS,TO_CHAR(SHARE_LINE_VALIDITY,'DD/MM/YYYY')SHARE_LINE_VALIDITY,SHARE_LINE_REMARKS,SHARE_PROPOSED_SIGNED,(SELECT MAIL_STATUS FROM MAIL_NOTIFICATION_DETAIL WHERE PROPOSAL_NO=P.PROPOSAL_NO AND REINSURER_ID=P.REINSURER_ID AND BROKER_ID=P.BROKER_ID AND MAIL_TYPE=P.STATUS)MAIL_STATUS from TTRN_RI_PLACEMENT P  WHERE BRANCH_CODE=? AND BOUQUET_NO=? AND REINSURER_ID=? AND BROKER_ID=?
INSERT_PLACEMENT_STATUS= INSERT INTO TTRN_RI_PLACEMENT_STATUS(PROPOSAL_NO,AMEND_ID,REINSURER_ID,BROKER_ID,EMAIL_BY,CURRENT_STATUS,NEW_STATUS,CEDENT_CORRESPONDENCE,REINSURER_CORRESPONDENCE,TQR_CORRESPONDENCE,UPDATE_DATE,STATUS,BRANCH_CODE,SYS_DATE)VALUES(?,NVL((SELECT MAX(AMEND_ID)+1 FROM TTRN_RI_PLACEMENT_STATUS WHERE PROPOSAL_NO=? AND REINSURER_ID=? AND BROKER_ID=?),0),?,?,?,?,?,?,?,?,TO_DATE(?,'DD/MM/YYYY'),?,?,SYSDATE)
UPDATE_PLACEMENT_INFO=UPDATE TTRN_RI_PLACEMENT SET STATUS=?,SHARE_WRITTEN=?,SHARE_PROPOSAL_WRITTEN=?,WRITTEN_LINE_VALIDITY=TO_DATE(?,'DD/MM/YYYY'),WRITTEN_LINE_REMARKS=?,SHARE_SIGNED=?,SHARE_LINE_VALIDITY=TO_DATE(?,'DD/MM/YYYY'),SHARE_LINE_REMARKS=?,SHARE_PROPOSED_SIGNED=?,BROKERAGE=?,SHARE_OFFERED=?,SYS_DATE=SYSDATE WHERE PROPOSAL_NO=? AND REINSURER_ID=? AND BROKER_ID=?
GET_PLACEMENT_STATUS_EDIT= SELECT PROPOSAL_NO,AMEND_ID,REINSURER_ID,BROKER_ID,EMAIL_BY,CURRENT_STATUS,NEW_STATUS,CEDENT_CORRESPONDENCE,REINSURER_CORRESPONDENCE,TQR_CORRESPONDENCE,TO_CHAR(UPDATE_DATE,'DD/MM/YYYY')UPDATE_DATE FROM TTRN_RI_PLACEMENT_STATUS PI WHERE PROPOSAL_NO=? AND BRANCH_CODE=? AND REINSURER_ID=? AND BROKER_ID=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM TTRN_RI_PLACEMENT_STATUS WHERE PROPOSAL_NO=PI.PROPOSAL_NO AND BRANCH_CODE=PI.BRANCH_CODE  AND REINSURER_ID=PI.REINSURER_ID AND BROKER_ID=PI.BROKER_ID)
GET_MAIL_TEMPLATE=SELECT MAIL_SUBJECT,MAIL_BODY,EMAIL_TO,EMAIL_CC FROM MAIL_TEMPLATE_MASTER WHERE MAIL_TYPE=? 
INSERT_MAIL_NOTIFICATION=INSERT INTO MAIL_NOTIFICATION_DETAIL (MAIL_RECORD_NO,SNO,BOUQUET_NO,BASE_PROPOSAL_NO,PROPOSAL_NO,CONTRACT_NO,LAYER_NO,SECTION_NO,CEDING_COMPANY_ID,REINSURER_ID,BROKER_ID,CLIENT_ID,MAIL_TYPE,MAIL_TO,MAIL_CC,MAIL_SUBJECT,MAIL_BODY,BRANCH_CODE,USER_ID,ENTRY_DATE,MAIL_STATUS)VALUES(MAIL_RECORD_SEQ.NEXTVAL,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?)
UPDATE_SUB_LAYER_INFO=UPDATE POSITION_MASTER TK SET(CEDING_COMPANY_ID,INCEPTION_DATE,EXPIRY_DATE,UW_YEAR,UW_YEAR_TO)=(SELECT CEDING_COMPANY_ID,INCEPTION_DATE,EXPIRY_DATE,UW_YEAR,UW_YEAR_TO FROM POSITION_MASTER TRC WHERE PROPOSAL_NO=? AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER  WHERE PROPOSAL_NO=TRC.PROPOSAL_NO))  WHERE PROPOSAL_NO IN (SELECT DISTINCT PROPOSAL_NO FROM POSITION_MASTER WHERE BASE_LAYER=? ) AND AMEND_ID=(SELECT MAX(AMEND_ID) FROM POSITION_MASTER  WHERE PROPOSAL_NO=TK.PROPOSAL_NO)
UPDATE_SUB_LAYER_RISK=UPDATE TTRN_RISK_DETAILS TK SET (RSK_CEDINGID,RSK_INCEPTION_DATE, RSK_EXPIRY_DATE,RSK_UWYEAR)=(SELECT RSK_CEDINGID,RSK_INCEPTION_DATE, RSK_EXPIRY_DATE,RSK_UWYEAR FROM TTRN_RISK_DETAILS TRC WHERE RSK_PROPOSAL_NUMBER=? AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS  WHERE RSK_PROPOSAL_NUMBER=TRC.RSK_PROPOSAL_NUMBER)) WHERE RSK_PROPOSAL_NUMBER IN (SELECT DISTINCT PROPOSAL_NO FROM POSITION_MASTER WHERE BASE_LAYER=? ) AND RSK_ENDORSEMENT_NO=(SELECT MAX(RSK_ENDORSEMENT_NO) FROM TTRN_RISK_DETAILS  WHERE RSK_PROPOSAL_NUMBER=TK.RSK_PROPOSAL_NUMBER)
UPDATE_MAIL_NOTIFICATION=UPDATE MAIL_NOTIFICATION_DETAIL SET MAIL_STATUS=?,UPDATE_DATE=SYSDATE WHERE PROPOSAL_NO=? AND REINSURER_ID=? AND BROKER_ID=? AND BRANCH_CODE=?
UPDATE_PLACEMENT_STATUS=UPDATE TTRN_RI_PLACEMENT SET STATUS=? WHERE PROPOSAL_NO=? AND REINSURER_ID=? AND BROKER_ID=? AND BRANCH_CODE=?

GET_NOTPLACED_PROPOSAL_BOUQUET_SINGLE=SELECT PM.PROPOSAL_NO CODE,PROPOSAL_NO||'(' ||RD.RSK_TREATYID ||')' CODEDESC FROM POSITION_MASTER PM,TTRN_RISK_DETAILS RD WHERE BOUQUET_NO IS NOT NULL AND PM.BRANCH_CODE=? AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.BOUQUET_NO=? AND PM.PROPOSAL_NO NOT IN (SELECT PROPOSAL_NO FROM  ttrn_ri_placement  WHERE BOUQUET_NO=PM.BOUQUET_NO)  ORDER BY PRODUCT_ID,BOUQUET_NO,PROPOSAL_NO
GET_PLACED_PROPOSAL_BOUQUET_SINGLE=SELECT  CODE,CODEDESC FROM(SELECT DISTINCT PM.PROPOSAL_NO CODE,PROPOSAL_NO||'(' ||RD.RSK_TREATYID ||')' CODEDESC FROM TTRN_RI_PLACEMENT PM,TTRN_RISK_DETAILS RD WHERE BOUQUET_NO IS NOT NULL AND PM.BRANCH_CODE=? AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.BOUQUET_NO=?  ORDER BY BOUQUET_NO) ORDER BY CODE
GET_NOTPLACED_PROPOSAL_BOUQUET=SELECT CODE,CODEDESC FROM(SELECT DISTINCT PM.BOUQUET_NO CODE,BOUQUET_NO CODEDESC FROM POSITION_MASTER PM,TTRN_RISK_DETAILS RD WHERE BOUQUET_NO IS NOT NULL AND PM.BRANCH_CODE=? AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.BOUQUET_NO=? AND PM.PROPOSAL_NO NOT IN (SELECT PROPOSAL_NO FROM  ttrn_ri_placement  WHERE BOUQUET_NO=PM.BOUQUET_NO) ) ORDER BY CODE
GET_PLACED_PROPOSAL_BOUQUET=SELECT  CODE,CODEDESC FROM(SELECT DISTINCT PM.BOUQUET_NO CODE,BOUQUET_NO CODEDESC FROM TTRN_RI_PLACEMENT PM,TTRN_RISK_DETAILS RD WHERE BOUQUET_NO IS NOT NULL AND PM.BRANCH_CODE=? AND PM.PROPOSAL_NO=RD.RSK_PROPOSAL_NUMBER AND PM.BOUQUET_NO=?  ORDER BY BOUQUET_NO) ORDER BY CODE
DELETE_PLACEMENT_INFO=DELETE FROM TTRN_RI_PLACEMENT WHERE  BRANCH_CODE=? AND PROPOSAL_NO=?  AND REINSURER_ID=? AND BROKER_ID=?
